adapt autom leverag machin learn support uninterrupt autom test softwar applic rajesh mathur scott mile miao awesom test melbourn australia http email rmathur smile mdu abstract check softwar applic suitabl tomat softwar tool vital element organis irrespect produc hous soft ware simpli customis shelf softwar applic intern softwar solut complex industri increas depend softwar autom tool brittl natur softwar autom tool limit effect compani invest obtain implement autom softwar tool fail deliv cost maintain effect autom test suit exceed cost time spent manual test fail current generat softwar autom tool adapt unexpect modif obstruct frequent time expens manual interfer issu common acknowledg industri practition current generat tool leverag advanc machin learn artifici intellig address problem paper propos framework solut utilis chine learn concept fuzzi match error recoveri suggest solut appli adapt techniqu recov unexpect obstruct prevent script proceed recoveri detail present user report analys determin recoveri procedur accept framework will softwar test complet imposs kaner pdf giant invis test asset https onlin rep tech focus micro giant invis test focus micro market servic test softwar global report http onlin sku septemb market servic test softwar global technavio refer direct suggest discuss inform grundi john professor author acknowledg test access test perform test api test form work adapt techniqu test driven interfac user autom paper focus test fail techniqu recoveri appli window warn popup event unexpect respond automat element miss event match closest find match fuzzi appli prototyp recoveri adapt demonstr prototyp concept proof develop script test updat applic chang link direct autom semi autom mainten test event unexpect element miss recov techniqu combin recoveri adapt robust execut test script test object referenc valid live support author case test implement cost reduc test applic direct test generat automat framework mainten test execut test design test lifecycl autom test stage three test 