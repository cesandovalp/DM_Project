proven circuit tree treelik instanc extend version antoin amarilli télécom paristech institut mine télécom cnrs ltci telecom pierr bourhi cnrs cristal université lill inria lill univ pierr senellart institut mine télécom télécom paristech cnrs ltci nation univers singapor cnrs ipal telecom queri evalu monad second order logic mso tractabl tree treelik instanc hard arbitrari instanc tractabil iti result extend task queri evalu count queri perform queri evalu probabilist tree exampl general problem comput augment queri output refer proven articl present proven frame work tree treelik instanc describ linear time construct circuit proven represent mso queri proven connect usual semir proven relat stanc comput unusu tree automata intrins proven general semir independ oper detail queri evalu applic prove nanc captur exist count probabilist tree treelik instanc novel consequ probabl evalu introduct celebr result courcell evalu monad second order mso queri relat instanc general hard input instanc level polynomi hierarchi perform linear time input instanc bound treewidth treelik instanc encod queri automaton tree encod instanc idea extend monad datalog addit queri evalu count linear time number queri answer treelik instanc queri evalu count special case general problem captur proven queri describ link input output tupl proven express formal proven semir boolean formula count proven exploit practic task answer queri incomplet databas maintain access right comput queri probabl knowledg previous work look general question evalu express queri treelik instanc keep track proven proper proven queri evalu tree automata forward contribut work introduc general notion proven circuit tree automata comput represent automaton tree uncertain annot cours interest proven queri automata set proven comput intrins depend automaton comput queri extend proven queri treelik relat instanc propos intrins proven captur subinst satisfi queri queri evalu compil automaton tree encod comput proven circuit queri compil automaton comput tree decomposit instanc perform previous construct linear time input instanc intrins proven ensur proven depend logic queri choic queri plan automaton tree decomposit contribut extend proven boolean formula univers proven semir pose challeng semir deal satisfactorili negat restrict monoton queri monoton proven circuit second track multipl iti fact well multipl match reason restrict union conjunct queri ucq richer languag direct provid notion multipl match fact general notion proven circuit automata instanc unknown multipl annot arithmet circuit ucq standard proven univers semir match automaton proven circuit comput linear time treelik instanc return monoton boolean proven tractabil iti proven comput treelik instanc impli problem determin probabl queri count queri match probabl evalu mso queri tractabl probabilist xml model local uncer tainti result extend tree event annot satisfi condit bound scope mso queri evalu tractabl treelik block independ disjoint bid relat instanc tractabl proven achiev appli messag pass proven circuit tractabl count queri match reduct probabilist set captur result preliminari introduc basic notion tree tree automata boolean circuit alphabet tree set node partial map associ intern node left child label function state tree consid root direct order binari full node children write tree isomorph biject node set preserv children label simpli write skeleton isomorph label bottom nondeterminist tree automaton tree bnta tupl set state subset accept state initi relat state leav label transit relat determin ing state intern node label state children tree function leaf intern node accept root accept written accept tree automata captur usual queri languag tree mso tree pattern queri boolean circuit direct acycl graph set gate set wire edg distinguish output gate associ gate type inp input gate incom wire gate exact incom wire gate gate valuat input gate cinp function cinp induct uniqu evalu cinp inp note impli gate input evalu will abus notat valuat evalu interchang write function captur map valuat cinp proven circuit tree automata start studi notion proven tree uncertain tree framework fix alphabet view tree uncertain tree node carri unknown boolean annot consid valuat choos annot node call alphabet annot tree definit write tree valuat tree skeleton node label consid automata annot tree bntas proven tree boolean function describ valuat accept automaton intuit proven track depend boolean annot accept reject tree definit proven bnta tree function prov map valuat depend proven circuit tree circuit captur prove nanc prov formal definit bnta tree proven circuit boolean circuit cinp captur function prov result proven circuit tractabl construct proposit proven circuit bnta tree construct time proof creat gate state node write transit node depend input gate indic annot fact treelik tractabl tree automaton evalu probabilist xml tree prxmlmux ind hard construct captur proven queri tree express automaton matter choic automaton queri logic sentenc tree tree satisfi written violat automaton test queri tree prov tree circuit queri proposit impli proposit fix queri tree comput automaton test proven circuit tree construct time note proven depend automaton test queri proven tree encod lift previous set relat instanc signatur set relat name associ ariti ariti fix countabl domain relat instanc instanc set ground fact form tupl ariti element activ domain dom set element instanc isomorph biject dom dom instanc written subset fact impli dom dom queri logic formula function free second order logic free second order variabl instanc satisfi violat simplic state restrict boolean queri queri free variabl constant free limit inessenti data complex complex queri handl boolean queri build proven circuit output result polynomi encod constant extend signatur fresh unari predic induc subset domain arbitrari subset fact consid unknown boolean annot fact instanc annot fact natur fact annot fact annot delet formal instanc valuat function fact subinst definit proven queri instanc function prov map valuat depend proven circuit boolean circuit cinp captur prov studi proven treelik instanc bound treewidth instanc encod queri automata tree encod treewidth instanc standard measur close tree treewidth tree cycl cliqu grid alphabet instanc treewidth encod linear time tree call tree encod decod isomorph ident constant fact encod node fact tree encod node label describ fact point tree encod queri monad second order logic extens order logic second order set encod automata evalu tree encod formal definit bnta test queri treewidth tree iff decod instanc theorem mso queri comput bnta test treewidth appli queri languag rewritten tree automata bound instanc treewidth mso case guard second order logic gso gso extend order logic second order arbitrari ariti relat semant restrict guard tupl occur instanc fact captur mso express power treelik instanc common databas queri languag guard datalog frontier guard datalog gso sequel choic queri languag rewritten automata combin result previous claim proven gso queri treelik instanc tractabl comput proven circuit treewidth independ instanc theorem fix gso queri instanc construct proven circuit time treewidth depend proof encod instanc tree encod linear time compil queri automaton test constant time instanc work bntas bntas inessenti easili map tree tree node label replac label replac dummi label indic absenc fact straightforward translat bnta tree key point valuat tree encod expect conclud appli proposit proven intrins queri depend formul choic tree decomposit choic automaton evalu queri tree encod note tractabl hold data complex combin complex incur cost compil queri automaton nonelementari general restrict queri class union conjunct queri ucq compil phase lower cost general semir connect previous exist semir proven arbitrari relat instanc definit commut semir set binari oper distinguish element commut monoid ident element distribut proven semir instanc fact annot element proven queri instanc element combin fact annot semant queri intuit describ queri output depend annot exact general set applic exampl variabl set monoton boolean function form semir posbool write proposit formula equival formula denot posbool object instanc fact annot variabl posbool proven queri monoton boolean function describ subinst satisfi will defin circuit compact represent natur number usual form semir instanc fact annot element repres multipl proven queri describ number match bag semant secur semir defin order set secret top secret min max proven queri denot minim level secur clearanc requir hold fuzzi semir max min proven queri semir minim fuzzi toler fact queri satisfi tropic semir min fact annot cost tropic proven queri minim cost fact requir satisfi multipl fact charg multipl time set variabl polynomi semir semir polynomi variabl coeffici usual sum product polynomi semir proven support negat well monoton queri queri monoton instanc proven circuit semir proven monoton circuit featur gate adapt construct work notion monoton bntas theorem appli monoton queri yield monoton proven circuit theorem fix monoton gso queri instanc construct time monoton proven circuit treewidth depend monoton gso queri notion semir proven encod datalog recurs queri languag subsum ucq proven prov easili match proven special semir posbool monoton boolean function proven obey intrins function map exact valuat correspond subinst accept queri understand theorem tractabl result posbool proven repres circuit treelik instanc cours posbool extend arbitrari commut semir turn general question proven ucq note proven datalog queri semir comput semir instanc fact annot variabl proven special actual fact annot replac variabl result commut homomorph properti restrict proven instanc form cover exampl second set treelik instanc evalu queri tree automata compil logic formula prescrib execut plan semir hard connect general proven design posit relat algebra oper datalog queri general construct proven restrict queri languag ucq assum loss general equal atom comment aris richer queri languag formal proven ucq relat instanc encod straightforward datalog datalog proven proven rephras definit proven ucq conjunct atom free variabl instanc defin provn dom sum disjunct match disjunct match product atom disjunct imag fact identifi fact variabl annot provn enjoy usual properti proven special ize posbool yield previous evalu semir count number match queri exampl consid instanc provn prov posbool proven proven describ multipl atom queri map fact subinst queri match evalu semir fact annot match proven circuit tree guid proven general construct proven tree express proven construct extend treelik instanc consid tree consid tree label set intuit uncertainti fact miss repres uncertainti number copi fact ucq match includ fact multipl time impos partial order call bnta monoton write val set valuat tree write arun tree bnta denot number accept run definit proven bnta tree provn valp arun node identifi variabl intuit sum valuat product tree node power valuat number accept run coeffici term reject special posbool earlier prov extend featur multipl copi node repres multipl deriv repres arun construct general proven arithmet circuit definit circuit semir circuit gate gate analogu gate input gate stand element constant written gate input element captur circuit element captur distinguish gate recurs definit gate captur sum product element captur operand input gate captur construct proven circuit general monoton analogu proposit proof techniqu replac gate gate consid annot correct prove induct general ident relat proven tree left subtre theorem fix bnta tree circuit captur provn construct time proven circuit instanc move proven ucq bound treewidth instanc linear time proven construct theorem fix ucq instanc construct circuit captur provn time proof techniqu construct disjunct bnta alphabet tree encod width maximum number atom disjunct test tree encod preserv multipl enumer homomorph chang multipl atom relat encod queri automata usual origin appli variant theorem construct circuit captur proven tree encod valuat sum number atom restrict bag subinst correspond exact match circuit captur provn combin circuit disjunct distinguish gate circuit gate circuit rememb circuit special circuit arbitrari semir semir variabl circuit evalu proven semir ucq comput proven ucq monoton gso queri intersect datalog main issu fact multipl multipl fact easi describ ucq express languag connect automata fact build queri guard datalog smallest number occurr fact deriv tree bound independ instanc rewrit bnta test multipl input instanc guard datalog monoton gso express comput posbool proven theorem hint posbool proven comput queri ucq applic proven circuit construct ucq treelik stanc construct special proven semir yield applic count queri evalu comput cost queri tropic semir contrast present proven construct arbitrari gso queri boolean represent proven captur multipl fact deriv section incompar applic construct problem probabl evalu determin probabl queri hold uncertain instanc count ing count number answer queri consequ construct probabilist xml start problem probabilist queri evalu set tree framework probabilist xml denot prxmlfie repres probabilist tree tree annot proposit formula independ probabilist event formal consid data complex queri evalu problem mso queri tree comput probabl hold problem intract general surpris harder determin probabl singl proposit annot express local prxml model prxmlmux ind queri evalu tractabl data complex model restrict edg annot event liter edg form mutual exclus proven circuit justifi queri evalu tractabl prxmlmux ind captur data complex tractabl result algorithm run linear time run linear time assum arithmet oper ration number constant time ration store constant space run polynomi time assumpt theorem mso queri evalu prxmlmux ind linear data complex extens result instanc prxmlfie scope event document smallest subtre left child sibl encod cover node parent edg mention scope size node number event scope proposit fix mso queri evalu prxmlfie document scope assum size linear data complex bid instanc move tree relat instanc bound width tractabl result block independ disjoint bid instanc formal treewidth bid instanc under relat instanc claim rememb queri evalu probabilist instanc determin probabl queri hold theorem fix mso queri evalu input bid instanc treewidth linear data complex impli claim tupl independ databas probabilist proven rewrit formal relat instanc circuit annot instanc circuit bound width joint decomposit comput treelik proven circuit instanc theorem combin annot circuit appli exist messag pass techniqu comput probabl circuit count turn problem count queri reduc linear time queri evalu treelik instanc captur result theorem fix mso queri free order variabl number match assign input instanc width comput linear data complex work bound treewidth origin linear time data complex mso evalu treelik structur work investig count problem includ applic probabl comput graph paper linear time data complex evalu mso queri treelik probabilist network analog circuit work decoupl comput treelik proven queri applic probabilist infer proven note approach treelik structur base monad datalog mso work limit count probabilist databas intension approach queri evalu probabilist databas comput lineag queri evalu probabl general purpos method tree lineag allow tractabl probabilist queri evalu work provid condit lineag tractabl base data base queri treelik instanc comput treelik lineag express queri ucq consid work altern general boolean lineag connect express semir proven proven studi inspir usual semir proven relat algebra datalog notion proven xqueri queri tree introduc provid oper proven direct connect tree automata relev work proven introduc proven circuit datalog absorpt semir work studi proven transduc clear connect semir proven proven boolean queri conclus proven construct comput linear time tree treelik instanc ucq arbitrari semir arbitrari gso queri monoton boolean express drawback high combin complex reli elementari encod queri automaton approach monad datalog requir comput proven set acknowledg work part support contribut fondat campus pari saclay french anr aggreg project refer ajtai fagin stockmey closur monad extend abstract stoc amsterdam deutch tannen limit proven queri tapp arnborg lagergren sees easi problem tree decompos graph algorithm baget leclèr mugnier walk decid rule exi tential variabl barbará garcia molina porter manag probabilist data tkde bodlaend linear time algorithm tree decomposit small tree width siam comput bodlaend probabilist infer monad second order logic ifip tcs transduc origin icalp cheney chiticariu tan proven databas foundat trend databas cohen kimelfeld sagiv run tree automata probabilist xml pod courcell monad second order logic graph recogniz set graph inf comput dalvi suciu queri evalu probabilist databas vldbj deutch milo roy tannen circuit datalog proven icdt flum frick grohe queri evalu tree decomposit acm foster green tannen annot xml queri proven pod geert poggi databas queri languag relat app log gottlob pichler wei monad datalog structur bound treewidth tocl grädel evalu method guard logic datalog lite lpar grädel hirsch otto guard modal logic tocl green karvounaraki tannen proven semir pod imielinski lipski incomplet relat databas acm jha suciu tractabl queri compil bound treewidth icdt kimelfeld senellart probabilist xml model complex yan editor advanc probabilist databas uncertain manag ment springer lakshmanan leon ross subrahmanian probview probabilist databas system tod lauritzen spiegelhalt local comput probabl graphic structur applic expert system royal statist societi seri meyer weak monad second order theori succesor elementari recurs logic colloquium neven automata logic xml csl park nguyen sandhu proven base access control model pst pichler rümmele woltran count enumer problem bound treewidth logic program artifici intellig reason suciu materi view probabilist databas chang queri optim vldb robertson seymour graph minor algorithm aspect tree width algorithm roy perduca tannen faster queri answer probabilist databas read function icdt sen deshpand getoor read function queri evalu prob abilist databas pvldb suciu olteanu koch probabilist databas morgan claypool thatcher wright general automata theori applic decis problem second order logic math system theori proof proven circuit tree automata proposit proven circuit bnta tree construct time appendix will call gate resp gate gate resp gate input evalu resp prove result case monoton bnta show result proven circuit monoton boolean circuit featur gate proposit monoton proven circuit monoton bnta tree construct time proof construct proven circuit node creat input gate identifi cinp creat gate leaf node set gqn gate gate sole input gin gate intern node creat gate gql qrn pair appear input state transit gate gql gqr second gate gin set gate gql qrn add gate gate root construct time precis node tree creat number state linear number state number transit proven circuit valuat extend evalu induct gqn let subtre root leaf node choos gqn gqn case convers exist clear ensur gqn intern node choos gqn induct hypothesi impli exist construct set set depend convers exist impli exist run deduc gqn monoton equival rest analog previous case claim proven induct clear proven circuit appli root deduc valuat accept general result automata proven circuit monoton proof adapt construct proposit add node gate gate modifi node leaf node state set gqn gate gate gate intern node pair appear input state transit creat gate gql gate state set gqn correct show induct gqn accept let state properti clear true leaf node intern node gqn exist induct hypothesi impli exist run combin gqn exist time conclud conclud justifi correct proof proven tree encod formal preliminari start formal definit tree decomposit instanc tree dom set subset dom node call bag label written dom requir dom let dom bag bag uniqu undirect path fact exist bag dom width maxb dom treewidth width instanc written minim width tree decomposit hard instanc determin width comput linear time tree decomposit width exist repres bound treewidth instanc tree alphabet introduc notion tree encod represent isomorph lose ident constant alphabet set fact instanc width proof tree element occurr node parent tree encod element reus formal set definit set fact signatur written set pair domain subset size element countabl domain structur singl fact structur dom tree encod tree explain tree encod decod structur isomorph tree decomposit width process top label node child label node pick fresh element element root pick fresh element add fact replac element fresh element element dom add bag element match attempt creat fact exist abort set invalid tree encod term decod definit call tree tree encod width structur isomorph note clear structur tree encod width observ clear inject function map fact node encod fact function total node fact fact structur justifi comput tree encod width tree decomposit width result implicit lemma tree decomposit width structur comput linear time tree encod width biject fact empti node proof intuit assign fact bag dom linear time encod node chain node fact assign structur tree decomposit width inform build walk decomposit copi enumer fact domain bag chain node pick label element share bag parent retain element chosen overlap parent node overlap node parent child node irrelev formal proceed start precomput map indic tupl fact hold topmost bag node dom node perform linear time lemma label tree decomposit fact fact add label node encod bag consid parent partit dom element dom element appear dom root dom node biject dom choos domain size dom intersect dom exact element choos dom extend biject map dom root choos arbitrari biject encod chain node label encod fact label biject empti node fact creat fact node creat node recurs encod children chain node add fact child node leaf node exact children assum arbitrari choic consist manner process determinist restrict instanc width bound constant equival work tree encod instanc work instanc proper notion automaton test queri definit bnta test boolean queri treewidth tree iff reject proof theorem state prove theorem mso sentenc test automata treewidth main problem justifi mso sentenc rewritten mso sentenc tree encod compil bnta reli result translat tree encod general techniqu justifi product tree annot encod recogn bnta state prove result theorem mso queri comput bnta akq test treewidth proof context proof bdta bottom determinist tree automaton bnta return set reachabl state return singl state impli automaton uniqu tree denot set number relat lemma alphabet mso formula signatur exist mso formula tree repres instanc precis partial function tree instanc treewidth tree well isomorph tree well describ alphabet letter form element belong describ equal element insid bag element belong describ equal element bag parent belong kariti describ tupl belong relat tree encod equal valu bag parent describ explicit implicit element reus parent child encod describ tree encod oper well comput well form well tree well form well defin tree well node child close transit closur belong belong close transit closur check consid path mere pair close transit closur belong symmetr revers role pair vice versa revers role condit hold note condit clear express mso precis describ behavior tree well form assumpt test well formed reject tree well form well form process top node parent node pick fresh element posit pair root pick fresh element belong fresh element assign element posit pair pick exist element decod choic map posit fresh element exist element fact attempt creat fact exist ignor review alphabet condit well semant oper addit step determin automaton bdta formula translat bdta atheir tree tree atheir accept well note impli atheir encod invari explain translat atheir desir bdta aour tree aour accept consid alphabet call oper tree map tree skeleton keep second compon label tree tree skeleton will write tree will build bdta properti accept well isomorph tree well exist tree accept notic atheir build bdta recogn accept build aour conjunct project compon accept tree tree accept determin determin clear aour accept tree tree accept tree accept atheir isomorph convers model tree accept impli isomorph constant free mso queri invari isomorph accept build bdta desir properti simpl encod describ tree well form tree accept will mso formula check tree encod sens compil bdta consid node dom label correspond node dom element equal dom element complet dom element repeat element arbitrari order domain element indic element share parent node complet consist respect tupl element relat repetit consist clear encod map tree well tree well isomorph justifi exist observ local condit check clear mso formula node exact set fact state element repres number type check fact putat type node fact reachabl undirect path element path mso formula check node type sens match graph state proof theorem formal treewidth circuit normal form circuit definit boolean circuit fan gate number gate note definit circuit impos fan input gate fan gate ariti fan gate allow constant gate gate type requir gate fan clear restrict inessenti circuit rewritten linear time ariti circuit merg gate fan input replac fan gate rewrit fan chain gate type fan tree decomposit circuit relat encod definit relat signatur featur unari relat appli input gate unari relat appli constant gate binari relat appli gate element output second input ternari relat appli gate element input second third input relat encod ariti monoton boolean circuit instanc expect clear construct linear time treewidth talk tree decomposit shorthand prove theorem care technic issu instanc tree encod construct proven circuit mean consid boolean annot version tree encod subinst annot version justifi structur fact remov node fact definit fact defin neuter fact write tree defin evalu tree skeleton node correspond node let allow lift bntas intuit test queri bntas test queri boolean annot tree encod tree encod subinst formal lemma bnta comput linear time bnta iff proof construct bnta process clear linear time vice versa readi state prove result theorem fix gso queri instanc construct proven circuit time treewidth depend proof gso queri theorem bnta test treewidth rememb theorem extend mso gso collaps treelik instanc lift bnta lemma perform constant time instanc input instanc comput linear time tree decomposit comput linear time tree encod lemma proposit construct proven circuit consid inject function map fact node fact encod modifi replac input gate gin imag set gate renam input gate gin fact result process boolean circuit inp comput linear time claim captur prov check valuat key point observ let valuat tree encod skeleton element constitut domain node label fact encod annot note choic extend set node encod fact annot node project label label observ test lemma proven circuit case case proven circuit point left justifi treewidth circuit bound number gate creat node depend automaton test wire gate node gate node tree decomposit put bag tree decomposit correspond node gate node exist addit distinguish gate bag root node construct describ circuit translat ariti fan gate origin circuit bound constant clear rewrit ariti preserv properti number gate bag decomposit bound constant prove claim proof exptim rewrit ucq proposit ucq bnta test treewidth comput exptim proof ucq integ proof reli notion proof tree introduc proof tree intuit tree encod unfold expans tree datalog queri refer datalog expans tree rank tree binari general node label pair fact intent predic instanti bodi rule variabl map element instanc bodi correspond instanti head tree well form node label biject children intension fact instanti node exact head fact intension fact multipl time rule children occurr fact will requir rule queri bodi intension fact expans tree full binari tree expans tree deriv proof tree tree set alphabet set pair tupl set valu rule intuit tree notion fact share element node parent encod element element share sibl element note proof tree expans tree full binari tree proof proof tree notion proof tree datalog proven describ encod expans tree proof tree describ decod tree appli process analog notion decod expans tree second consid extension fact appear instanti bodi label instanc form fact cours process fail intermedi expans tree well form abort set goal datalog queri surject homomorph intension relat ariti technic disallow predic ariti instanc clear problem context tupl variabl set variabl denot ariti condit relat creat rule final creat rule term size rule queri number variabl polynomi size queri exponenti polynomi size maxim ariti intent relat set valu cardin equal equal pair rule homomorph element extension fact equal atom occur bodi valuat variabl head atom impos equal equal tree clear surject clear applic extend surject map tree tree properti well form isomorph explain construct automaton queri assum conjunct queri consid datalog queri construct proof proposit deduc construct time polynomi size bnta number state resp maxim number variabl rule resp recogn languag well form tree queri size exponenti polynomi surject homomorph tree tree properti cdg bnta close homomorph comput polynomi time bnta size exponenti polynomi intersect bnta clear construct exptim check tree valid encod reject yield automaton check test queri tree well preimag condit well isomorph featur constant preserv isomorph accept accept convers accept preimag accept well well isomorph accept result extend ucq appli result union automata size sum input automata proof general semir definit datalog queri signatur consist signatur tension predic special ari relat goal finit set rule form variabl tupl occur tupl left hand resp hand side datalog rule call head resp bodi rule proof tree datalog queri instanc binari order tree node annot fact element dom intern node annot rule fact root goal intern node children indic rule homomorph map fact map fact note definit impli intern node annot fact write proof tree semir proven datalog queri instanc definit semir instanc fact carri annota tion proven datalog queri proof tree leaf note express defin depend queri instanc semir number term sum infinit result repres semir datalog queri associ conjunct queri cqs union cqs ucq will proven definit assum cqs ucq equal atom datalog queri associ rule goal datalog queri associ ucq rule goal goal observ case proven sens definit defin matter semir number deriv tree clear finit theorem fix monoton gso queri instanc construct time monoton proven circuit treewidth depend notion monoton bntas intuit impli tree accept automaton will reject chang annot formal definit consid partial order defin bnta monoton easi proven monoton bnta tree monoton function sens valuat impli cinp write prov impli prov monoton tree valuat impli hold monoton bntas monoton proven circuit proposit monoton gso sen tenc interest test monoton bnta analogu theorem hold monoton queri bntas clear reduct treelik instanc tree theorem general prove auxiliari lemma lemma tree proof follow decod process notic domain node label fresh element annot creat fact notic fact creat creat prove analogu theorem monoton queri automata imm diat general notion automaton test queri bntas tree tree lemma monoton queri bnta test treewidth comput linear time bnta test treewidth monoton partial order proof bnta build bnta set pose clear monoton construct tree accept accept prove correct prove convers implic consid consid accept build tree skeleton leaf resp intern node correspond node set resp exist guarante resp observ construct accept accept observ construct node label correspond node label hold easili prove monoton accept prove desir result earlier explan prove theorem proven ucq proposit ucq provn proven sens associ datalog queri proof proof tree structur assign variabl clear variabl assign proof tree map inject variabl assign occur proof tree sum thing term sum leav proof tree impos set proof tree union set proof tree separ sum proven circuit tree prove theorem general proven automata tree natur tree proven queri treelik instanc lead subtl problem reason proven describ valuat tree automaton accept maxim multipl minim ucq intuit proven subinst satisfi queri minim match undesir instanc special proven number queri match reason problem occur choic collaps posbool set previous section problem set general semir absorpt case ucq introduc general analogu theorem will proven lift treelik instanc tree introduc set valuat sum valpl val val valp general definit proven bnta tree provn valp arun note provn provn definit general defini tion prove key lemma propag proven encod will induct step correct proof proven circuit lemma singleton tree let left subtre root node bnta write bnta make final state provn provn aql provn aqr proof observ ident valpl automaton run arun arun aql arun aqr observ valpl decompos val valuat sum chosen valuat left subtre assign weight observ product split product rewrit provn val val abbreviatedml arun aql arun aqr reorder sum perform factor provn val val plug proven yield desir claim prove variant theorem theorem fix proven circuit bnta tree circuit captur provn construct time proof modifi proof proposit provid input will assum explain proof handl simpler case node tree creat input gate gin creat gate gate copi input gate gin copi gate sole input gin technic necess circuit graph multigraph gate creat gate leaf node set gate intern node pair appear input state transit creat gate gate gql creat gate gate gql set gate distinguish gate gate root construct prove correct induct element captur provn state root general properti note node captur leaf node provn captur intern node claim lemma appli induct hypothesi gql conclud clear provn provn captur correct construct singl node node leaf node node intern node gqn simpli gate gate gate gql qrn gate gate final gate gqr correct variant lemma provn replac sum subscript proven circuit instanc theorem fix ucq instanc construct circuit captur provn time preliminari introduc bag instanc materi possibl fact multipl time ucq definit multiset function finit support supp defin relat supp supp supp write set multiset write supp write supp bag instanc multiset fact dom avoid confus call ordinari instanc set instanc bag instanc bag subinst hold multiset bag subinst set instanc bag subinst set instanc understood bag instanc fact arbitrarili larg multipl multipl equal truncat bag instanc min supp bag homomorph bag instanc bag instanc map supp supp condit supp let fact supp bag queri queri bag instanc intuit bag queri regular boolean queri instanc multipl fact crucial talk requir multipl fact match talk proven ucq definit bag queri queri bag instanc bag queri associ defin match bag instanc bag homomorph bag instanc fact match bag queri associ ucq disjunct bag queri disjunct altern easili bag queri associ ucq iff bag fact leav deriv tree datalog queri associ notic bag queri associ ucq bound fact hold depend multipl fact maxim maxim number atom disjunct ucq definit bag queri bound bag instanc truncat bag queri bound bound extend tree encod automaton compil bag queri tree encod simpli general bag instanc tree encod annot multipl fact tree definit bag instanc supp under instanc tree encod tree defin tree encod tree skeleton node encod fact label node label defin tree yield bag instanc expect return node code fact sum multipl bnta test bag queri note impli automaton multipl requir queri bound limit matter definit bag queri bnta test treewidth bound tree iff provid general prove lemma construct union bntas definit finit label set famili bntas assum loss general renam pairwis disjoint union bnta bnta defin iqi defin case defin lemma famili bntas let union bnta tree iff precis arun arun proof claim accept number run straightforward notic run exact disjoint union run preliminari result bag queri correspond ucq encod automaton test proposit ucq comput bnta test treewidth proof introduc notat call languag cqs featur atom form ucq languag ucq disjunct write var variabl queri bag queri associ queri ucq correspond queri inequ impos inequ match formal match queri match variabl occur note multipl inequ atom irrelev note write ucq disjunct cqs claim result clear comput bnta test treewidth maxi multipl result clear claim hold hold larger valu ignor larger multipl construct union bnta bntas bnta test lemma existenti multiset atom atom relat appli variabl order occur multipl time distinguish var set variabl existenti boolean call set equival class var cours queri choos repres variabl var equival class map var repres variabl class drop result useless existenti variabl occur disequ pair remain variabl rewrit ucq claim bag instanc instanc consid subinst forward implic assum let wit match consid relat easili backward implic straightforward match lemma result queri includ inequ axiom variabl call forc queri claim hold forc queri consid queri signatur let sum multipl atom number atom origin signatur creat relat ariti ariti relat rewrit replac atom multipl disjunct keep inequ rewritten usual sens multipl claim bag instanc fact multipl let set instanc replac fact multipl fact observ forc queri match atom map fact written map inject condit multipl atom equival test sens definit express gso appli theorem bnta test width build bnta relabel recal set set claim test treewidth observ tree let tree straightforward manner accept accept construct accept test instanc correspond correspond desir equival thing left observ correct test instanc fact multipl correct test bag instanc straightforward match fact occurr instanc conclud proof readi prove theorem proof proof cqs extend ucq rewrit fresh unari predic appli proposit compil bnta number atom test treewidth clear design bnta check tree input tree exact fact state space intersect bnta recogn tree satisfi bag queri associ exact fact determin bnta equival automaton determinist accept exact accept input instanc instanc fact dom call addit fact clear comput linear time treewidth unchang tree encod tree claim construct bnta valuat multipl addit fact number accept run number valuat addit fact accept node encod addit fact proceed duplic state state replic state treat exact term transit term preserv determin ensur state label encod absent addit fact disjoint determinist singl fact fact replac equival copi modifi transit automaton state encod addit fact clear automaton desir properti valuat biject accept run valuat accept appli theorem number fact circuit captur proven input code fact node code addit fact set renam remain input match fact number fact origin circuit captur supp dom bag instanc total multipl equal dom exact provn ucq observ proven comput simpli sum proven independ build circuit combin circuit merg input gate choos distinguish gate gate distinguish gate ucq note proof theorem implicit reli fact ucq bound sens hope rewrit queri bnta sensibl test bound proposit guard monad datalog queri associ bag queri bound proof consid datalog queri consist rule goal consid instanc easili proof tree leav fact assum bag queri captur bound consid bag instanc form leav sole proof tree case contradict bounded proof applic preliminari proof probabl evalu will notion instanc introduc appendix boolean circuit monoton allow gate ariti state will formal instanc state result construct circuit analogu proven cir cuit theorem explain probabl evalu perform result messag pass conclud present formal instanc state tractabl impli pcc instanc instanc formal instanc definit instanc tripl relat instanc monoton ariti boolean circuit map fact gate input jinp cinp valuat jinp subinst fact instanc jjk set world pcc instanc tupl instanc jinp inp jinp probabl input instanc prob abil distribut jjk univers probabl measur prj prj product distribut prj jinp jinp relat encod treewidth instanc definit signatur relat encod boolean circuit definit signatur signatur relat ariti ariti relat relat encod instanc signatur instanc instanc encod fact fact tree decomposit instanc tree decomposit tree decomposit pcc instanc defin tree decomposit correspond instanc prob abil ignor circuit instanc claim result instanc intuit corr spond proven circuit combin circuit annota tion theorem fix integ gso sentenc comput linear time instanc boolean circuit jinp valuat jinp iff depend prove result explain impli term probabl evalu introduc notion encod recal tree decomposit circuit definit encod width tupl tree width boolean circuit tree decomposit width skeleton map select select gate dom input inp cinp valuat cinp extend evalu boolean valuat set bag correspond write tree explain comput encod instanc split tree decomposit tree decomposit tree skeleton keep track gate node map formal lemma recal definit definit instanc tree decomposit width comput encod width valuat cinp encod comput proof process tree decomposit construct adapt encod construct describ lemma process bag map precomput lemma fact topmost node domain dom dom dom fact creat bag label element dom gate node encod consid domain dom dom normal relat instanc set select gate dom condit chose consid fact tree decomposit tree tree decomposit width tree encod width construct skeleton clear process linear time remain check condit consid boolean valuat input consid instanc tree decomposit deriv clear comput tree encod obtain encod exact fact remov node encod fact remov exact conclud proof second lemma will allow glue circuit instanc annot encod proven circuit automaton tree encod definit circuit inp stitchabl stitch denot circuit defin inp cinp lemma stitch clariti distinguish valuat input circuit evalu circuit gate write circuit fundament properti stitch lemma stitchabl circuit gate valuat cinp let restrict inp proof share input valuat note gate input gate gate stitchabl equal hold input gate induct hold gate prove result tree decomposit tree decomposit skeleton sum skeleton bag union correspond bag definit tree decomposit skeleton sum written tree decomposit skeleton bag union correspond bag lemma tree decomposit skeleton fix width boolean circuit boolean circuit comput linear time width lemma stitchabl circuit tree decomposit skeleton wit biject assum inp bag dom dom tree decomposit proof consid tree decomposit gate gate occurr occurr form connect subtre gate input gate stitchabl hypothesi occurr subset occurr occurr occurr form connect subtre tupl occur fact clear occur cover bag cover element conclud proof theorem proof gso sentenc bnta test treewidth theorem lift proof theorem construct linear time input instanc tree decomposit width encod width lemma satisfi condit lemma theorem comput ariti prove nanc circuit tree decomposit width constant observ proof proposit skeleton node input gate node bag correspond observ stitchabl circuit tree decomposit skeleton satisfi condit lemma deduc lemma lemma construct linear time stitch tree decomposit width depend desir properti valuat jinp lemma valuat inp clear fact true conclud fact proven circuit hold true probabl evalu describ consequ theorem term prob abil evalu corollari problem comput probabl fix gso sentenc bound treewidth pcc instanc solv linear time data complex prove corollari key result definit ariti monoton boolean circuit probabilist valuat associ cinp probabl distribut ration ration probabl evalu problem comput probabl distribut product distribut input assum independ map val cinp cinp val cinp denot set boolean valuat cinp theorem tree decomposit width ariti boolean circuit probabilist valuat probabl evalu problem solv time linear theorem prove corollari proof pcc instanc treewidth queri theorem construct linear time boolean circuit treewidth depend distinguish gate build tree decomposit width linear time probabl true prg conclud theorem state comput linear time prove theorem proof dom tree decomposit boolean circuit dom set gate set dom dom dom share element bag parent assum arbitrari order dom tupl order element dom order constant time size bag bound constant dom note product dom arbitrari bag gate input gate bag exist tree decomposit circuit fact regroup precomput function linear time travers input gate arbitrari bag associ bag resp edg potenti function resp denot nonneg ration number initi constant function will store bag edg full tabl valu valu size bound function cinp map bag dom function map tupl assign input gate tupl form gate wire order function subrel tabl valu function column reorder appli set ariti tupl repres graph function updat potenti function step product function domain denot pointwis multipl cinp set cinp set project leav unchang note initi potenti function exact correspond straightforward interpret circuit probabilist input special case belief network root node determinist condit distribut valu appli global propag step describ choos root tree decomposit root cluster consist propag potenti leav tree decomposit root root leav tree process linear bag requir number arithmet oper linear process desir probabl distribut prg gate margin prg posit dom process linear cost arithmet real cost arithmet belief propag requir multipli sum linear time probabl valu size bound polynomi time consequ instanc exist formal instanc analog instanc annot fact proposit formula circuit definit instanc relat instanc tupl label proposit formula variabl event fix set valuat map variabl retain exact tupl annot evalu jjk set world observ valuat yield instanc defin instanc probabilist valuat variabl probabl paper valu ration probabl distribut jjk defin univers probabl measur prj prj product distribut valuat prj notion treewidth definit occ cooc occ cooc ariti instanc defin relat encod instanc event encod fresh dom add fact occ dom fact annot formula involv cooc event occur formula fact treewidth instanc notion treewidth event occurr connect treewidth instanc ensur tractabl queri evalu instanc bound treewidth sens technic rewrit annot bound treewidth instanc bound size constant proposit fix instanc width comput linear time instanc equival world probabl treewidth depend proof justifi comput linear time instanc event valuat prj prj annot size depend observ assumpt formula annot number distinct event occur cooc cliqu event lemma observ formula rewritten linear time formula equival formula size depend valuat input event valuat evalu formula linear time rewrit formula disjunct valuat satisfi valuat test conjunct event negat event process produc linear time equival instanc annot size depend assum loss general size annot bound constant consid instanc relat encod tree decomposit build tree decomposit relat encod instanc design equival start input gate correspond event consid fact set event annot note pair occur fact element occur element occur cooc fact pair element occur occ fact lemma bag dom circuit represent boolean function size depend add add set distinguish node built construct equival build make copi fact consid bag correspond bag add element decomposit clear cover fact event occurr form subtre element singl bag clear bag size depend size bag depend bag element bag talk probabl clear instanc probabl input pcc instanc analog combin theorem deduc tractabl queri evalu bound treewidth instanc theorem bound treewidth instanc probabl queri evalu problem boolean mso queri solv linear time data complex proof result consequ proposit theorem long instanc width comput linear time instanc event valuat prj prj annot size depend observ assumpt formula annot number distinct event occur cooc cliqu event connect occ relat domain element fact annot total cliqu lemma tree decomposit node element observ formula rewritten linear time formula equival formula size depend valuat input event valuat evalu formula linear time rewrit formula disjunct valuat satisfi valuat test conjunct liter process produc linear time equival instanc annot size depend probabilist xml will prove result scope proposit prove result local model theorem xml instanc describ xml document connect relat model definit xml document label set document unrank tree definit prxml tree unrank tree fix alphabet label augment set boolean event event probabl edg tree label proposit formula defin probabl distribut tree fashion valuat remov edg annot evalu fals descend node edg probabl tree sum probabl valuat probabl valuat defin assum event drawn independ indic probabl definit perform queri evalu prxml document determin fix queri tree input prxml document total probabl world satisfi studi data complex complex function assum label set provid input xml document unrank conveni manipul binari left child sibl represent definit left child sibl lcrs represent unrank root order tree tree node children order sequenc sibl encod node complet node label tree full xml document encod relat set definit document relat signatur binari predic child sibl unari predic relat encod instanc dom dom consecut sibl hold pair node child sibl order hold node fact hold lemma relat encod xml document treewidth comput linear time proof relat encod clear comput linear time width tree decomposit relat encod skeleton lcrs represent xml document import languag mso queri xml document formal easili translat queri relat encod definit mso queri xml document mso formula order variabl refer node atom label parent sibl lemma mso queri document comput linear time mso queri document iff proof add constant overhead predic predic transit closur predic clear semant atom match correspond atom straightforward structur induct formula desir properti definit label set xml document det spars represent xml document root label element xml document remov node descend replac det node collect children order exact det instanc weak relat encod xml document label set exist spars represent relat encod fact written proposit mso queri xml document fix label set comput linear time mso queri xml document label set weak relat encod convers weak relat encod proof mso queri xml document label set comput linear time mso queri document label det xml document label set spars represent convers spars represent result lemma call regular node label consid document spars represent map wit spars represent consid node children order determin relationship straightforward observ regular topmost regular descen dant node intuit lowest common ancestor descend ancestor descend children descend equal descend equal note regular node det node addit node travers ancestor descend chain discuss paragraph clear mso predic inform depend predic spars encod node hold regular node node imag likewis clear predic encod direct predic probabilist xml formal introduc probabilist xml start prxmlfie prxml event definit prxmlfie probabilist xml document fie document edg fie node children label proposit formula set boolean event probabilist valuat map independ probabl true semant jdk extend probabl distribut valuat usual defin fie node replac collect children edg annot descend discard requir root label will prove proposit encod prxmlfie instanc definit encod prxmlfie document fie instanc event instanc relat encod annot fact annot fact annot annot edg parent exist proposit mso queri document comput linear time mso queri prxml fie xml document valuat let correspond valuat iff proof prove valuat let correspond valuat weak encod pfie fact pdet fact result proposit valuat correspond valuat node retain xml document spars represent node retain label forward implic observ fact creat node label retain regular ancestor retain annot parent edg evalu convers label fact creat retain condit edg chain root evalu hold retain construct relat correspond child sibl relat matter valuat deduc relat encod xml document replac node node remov edg annot observ encod case world relat encod world instanc fie node retain fact retain correspond node drop exampl reason ensur strong properti exampl consid fie node children annot independ event probabl straightforward attempt encod node descend instanc pcc instanc creat domain element account fact pair retain individu fact occur occur naïv attempt ensur world exact relat encod world lead pcc instanc quadrat size linear treewidth tractabl prxmlfie cours hope encod prxmlfie document constant treewidth prxmlfie evalu mso queri hard theorem notion tractabl prxmlfie document treewidth encod proposit theorem impli corollari prxmlfie document bound treewidth encod mso prob abilist queri evalu problem solv linear time data complex condit event scope simpler condit tractabl formal definit consid prxmlfie document event set lcrs represen tation event occur node occur annot edg parent smallest connect subtre cover node occur event scope node event scope width maxn readi prove result xml element scope proposit prxmlfie document proof build tree decomposit relat encod event scope consid tree decomposit isomorph lcrs encod root node code empti bag node lcrs encod parent code add bag correspond node event clear prescrib width occurr node event connect subtre argu tree decomposit relat encod easili cover fact repres cover occurr occurr construct scope impli proposit corollari tractabl prxmlmux ind introduc proof local model prxmlmux ind definit prxmlmux ind probabilist document xml document ind mux edg ind mux node children label probabl annot outgo edg mux node sum semant jdk ind node decid discard child indic probabl replac node empti collect children mux node choos child node indic probabl node sum replac mux node chosen child remov child chosen probabilist choic perform independ node descend discard requir root label observ prxmlmux ind probabilist choic local fashion tupl independ tid bid probabilist relat formal help ensur tractabl queri evalu corollari tractabl queri evalu prxmlmux ind local model proven rewrit input document simpler form definit prxmlmux ind document equival xml document definit prxmlmux ind binari form full binari tree sum outgo probabl mux node equal need ensur linear time execut technic reason definit prxmlmux ind document normal mux node ration probabl annot child node share denomin lemma normal prxmlmux ind document comput linear time equival prxmlmux ind document binari form proof proof breviti det node refer ind node child edg annot probabl rewrit mux node outgo probabl sum det child remain probabl oper linear time corr spond number denomin children mux node document normal numer smaller denomin det node rewrit children regular ind node chain regular ind node children constant factor blowup document rewrit mux node children hierarchi mux node obvious consid mux node children probabl sum replac hierarchi mux node children probabl probabl children probabl oper perform linear time denomin fraction simplifi assumpt document normal sum oper work operand smaller numer replac mux node children ind node probabl unchang add det children node degre node process perform linear time document binari form equival maintain step proposit prxmlmux ind document binari form comput linear time equival prxmlfie document scope size proof ind node children probabl introduc fresh event eind ind probabl replac fie node second outgo edg annot eind ind likewis mux node children probabl introduc fresh event emuxn probabl replac fie node second outgo edg annot emuxn mux document equival consid scope node document event occur node event occur time document occur exact edg direct sibl node occur scope node scope size prxmlmux ind document normal linear time deduc tractabl mso queri evalu prxmlmux ind claim main text theorem mso queri evalu prxmlmux ind linear data complex bid instanc definit bid instanc relat instanc relat partit key posit valuat key posit match fact form block mutual exclus probabl probabl block sum semant independ block fact random block indic probabl fact probabl sum ensur linear time complex assum bid instanc fact regroup block bound ptime sort fact definit defin treewidth bid instanc under relat instanc forget probabl tractabl mso queri evalu bid theorem corol lari result lemma fix bid instanc comput linear time equival pcc instanc depend proof result trivial encod instanc straight forward result assum size block bound constant build decis circuit pick key tree fashion decomposit bid instanc proof comput linear time tree decomposit width loss general assum probabl block ration denomin case normal probabl linear time proof lemma assum fact assign bag cover dom cover bag spirit proof lemma modifi decomposit copi node creat chain assum fact assign bag preprocess perform linear time fact bag fact assign comput pcc instanc build tree decomposit skeleton initi copi add gate turn tree decomposit set block key pair relat symbol tupl key relat write refer restrict fact block size number fact instanc size fact associ probabl clear size origin instanc consid subset bag cover connect subtre intersect element occurr subtre element connect subtre empti element occur fact bag precomput linear time root precomput proof lemma clear size linear bag occur constant number prove result comput time circuit annot fact add gate tree decomposit make sure add constant number gate bag bag manag result process block order provid pcc instanc width constant bag occur constant number argument size sum run time algorithm linear describ construct associ decomposit preprocess tabl root label node top time linear notic fact bag cover write restrict function fact bag interest bag imag lowest common ancestor subset bag imag observ number interest bag linear number fact interest bag form intern node leav binari tree leav imag number leav number fact total number node tree linear number leav weight function probabl exist bottom cumul weight function notat conveni extend exist observ interest bag repres pointer interest bag interest topmost interest descend uniqu lowest common ancestor interest descend descend interest uniqu topmost exist exist descend imag descend pointer comput bottom linear time observ work ration denomin sum perform sum integ size remain common denomin number interest bag linear number fact node size probabl comput written comput perform time justifi encod circuit correct probabl bag creat gate root bag input gate probabl bag gate parent bag intuit gib describ choos fact subtre root interest bag write common denomin creat input gate ghb probabl gate ghb intuit gate describ generat fact assign node fact set imag intuit possibl generat fact child node creat input gate probabl probabl ration numer denomin creat gate glb gib creat constant number intermedi gate gib set applic exist contrast interest bag set applic input gate observ construct circuit tree decomposit compat add event add constant width node requir easi circuit correct distribut fact invari bag probabl exact true margin probabl circuit construct time note interest node node number comput written perform entir comput time result proven combin lemma theorem conclud theorem fix mso queri evalu input bid instanc treewidth linear data complex count theorem fix mso queri free order variabl number match assign input instanc width comput linear data complex proof mso queri rewrit queri fresh unari predic consid input instanc width expand bid instanc set exist relat trivial bid tabl attribut relat key fact probabl tabl attribut empti set key fact dom probabl dom rewrit clear perform linear time treewidth intuit world way extend fact dom fact probabl dom observ index dom add fact number match number world hold probabl multipli dom conclud theorem comput probabl linear time comput count probabl multipli linear time prove result refer appendix stefan arnborg jen lagergren detlef sees easi problem tree decompos graph algorithm daniel barbará hector garcia molina daryl porter manag probabilist data tkde han bodlaend linear time algorithm tree decomposit small treewidth siam comput cdg comon dauchet gilleron löding jacquemard lugiez tison tommasi tree automata techniqu applic http tata sara cohen benni kimelfeld yehoshua sagiv run tree automata probabilist xml pod bruno courcell monad second order logic graph recogniz set graph inf comput surajit chaudhuri mosh vardi equival recurs nonr cursiv datalog program pod daniel deutch tova milo sudeepa roy val tannen circuit datalog proven icdt jörg flum markus frick martin grohe queri evalu tree decomposit acm gavril intersect graph subtre tree exact chordal graph combinatori theori erich grädel colin hirsch martin otto guard modal logic tocl todd green grigori karvounaraki val tannen proven semir pod todd green val tannen model incomplet probabilist iidb jiewen huang lyublena antova christoph koch dan olteanu maybm probabilist databas manag system sigmod cecil huang adnan darwich infer belief network procedur guid int approxim reason benni kimelfeld yuri kosharovski yehoshua sagiv queri prob abilist xml model sigmod lauritzen david spiegelhalt local comput proba biliti graphic structur applic expert system royal statist societi seri frank neven thoma schwentick queri automata tree tcs christoph dan suciu materi view probabilist databas exchang queri optim vldb dan suciu dan olteanu christoph christoph koch probabilist databas morgan claypool jame thatcher jess wright general automata theori applic decis problem second order logic math system theori 