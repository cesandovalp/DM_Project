parallel queri optim share architectur immanuel trummer christoph koch firstnam lastnam ecol polytechniqu rale lausann abstract data process system offer increas degre parallel level core cpus process node queri optim exploit high degre par allel order gradual bottleneck queri evalu parallel queri opti mizat massiv scale algorithm parallel queri optim left deep bushi plan space optim start divid plan space queri partit equal size explor parallel worker node optim worker return opti mal plan partit master determin global optim plan partit optim plan synchron data exchang requir actual optim phase amount data network start optim well complex serial step algorithm increas linear number worker queri size time space complex optim partit decreas uniform number worker parallel singl multi object queri timiz cluster node experi concurr worker thread spark ecutor despit high network latenc task assign overhead parallel yield speedup der magnitud larg queri optim take minut singl node introduct law break comput system power increas number process ing unit core cpus cluster node increas clock rate stage queri evalu exploit parallel order bottleneck futur system work support erc grant european googl phd fellowship parallel queri evalu focus parallel actual queri process stage parallel execut queri plan insuffici prior work order parallel queri evalu parallel execut queri plan generat queri plan develop parallel algorithm queri optim problem queri optim hard problem find ing guarante optim queri plan hard time algorithm increas exponen tialli number join novel applic scenar sparql queri process motiv queri join complex sys tem queri process take place increas number system compon increas discuss flexibl provis model novel process oper introduc paramet queri pro cess tune number machin rent paramet cloud scenario sam pling rate scan oper context approxim queri process develop queri optim harder size plan search space increas addit aforement develop ment motiv cost metric compar queri plan monetari fee cloud scenario result precis approxim queri process addit execut time multipl plan cost metric queri opti mizat harder well summari ongo develop queri timiz harder increas parallel queri optim algorithm propos novel parallel algorithm queri optimiza tion work goal queri optim algorithm futur proof exploit grow degre parallel forc breakdown law prior parallel queri optim gorithm design share memori architectur aim parallel queri optim share architectur well queri plan execut larg cluster queri optim preced queri execut prefer cluster node queri optim leav idl optim finish queri execut repeat singl node cluster optim time optim expen sive algorithm propos specif share architectur appli differ ent scenario well prior approach parallel queri optim sume worker thread share common data structur big memot store subset queri tabl optim join plan assum cen tral master node distribut fine grain optim task worker interact master worker thread place optim sin gle queri share architectur share data worker thread high communic head task assign incur setup overhead target extrem high degre parallel sev eral hundr cluster node prior algorithm evalu core orchestrat ing node level micro optim task prohibit communic comput head master node achiev goal requir radic approach compar prior work decompos queri optim problem small optim task realiz coars grain problem decomposit optim queri map act task worker node high level algorithm work queri find optim plan master optim node send queri plan space partit worker node partit simpli integ tween number worker worker obtain number worker node translat partit set constraint join order consid queri plan compli constraint worker node search optim plan plan space smaller origin plan space worker node search optim plan respect plan space partit parallel commu nicat worker worker master node requir stage worker send optim plan master node orig inal plan space union plan space partit compar plan return worker timal respect partit number linear number worker yield global optim plan algorithm design exploit high degre parallel time complex serial process step execut master node linear number worker queri size amount data network linear number worker queri size plan space partit size guarante skew free parallel fix queri time well consumpt main mem ori space worker node decreas monoton number worker node number parti tion plan space divid maxim degre parallel grow queri size principl unlimit algorithm parallel popular namic program scheme queri optim treat tabl set increas cardin construct optim join plan tabl set optim plan tabl subset generat prior work dynam program scheme belong class serial polyad algorithm difficult parallel ier parallel random queri optim algorithm iter improv simul anneal focus parallel dynam program approach reason random algorithm dynam program proach formal guarante return optim queri plan second parallel classic dynam pro gram scheme parallel time queri optim algorithm base scheme cover multitud scenario multi object queri optim parametr queri optim time space complex classic dynam program algorithm depend number tabl set optim join plan decom pose queri optim problem introduc con straint join order ultim allow reduc number tabl set consid propos partit scheme space left deep queri plan partit method bushi queri plan left deep queri plan character order tabl join restrict join order constraint form queri bles semant tabl join tabl constraint exclud queri plan produc intermedi join result tabl tabl neglect tabl set dynam program reduc number tabl set consid factor assign constraint worker node complemen tari constraint second worker entir search space cover recurs decompos plan space partit appli constraint disjoint tabl pair bushi queri plan binari tree repr sent join order arbi trari tabl follow leaf node plan tree root order tabl base appear sequenc intermedi sult encount restrict join order bushi plan space constraint form semant appear ble plan tree root exclud join tabl tabl formal analyz time space complex network bandwidth requir algorithm constraint reduc time complex factor linear factor bushi plan space reduct factor optim restrict design space partit method prior gorithm achiev linear speedup low number thread share memori architectur speedup linear steadi high degre par allel share architectur experi demonstr continu scale concurr worker thread larg cluster queri size singl well multi object queri optim algorithm scale challeng scenario scale architectur well origin scientif contribut paper summari propos novel algorithm massiv parallel queri optim share architectur formal evalu algorithm term time space complex term requir net work traffic evalu algorithm experiment larg cluster demonstr scalabl concurr worker thread remaind paper organ compar work introduc formal problem model algorithm parallel queri optim left deep bushi plan space analyz time space complex well growth network traffic experiment demonstr scalabl algorithm larg cluster work term parallel queri optim refer serial optim algorithm generat plan ecut parallel crucial realiz term sens propos parallel gorithm generat queri plan execut serial parallel work connect prior work parallel clas sical dynam program base queri optim algo rithm prior algorithm implicit design share memori architectur scale degre parallel prior algorithm evalu maxim core demonstr scalabl algorithm share architectur worker outlin factor distinguish prior algorithm algorithm limit scalabl prior algorithm assum thread share common data structur memot optim par tial plan access intermedi gener ate thread lead huge communi cation overhead share architectur size memot exponenti queri size algorithm requir communic worker prior algorithm central coor dinat assign fine grain optim task worker thread master thread assign specif pair join operand generat plan disadvantag lot communic requir tween master worker second time complex manag worker high master will tualli bottleneck degre parallel increas assign task coarsest level worker receiv exact task queri time complex algorithm execut master linear num ber worker node queri size total amount data net work final round communic worker master requir queri algorithm prior algorithm requir round munic round communic vantag scenario distribut task worker receiv associ overhead compar typic repres prior algorithm experiment evalu work general relev area queri timiz algorithm base dynam program ming propos includ instanc multi object queri optim parametr queri timiz multi object parametr queri timiz method partit join order space generic appli scenario problem model standard queri optim simplifi queri queri plan model describ algorithm tend model algorithm richer queri languag plan space straightforward achiev standard techniqu queri set tabl join denot scan queri plan scan singl tabl call plan scan plan join design plan join result produc plan result produc outer inner operand term left operand synonym outer inner operand outer operand drawn left side visual represent queri plan note incor porat altern oper implement scan join model simplifi present pseudo code extens easi implement algorithm experi consid stan dard oper distinguish type queri plan left deep plan plan operand join scan plan plan bushi plan bushi plan repres label binari tree leaf node corr spond singl tabl inner node correspond join tree shape left deep plan fix join order left deep plan fulli describ order tabl leaf node encount travers post order plan tree repres left deep plan sequenc queri tabl fix queri set bushi plan bushi plan space set left deep plan left deep linear plan space assum cost model associ queri plan cost estim pseudo code encapsul cost model prune function discard plan higher cost compar plan goal queri optim find cost optim plan space left deep space bushi plan algorithm algorithm massiv parallel queri timiz algorithm well suit share architectur minim amount sychron communic overhead properti benefici share memori scenario algorithm specif share architectur parallel queri optim node cluster core singl comput present algorithm solv tradit queri timiz problem mean compar altern queri plan singl point cost estim cost metric method partit plan space generic fact straight forward extend algorithm handl multipl plan cost metric plan cost function depend paramet possi ble algorithm propos afor mention queri optim variant dynam program scheme classic algorithm seling prune function queri plan compar differ algorithm present easili tran form algorithm handl queri optim variant essenti replac prune function variant algorithm vari ant find optim left deep queri plan queri second variant find optim plan bushi plan space discuss pseudo code illustr inform algorithm work simplifi exampl exampl refer algorithm variant search left deep plan space exampl assum find optim left deep plan answer join queri assum worker node queri optim parallel recept queri master node send queri total number plan space partit spectiv partit worker node consid worker node partit three sign know total number partit worker node deriv constraint restrict join order space con straint refer order tabl join constraint refer order pair tabl establish pear join order second constraint refer binari represent partit encod concret set constraint con sider worker node partit binari repr sentat bit binari represent worker node order second bit worker order note worker will complementari constraint set base respect partit join order space cover worker focus find best plan join order compli constraint return plan master compar plan return worker determin global optim plan pseudo code high level algorithm execut master worker node tion code function worker infer constraint join order partit find join order compli constraint discuss high level algorithm pseudo code high level algorithm execut master node worker parallel optim queryq overmmachin function master generat best plan partit parallel parfor partid bestinpart partid worker partid parfor prune plan return best plan bestp lan bestinpart partid finalprun bestp lan bestinpart partid return bestp lan function algorithm function execut master node parallel queri optim share architectur common area queri optim simplifi present pseudo code consid spj queri neglect instanc impact interest tupl order standard method algorithm extend support richer queri lan guag queri aggreg nest queri straight forward extend present algorithm consid interest tupl order announc algorithm variant treat space left deep plan treat ing space bushi plan pseudo code dis cuss subsect variant distinguish algorithm consist part ecut master node orchestr worker node second algorithm run worker node algorithm code execut master input queri find optim queri plan number worker node assum power reason will appar output master function optim plan master node execut phase phase master send queri uniqu partit worker discuss pseudo code worker function bit worker invoc happen parallel indic keyword parfor partit identifi partit plan search space task worker find optim plan respect partit return master master collect return plan array bestinpart standard notat bestinpart repres access field array second phase master node compar collect plan identifi global optim plan function finalprun pseudo code repres standard prune function replac bestp lan better plan input plan consid plan return worker best plan global optim algorithm code function run worker node invok master input queri optim total number plan space partit identifi partid partit assign respect worker output optim plan correspond partit worker node execut three step know total generat best plan queri partit partid partit function worker partid decod partit set constraint constr partconstraint partid generat admiss intermedi joinr admjoinresult constr initi best plan singl tabl scan iter join result cardin iter admiss join joinr split join operand trysplit constr return best plan queri return function algorithm generat best queri plan specif par tition linear bushi plan space number partit specif partit partid translat set constraint join order function partconstraint code discuss accomplish translat second function admjoin translat set constraint admiss set tabl set appear join queri plan join order respect constraint final worker node dynam program approach find optim queri plan plan produc admiss join assum explicit writ ing correspond code result set gener ate function admjoinresult index cardin algorithm effici triev set cardin variabl array store optim queri plan design optim queri plan join tabl set initi insert scan plan singl queri tabl simplifi pseudo code assum scan plan tabl general straight forward algorithm calcul timal plan tabl set increas cardin optim plan store prior iter algo rithm consid tabl set repres admiss join admiss join result function trysplit way split join result admiss operand store best plan plan space partit discuss function voke worker function contrast pre vious subsect distinguish algorithm variant pseudo code notat linear indic function specif algorithm search linear left deep search space analog bushi indi cate function specif algorithm generat bushi plan code function variant generat constraint tabl pair queri preced order precord function constraint linear precord precord return return function generat constraint tabl tupl queri preced order precord function constraint bushi precord precord return return function decod partit partid set constraint restrict plan space queri total number partit partid function partconstraint partid initi constraint set constr iter constraint bit encod preced order precord bit partid generat constraint subset constraint precord add constraint set constr constr return constr function algorithm translat partit set con straint restrict plan search space algorithm code translat partit set constraint function partconstraint obtain input queri number partit partit output set constraint join order defin plan space partit current worker treat generat constraint notat design tabl queri nota tion assum queri tabl number consec utiv algorithm arbitrari tabl number worker number order guarante plan space cover ensembl worker form generat constraint differ depend search left deep bushi plan constraint left deep plan space defin tabl pair constraint bushi plan defin tripl tabl constraint restrict linear plan space form tabl appear tabl admiss join order join order left deep plan repres sequenc tabl constraint refer represent constraint restrict bushi plan space form semant consid intermedi join tabl ascend order cardin tabl appear tabl assum constraint index constraint concern set tabl retriev effici case left deep plan space complemen tari constraint pair tabl order guarante plan space cover ensembl worker consid complementari constraint worker work constraint tabl pair direct constraint tabl join differ worker worker binari rep resent partit deriv constraint consid tabl pair notat bit partid repres bit binari represent matter start lowest order bit highest order bit bit determin direct constraint treatment bushi plan space analogu con straint defin tabl tripl tripl bles complementari constraint worker pick base partit defin variant function constraint generat actual constraint linear bushi plan space high level algorithm gen erat constraint set differ note assum number worker power number queri tabl multipl left deep plan multipl three bushi plan assumpt simplifi pseudo code extens general case subset worker cardin power straight forward number worker effici exploit algorithm strict power maxim number worker addit restrict function queri size analyz restrict detail constraint restrict admiss join order join tree ultim interest restrict number join order number termedi join result tabl set pear admiss plan focus reduc number result tabl set time space complex dynam program algorithm execut worker depend translat set constraint set inter mediat admiss plan algorithm precis functionadmjoinresult accomplish translat input queri set constraint output set intermedi appear plan compli constraint function admjoinresult iter subset queri tabl constraint refer left deep plan pair tabl consecut num ber bushi plan tripl consecut tabl iter loop function admiss tabl set store subset tabl pair tabl tripl consid current iter cartesian product extens auxiliari function constrainedpowerset return pair respect tripl tabl subset compli constraint precis tabl return pair consecut tabl queri function subset linear return function return tripl consecut tabl queri function subset bushi return function power set respect constraint function constrainedpowerset linear return power function power set respect constraint function constrainedpowerset bushi return power function return potenti join tabl subset queri compli constraint function admjoinresult initi result set iter subset subset extend join cartesian product constrainedpowerset return function algorithm generat tabl subset compli constraint defin search space partit join tabl case left deep plan singleton tabl set tabl consid equal bushi plan tabl appear tabl enumer tabl set tabl set admiss join exampl assum constraint consid left deep plan set admi sibl join result set generat function admjoinr sult iter loop extend element contain initi empti set admiss subset tabl pair admiss subset time content iter algorithm consid admiss subset second iter set extend element admiss subset second iter note admiss tabl set generat func tion admjoinresult includ singleton tabl set singleton set consid gener ate plan select scan plan tabl singleton set treat separ algorithm matter includ result function admjoinresult algorithm function split generat correspond plan appli left deep split operand respect constraint generat associ plan prune function trysplit linear iter potenti inner operand check operand choic satisfi constraint join prune function split operand respect constraint generat associ plan prune function trysplit bushi determin admiss operand iter set tabl tripl subset bushi restrict tripl tabl join result form power set remain tripl power set violat constraint remov complement inadmiss set extend admiss split cartesian product full set empti set qualifi operand iter admiss left operand generat plan associ split join discard suboptim plan prune function algorithm generat prune queri plan corr spond split join result operand plan function call algorithm missibl join result function iter tabl join result set inner join operand long constraint violat plan correspond admiss split generat func tion prune pseudo code compar newli generat plan best plan produc intermedi result better plan remain result set note prune function store optim plan interest tupl order prune function worker differ master call finalprun algorithm tupl order instanc relev long reduc cost futur oper account complet plan mechan partit ing reduc time complex worker focus partit reduc time plexiti worker fewer potenti join consid addit advantag partit allow reduc number split join join operand lead queri plan generat compar potenti save comput time reduc number split higher bushi plan space number split grow exponenti size join result left deep plan number split grow linear cardin join result join operand limit singleton tabl set invest effort case bushi case left deep plan proper exploit duction admiss split left deep plan basi calli enumer split check compli constraint complex proach remain linear number split lower number admiss split algorithm bushi plan sophist avoid generat ing admiss split bushi plan place complex linear number admiss split functiontrysplit bushi generat admiss split bushi plan space generat prune asso ciat queri plan algorithm generat missibl join operand store variabl admiss join operand correspond union missibl subset tabl tripl constraint defin tripl tabl iter tabl tripl determin admiss subset current tripl combin iter operand admiss subset current tripl proach algorithm tripl queri tabl consid includ join result split constraint defin current tripl entir power set contain tabl admiss remov subset vio late preced constraint remov subset complement contain tripl tabl violat preced constraint second join operand complement operand determin admiss join operand complement admiss iter generat plan discard optim plan complex analysi analyz asymptot complex algorithm present previous multipl met ric analyz asymptot amount data network consum amount main mem ori execut time simplifi analysi assum scan join oper assum cost metric consid compar queri plan interest order discuss analysi extend discuss question partit method improv optim restrict space partit method introduc notat tion denot number queri tabl join number worker machin assum thatm linear plan search space andm bushi plan space requir assum tabl set constraint refer mutual disjunct tabl constraint linear plan space three tabl bushi plan space denot number constraint plan space par tition design byte size input queri denot byte size correspond queri plan network communic analyz asymptot size data network optim queri theorem amount data network proof worker communic data master worker occas assign worker plan space partit collect best plan partit input worker queri space consumpt integ number con stant space consumpt consid plan cost metric interest order extens discuss output worker singl queri plan space consumpt main memori analyz amount main memori worker requir optim note main memori consumpt master neglig deleg timiz main memori consum worker node depend number admiss join theorem linear plan space partit restrict constraint admiss join proof proof induct number constraint induct start subset admiss number assum induct hold constraint will hold constraint well constraint refer tabl constraint influenc occurr frequenc tabl constraint refer precis tabl set remain admiss consid constraint fraction tabl set denot constraint state join join inadmiss number admiss tabl set reduc factor induct hold theorem bushi plan space partit restrict constraint admiss join proof sketch proof close orem differ constraint form exclud tabl set fraction tabl set satisfi constraint number admiss join calcul main memori consumpt theorem main memori consumpt node linear plan space bushi plan space proof main memori consumpt worker dom inat consumpt master variabl domin space consumpt store admissi ble join variabl joinr algorithm assign tabl set optim plan variabl current assum plan cost metric plan optim tabl set store plan general take space plan repres pointer optim plan store tabl subset requir space total main memori consumpt theorem execut time analyz time complex note pseudo code present abstract con tain step crucial effici men tion assum instanc constraint index find constraint tabl appear constant time anal ysis assum commonsens optim appli well implement evalu analyz execut time master theorem master requir time proof master distribut queri parti tion worker assum requir time proport amount data distribut ing task take mbq time collect plan worker mbp receiv plan master iter plan return work cost calcul determin minim cost complex analyz time complex process linear plan space partit theorem time complex process linear plan space partit worker proof worker perform three main step invoca tion translat partit constraint translat ing constraint admiss join result set determin ing optim plan plan admiss join oper domin time complex determin optim plan admi sibl join result set iter inner join operand number admiss join result set theorem generat plan plan calcul cost recurs mula compar best generat plan join tabl requir constant time theorem time complex process bushi plan space partit worker proof determin optim plan restrict plan space partit oper domin time complex time complex find optim plan lower bound number consid result tabl set proport number consid join operand pair tabl general three possibl appear pair join operand appear left operand operand appear operand join result join operand construct admiss subset tabl tripl constraint defin tripl split admiss pair constraint defin tripl possibl admiss constraint split tripl exclud split union pli split split assign operand appli split ratio admiss split tripl constraint time complex worker process domin complex master process worker ecut parallel time complex singl worker complex entir optim process extens consid plan cost metric interest order altern oper implement straight forward extend analysi sketch consid multipl altern oper implement scan join oper influenc time complex time complex grow linear number oper join oper implement consid pair join operand annot erat queri plan oper chang asymptot space complex main memori asymptot communic overhead store integ requir constant space consid interest order consid multipl plan cost metric multipl plan optim join set tabl number interest order restrict number plan store tabl set assum multipl plan cost metric consid approxim factor number pareto optim plan tabl set bound trummer koch num ber plan worker master communic overhead increas linear number plan store tabl set main memori consumpt increas linear number plan time complex increas proport cube number plan reason search optim plan plan space partit consid pair optim plan split tabl set join operand account quadrat increas complex addit prune take longer compar plan multipl optim plan impli cubic increas complex note plan compar multipl cost metric number plan cost metric con sider constant optim partit execut time main memori consumpt pend number intermedi join treat worker partit scheme number join worker reduc factor case linear plan space factor bushi plan time number worker doubl ideal factor reach join sult assign multipl worker rais question better reduc number intermedi worker node lower factor answer question partit method appli meth method divid power set queri tabl subset base respect three fix tabl subset sign worker worker generat plan join contain assign subset worker construct scan plan singl tabl depend assign join worker exchang partial plan generat complet plan start optim scratch theorem studi best speedup achiev partit plan space work reason general higher degre parallel theorem doubl number worker duce maxim number join worker factor linear plan space proof fix pair tabl queri tabl denot set tabl set set tabl set remain set worker subset order generat complet plan cardin set join tabl increas join left deep plan space worker join order generat valid plan set assign worker plan space partit incomplet theorem doubl number worker duce maxim number join worker factor bushi plan space proof sketch tripl tabl notat character join result set denot instanc xyz set worker requir xyz reason assum assign set xyz worker worker xyz assign worker consid plan join tabl independ join tripl tabl worker cover join order requir join result set defeat purpos partit assum assign set xyz worker second worker consid plan form requir xyz analogu reason xyz addit xyz order sure plan space cover second worker time consid plan form requir time xyz xyz second worker treat plan form requir xyz second worker obtain set join assign xyz xyz worker option assign three set three tabl worker case assign second worker maxim number intermedi result split worker remain experiment evalu evalu scalabl queri optim algo rithm larg cluster node parallel spark executor parallel queri optimiza tion cluster queri plan execut cluster prefer resourc optim leav node idl serial opti mizat finish queri execut regular cluster time calcul optim queri plan search space larg optim singl node parallel queri optim cluster relev applic scenario select challeng sce nario parallel high communic cost setup overhead fact algorithm scale cluster opinion strong evid scale multitud scenario well algo rithm restrict share architectur appli share memori set evalu algorithm comparison base tradit queri optim plan cost metric well multi object queri optim queri plan compar multipl cost metric calcul speedup parallel compar serial algorithm tion describ experiment setup experiment experiment setup evalu algorithm cluster node node equip intel xeon cpus featur core run main memori hard disk capac node cluster run ubuntu linux version benchmark algorithm spark yarn implement java implement gorithm abbrevi mpq mas sive parallel queri optim plot compar algorithm repres fine grain approach parallel queri timiz propos target share memori architectur moder degre parallel call algorithm sma share memori proach plot algorithm master node assign worker set join calcul optim plan base optim plan generat worker intermedi share worker mas ter assign multipl round task worker comparison mpq sma cours unfair develop architectur dif ferent degre parallel awar queri optim algorithm target share architectur spark executor reserv main memori executor queri optim requir larg amount memori case multipl plan cost metric set maximum messag size msa send larg messag compar algorithm linear bushi plan space consid full plan space heuri tical restrict cross product optim plan allow cross product number intermedi consid perform optim algorithm critic depend structur queri join graph generat random star join graph tabl cardin predic select valu method introduc steinbrunn common queri optim benchmark seri experi consid execut time cost metric stan dard cost formula estim cost standard join oper block nest loop join hash join sort merg join second seri experi consid plan cost metric goal approxim set pareto optim plan plan pareto optim plan better cost cost met ric second cost metric addit execut time buffer space consumpt calcul optim cost tradeoff execut time buffer space consumpt note cost metric frequent benchmark multi object queri optim algorithm seri experi plan cost metric replac standard prune function algorithm prune function prior work multi object queri optim formal optim guarante prune function paramet ize approxim factor set experiment space restrict extract full experiment present repres observ tendenc addit experi start discuss tradit queri optim plan cost metric figur comparison mpq msa term optimiza tion time term amount data exchang cluster node data point plot cor respond median twenti random generat queri compar algorithm plan space linear bushi queri size num ber join tabl degre parallel plan space adapt maxim parallel search space size scale maxim degre parallel mpq exploit base number disjoint tabl pair tripl maximum worker smaller queri size bushi plan space linear plan space size bushi search space grow faster number queri tabl note consid cartesian product join contrast prior evalu parallel queri optim algorithm plan space larger number tabl search space treat figur mod erat size larger search space mpq outperform msa order magni tude optim time reason larg amount data msa send network share intermedi worker overhead master node fine grain task man agement amount data msa reach linear linear linear linear linear linear bushi bushi bushi bushi worker bushi worker bushi sma mpq figur mpq outperform msa order magnitud term optim time scalabl mpq limit queri size hundr megabyt algorithm send kilobyt case outlin msa design share scenario perform gap algorithm expect search space size figur repres limit competitor algorithm msa treat reason amount time mpq algorithm consid search space small justifi parallel plot figur decreas optim time mpq grow gree parallel bushi search space queri tabl absolut optim time mpq low singl worker paral leliz need amount network traffic manag overhead increas algorithm number worker increas msa benefit case parallel degre parallel comput time msa increas queri size degre parallel well reach minut test case tabl join exclud seri experi figur larger search space mpq figur total optim time measur master node well maxim optim time measur worker time figur fact differ small indic worker worker linear linear bushi bushi figur mpq scale steadili larg search space plan cost metric manag overhead master node neg ligibl network traffic addit maxi mal main memori consumpt worker master perform optim main memori consumpt neglig scale queri size maxim degre parallel support algorithm determin number tabl pair linear plan number tabl tripl bushi plan maxim worker search space size larg steadi scale degre parallel theoret support algorithm diminish return higher number worker scale better linear plan bushi plan match precis theoret predict execut time decreas factor linear plan factor bushi plan time degre paral lelism doubl msa network traffic creat mpq depend margin queri size intermedi exchang work worker master queri final plan generat worker maxim main memori consumpt worker mea sure number relat store optim plan equal decreas steadili increas paralleliza tion decreas bushi plan slower linear plan match theoret worker constraint join order defin mpq equival classic seling algorithm treat tabl set order compar optim time exe cute algorithm singl worker measur mas ter comput time communic overhead optim time parallel version includ master comput time communic overhead speedup algorithm compar serial queri timiz worker left deep plan speedup queri tabl speedup tabl worker speedup tabl join bushi queri plan speedup tabl join worker final point java base impl mentat optim maximum effici optim modular allow plug dif ferent search space cost metric enabl execut experi broad rang scenario introduc overhead function linear linear linear linear worker bushi worker bushi sma mpq figur mpq outperform msa scalabl limit small queri size frequent call optim optim effici improv spe cializ algorithm singl scenario discuss multi object queri optimiza tion figur comparison multi object version msa mpq algorithm prune function reconfigur consid cost metric tendenc singl object queri optim optim time network traffic lower mpq msa net work traffic mpq increas compar singl object queri optim reason worker send set pareto optim plan respect plan space partit master plan median number complet pareto optim plan queri tabl join consid left deep plan tabl join bushi plan space exploit high degre parallel msa suffer number worker increas network traffic coordin overhead max imal degre parallel benefici msa number thread prior algo rithm maxim evalu mpq benefit parallel worker tabl join left deep plan worker tabl join worker tabl join bushi plan space correspond number disjoint tabl pair respect tripl absolut time mpq low parallel unnecessari figur mpq queri suf ficient larg exploit larg degre parallel scale steadi notic diminish return effect maxim number worker note time mpq figur lower time msa figur consid signifi cant larger search space figur test scalabl bushi plan queri tabl steadi scale number tabl tripl queri omit space restrict algorithm worker equival classic worker worker linear linear linear figur mpq scale steadili work linear plan space plan cost metric algorithm multi object queri optim calcul speedup speedup tabl join tabl join tabl join conclus present generic plan space decomposit method queri optim applic singl multi object queri optim variant demonstr scalabl worker refer agarw iyer panda blink interact queri larg data vldb volum bruno polynomi heurist queri optim icd chatterji evani complex approxim queri optim pod chekuri hasan motwani schedul problem parallel queri optim pod chen yin grace degrad top join enumer queri measur chip multi processor appli mathemat scienc cure blin rdf databas system tripl storag sparql queri process ganguli design analysi parametr queri optim algorithm vldb han kwak lee lohman markl parallel queri optim vldb aug han lee depend awar reorder parallel queri optim multi core cpus sigmod hulgeri sudarshan anipqo intrus parametr queri optim nonlinear cost function pvldb ioannidi kang random algorithm optim larg join queri sigmod ioannidi shim selli parametr queri optim vldbj kllapi sitaridi tsangari ioannidi schedul optim data process flow cloud sigmod moor cram compon integr circuit proceed ieee ono lohman measur complex join enumer queri optim vldb seling astrahan chamberlin lori price access path select relat databas manag system sigmod soliman petropoulo waa narayanan krikella baldwin antova raghavan helw shen caragea garcia alvarado rahman orca modular queri optim architectur big data sigmod steinbrunn moerkott kemper heurist random optim join order problem vldbj aug stonebrak case share ieee databas engin bulletin swami optim larg join queri combin heurist combinatori techniqu sigmod trummer koch approxim scheme object queri optim sigmod trummer koch increment anytim algorithm multi object queri optim sigmod trummer koch multi object parametr queri optim vldb waa hellerstein parallel extens queri optim sigmod york york usa acm press zuo chen chen optim strategi top join enumer modern multi core cpus journal comput oct 