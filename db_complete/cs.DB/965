aggreg general hypertre decomposit mana rohan chris depart comput scienc stanford univers manasrj rohanp chrismr abstract studi class aggreg join queri multipl aggreg oper evalu notat relat straightforward extens standard multiway join algorithm general hypertre decomposit ghds provid best runtim guarante contrast prior work bespok algorithm data structur match guar ante extens standard techniqu pair simpl test determin order aggreg oper equival determin ghd compat order test provid find optim ghd provid standard join algorithm will correct answer aggreg join queri second class contribut pair complet character set order equival order set ghds compat equival order exampl previous approach incomplet key technic consequ character decomposit compat ghd set smaller unconstrain ghds set ghds queri aggreg decomposit compris unconstrain ghds connect wide literatur ghds join queri process obtain improv runtim bound mapreduc variant effici method find optim ghds introduct general hypertre decomposit ghds introduc gottlob develop grohe marx provid perform earli project join process result dramat faster runtim work extend ghds handl queri includ aggreg allow captur sql aggreg process messag pass problem motiv databas engin base ghds seek deepli understand space optim aggreg join queri build work green karvounaraki tannen annot relat defin notion aggreg annot provid general definit aggreg allow repres wide rang set problem aggreg join queri queri call ajar aggreg join annot relat queri semir quantifi sum margin valu formal defin ajar queri easi illustr exampl exampl consid relat attribut tupl annot integ call relat relat consid queri output will relat attribut set attribut associ set pair compos attribut annot licens creativ common licens leibniz intern proceed informat schloss dagstuhl leibniz zentrum f√ºr informatik dagstuhl publish germani aggreg general hypertre decomposit figur illustr comput exampl set relat pair compos attribut annot associ annot associ output will simpli ajar queri captur classic sql style queri newer data process problem probabilist infer messag pass graphic model fact aji mceliec propos margin product function mpf problem special case ajar queri problem solut captur number classic problem algorithm includ fast hadamard transform algorithm forward backward algorithm fft probabilist infer bayesian network algorithm fundament field exampl forward backward algorithm condit random field form basi state art solut name entiti recognit speech tag noun phrase segment problem nlp motiv wide applic queri annot relat annot relat provid framework combin classic queri process linear algebra statist infer singl data process system consid general mpf multipl aggreg oper repres aggreg join queri join aggreg order specifi order ing aggreg attribut languag direct work abo khami ngo rudra investig function aggreg queri faq prob lem addit mpf faq general chen qcq problem aggreg logic quantifi key technic challeng problem character permiss aggreg order answer queri chen dalmau complet character variabl order permiss qcq procedur simpl complet procedur general class queri multipl aggreg provid complet character permiss order simpl test equival queri thought bodi string attribut oper pair queri order provid simpl test determin equival return output input databas technic challeng aggreg oper max freeli commut attribut oper pair commut reason oper commut attribut independ queri queri minb maxa aggreg involv commut max commut oper queri bodi render independ condit complet lead simpl test equival algorithm simpl test ghd order compat ghd compat order standard join algorithm ghd perform aggreg mana joglekar rohan puttagunta chris order order test compat amount verifi attribut topmost ghd node occur topmost node occur order pair simpl algorithm achiev best runtim queri enumer order ghd check equival compat record cost solv queri fraction hypertreewidth solv queri lowest cost standard join algorithm preced simpl algorithm run time exponenti queri size find optim ghd aggreg hard problem brute forc optim essenti optim runtim easi implement variant prototyp databas interest problem character notion equival mirror chen dalmau complet character complet character equival order order attribut oper pair describ set constraint form order appear constraint sound complet string satisfi constraint equival contrast previous approach incomplet character exampl appendix complet character ghds compat equival order order queri hypergraph call ghd valid compat order equival succinct character valid ghds describ decomposit queri seri characterist hypergraph attach aggreg order ghds hypergraph combin valid ghd origin queri node monoton width function ghd optim width construct decomposit treewidth fraction hypertreewidth submodular width node monoton conceptu result tie work exist ghd literatur result reduc problem oper standard ghds pragmat appli exist ghd characterist hypergraph free base grohe marx describ runtim term classic metric fraction hypertreewidth turn standard notion upper bound runtim fraction hypertre width submodular width effici comput variant base afrati bound communic cost join process term width paramet ghds develop effici mapreduc algorithm solv ajar queri technic note method submodular width joglekar requir partit instanc algorithm faq output sensit ghds handl output attribut effici algorithm exampl inform map node monoton node graph reduc measur addit edg reduc measur definit contrast decomposit strategi optim ghd appendix exampl case faq decomposit width ajar obtain width exhibit famili queri instanc faq run time ajar run time appendix exampl aggreg general hypertre decomposit base approxim ghds find optim ghds popular fraction hypertreewidth measur polynomi time essenti free forg connect ghds view simpl link strength approach final discuss extens handl product aggreg allow aggreg attribut join relat attribut aggreg oper multipl oper semir faq observ special case improv type logic queri open space equival order valid ghds mirror simpl test complet character valid ghds queri includ aggreg result improv runtim relat previous work outlin discuss work introduc notat algorithm relev work defin ajar problem discuss solut involv run exist algorithm restrict class ghds succinct character order equival order discuss connect work ghds explain construct valid optim queri plan improv parallel discuss incorpor product aggreg work join algorithm yannakaki algorithm introduc guarante runtim acycl join queri modern multiway algorithm process join queri worst case optim runtim atseria grohe marx deriv tight bound worst case size join queri input size structur ngo present algorithm achiev runtim bound worst case optim algorithm veldhuizen present leapfrog triejoin simpl worst case optim algorithm implement commerci databas system ngo present simplifi unifi algorithm genericjoin captur previous worst case optim algorithm ghds introduc gottlob leon scarcello hypertre decomposit associ hypertre width general concept tree decomposit conceptu decomposit captur cyclic allow facilit select yannakaki standard hybrid join algorithm ghdjoin deep connect variabl order ghds leverag extens grohe marx introduc idea fraction hypertre width ghds bound runtim ghdjoin inw hide poli logarithm factor defin minimum fraction hypertre width ghds semir aggreg green karvounaraki tannen develop idea annot semir notat annot superfici sole notat conveni delv detail mechan captur aggreg probabilist databas mpf aji mceliec defin margin product function mpf problem equival space ajar queri aggreg oper mpf general wide varieti algorithm problem impli ajar queri remark general provid messag pass gorithm solv mpf refin provid runtim guarante improv current state art aggreg join queri standard modif yannakaki handl gregat classic analysi bound bakibayev mana joglekar rohan puttagunta chris ciski olteanu zavodni studi aggreg join queri factor databas olteanu zavodni connect factor databas ghds ghdjoin develop intuit output attribut output attribut runtim pre serv intuit develop analyz aggroghdjoin variant ghdjoin aggreg join queri abo khami ngo rudra function aggreg queri faq problem equival ajar faq ajar problem aros discuss ngo rudra extend worst case result queri aggreg messag pass green semir formul origin work joint problem develop approach result split work argu ajar approach simpler yield best runtim simpl statement describ complet character describ pragmat complet allow connect easili exist literatur implement algorithm describ databas engin emptyhead engin motif find pagerank singl sourc shortest path queri dramat faster previous high level approach datalog queri input primari applic multipl aggreg oper quantifi conjunct queri qcq count variant express ajar queri semir aggreg involv oper follow idea formul queri product aggreg chen dalmau complet character space tractabl qcq defin notion width reli variabl order chen width definit includ complet character permiss variabl order qcq instanc character spirit partial order defin character space valid ghds ajar queri focus tractabl optim runtim expon character extend improv runtim bound ajar simpl solut start describ background materi need defin ajar problem formal defin ajar problem solut background classic hypergraph represent databas schema queri hypergraph pair empti set vertic set hyperedg call attribut attribut correspond domain data hyperedg correspond relat notat denot domain tupl join queri set relat join queri written onf defin pif denot number attribut denot number relat denot sum size input relat queri denot output size told logicblox implement algorithm approach public share implement month ago aggreg general hypertre decomposit algorithm yannakaki input join tree relat bottom order parent nrf top order parent nrp bottom order parent return root path hypergraph sequenc attribut start consecut pair attribut sequenc occur hyperedg number attribut sequenc length path defin ghd hypergraph definit hypergraph general hypertre decomposit pair tree function relat exist tree node cover edg attribut tree node form connect subtre condit call run intersect properti set refer bag ghd ghds assum root tree impos top partial order node leverag order ghd attribut defin topt top node bag ghd consist attribut singl relat ghd call join tree join join tree process yannakaki algorithm pseudo code algorithm runtim yannakaki algorithm ghds interpret queri plan join ghd join attribut bag worst case optim algorithm intermedi relat bag intermedi relat join yannakaki algorithm combin algorithm call ghdjoin algorithm appendix pseudo code ghdjoin runtim ghdjoin express term fraction hypertre width ghd definit hypergraph ghd fraction hypertre width denot fhw defin maxt optim tradit ghds defin tripl function assign relat bag omit function implicit assign relat bag differ notion width leav fraction hypertre width unchang relat linear program will object wors mana joglekar rohan puttagunta chris linear program defin minim login fraction hypertre width agm bound bag infhw upper bound size intermedi relat ghdjoin ghdjoin run time infhw join queri annot relat defin general notion aggreg relat annot semir definit commut semir tripl set oper exist properti hold ident annihil associ commut distribut suppos domain oper set ident form commut semir defin relat annot tupl definit annot relat annot relat attribut set set green defin relat function notion view explicit list support note explicit list support tabl allow tupl annot definit oper annot semant equival tupl absent discuss note annot relat form size empti tupl annot defin join aggreg annot relat join annot relat inform join annot relat perform regular join annot relat output tupl join set annot product annot input tupl produc defin join onf onf pif aggreg general hypertre decomposit figur select exampl illustr oper semir aggreg annot relat aggreg annot relat pair aggreg take group tupl share valu attribut produc singl tupl correspond group annot aggreg annot tupl group suppos schema singl attribut set attribut result aggreg attribut pibr defin mean aggreg queri straightforward comput join perform aggreg figur exampl oper relat remaind work assum relat relat ajar problem definit global attribut set oper set defin aggreg order sequenc addit attribut occur inform aggreg order sequenc attribut oper pair attribut sequenc occur note aggreg order specifi order manner attribut aggreg order attribut term output attribut denot attribut order repres set attribut appear repres output attribut repres sequenc equival restrict attribut appear order preserv definit ajar hypergraph aggreg order ajar queri function instanc onf ajar queri defin final output size output size join technic challeng solv ajar queri note definit oper aggreg order product aggreg product aggreg requir definit mana joglekar rohan puttagunta chris multipl aggreg order output databas instanc aggreg order faster runtim order allow earli aggreg identifi order equival order order lead smallest runtim ajar queri smaller output size join queri standard ghdjoin runtim infhw harder achiev ajar queri naiv appli variant ghdjoin perform aggreg appendix algorithm ajar lead higher runtim infhw appendix identifi ghds effici process ajar queri handl technic challeng turn equival order distinct aggreg order equival produc output instanc exampl suppos attribut ajar queri order clear produc output instanc switch posit adjac aggreg aggreg oper consist relat order max max equival independ aggreg attribut join relat formal defin equival order definit equival order hypergraph defin equival relat order databas instanc schema oper distinct domain denot cours distinct oper general commut state theorem condit aggreg commut will condit complet theorem suppos relat oper condit hold exist relat proof condit trivial commut oper second condit fact push aggreg condit simpl procedur test order equival algorithm pseudo code avoid trivial assum set attribut assign oper attribut return true empti check equival condit theorem procedur sound complet aggreg general hypertre decomposit algorithm testequival input queri hypergraph order output true fals return true remov divid connect compon return itestequival choos path return fals remov remov return testequival lemma algorithm return true iff omit proof impli proof requir answer ajar queri compon addit algorithm aggroghdjoin straightforward variant ghdjoin perform aggreg algorithm appendix step aggroghdjoin ghdjoin perform ing join bag ghd intermedi relat extra work ensur annot multipli relat join multipl bag call yannakaki algorithm intermedi relat aggroghdjoin call aggroyannakaki algorithm appendix well variant yannakaki perform aggreg aggroyannakaki initi perform semijoin yan nakaki line algorithm bottom join phase aggroyannakaki aggreg attribut top node join arm algorithm aggroghdjoin simpl answer ajar queri search order run procedur check equival order search ghds check compat ghd defin compat order attribut pair topt ancestor topt impli output variabl occur note preclud output variabl aggroghdjoin compat ghd answer ajar queri runtim aggroghdjoin patibl ghd infhw choos compat ghd smallest fhw answer queri theorem state runtim theorem ajar queri denot smallest fhw ghd compat order runtim approach inw comparison prior work work olteanu zavodni focus special case ajar queri sin gle aggreg oper queri algorithm iter mana joglekar rohan puttagunta chris ghds find best compat algorithm achiev runtim handl queri type aggreg oper faq paper algorithm call insideout answer general ajar queri run time sideout equal infaqw faqw faq width notion width defin faq author algorithm runtim wors insideout faqw infaqw better output attribut theorem ajar queri faqw infaqw theorem prove appendix notic insideout runtim output sensit term result runtim high output small relat number output attribut demonstr exampl appendix faq high level discuss approach insideout output sensit simpli ghdjoin bespok algorithm achiev output sensit bound discuss appendix discuss present remark simpl procedur solv ajar queri procedur involv brute forc search order ghds unavoid find best order ghd hard decid order equival order enabl algorithm take time polynomi number attribut determin ghd compat order straightforward well best ghd well standard algorithm aggroghdjoin answer queri effici runtim expon smaller previous work simplic algorithm easi implement implement special case singl addit oper engin equival compat test rais technic interest question find suc cinct character order equival ghds compat equival order answer question provid simpl character equival order second question defin valid ghds character structur relat unrestrict ghds character equival order describ procedur determin order equival equival relat defin equival class order class exponenti size find succinct character enumer equival order chen dalmau order equival character special case ajar problem aggreg character base procedur generat equival order improv result provid simpl succinct character equival class aggreg order number oper develop enumer constraint suffici order equival class constraint form occur definit prec ajar queri defin constraint prec prec preced order equival aggreg general hypertre decomposit prec true prec trivial number pair prec note prec defin strict partial order attribut constraint clear antireflex antisymmetr transit denot partial order ajar queri partial order attribut oper pair prec definit exact definit partial order easier proof partial order sound complet constraint theorem sound complet suppos hypergraph aggreg order linear extens describ procedur comput preced relat prec reason complet comput prec assist build prec defin constraint form commut definit dnc ajar queri defin constraint dnc dnc order dnc true dnc prefer work dnc discuss aggreg commut theorem condit theorem dnc fals deriv simpl relationship prec dnc lemma ajar queri prec iff dnc preced develop condit dnc true recal theorem state aggr gation commut oper separ join queri simplest structur violat condit edg attribut differ aggreg oper lemma ajar queri suppos exist edg dnc lemma serv base case extend violat theorem condit singl edg path consid exampl commut condit interact path length exampl consid queri max max attribut separ impli dnc dnc lemma constraint exampl indic extend constraint dnc edg hand consid queri max max note separ impli dnc hold note lemma constraint exampl suggest extend dnc constraint addit edg mana joglekar rohan puttagunta chris key differ exampl relat order suggest extend dnc edg preced prec lemma ajar queri suppos prec dnc prec transit impli lemma ajar queri suppos prec prec dnc transit condit interact condit lemma interest way exampl consid queri max max attribut separ impli dnc dnc dnc dnc transit dnc well deriv constraint lemma lemma dnc dnc dnc note point lemma constraint transit lemma add constraint dnc lemma add constraint dnc complet set con straint turn three simpl lemma suffici con straint equival class order condit complet proof sound complet note current specif prec dnc mutual recurs prec dnc set build round lemma initi valu lemma iter build set appli lemma set reach fix point take iter add addit attribut pair iter pair attribut set runtim comput constraint polynomi number attribut detail process appendix conveni notat modif definit partial order output attribut defin true formal state definit definit ajar queri defin true output attribut prec true sound complet intuit prove sound complet state key lemma proof appendix illustr properti lemma suppos hypergraph aggreg order suppos differ oper path exist attribut path lemma intuit state incompar attribut oper separ common predecessor aggreg general hypertre decomposit lemma hypergraph aggreg order suppos attribut exist path lemma proof theorem straightforward lemma impli attribut order linear extens invers attribut oper pair equal oper attribut separ allow repeat theorem transform lemma impli attribut order linear extens construct counterexampl discuss sound complet character order equival dere result extend work chen dalmau character equival order queri logic oper character simpl con sist partial order linear extens precis equival order faq method identifi equival order sound complet exist equiva lent order faq method identifi equival appendix exampl contrast character guarante cover valid order complet properti creat decomposit guarante preserv node monoton width definit turn tighter guarante runtim expon notion submodular width decompos valid ghds express ajar algorithm direct term ghds term aggreg order goal character ghds compat equival order ghds answer ajar queri call ghd valid compat equival order simpl character valid ghds demonstr reduc problem find minimum width valid ghd multipl subproblem unconstrain ghds decomposit problem three thing speed brute forc search optim valid ghd find proxim optim valid ghds polynomi time ghd approxim algo rithm appli exist mapreduc join algorithm util ghds obtain effici parallel algorithm solv ajar queri appli improv join algorithm reduc runtim expon tion valid decompos ghds easili character valid ghds combin definit compat ghds theorem theorem ajar queri ghd valid pair attribut topt ancestor topt theorem criterion ghds queri plan consid problem find minimum width valid ghd ajar queri call ghd optim minimum width valid ghds reduc mana joglekar rohan puttagunta chris problem find optim valid ghd smaller problem find ordinari optim ghds unlock trove power ghd applic problem ajar queri suppos subset node defin set edg intersect denot aggreg order restrict node addit defin node predecessor partial order final note node remov note node output attribut definit ajar queri ghd decompos exist root subtre output attribut connect compon exact subtre decompos ghd ece start connect idea decompos ghds valid ghds proof sketch appendix full proof theorem decompos ghd valid proof sketch suppos ajar queri topt ancestor topt induct ghds valid decompos ensur output attribut output attribut output attribut topt ancestor topt induct hypothesi valid respect ece inspect partial order creat subgraph conclud desir valid ghd decompos valid ghd transform correspond decompos ghd simpl transform bag decompos ghd subset bag origin ghd fhw decomps ghd fhw origin valid ghd fact general claim notion node monoton function defin definit hypergraph defin function node monoton function node monoton function defin width ghd maxv standard notion width express width suitabl chosen specif ical proposit suppos hypergraph databas instanc notion width treewidth general hypertre width iii fraction hypertre width submodular width exist node monoton function width equal notion width simpl exampl tree width express width relat valid decompos ghds respect width theorem valid ghd exist decompos ghd node monoton function width larger width proof sketch suppos ajar queri transform ghd exist result node monoton definit width transform ghd ensur bag subset bag call width preserv transform ghd satisfi properti width preserv transform aggreg general hypertre decomposit topt exact attribut node subtre root attribut topt form connect subgraph induct valid ghd satisfi properti decompos intuit transform ensur subtre exist desir second tran format ensur exist satisfi requisit properti theorem restrict search smaller space decompos ghds valid ghds optim valid ghd space decompos ghds simpler factor smaller space unconstrain ghds definit characterist hypergraph intuit set hypergraph factor unconstrain ghds goal fold split decompos ghd compon ghds characterist hypergraph arbitrari ghds characterist hypergraph connect creat decompos ghd origin ajar problem definit decompos ghds decompos ghd seri tree definit specifi subtre decompos ghds smaller ajar problem addit simpl ghd hypergraph appli decomposit recurs subtre divid decompos ghd seri unrestrict ghds hypergraph basi definit characterist hypergraph defin hypergraph specifi hypergraph correspond recurs smaller ajar queri appendix definit arbitrari ghds hypergraph defin stitch preserv run intersect properti ghds ensur stitch characterist hypergraph addit edg guarante run intersect properti intuit edg add will intersect adjac subtre decomposit exampl connect compon adjac will add edg correspond hypergraph intersect edg connect node adjac subtre definit ajar problem suppos connect compo nent defin function map ajar queri set hypergraph eci eci coi hypergraph set defin characterist hypergraph note definit characterist hypergraph depend specif ghd instanc state key result reduc problem search optim valid ghd search valid optim ghds characterist hypergraph decompos ghd correspond ghd characterist hypergraph convers combin ghds characterist hypergraph decompos ghd formal theorem ajar queri suppos characterist hypergraph ghds connect form decompos ghd convers decompos ghd partit ghds mana joglekar rohan puttagunta chris characterist hypergraph case width maxi width proof provid appendix straightforward applic definit corollari optim ghd characterist hypergraph ajar queri construct optim valid ghd width optim valid ghd equal maximum optim ghd width characterist hypergraph reduc problem find optim valid ghd smaller problem find optim ghds decomposit faq paper applic decomposit compar faq analogu decomposit faq paper decomposit problem width preserv remov set output attribut decompos rest hypergraph smaller hypergraph construct regular variabl order ghd hypergraph add output attribut bag ghds stitch ghds output addit bag ghds lead increas width compar method stitch ghds chang width result decomposit incur higher runtim cost applic decomposit three subsect exampl consid queri output attribut optim valid ghd queri bag fhw faqw appli decomposit ghd bag fhw decomposit reduc hypergraph output attribut remov bag singl bag fhw general consid queri relat decomposit ghd bag fhw decomposit singl bag fhw equal find optim valid ghds arm corollari simplifi brute forc search algorithm find optim valid ghds theorem ajar queri optim width valid ghd queri time maxh runtim find optim valid ghd exponenti better naiv runtim exampl consid star queri output attribut remov break hypergraph compon characterist hypergraph size find optim valid ghd take time standard algorithm take time exponenti aggreg general hypertre decomposit approxim ghd theorem ghd approxim join queri hypergraph fraction hypertre width find ghd time polynomi width replic result valid ghds theorem ajar queri minimum width valid ghd width find valid ghd time polynomi width faq decomposit appli approxim well decomposit width preserv width final ghd higher width ghds construct hypergraph decomposit decomposit weaker width guarante faqw theorem extra faqw factor output addit guarante strict smaller width optim valid ghd faqw theorem tighter runtim expon marx introduc notion submodular width tighter fhw join queri answer time ino expon algorithm requir expens preprocess take time pre process join perform time insw despit expon algorithm valuabl famili hypergraph unbound fhw bound appli algorithm characterist hypergraph improv runtim marx join famili hypergraph fix paramet tractabl submodular width hypergraph famili bound adapt width applic relat express truth tabl unbound hypergraph famili submodular width unbound corollari analog tractabl result ajar queri theorem answer ajar queri time ino maxh work degre tight bound output size queri bound refer call dbp bound tighter expon agm bound requir linear preprocess author provid algorithm runtim match dbp bound defin dbp width dbpw indbpw maximum dbp bound bag ghd improv algorithm place aggroghdjoin tighter free reduc runtim indbpw infhw formal theorem ajar queri valid ghd answer queri time indbpw equival answer queri time inmaxh dbpw discuss faq width preserv decomposit combin decomposit dbp bound suppos perform decomposit infaqw denot highest dbp bound characterist hyper graph set output attribut dbp width characterist hypergraph output faqw perform output addit dbp width ghds dbp bound output characterist hypergraph equal infaqw appli mana joglekar rohan puttagunta chris dbp result decomposit runtim decomposit incur extra factor expon incur factor increas expon submodular width algorithm mapreduc parallel process gym algorithm ghds effici process join mapreduc set gym ghd structur parallel part join ghd depth width attribut gym perform join mapreduc set log round communic cost ofm inw wherem memori processor mapreduc cluster combin degre base mapreduc algorithm result theorem optim valid ghd depth dbp width dbpw answer ajar queri communic cost equal indbpw log mapreduc round number attribut memori processor ghd depth case algorithm larg number mapreduc round address gym paper log gta algorithm reduc depth ghd log tripl width process join log mapreduc round cost log gta involv attribut ghd bag naiv appli valid ghd ghd invalid exampl appendix decomposit appli log gta ghd characterist hypergraph stitch short ghds decomposit recurs natur maximum recurs depth decomposit depth shorten ghd characterist hypergraph log depth valid ghd stitch log result theorem dbpw dbp width ajar queri answer queri communic cost equal dbpw log mapreduc round number attribut memori processor vari depend queri star queri exampl process log mapreduc round queri singl type aggreg will well hand queri relat attribut output attribut altern max aggreg will will hard parallel olteanu zavodni valid ghds answer ajar queri special case singl type aggreg notion decomposit attempt shorten valid ghd direct decomposit invalid decomposit shorten ghds lead increas width compar faqw width optim valid ghd output addit output attribut width faqw shorten ghds characterist hypergraph width total width will product aggreg primari applic queri multipl aggreg establish bound quantifi conjunct queri qcq problem count variant qcq aggreg general hypertre decomposit introduc type aggreg call product aggreg effici handl qcq queri defin ajar problem product aggreg extend algo rithm handl type ajar queri defin decomposit analog detail version addit motiv exampl proof appendix ajar queri product aggreg product aggreg aggreg oper paper assum absent tupl effect annot account formal defin product aggreg definit rab rab rab pibt adjust definit aggreg order ajar queri allow type aggreg qcq queri express ajar queri max semir assum idempot describ work idempot product appendix algorithm product aggreg aggreg order product aggreg rule determin order equival product aggreg perform join illustr exampl exampl semir max suppos relat consid theajar queri comput join will tupl annot aggreg will produc relat element note impli describ algorithm solv ajar queri product aggreg algorithm line algorithm recal algorithm consist search equival order search ghd compat equival order run aggroghdjoin ghd smallest fhw product aggreg modifi algorithm test equival order definit compat turn test order equival describ modifi algorithm product aggreg denot set product attribut order chang algorithm remov divid compon remov divideh compon defin eci attribut well product attribut hyperedg attribut recurs call equival test check path check path recal defin mana joglekar rohan puttagunta chris oper path consist semir attribut appendix pseudo code modifi algorithm algorithm prove sound complet lemma algorithm return true compat ghds product aggreg chang set equival order set ghds compat order fact product aggreg allow break rule ghds caus incorrect behavior express simpl variant ghds call aggreg general hypertre decomposit aghd inform aghd ghds violat run intersect properti attribut product aggreg aghd formal defin appendix determin compat aghd aghd compat order attribut pair top node ancestor top node preced modifi algorithm detect equival order algorithm search compat aghd aggroghdjoin compat aghd smallest fhw runtim theorem theorem ajar queri involv idempot product aggreg smallest fhw aghd compat order equival runtim algorithm inw decompos aghd appli idea ajar queri product aggreg well defin notion decompos aghd queri product aggreg theorem decompos aghd compat order theorem valid aghd exist decompos node monoton function width larger width defin characterist hypergraph appendix formal definit result theorem ajar queri involv product aggreg suppos characterist hypergraph ghds connect form decompos aghd convers decompos aghd partit ghds characterist hypergraph case width maxi width theorem appli optim ajar queri product aggreg comparison faq runtim insideout queri involv idempot product aggreg infaqw faqw depend order presenc product aggreg algorithm handl product aggreg recov runtim faq formal theorem ajar queri involv idempot product aggreg inw infaqw aggreg general hypertre decomposit proof appendix appli idea faq paper set recov faq runtim qcq appendix algorithm detect equival order sound complet contrast equival test algorithm sound complet width preserv decomposit queri product aggreg allow tighter runtim expon term submodular dbp width theorem effici mapreduc algorithm theorem conclus investig solut structur ajar queri aggreg join queri mul tipl aggreg annot relat start provid simpl algorithm base variant standard ghdjoin algorithm generat queri plan reli simpl test equival aggreg order naiv approach suffici recov surpass runtim state art solut proceed investig interest technic question structur ajar queri develop partial order fulli character equival order develop character correspond valid ghds describ decompos ordinari unrestrict ghds reduct connect trove parallel work ghds finish extend work handl product aggreg acknowledg atri rudra invalu insight feedback develop approach grate fulli acknowledg support defens advanc project agenc darpa xdata program deft program darpa memex program nation scienc foundat nsf career award award ccf earthcub award aci offic naval onr award sloan fellowship moor foundat data driven vestig award gift american famili insur googl lightspe ventur toshiba refer christoph aberg susan kunl olukotun christoph emptyhead relat engin graph process corr serg abiteboul richard hull victor vianu editor foundat databas logic level addison wesley longman publish boston usa edit foto afrati mana joglekar christoph semih salihoglu jeffrey ullman gym multiround join algorithm mapreduc corr sriniva aji robert mceliec general distribut law ieee transac tion theori albert atseria martin grohe d√°niel marx size bound queri plan relat join foc washington usa ieee comput societi nurzhan bakibayev tom√° kocisk√Ω dan olteanu jakub zavodni aggreg order factoris databas pvldb hubi chen v√≠ctor dalmau decompos quantifi conjunct disjunct mula proceed annual ieee symposium logic comput scienc lic dubrovnik croatia june mana joglekar rohan puttagunta chris stephen dolan fun semir function pearl abus linear algebra sigplan septemb gottlob grohe nysret marko scarcello hypertre decomposit structur algorithm applic georg gottlob nicola leon francesco scarcello hypertre decomposit tractabl queri pod todd green grigori karvounaraki val tannen proven semir pod york usa acm martin grohe d√°niel marx constraint solv fraction edg cover acm tran algorithm august mana joglekar christoph matter degre degre optim multiway join icdt appear kalev kask rina dechter javier larrosa avi dechter unifi tree decomposit reason graphic model artif intel mahmoud abo khami hung ngo atri rudra faq question ask frequent corr d√°niel marx approxim fraction hypertre width acm tran algorithm d√°niel marx tractabl hypergraph properti constraint satisfact conjunct queri proceed forti second acm symposium theori comput stoc york usa acm daniel marx tractabl structur constraint satisfact truth tabl theori comput system hung ngo eli porat christoph atri rudra worst case optim join algo rithm extend abstract pod hung ngo christoph atri rudra skew strike develop theori join algorithm sigmod record dan olteanu jakub z√°vodn√Ω size bound factoris represent queri acm tran databas syst adam perelman christoph duncecap compil worst case optim queri plan sigmod christoph dan suciu trichotomi queri probabilist databas vldb neil robertson seymour graph minor iii planar tree width journal binatori theori seri charl sutton andrew mccallum introduct condit random field foundat trend machin learn susan christoph duncecap queri plan general hypertre decom posit sigmod todd veldhuizen triejoin simpl worst case optim join algorithm icdt yannakaki algorithm acycl databas scheme vldb background aggroghdjoin algorithm simpl variant well join algorithm scribe algorithm aggreg general hypertre decomposit algorithm ghdjoin input queri hypergraph ghd relat return annakaki genericjoin describ agm bound join output size develop atseria grohe marx queri hypergraph relat consid linear program minim login feasibl solut fraction edg cover suppos optim object agm bound worst case output size join onf will inagm denot agm bound queri genericjoin gorithm comput join time inagm join queri will subroutin algorithm denot call genericjoin input relat hyperedg hypergraph yannakaki yannakaki algorithm oper acycl queri equival definit acycl provid definit build tree relat natur relat general hypertre decomposit definit hypergraph join tree tree attribut set form connect subtre hypergraph acycl exist join tree classic gyo algorithm produc join tree yannakaki algorithm take join tree input pseudo code theorem algorithm run size input output leverag speed yannakaki cyclic queri ghds intuit ghd group attribut bag function build join tree bag allow bag yannakaki join tree algorithm ghdjoinwhos pseudo code algorithm runtim ghdjoin infhw theorem algorithm run infhw mana joglekar rohan puttagunta chris straightforward modif join algorithm perform aggreg tradit yannakaki ghdjoin algorithm perform join bottom fashion semijoin phase ensur dangl tupl modifi algorithm handl aggreg intuit tradit queri plan push aggreg attribut occur connect subtre ghd push aggreg root connect subtre top node attribut standard modif yannakaki project join queri project attribut top node project perform aggreg provid pseudo code aggroyannakaki simpl variant well yannakaki algorithm algorithm algorithm pseudo code aggroghdjoin variant ghdjoin call aggroyannakaki yannakaki aggroghdjoin extra work ensur pass annot oper aggroghdjoin denot project project tupl replac annot ensur annot count algorithm aggroyannakaki input join tree aggreg order relat bottom order semi join reduct parent nrf top order semi join reduct parent nrp bottom order aggreg topt root parent comput join return root algorithm aggroghdjoin input queri hypergraph ghd relat topt topt return aggroyannakaki aggreg general hypertre decomposit classic analysi yannakaki runtim semi join portion bound bottom join bound aggroyannakaki analysi semi join portion unchang aggreg reduc size output make bound harder achiev bottom join comput intermedi relat attribut subset output attribut mean size bound larg intermedi relat under tradit runtim intuit discov refer requir output attribut appear output attribut preserv runtim theorem suppos ghd output attribut output attribut topt ancestor topt aggroghdjoin run infhw ghd proof bag run infhw prove yannakaki portion run run semijoin portion run origin yannakaki algorithm join phase type join type impli join output subset annot total runtim type join second type attribut output attribut attribut output attribut well top ancestor result join subset output tabl total runtim type join total runtim algorithm note aggroghdjoin run infhw time ghds produc output ghd satisfi addit condit ensur aggreg proper order recal definit ghd compat attribut pair topt ancestor topt impli output variabl occur theorem ghd compat aggroghdjoin correct comput proof aggroyannakaki work expect note semi join reduct chang output quicken process consid bottom join node join tree relat associ node loop semi join portion final relat associ node process node bottom join descend aggreg subtre includ descend attribut aggreg node topt tts leaf node set children node claim ont proof induct tree leaf definit leaf node ontc ontc ttc ont ttc ont mana joglekar rohan puttagunta chris second step induct hypothesi final step simpli pull aggreg order time arbitrarili interleav aggrega tion order ttc simpli interleav match origin ghd compat aggreg preced ttc impli output root node ont desir aggroyannakaki work expect simpli ensur bag pute appropri note ghd ensur relat node tupl lost comput aggroyannakaki bag will pute correct tupl ensur comput correct annot ensur annot appear bag algorithm place annot relat top node attribut product aggreg product aggreg ajar queri notion product partit hypergraph aghd product partit hypergraph correspond notion aghd compat order prove theorem extend theorem case product aggreg product partit partit essenti creat multipl renam copi product attribut assign renam copi relat aghd essenti ghd equal product attribut equal edg denot edg defin modifi order take replac occurr product attribut defin relat attribut chang modifi ajar queri qpp onf lemma suppos copi renam copi renam proof suppos annot valu inr assum annot absent tupl annot rhs lhs will rhs equal lhs idem potenc note idempot lhs term multipli time rhs lemma databas instanc qpp lemma prove repeat applic lemma easili prove theorem suppos aghd compat order ghd hypergraph compat run aggroghdjoin ghd order correct comput qpp theorem lemma equal output aghd compat ghd satisfi condit theorem aggroghdjoin run time infhw aggreg general hypertre decomposit comparison work defin simpl approach solv ajar queri claim theorem runtim guarante inw infaqw note faqw expon optimum faqw equival order consid discuss space order consid subsect approach will recogn equival will search best compat ghd will exist compat aghd equival order fhw faqw exampl compat aghd construct optim compat ghd start summar algorithm pseudo code written notat paper algorithm order aggreg denot total number attribut denot number output attribut notat conveni will denot attribut oper ith oper attribut pair order algorithm insideout input hypergraph aggreg order relat product aggreg onr return onr faq reli worst case optim algorithm comput join impli infaqw runtim guarante faqw defin maximum agm bound comput join defin function map subset attribut agm bound subset optim canon linear program faqw max maxk will build compat aghd round correspond valu insideout describ construct describ start round correspond will forest aghd will root map attribut set round root will map relat attribut set repres node start creat node simpli node map input relat repres set node node will process node will creat parent product aggreg creat node set parent creat node set parent note process transform set root remov mirror transform product aggreg mana joglekar rohan puttagunta chris creat node set parent case well set root match process will forest aghd root map relat conclud construct simpli construct node set parent product aggreg form ghd satisfi run intersect properti product attribut product attribut multipl disconnect part describ product partit form aghd order denot number distinct connect compon creat copi assign copi compon order compon belong assign assign aghd aghd describ trivial compat construct parent topt explicit round ensur topt ancestor topt lemma defin function map set attribut agm bound set optim canon linear program aghd construct describ satisfi fhw max max faqw proof node tree map map input relat relat creat aggreg attribut singl child node case evalu ignor maximum case attribut strict subset attribut impli ignor fraction hypertre width simpli maximum fraction cover equal second equal definit faqw theorem well analogu product aggreg follow simpl corollari exampl runtim insideout wors runtim algorithm fact output sensit exampl number consid ajar queri empti queri join attribut valu suppos relat connect valu pariti relat connect valu opposit pariti relat size constant join output empti ghd bag compat empti order fhw ghd runtim algorithm will insideout will comput intermedi output consist join relat size runtim will faq discuss high level proof chang insideout will allow runtim output sensit general chang involv build ghd output variabl run messag pass algorithm bag exact describ ghdjoin implement chang insideout complet equival aggroghdjoin note faq paper frame chang decis repres output optim algorithm context independ storag optim aggreg general hypertre decomposit defin partial order exact character constraint aggrega tion order satisfi equival order partial order complet result faq match approach faq defin partial order denot faq work consid order linear extens faq will exampl faq unnecessari constraint exampl consid ajar queri maxb character constraint rise valid order faq character constraint faq faq allow valid order note faq constraint preclud origin order abc defin decomposit relat width valid ghd width seri ordinari ghds variabl order faq suit ghds decomposit faq deriv version decomposit difficulti variabl order exemplifi faq switch ghds variabl order proof addit faq decomposit demonstr weaker decomposit incur overhead cost combin order build order preclud result corollari groundwork varieti extens provid exemplifi gap decomposit inspect specif ajar queri exampl consid queri suppos pairwis relat construct complet cross product attribut valu decomposit will result chain ghd abd bcd faq decomposit will result ghd abc acd runtim faq ghdjoin ghd runtim ghd faq decomposit will perform asymptot wors decomposit general consid queri relat aggreg order oper decomposit chain anbd cnbd runtim decomposit decomposit correspond order runtim differ runtim expon caus decomposit decomposit arbitrarili high exampl suppos ajar queri start width valid ghd root mana joglekar rohan puttagunta chris appli log gta shorter ghd root top ancestor top despit output attribut output attribut ghd invalid show appli log gta valid ghd invalid exampl direct appli log gta valid ghd shorter valid ghd character equival order proof formal partial order character interact form commut relat prec dnc mutual recurs initi constraint base case iter updat till reach fix point formal binari oper denot constraint prec iter oper denot dnc iter differ oper behav differ output attribut incorpor output attribut constraint defin augment aggreg order definit aggreg order set output variabl defin sequenc null note defin number attribut queri formal defin binari oper oper attribut oper pair attribut occur order equival oper attribut interchang denot thing definit queri defin relat partial order attribut oper pair suppos true null null true preced final core definit label condit condit repres simplest structur violat condit theorem repres base case condit simpli ensur output attribut preced output attribut condit extend structur singl relat appear relat guarante separ second condit theorem requir condit violat well condit simpli ensur transit interact proper condit aggreg general hypertre decomposit prove lemma state prove sound plete lemma copi lemma suppos hypergraph aggreg order arbitrari attribut differ oper path exist attribut path proof induct length path base case impli exist edg definit depend attribut appear induct suppos assum lemma true path length call assumpt outer induct hypothesi reason will appar path rewritten path length node appear earliest impli exist attribut path defin oper loss general assum consid subpath shorter connect attribut oper appli induct hypothesi exist case attribut satisfi condit second case definit consid subpath denot ith node path claim argu induct base case assum call inner induct hypothesi note preced definit preced remain show defin assum earlier inner induct hypothesi exist edg condit outer induct hypothesi definit case imposs inner induct hypothesi impli condit exist edg condit tell impli lemma copi lemma hypergraph aggreg order suppos attribut exist path proof defin addit defin impli preced proof induct basecas path satisfi condit case mana joglekar rohan puttagunta chris induct hypothesi exist path path satisfi condit induct hypothesi exist path impli revers path satisfi condit induct hypothesi exist path path path impli path satisfi condit theorem copi theorem suppos hypgergraph aggreg order linear extens proof sound induct number invers respect order base case invers ident induct suppos invers assum lemma true order invers invert respect consid order deriv swap invers respect clear linear extens induct hypothesi suppos case consid theorem swap output impli lemma incompar path attribut valid linear extens attribut appear earlier impli separ connect compon piv impli swap output theorem impli complet prove contraposit assum aggreg order linear extens will will construct instanc assum loss general output attribut will provid exampl differ singl annot compris output output attribut augment exampl put output attribut output will compos singl tupl compos annot exampl consid set valid linear extens suppos maximum length prefix ident prefix size linear extens maximum length ident prefix suppos minimum consid linear extens sound proof simpli aggreg general hypertre decomposit suppos minimum linear extens adjac exist fact combin impli lemma exist path attribut path appear exist defin relat tupl tupl will attribut annot second tupl will attribut includ attribut second tupl will annot note attribut outermost aggreg outermost aggreg impli attribut definit exist edg consid instanc schema definit onrf onrf onrf impli decompos valid ghds proof start state prove lemma aggreg order tree decompos ghd lemma hypergraph aggreg order suppos connect compon defin proof definit path attribut contraposit lemma impli note output attribut prove lemma prove lemma show ihc note earlier result set subset set appear aggreg order proof induct consid base case note output attribut condit irrelev edg involv attribut ico preserv order oper element condit appli set attribut ajar queri qhc recal mana joglekar rohan puttagunta chris induct hypothesi suppos jhc edg involv attribut ico preserv order oper element induct hypothesi trivial impli condit appli set attribut theorem copi theorem decompos ghd valid proof suppos ajar queri topt ancestor topt proof induct ghds valid decompos note ensur output attribut output attribut output attribut topt ancestor topt induct hypothesi valid respect ece lemma impli theorem copi theorem valid ghd exist decompos ghd node monoton function width larger width proof sketch provid claim width preserv transform ghd enforc addit properti top uniqu node topt exact attribut subtre connect node subtre root attribut topt form connect subgraph lemma prove transform requir enforc properti width preserv lemma valid ghd width transform top uniqu ensur width proof defin function top node set attribut top topt elimin node top note definit parent impli simpli remov connect children parent violat properti valid ghd width trivial preserv suppos node top attribut top earliest aggreg order parent creat node add parent properti valid ghd hold node subset attribut width preserv note node top repeat process set size lemma valid ghd width top uniqu transform subtre connect preserv top uniqu width proof node defin topt proceed proof bottom induct tree base case consid leav children exact attribut trivial connect subgraph consid subtre root intern node attribut topt children induct hypothesi subtre root children satisfi desir properti note definiton aggreg general hypertre decomposit parent child vci connect remov tci set parent parent children ensur connect subgraph connect vci transform violat properti ghds creat ancestr relationship node transform violat properti valid ghds final width top uniqu properti preserv trivial establish transform valid ghd addit satisfi top uniqu subtre connect preserv width valid ghd sat isfi addit properti decompos combin lemma will complet proof theorem dive proof prove help lemma lemma ajar queri ident oper exist oper proof fix ident oper rule requir oper repeat appli rule find attribut oper rule appli attribut differ oper lemma ajar queri valid ghd suppos output attribut topt top node topt ancestor topt valid ghd proof lemma impli exist path path repres path claim topt ancestor topt proof induct base case definit path appear hyperedg impli appear bag topt topt equal ancestor bag topt equal ancestor topt topt ancestor topt note appear edg logic topt topt equal ancestor node induct hypothesi topt ancestor topt impli topt ancestor topt equal ancestor topt topt ancestor topt lemma valid ghd top uniqu subtre connect decom posabl proof prove stronger statement defin properti top semiuniqu root node topt node exact attribut root node topt exact attribut output attribut output attribut note top uniqu properti direct impli top semiuniqu properti will valid top semiuniqu subtre connect ghd ajar queri decompos proof induct ghd decompos suppos consid set node topt node output attribut topt output attribut top node output top node top semiuniqu properti guarante set node form root subtre mana joglekar rohan puttagunta chris consid subtre call attribut topt node topt output attribut connect subtre guarante connect connect compon connect compon correspond subtre subtre topt attribut appear note edg exist node impli edg exist node conclud ghd hypergraph defin complet proof decompos ghd ajar queri induct hypothesi valid top semiuniqu subtre connect decompos note top semiuniqu subtre connect top semiuniqu subtre connect establish ghd finish proof toptc ancestor toptc eas notat rest proof will repres contraposit toptc ancestor toptc consid case impli toptc root note toptc topt lemma case fact valid ensur topt ancestor topt case assum contradict exist topt ancestor topt claim loss general suppos oper oper exist oper topt ancestor topt definit exist exist path exclus connect attribut path preced contraposit lemma impli oper impli oper lemma impli exist oper topt ancestor topt result impli result impli topt ancestor topt suppos oper loss general output attribut impli well fact combin lemma impli path valid top semiuniqu topt subtre root topt impli disconnect subtre root topt contradict subtre connect properti theorem copi theorem ajar queri suppos characterist hypergraph ghds connect form decompos ghd convers decompos ghd partit ghds characterist hypergraph case width maxi width proof proof induct base case case characterist hypergraph input hypergraph theorem trivial true suppos decompos ghd decompos subtre decompos ghd eci eci coi ith connect compon defin vci eci preserv aggreg general hypertre decomposit run intersect properti ghd root parent attribut vci impli decompos ghds coi hypergraph defin definit characterist hypergraph induct hypothesi broken ghds characterist hypergraph addit node edg impli ghd characterist hypergraph direct induct hypothesi ghds stitch form decompos ghd ajar queri coi note definit node attribut vci denot appropri node root violat condit amount root top ghd decomposit root chang ancestor relationship topt node output attribut root appropri simpli set parent generat decompos ghd ajar queri product aggreg detail version primari applic queri multipl aggreg establish bound quantifi conjunct queri qcq problem qcq queri consist arbitrari con junctiv queri preced seri existenti univers quantifi solut report satisfi assign quantifi variabl qcq queri sim ilar qcq queri report satisfi assign report number satisfi assign introduc type aggreg call product aggreg effi cientli handl qcq queri defin ajar problem product aggreg extend algorithm handl type ajar queri ajar queri product aggreg order recov qcq ajar queri product aggreg aggreg oper paper assum absent tupl effect annot maintain product aggreg defin product aggreg return tupl absent redefin includ project tupl output exist formal definit rab rab rab pibt note adjust definit impli annot fulli equival absenc adjust definit aggreg order ajar queri includ type aggreg construct valid ghds aggreg aggroghdjoin solv exampl consid semir max note domain max equival disjunct logic existenti quantifi equival conjunct logic univers quantifi space ajar queri aggreg recov qcq queri aggreg call product aggreg attribut aggreg product aggreg call product attribut aggreg product mana joglekar rohan puttagunta chris aggreg call semir aggreg attribut output attribut product attribut call semir attribut idempot assumpt product aggreg defin rais issu semir aggreg satisfi distribut properti integr abil push aggreg commut aggreg theorem general product aggreg distribut requir product aggreg idempot element product aggreg will distribut qcq domain restrict product aggreg idempot will studi idempot product aggreg will general idempot aggreg appendix solv ajar queri product aggreg aggreg order product aggreg rule determin order equival discuss optim type aggreg product aggreg fundament ordinari aggreg aggreg join exampl exampl semir max suppos relat consid theajar queri comput join will tupl annot aggreg will produc relat element note impli describ algorithm solv ajar queri product aggreg algorithm line algorithm recal algorithm consist search equival order search ghd compat equival order run aggroghdjoin ghd smallest fhw product aggreg modifi algorithm test equival order definit compat turn test order equival algorithm pseudo code equival test order product aggreg lemma analog lemma lemma copi lemma algorithm return true proof sound suppos algorithm return true will induct length base case return true case empti order trivial equival suppos case compon multipl compon consid multipl compon case compon defin algorithm element intersect defin relat output attribut product aggreg product aggreg appear express ident onf monf onf onf aggreg general hypertre decomposit algorithm testequival input queri hypergraph order output true fals return true remov divid connect compon return itestequival choos path return fals remov remov return testequival rhs product aggreg happen multipl compon exact relat note ident hold well ident impli note aggreg oper order equival note return true recurs call return true impli induct hypothesi compon choos defin remov note defin remov return true recurs call return true equival hold induct hypothesi ensur commut ensur move move oper trivial commut oper path attribut node set attribut defin set node connect hypergraph restrict set edg attribut note attribut appear edg attribut appear express ident onf onf onf onf onf onf note definit push aggreg mana joglekar rohan puttagunta chris previous express impli commut adjac complet sound proof complet prove algorithm return fals exist databas instanc algorithm return fals compon exist path consist semir attribut defin instanc output order product oper choos product oper choos defin attribut domain set attribut path consist semir attribut set set relat attribut tupl tupl attribut attribut valu attribut cours relat attribut annot tupl annot tupl annot clear aggreg attribut domain size aggreg product aggreg chose uniqu attribut tupl map aggreg product aggreg unequ chose product aggreg vice versa product aggreg product aggreg correspond output product annot final aggreg add hand valu correspond singl output tupl annot multipli algorithm complet compat ghds product aggreg chang set equival order set ghds compat order fact product aggreg allow break rule ghds caus incorrect behavior product attribut appear complet dispar part ghd defin compat ghds defin notion product partit definit hypergraph aggreg order set attribut product aggreg product partit set partit relat will duplic attribut partit partit edg instanc definit suppos hypergraph aggreg order product partit product partit hypergraph pair ith partit aggreg general hypertre decomposit definit hypergraph aggreg order aggreg general hypertre decomposit aghd tripl ghd product partit hypergraph attribut ajar queri topt aghd defin set topt topt topt defin notion compat aghd order definit aghd ajar queri compat order attribut pair exist topt topt ancestor occur order solv ajar queri product aggreg proof discuss remaind will treat set topt singl element conveni implicit place existenti quantifi statement exampl topt ancestor topt topt topt ancestor omit partit refer aghd partit uniqu defin will assum defin appropri modifi algorithm detect equival order algorithm search compat aghd aggroghdjoin compat aghd smallest fhw runtim theorem note aghd origin hypergraph ghd product partit hypergraph theorem copi theorem ajar queri involv idempot product aggreg smallest fhw aghd compat order equival runtim algorithm inw theorem prove appendix decompos aghd appli idea ajar queri product aggreg well will assum loss general relat aggreg product aggreg suppos assumpt violat exist relat aggreg product aggreg perform aggreg transform relat remov product aggreg assumpt ensur relat appear subtre decomposit defin defin term ajar queri suppos subset node defin set edg intersect addit defin element remov will connect compon connect compon addit order defin base condit product aggreg product aggreg set attribut commut order precis second case attribut appear oper connect node definit ajar queri aghd decompos exist root subtre output attribut mana joglekar rohan puttagunta chris connect compon exact subtre decompos aghd ece theorem analog theorem theorem copi theorem decompos aghd compat order proof suppos ajar queri decompos aghd queri stronger statement decompos aghd compat order order product attribut chang proof induct ghds decompos ghds compat suppos definit subtre connect compon subtre decompos ghd queri ece will denot ece denot will repres induct hypothesi subtre compat order note trivial impli will construct compat alphao requir element defin order element compat toptc ancestor toptc preced claim order satisfi three condit condit compat trivial true construct order output attribut start compat order guarante compat second condit definit induct hypothesi claim impli definit claim show oper uniform impli element reorder freeli consid element connect compon exist path node node will violat path condit commut ensur third condit induct hypothesi simpli case consid definit case product aggreg second case order product aggreg case trivial combin construct desir order desir construct repeat step algorithm empti remov product output prefix append interleav arbitrarili remov earliest remain product aggreg start appropri append note procedur ensur impli sound algorithm note procedur preserv order product aggreg final aghd compat construct ensur top node output attribut top node output attribut top node output attribut subtre fact ensur top node order compat manner aggreg general hypertre decomposit theorem copi theorem valid aghd exist decompos node monoton function width larger width proof modifi definit subtre connect appendix subtre connect node subtre root consid set attribut topt requir attribut exist path set transform describ lemma adjust definit note transform ensur node topt product aggreg child note describ transform chang partit function aghd chang compat order suppos ajar problem valid exist order compat alpha width preserv transform appendix preserv compat order appli top uniqu subtre connect aghd compat width larger claim aghd decompos appendix prove valid top semiuniqu subtre connect ghd decompos proof induct ghd decompos suppos consid set node topt node output attribut topt compat output attribut top node output attribut top node top semiuniqu properti guarante set node form root subtre consid subtre call attribut topt node topt output attribut connect subtre guarante connect defin earlier connect compon correspond subtre subtre topt attribut appear note edg exist node impli edg exist node conclud ghd hypergraph defin complet proof decompos ghd ajar queri induct hypothesi valid top semiuniqu subtre connect decompos note top semiuniqu subtre connect top semiuniqu subtre connect establish ghd finish proof exista order compat compat set impli left hand hand side simpli order beta impli simpli output attribut remov compat attribut toptc ancestor toptc output attribut preced contraposit output attribut preced toptc ancestor toptc coupl case consid impli toptc mana joglekar rohan puttagunta chris root note attribut toptc topt equival interchang preced impli preced fact compat impli topt ancestor topt final case consid case case consid base definit product aggreg element impli preced guarante topt ancestor topt case bit involv assum contradict exista topt ancestor topt claim loss general suppos oper oper exist oper topt ancestor topt fact impli attribut oper exist path compos attribut appear claim topt ancestor topt impli topt ancestor topt suppos path will topt ancestor topt show topt ancestor proof induct share edg impli appear tree node definit topt topt ancestor top semiuniqu topt topt compat topt ancestor topt topt ancestor topt share edg impli appear tree node topt topt ancestor note induct hypothesi topt ancestor topt impli ancestor logic impli topt ancestor topt topt ancestor topt suppos loss general oper topt ancestor topt compat order fact impli path includ attribut output attribut subtre root topt impli disconnect subtre root topt contradict subtre connect properti definit ajar problem suppos connect compo nent defin function map ajar queri set hypergraph hypergraph set defin characterist hypergraph theorem copi theorem ajar queri involv product aggreg suppos characterist hypergraph aghd connect form decompos aghd convers decom posabl aghd partit aghd characterist hypergraph case width maxi width proof proof exact proof theorem provid appendix appli optim ajar queri product aggreg aggreg general hypertre decomposit comparison faq runtim insideout queri involv idempot product aggreg infaqw faqw depend order presenc product aggreg algorithm handl product aggreg recov runtim faq formal theorem ajar queri involv idempot product aggreg inw infaqw proof appendix appli idea faq paper set recov faq runtim qcq appendix algorithm detect order involv product aggreg equival algorithm sound complet contrast equival test algorithm sound complet width preserv decomposit queri product aggreg allow appli optim tighter runtim term submodular dbp width theorem effici mapreduc algorithm theorem faq wors runtim expon case recov qcq discuss idempot product aggreg help ajar general qcq variant call qcq solut expect output number solut qcq solut fair straightforward extens qcq ajar solv qcq output relat list satisfi assign annot count number tupl simpli prefix qcq queri aggreg oper issu aris aggreg occur domain negat integ max semi ring product aggr gation longer idempot domain discuss handl idempot aggreg appendix complex runtim requir deal idempot aggreg unnecessari case multipl idempot larger domain guarante idempot product aggreg occur annot leav domain aggreg occur product aggreg handl extra structur introduc concept restrict domain ajar queri recov qcq translat approach faq minim applic restrict domain concept ajar queri definit domain oper set defin restrict subset domain oper set exampl context qcq max restrict max note ensur oper close restrict domain semir properti will hold restrict domain defin aggreg order ing incorpor restrict will defin divid unrestrict restrict portion order definit attribut set domain oper set restrict restrict compat aggreg order aggreg order mana joglekar rohan puttagunta chris singl oper appear divis will treat oper issu context qcq defin ajar queri restrict compat order instanc queri relat definit treat product aggreg idempot allow work recov qcq set essenti translat languag notat exact construct describ previous appendix recov runtim qcq well note extend idea restrict domain reli ghds singl element aggreg order domain valid ghd ensur topt ancestor topt semir domain correspond superset semir domain correspond idempot product aggreg aggroyannakaki algorithm implicit assum product aggreg aris consist idempot oper definit set oper idempot element reason assumpt problem discov product aggr gation tend idempot product key differ idempot idempot oper distribut properti idempot note idempot case requir complet support idempot oper rais annot relat power idempot aggreg attribut rais annot relat node tree power aggreg attribut extens comput transit closur standard extens basic relat algebra transit closur kleen star oper explor framework solv ajar queri appli comput transit closur defin oper languag ajar relat attribut consid queri ident copi attribut name note output attribut relat suppos exist ident defin transit closur relat denot classic oper natur applic context graph relat list direct edg meaning annot comput equival comput connect compon graph add annot semir min edg annot weight comput equival comput pair shortest path note guarante exist long graph negat weight cycl relat edg weight will discuss comput context graph appli pair shortest path problem number edg number node graph will deriv complex comput pair shortest path term aggreg general hypertre decomposit naiv algorithm find comput find consecut ident approach requir answer log ajar queri context pair shortest path number queri answer log start analyz comput requir answer queri form defin ghd recurs base case singl bag three attribut root ghd will attribut will children left will ghd correspond will ident ghd attribut attribut note bag construct ghd attribut appear relat addit note depth ghd simpli naiv appli agm bound deriv fraction hypertre width width attribut virtual creat relat size fraction hypertre width altern dbp width deriv bound introduc relat appli gym answer mapreduc round communic cost answer log queri log queri round mapreduc algorithm total communic cost pair shortest path poli log factor standard algorithm problem addit allow log round mapreduc algorithm reduc total communic cost chain ghd queri ghd will chain bag ith bag chain consist construct ensur three attribut bag appear relat reduc width note deriv mapreduc bound generic algorithm special problem deriv serial algorithm problem bound requir small optim construct origin chain ghd properti subtre root level complet ident aggroghdjoin visit bag simpli visit bag level assign result bag level optim algorithm comput pair shortest path poli log factor special graph algorithm 