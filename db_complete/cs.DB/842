emptyhead relat engin graph process christoph aberg stanford univers caberg susan stanford univers sctu kunl olukotun stanford univers kunl christoph stanford univers chrismr abstract type high perform graph process engin low high level engin low level engin loi powergraph snap provid optim data structur comput model requir user write low level imper code ensur effici burden user high level engin user write queri lan guag datalog socialit sql grail high level engin easier order magnitud slower low level graph engin emptyhead high level engin support rich datalog queri languag achiev perform compar low level engin core design class join algorithm satisfi strong theoret guarante achiev perform parabl special graph process engin achiev high perform emptyhead introduc join engin architectur includ novel queri optim data layout leverag singl instruct multipl data simd parallel architectur empti head outperform high level approach three order magnitud graph pattern queri pagerank singl sourc shortest path sssp order magnitud faster low level baselin val idat emptyhead compet best breed low level engin galoi achiev compar perform pagerank wors perform sssp categori subject descriptor system databas manag sys tem engin keyword worst case optim join general hypertre decomposi tion ghd graph process singl instruct multipl data simd permiss digit hard copi work person classroom grant fee provid copi distribut profit commerci advantag copi bear notic full cita tion copyright compon work own acm honor abstract credit permit copi publish post server redistribut list requir prior specif permiss fee request permiss permiss sigmod june juli san francisco usa acm isbn doi http introduct massiv growth volum graph data social biolog network creat effi cient graph process engin result flurri activ design special graph alyt engin special engin offer program model low level requir user write code imper high level incur larg perform gap relat low level proach work explor meet perform low level engin support high level relat sql program interfac low level graph engin outperform tradit relat data process engin common benchmark asymptot faster algorithm optim data layout provid larg constant factor runtim provement describ point detail low level graph engin provid itera tor domain specif primit user write asymptot faster algorithm tradit databas high level approach pro vide burden user write queri proper requir system specif timiz optim algorithm runtim achiev user low level engin low level graph engin optim data layout effici manag spars relationship common graph data exampl optim spars matrix layout repres edgelist rela tion high level graph engin spars lay out tail nest tabl cope sparsiti extend relat interfac match guaran tee challeng argu tradit engin modifi straightforward way accom modat graph workload order magnitud formanc gap remain approach low level engin theoret tradit join engin face lose battl pairwis join engin prov abli suboptim common graph queri exampl low level special engin execut triangl list queri common graph workload time number edg graph pairwis relat algebra plan take asymptot wors special engin factor asymptot suboptim input generat code set repr execut enginequeri compil skew layout optim data output queri data figur emptyhead engin work three phase queri compil translat high level datalog queri logic queri plan repres ghd hypertre singl node replac tradit role relat algebra code generat execut engin translat ghd seri set intersect loop execut engin perform automat algorithm layout decis base skew data inherit high level graph engin general compil queri obtain correct asymptot bound multi join algorithm discov correct asymptot bound graph pattern join multiway join algorithm close gap logicblox multiway join algorithm demonstr support rich set applic current engin order magnitud slower special gine graph benchmark leav open question multiway join destin slower special approach argu engin base multiway join algo rithm close gap requir novel architectur figur form main contribut archi tectur includ novel queri compil base general hypertre decomposit ghds execut engin design exploit low level layout increas singl instruct multipl data simd paral lelism argu techniqu demonstr multiway join engin compet low level graph gine prototyp faster test engin graph pattern queri case order magnitud competit common graph benchmark design emptyhead tight theoret guaran tee data layout optim simd parallel ghds queri plan classic approach queri plan relat algebra facilit optimiza tion earli aggreg push select push project emptyhead framework support multiway pair wise join accomplish base initi proto type develop group general hyper tree decomposit ghds logic queri plan emptyhead ghds allow appli classi cal optim multiway join ghds addi tional bookkeep allow bound size intermedi optim worst case bound allow provid asymptot stronger runtim guarante previous worst case optim join algorithm ghds includ logicblox bound depend data queri dif describ public prototyp optim distinct ghds mod ific relat perform improv simi lar remain order magnitud slower emptyhead ficult expect user write algorithm low level framework contribut design novel queri optim code generat base ghds achiev high level queri languag exploit simd battl skew optim lation databas simd hardwar trend increas hot topic simd parallel doubl consist processor generat inspir exploit link simd parallel worst case optim join time emptyhead initi proto type reveal queri execut unoptim set intersect account runtim generic worst case optim join algorithm critic optim set intersect sociat data layout well suit simd parallel challeng task graph data high skew caus runtim characterist set intersect high vari explor sophist sophist layout algorithm opportunist increas amount simd parallel set intersect oper contribut tomat optim told increas perform three order magnitud select mul tipl data layout set intersect algorithm skew increas amount simd parallel choos evalu emptyhead graph pattern match queri pattern queri natur classic express join queri evalu emp tyhead common graph workload includ pager ank singl sourc shortest path sssp emptyhead consist outperform standard base line pagerank slower high tune implement galoi sssp high level languag queri express line line code galoi refer hand code implement perform galoi line contribut summari paper introduc emp tyhead engin demonstr novel architec ture enabl multi join engin compet special low level graph process engin demon strate emptyhead outperform special engin intel ivi bridg architectur paper simd regist width bit gen erat intel skylak architectur bit regist larger number regist graph pattern queri remain competit workload valid claim provid compar ison standard graph benchmark queri special ize engin design process effici summari contribut outlin fol low describ worst case optim join process ing engin ghds logic queri plan describ ghds enabl provid tighter oret guarante previous worst case optim join engin valid optim ghds enabl provid three order magnitud perform advantag pre vious worst case optim queri plan describ architectur worst case timal execut engin optim skew sev eral level granular data seri automat optim select intersect gorithm set layout base data characterist runtim demonstr tomat optim result three order magnitud perform improv common graph pattern queri valid general purpos engin pete special engin standard benchmark graph domain demonstr cyclic graph pattern queri approach outper form graph engin logicblox three order magnitud demonstr pagerank singl sourc shortest path approach remain competit high tune galoi engin preliminari review worst case optim join algorithm trie data structur queri languag core emptyhead design worst case optim join algo rithm trie data structur queri languag present serv build block remaind paper worst case optim join algorithm review worst case optim join algorithm emptyhead infor malli refer reader ngo complet survey main idea place tight bound maximum number tupl return queri develop algorithm runtim guaran tee match worst case bound moment consid join queri project aggreg return richer queri hypergraph pairh consist nonempti set vertic set subset hyperedg natur join queri graph pattern queri express hypergraph direct correspond queri hypergraph vertex attribut queri hyperedg relat will freeli queri hypergraph repres result atseria grohe marx agm tight bound worst case size join queri notion call fraction cover pergraph vector index algorithm generic worst case optim join algorithm input hypergraph generic join return ere return lue agre generic join return edg compon edg feasibl cover simpli feasibl feasibl cover call fraction hypergraph cover literatur agm feasibl form upper bound queri result size queri denot agm smallest hand side exampl simplic consid triangl queri feasibl cover equa tion tupl relat produc set output tupl tighter bound fraction cover equat yield upper bound remark bound tight consid complet graph vertex graph queri produc ples optim solut tight constant factor algorithm run time match worst case size bound nprr algorithm portant properti set intersect nprr algo rithm call min properti run time intersect algorithm upper bound length smaller input set min properti hold worst case optim run time join queri guarante fact join queri execut time upper bound agm simplifi high level descript algorithm present algorithm pairwis join plan slower asymptot factor optim guarante improv worst case data complex queri input data emptyhead store relat input output multi level data structur common col umn store graph engin find best bound agm polynomi time log solv linear program queri syntax triangl triangl cliqu lollipop lollipop barbel barbel count triangl counttriangl count pagerank edg count pagerank edg pagerank edg pagerank invdeg sum sssp sssp edg start sssp edg sssp min tabl exampl queri emptyhead trie annot set valu trie tional associ data valu map aggreg call associ valu annot exampl level trie annot float repres spars matrix graph edg properti trie data structur work well wide varieti graph workload dictionari encod emptyhead current support set bit valu standard popular databas techniqu dictionari encod ing build emptyhead trie input tabl arbi trari type dictionari encod map origin data valu key type case bit unsign integ order dictionari assign densiti set trie dramat impact perform queri find node order power cou pled prune half edg undirect graph creat perform differ symmetr pattern queri triangl queri optim brittl symmetr prop erti break simpl select general queri find node order typic perform impact explor node order appendix column order dictionari encod bit relat group set distinct val base parent attribut column free select level correspond attribut column input relat graph engin simpli store order edg relat gen eral choos order attribut trie base global attribut order analog select ing singl relat trie construct process produc set data valu extrem dens extrem spars optim layout set base data characterist focus complet tran format process standard relat tabl trie represent emptyhead detail figur queri languag queri languag inspir datalog support conjunct queri aggreg simpl recurs logicblox socialit scribe core syntax queri suffici manag managerid employeeid employeer map key dictionari encod trie representationorigin relat figur emptyhead transform ble trie represent attribut order man agerid employerid employerid attribut annot employeer express standard benchmark ble exampl queri paper horizont conjunct queri express join project select standard languag standard extens aggrega tion limit form recurs overview extens provid exampl appendix aggreg green tupl notat emptyhead annot support aggreg semir general natur number equip notion addit multiplica tion enabl emptyhead support classic aggr gation sum min count sophisti cate oper matrix multipl annot semicolon head rule specifi pair will asso ciat integ alia group sql addit user express aggreg oper bodi rule user initi express tupl val constant common aggreg default valu direct tabl typic triangl count queri recurs emptyhead support simplifi form cursion kleen star transit closur intension extension relat write hypergraph node node logicblox ghd node node emptyhead ghd figur barbel queri hypergraph ghds queri node ghd captur relat join attribut retain project kleen star rule rule iter appli current instantia tion generat tupl perform iter relat chang fixpoint semant user defin converg crite rion satisfi number iter exampl captur familiar pagerank singl sourc shortest path second horizont tabl queri compil overview queri compil emp tyhead worst case optim queri piler enabl earli aggreg ghds logic queri plan discuss ghds theoret ical advantag describ develop simpl optim select ghd queri plan nalli emptyhead translat ghd seri loop aggreg set intersect generic worst case optim join algorithm contri bution design novel queri compil pro vide tighter runtim guarante exist approach queri plan ghds classic databas emptyhead ana log relat algebra repres logic queri plan contrast tradit relat algebra emptyhead multiway join oper natur approach simpli extend relat algebra multiway join gorithm advoc replac relat algebra ghds allow trivial estim cardin intermedi enabl opti mizat earli aggreg emptyhead asymptot faster exist worst case optim engin describ motiv ghds formal describ advantag motiv ghd tree abstract syntax tree relat algebra express node repres join project oper edg indic data depend node ghd captur attribut retain project relat join consid queri plan valid ghds select sum runtim lowest queri valid ghds captur queri find lowest cost ghd goal optim formal definit illustr ghds advantag exampl exampl figur hypergraph bar bell queri introduc tabl queri find pair triangl connect path length size output data definit check barbel queri feasibl cover cost run time fact bound worst case optim instanc return tupl size output smaller multipl ghds barbel queri sim plest ghd queri fact queri ghd singl node relat singl node ghd barbel queri figur view current queri plan singl node ghd singl node ghd repres queri plan generic worst case optim join gorithm ghd optim barbel queri worst case singl node ghd consid altern ghd figur ghd correspond altern strategi plan list triangl independ generic worst case optim algorithm vertic triangl set take time output triangl appropri posit approach time essenti form earli aggreg approach faster smaller ampl aggreg queri singl scalar differ runtim ghds quadrat size databas describ execut queri plan type opti mizat current logicblox engin formal descript describ ghds advantag formal definit hypergraph general hypertre decomposit ghd tripl tree function associ set vertic node function associ set hyperedg vertex properti hold node set connect ghd thought label hyper tree illustr figur node tree label describ attribut return node exact captur project tradit relat algebra label captur set relat multiway join node properti edg map node second properti famous run intersect properti attribut form connect subtre third properti redund ghd violat condit consid infinit width describ ghds defin trivial cardin timat base size relat node defin queri form join relat fraction width ghd agm upper bound number tupl return fraction hypertre width fhw hyper graph minimum width ghds ghd width simpl algorithm time worst case optim gorithm node ghd join take time produc tupl left acycl queri output tree perform yannakaki classic algo rithm acycl queri enabl comput output linear time input size output size choos logic queri plan describ emptyhead choos ghds explain leverag previous work enabl aggreg ghds describ ghds select global attribut order emptyhead appendix provid detail classic databas optim push select captur ghds ghd optim emptyhead queri compil lect optim ghd ensur tighter theoret time guarante key emptyhead optim lect ghd smallest width ensur optim ghd tradit databas push project minim output size emptyhead min imiz output size find ghd smallest width contrast push project find minimum width ghd hard number relat attribut number relat attribut typic small three triangl count simpli brute forc search ghds width aggreg ghds previous work investig aggreg hypertre decomposit empti head adopt previous work straightforward oper descript trie return set match tupl append element set tupl set iter element set return intersect set tabl execut engin oper add singl attribut semir annota tion green emptyhead simpli nipul project general tion aggreg annot enabl emptyhead support tradit notion queri aggreg well wide rang workload tradit data process messag pass graphic model global attribut order ghd select emp tyhead select global attribut order global attribut order determin order empti head code generat generic worst case optim gorithm algorithm structur select global attribut order ing analog select join order tradit pairwis relat engin attribut order depend queri purpos paper assum trie order fore free select attribut order graph attribut memori graph engin maintain matrix transpos compress spars row format consid select tribut order base ghd result plore simpl heurist base structur properti ghd assign attribut order queri paper emptyhead simpli perform pre order travers ghd attribut visit ghd node queue code generat code generat convert select ghd queri optim code oper ator tabl choos implement code generat emptyhead effici tech niqu translat high level queri plan code optim modern hardwar code generat api describ storag engin oper serv basic high level api generat code trie data structur offer standard simpl api travers set intersect suffici express worst case optim join algorithm detail algorithm key oper trie return set valu match tupl predic tabl erat typic perform travers trie emptyhead optim iter interfac set valu retriev trie intersect set iter oper tabl ghd translat goal code generat translat ghd oper tabl ghd node associ ate trie describ attribut order previous worst case optim join engin phase algorithm node node node generic worst case optim algorithm algorithm pose triangl queri exampl consid triangl queri hyper graph call loop bodi generat loop bodi generic join turn call generat pixr pixt piyr piy piz pizt node recal yannakaki semin algorithm perform bottom pass revers level order travers algorithm pute pass parent node node pass relat project share attribut result construct walk tree top collect result recurs emptyhead support naiv semi naiv evalu handl recurs naiv recurs optim produc infinit linear chain ghd output ghd node serv input parent ghd node naiv recur sion pagerank tabl boil simpl unrol join algorithm naiv recurs ceptabl solut applic sssp work continu elimin detect emptyhead semina recurs check aggreg monoton increas decreas min max oper semina recurs sssp exampl barbel queri figur algorithm node project pass node bottom pass execut algorithm node triangl children algorithm execut simpli check pair children perform top pass match pair append execut engin optim emptyhead execut engin run code generat queri compil goal emptyhead execut engin fulli util simd parallel extract simd parallel challeng graph data skew distinct way densiti data valu constant part relat dens spars call densiti skew measur densiti skew coeffi cient skew defin mode standard deviat figur exampl bitset layout block sequenc offset block offset store start offset valu bitvector novel aspect emptyhead automat cope densiti skew optim select data layout implement test set layout propos litera ture simpl uint bitset layout yield highest perform experi appendix focus select bit unsign integ uint layout spars data bitset layout dens data dens data bitset layout trivial advantag simd parallel spars data bitset layout quadrat blowup memori usag uint set extract simd parallel challeng make layout choic challeng optim choic depend characterist data densiti characterist queri describ layout intersect algorithm section serv background tradeoff studi perform explor proper granu lariti layout decis final automat optim close achiev lower bound optim studi serv basi automat layout optim insid emptyhead storag engin layout describ bitset layout emp tyhead omit descript uint layout array bit unsign integ detail layout support associ data valu bitset bitset layout store set pair offset bitvector figur offset smallest bitvector layout compromis spars dens layout refer number bit bitvector block size emp tyhead support block size power default pack offset contigu allow regard offset uint layout turn allow emptyhead algorithm intersect offset uint layout associ valu set store asso ciat valu pointer level trie annot arbitrari type emptyhead asso ciat valu set under data layout base type under set bit set layout store associ valu dens vector associ valu access base data set uint layout store associ ate valu spars vector associ valu access base set intersect overview intersect algo rithm emptyhead layout serv width avx regist densiti uint bitset figur intersect time uint bitset layout densiti spars region cardin uint bitset composit type figur intersect time layout set size dens region background tradeoff studi remind reader min properti present tion hold set intersect worst case optim runtim guarante emptyhead uint uint uint layout implement test state art simd set intersect appendix uint intersect size set intersect drasti calli type skew call cardin skew call gallop algorithm allow time proport size smaller set cope cardin skew set size gallop algorithm addi tional overhead emptyhead simpl hybrid algorithm select simd gallop ing algorithm ratio cardin greater simd algorithm bitset bitset bitset conceptu layer structur offset block offset store uint set offset determin start correspond block comput intersect find mon block bitset intersect offset uint intersect simd instruct intersect match block best case bit regist singl hardwar instruct comput intersect valu uint bitset comput intersect uint bitset intersect uint valu offset bitset check bitset block match uint bitset block size power emptyhead accomplish mask lower bit uint comparison check result fals posit match uint bitset block check correspond bitset block uint probe block store result uint intersect set dens sparser set notic algorithm satisfi min properti constant determin block size estim data characterist output cardin priori hard problem cost reinspect data oper dataset node dir edg undir edg densiti skew descript googl user network higg tweet higg boson livejourn user network orkut user network patent citat network twitter follow network tabl graph dataset present experi tradeoff explor three level granular decid uint bitset layout trie data structur relat level set level block level relat level set layout decis relat level forc data relat store layout address densiti skew sim plest layout memori store set trie uint layout difficult fulli exploit simd parallel layout element fit singl simd regist contrast bitvector store element singl simd regist bitvector ineffici spars data result quadrat blowup memori usag expect sign integ array well suit spars set bitvector dens set figur illustr trend sparsiti real data uint best perform relat level set level real data larg amount den siti skew uint bitset layout set level simpli decid set level entir set repres uint bitset layout uint bitset tersect provid perform increas best homogen uint intersect increas homogen bitset intersect tion impact mix layout set level real data increas queri perform order magnitud block level select layout set level coars intern skew exampl set level layout decis coars grain optim exploit set larg spars region dens region ideal treat dens region separ spars deal skew finer granular propos composit set layout domain seri fix size block repres spars block uint layout dens block bitset layout figur synthet data composit layout outperform uint bitset layout intel ivi bridg architectur sse instruct integ comparison mechan forc restrict bit regist width dataset relat level set level block level googl higg livejourn orkut patent tabl relat time level optim triangl count compar oracl layout optim synthet experi clear winner granular layout decis depend data characterist queri determin system layout decis relat set block level real data compar approach time lower bound oracl optim run real graph dataset tabl choos layout set level provid best perform tabl oracl comparison oracl optim compar lower bound freeli select layout set oper allow choos layout intersect combin assum fect knowledg cost intersect impl ment oracl optim brute forc run possi ble layout algorithm combin set inter queri oracl optim count cost best perform combin combin provid lower bound emptyhead optim triangl count queri set level optim opti mal oracl perform choos relat block level slower oracl sophist optim ist test emptyhead engin simpl set level optim perform oracl optim real graph data set optim default insid empti head remaind paper set optim set optim emptyhead select layout set isol base cardin rang select bitset layout set consum space simd avx regist uint layout optim bit set layout block size equal rang data set find effect fix block size lack overhead store multipl offset experi compar emptyhead state art high low level special graph engin standard graph benchmark optim emptyhead compet special graph engin experi setup describ dataset comparison engin metric experi set valid emptyhead compet special engin section dataset tabl list popular dataset comparison graph analyt engin livejourn orkut patent graph low amount densiti skew patent smaller graph parison twitter largest public dataset standard benchmark dataset modest amount densiti skew higg medium size graph modest amount densiti skew googl graph larg amount densiti skew comparison engin compar emptyhead popular high low level engin graph domain compar high level logicblox engin commer cial databas worst case optim join optim low level engin benchmark graph analyt engin compar perform engin compar powergraph latest releas commerci graph tool cgt snap system high optim share memori implemen tation triangl count queri share memori graph engin ligra galoi pro vide optim implement triangl queri requir write queri hand provid comparison galoi pagerank sssp galoi achiev perform hand code implement queri high level engin compar logicblox queri logicblox general purpos mercial engin provid worst case optim join guarante logicblox relat model complex queri easi succinct express note logicblox full featur commerci system support transact updat incur ineffici emptyhead regard demonstr ghds intermedi represent queri compil tighter theoret guarante three order magnitud perform improv logicblox demonstr set lay out account order magnitud perform advantag logicblox design compar socialit queri high level lan guag optim make queri succinct easi express emptyhead logicblox socialit worst case optim join optim fore suffer larg perform gap graph pattern queri experiment setup logicblox socialit gine verifi engin system previous find comparison compar emptyhead graphx graph engin design scale perform graphx consist order magnitud slower perform share memori set compar commer cial databas postgresql consist three order magnitud formanc exclud comparison grail formanc compar substan tialli wors powergraph provid comparison metric measur perform emptyhead engin perform measur wall clock time system complet queri measur exclud time data load put result data statist collect cre ation engin repeat measur time elimin lowest highest port averag measur low level engin wipe cach load data avoid intermedi engin store high level engin perform run elim inat order magnitud wors remain run includ compi lation time measur low level graph engin stand program compil time discard compil time high level engin exclud includ compil time unoptim compil process second queri paper faster high level engin socialit logicblox experi set emptyhead memori engin run evalu singl node server periment singl machin total core intel xeon cpus ram compil engin emptyhead snap power graph triplebit java base engin cgt logicblox socialit openjdk ubuntu lts engin chose buffer heap size order magnitud larger dataset avoid garbag collect experiment provid comparison special graph analyt engin standard workload demonstr emptyhead outperform graph analyt engin graph pattern queri remain compet itiv pagerank sssp graph pattern queri focus triangl count queri standard graph pattern benchmark hand tune impl mentat provid high low level engin triangl count queri graph process applic common subgraph queri pattern fair low level frame work compar triangl queri framework provid hand tune implement high level optim outperform graph ana lytic engin triangl count queri standard engin prune version dataset undirect edg prune srcid dstid assign base gree node process standard limit size intersect set empiri calli work well graph engin implement prune fashion triangl queri low level high level dataset cgt googl higg livejourn orkut patent twitter tabl triangl count runtim second empti head relat slowdown engin includ ing powergraph commerci graph tool cgt snap ringo socialit logicblox thread engin indic engin process edg indic engin minut takeaway experi ble spars dataset low densiti skew patent dataset perform gain modest best repres set graph uint lay competitor engin expect dataset larger degre densiti skew perform gain pronounc exampl googl dataset high densiti skew set level optim select neighborhood set bitset achiev order magnitud formanc gain repres set uint logicblox perform well comparison cgt higg dataset larg amount cardin skew leapfrog triejoin algorithm optim cardi naliti skew obey min properti set intersect emptyhead obey min properti select ing set intersect algorithm base cardin skew demonstr order magnitud perform gain set layout intersect algorithm choic comparison compar galoi triangl count queri galoi provid implement implement requir write custom set intersect galoi runtim describ implement high perform set intersect depth emp triangl count number compar hand code number faster galoi implement provid compar ison galoi sssp pagerank graph analyt queri emptyhead capabl express vari eti workload benchmark pagerank sssp common graph benchmark addit benchmark illustr capabl emptyhead process broader workload relat engin typi calli process effici linear algebra oper pagerank transit closur sssp queri undirect version graph dataset demonstr competit perform compar special ize graph engin approach competit classic join workload low level high level dataset cgt googl higg livejourn orkut patent twitter tabl runtim iter pagerank second thread engin indic engin process edg denot emp tyhead engin includ galoi power graph commerci graph tool cgt snap ringo socialit logicblox low level high level dataset cgt googl higg livejourn orkut patent twitter tabl sssp runtim second thread engin indic engin process edg denot emptyhead engin includ galoi powergraph commerci graph tool cgt socialit indic engin comput queri proper pagerank tabl consist faster standard low level baselin order magnitud faster high level baselin pagerank queri observ competit perform galoi line code high tune share mem ori graph engin tabl express queri three line code tabl room improv queri emptyhead doubl buffer elimin redund join emptyhead achiev perform closer bare metal perform outperform galoi singl sourc shortest path compar perform logicblox special engin tabl sssp omit comparison snap snap implement parallel version algorithm three order magnitud slower emptyhead queri comparison select highest gree node undirect version graph start node emptyhead consist outperform powergraph low level socialit high level order mag nitud logicblox three order magnitud queri sophist implement sssp emptyhead generat exist exampl loi implement algorithm observ perform improv emptyhead appli cation tabl emptyhead competit galoi line code compar approach express queri line code tabl dataset queri ghd googl higg livejourn orkut patent tabl cliqu lollipop barbel runtim second emptyhead relat time socialit logicblox emptyhead disabl featur indic engin minut layout optim layout densiti skew inter algorithm cardin skew optim ghd ghd optim singl node ghd micro benchmark detail contribut queri formanc introduc queri revisit barbel queri introduc cliqu queri repres complex graph pattern lollipop queri find cliqu triangl path length vertex barbel queri find cliqu triangl connect path length demonstr ghds queri compil set layout execut engin three order magnitud perform impact queri experiment setup queri repres pattern queri requir effort implement low level graph analyt engin exampl simpler tri angl count implement line code snap line code powergraph contrast queri code emptyhead benchmark low level engin complex pattern queri count aggreg queri test full ghds queri potenti earli aggreg queri symmetr fore run prune dataset triangl count queri queri undirect version dataset queri compil optim ghds enabl complex queri effici emp tyhead tabl demonstr ghd timiz disabl ghd mean singl node ghd queri plan observ slowdown queri three order magnitud perfor manc improv queri interest densiti skew matter dataset largest amount densiti skew googl emptyhead observ largest perform gain ghds enabl earli aggrega tion elimin larg amount comput dataset larg output cardin high den siti skew logicblox current generic worst case optim join algorithm ghd optim queri compil unabl complet lollipop barbel queri dataset test ghd optim matter queri optim queri plan singl node ghd execut engin optim tabl relat time complet graph queri featur engin disabl column rep resent emptyhead simd set layout optimiza tion densiti skew optim close resembl implement low level engin tabl consid mix simd friend lay out tabl set layout optim consi tentli order magnitud perform impact advanc graph queri column emp tyhead densiti skew simd layout choic cardin skew simd set intersect algorithm choic layout algorithm optim provid largest perform advantag extrem dens bitset extrem spars uint set intersect appendix dataset low densiti skew explicit dis abl simd vector addit layout algorithm choic decreas perform appendix contribut mix data represent set intersect algorithm deepli intertwin simd parallel total tabl discuss valid set layout algorithm featur merit enabl emptyhead compet graph engin relatedwork work extend previous work main area join process graph process simd process set tersect process join process worst case optim join algo rithm deriv logicblox gine commerci databas engin worst case optim algorithm research inv tigat worst case optim join distribut set look minim communic cost process compress represent oret advanc suggest worst case optim join process applic standard join pattern queri continu work algorithm emptyhead deriv worst case optim join algorithm set intersect oper opti mize simd parallel approach exploit time addit algorithm satisfi stronger optim properti describ graph process increas main memori size trend develop share memori graph analyt engin research releas high perform share memori graph process engin notabl socialit green marl ligra loi except socialit gine propos domain specif languag graph alyt socialit base datalog present engin close resembl relat model engin powergraph graph pregel aim scale perform merit special ize approach tradit onlin analyt process ing olap engin sourc debat research general approach compet outperform special design prod uct sap hana integr graph acceler olap engin lation engin compet distribut engin graph domain target share memori baselin hope work contribut debat portion workload acceler simd process focus advantag hardwar trend increas simd parallel blu integr acceler support special heterogen layout design simd paral lelism predic filter aggreg approach spirit blu appli join process approach widet bitweav investig propos novel way leverag simd parallel speed scan olap engin research look timiz popular databas structur trie classic databas oper leverag simd par allel work consid heterogen layout leverag simd parallel improv worst case optim join process set intersect process year interest simd sort set intersect techniqu techniqu algorithm break min properti set intersect work well graph data techniqu simdgal lope preserv min properti rare work well graph data experi techniqu modifi ensur min properti set intersect oper engin speed set intersect core oper approach join process conclus demonstr general purpos worst case timal join process engin compet low level special engin standard graph workload proach strong worst case run time lead three order magnitud perform gain standard approach ghds form detail studi set layout exploit simd paral lelism modern hardwar three order magnitud perform gain achiev lect algorithm choic set intersect set layout granular data final popular graph queri prototyp gine outperform special graph analyt engin logicblox three order magnitud studi suggest type engin step unifi standard sql graph process engin acknowledg logicblox socialit help convers verif comparison andr tzli valuabl feedback paper extens discuss implement engin rohan puttagunta mana joglekar theoret underpin peter baili help ful feedback work grate acknowledg support defens advanc project agenc darpa xdata program deft program memex program simplex program nation scienc foundat nsf career award offic naval onr der award tional institut health grant award tional institut biomed imag bioengin nibib fund provid tran nih big data knowledg http initi sloan fel lowship moor foundat american famili insur googl toshiba opinion find conclus recommen dation express materi author reflect view darpa afrl nsf onr nih govern refer patent network dataset konect chekuri rajaraman conjunct queri contain revisit icdt springer atseria size bound queri plan relat join siam journal comput mislov measur analysi onlin social network proc internet measur conf welc graph analysi reinvent wheel grade schlegel fast sort set intersect simd instruct adm workshop lemir simd compress intersect sort integ softwar practic experi nguyen lightweight infrastructur graph analyt sosp nguyen join process graph pattern dog trick arxiv preprint arxiv afrati gym multiround join algorithm mapreduc technic report stanford univers chierichetti compress social network kdd mcsherri scalabl cost hoto berkeley usa usenix associ gottlob hypertre decomposit structur algorithm applic graph theoret concept comput scienc springer malewicz pregel system larg scale graph process sigmod inou faster set intersect simd instruct reduc branch mispredict vldb kwak twitter social network news media ngo worst case optim join algorithm extend abstract pod acm ngo skew strike develop theori join algorithm corr gonzalez graphx graph process distribut dataflow framework osdi usenix associ octob fan case special graph analyt engin cidr gonzalez powergraph distribut graph parallel comput natur graph osdi leskovec statist properti communiti structur larg social network proc int wide web conf seo socialit datalog extens effici social network analysi icd ieee khami faq question ask frequent arxiv preprint arxiv aref design implement logicblox system sigmod acm joglekar aggreg general hypertre decomposit arxiv preprint arxiv rudolf graph stori sap hana databas btw volum cites stonebrak store column orient dbms vldb satish navig maze graph analyt framework massiv graph dataset sigmod milo network motif simpl build block complex network scienc abiteboul foundat databas volum addison wesley read beamer direct optim breadth search chaudhuri random sampl join volum sigmod chu theori practic effici join queri evalu parallel databas system sigmod acm hong green marl dsl easi effici graph analysi asplo xvii green proven semir sigmod acm raman blu acceler column store vldb huber freytag adapt tree structur process simd instruct katsov fast intersect sort list sse instruct https fast intersect sort list sse lemir boytsov decod billion integ second vector softwar practic experi christian lemk kai uwe sattler franz faerber alexand zeier speed queri column store case compress dawak leskovec krevl snap dataset stanford larg network dataset collect http data june leskovec snap general purpos network analysi graph mine librari http snap patel bitweav fast scan main memori data process sigmod patel widet acceler analyt data process vldb neumann effici compil effici queri plan modern hardwar vldb newman structur function complex network siam review olteanu vodni size bound factoris represent queri tod schank wagner find count list triangl larg graph experiment studi wea shun blelloch ligra lightweight graph process framework share memori sigplan duncecap queri plan general hypertre decomposit proceed acm sigmod intern confer manag data acm ullman conjunct queri http ullman pdf veldhuizen leapfrog triejoin worst case optim join algorithm arxiv preprint arxiv yannakaki algorithm acycl databas scheme vldb zhou ross implement databas oper simd instruct sigmod appendix appendix dictionari encod node order node order emptyhead map node integ natur consid perform implic order higg livejourn shingl hybrid bfs degre revers degre strong tabl node order time second popular graph dataset power law expon degre bfs shingl random rev degre strong hybrid figur data order triangl count synthet data map node order affect perform way chang rang neighborhood queri symmetri break number comparison need answer queri discuss impact node order triangl count symmetri break explor impact node order queri perfor manc triangl count queri synthet gener ate power law graph power law expon generat data snap random power law graph generat vari power law degre expon best order achiev order magnitud better perform worst order symmetr queri triangl count consid order random random order vertic baselin measur impact order ing bfs label node breadth order strong run sort node degre start ing highest degre node algorithm assign continu number neighbor node order approxim bfs degre order simpl order descend degre exist graph system rev degre label node ascend degre shingl order scheme base similar neigh borhood addit order propos hybrid dere algorithm hybrid label node bfs sort descend degre node equal degre retain bfs order respect hybrid order inspir find order ing degre bfs provid highest perform symmetr queri figur graph low default symmetr filter dataset uint emptyhead uint emptyhead googl higg livejourn orkut patent tabl relat time random order compar order degre default symmetr filter dataset googl higg livejourn orkut patent tabl relat time disabl featur trian gle count queri symmetr filter refer data preprocess step specif symmetr queri emptyhead simd emptyhead uint graph level power law coeffici achiev best perform order degre bfs order work best graph high power law coeffici figur perform hybrid order track perform bfs degre optim order incur cost perform actual order data tabl exampl node dere time emptyhead execut time bfs order grow linear number edg sort degre revers degre depend number node cost hybrid order sum cost bfs order order degre prune symmetr queri explor node order queri perfor manc data prune symmetr queri enabl symmetr queri triangl queri cliqu queri undirect graph produc equiva lent graph src dst pair occur dataset src dst correspond dst src pair produc result multi ple special engin advantag restrict optim hold symmetr pat tern experi measur node order introduc appendix dataset set layout node order substanti impact queri enabl symmetri break ing layout optim typic larger impact queri enabl symmetri break ing general case relat triangl count perform dataset random order order degre proxi impact node order dataset measur triangl count perform random order order degre default standard prune emptyhead set level optim homogen uint layout call prune data symmetr queri symmetr filter report relat perform random order ing compar order degre tabl order larg impact queri enabl symmetri break addit tabl optim robust order special case symmetri filter allow ble optim typic larger impact data symmetr filter symmetr queri infrequ symmetr properti break simpl select extend queri languag discuss conjunct queri join project select equal join express emptyhead simpl con junctiv queri syntax cyclic join queri tabl cliqu queri triangl barbel queri cliqu connect path length emptyhead easili abl select project queri languag well enabl project user direct annot attribut appear head enabl select direct annot predic attribut valu bodi chris illustr queri languag work exampl pagerank queri exampl tabl exampl syntax express pagerank queri emptyhead specifi aggreg edg graph count number sourc node assum edg relat attribut relat fill src dst pair undirect graph simpli count number node graph assign relat scalar integ definit count gregat default sum initi relat annot second queri defin base case recurs simpli project attribut assign annot scalar relat hold number node final third defin recurs rule join edg invdegre relat insid databas pagerank relat sum attribut relat aggreg attribut join annot valu multipli default perform ing matrix vector multipl aggreg correspond express annot appli aggreg fix number iter head appendix select implement high perform select emptyhead requir three addit optim fect perform push select worst case optim join algorithm layout trade off push select ghd node point trivial overview provid detail descript experi push select ghds appendix narrow scope equal selec tion techniqu general appli general select constraint node node ghd push node node ghd push figur ghds cliqu lection queri node push select ghd node akin rearrang attribut order generic worst case optim algorithm simpli tribut select attribut dere forc attribut select process algorithm layout data layout matter plac ing select attribut algorithm attribut appear level trie dens best repres bitset equal select enabl perform actual select constant time versus binari search sign integ array node push select node queri plan correspond chang criteria choos ghd describ goal high select low cardin node push ghd execut earlier bottom pass accomplish three addit step ghd optim find optim ghds respect fhw chang agm constraint attribut select relat select relat plan place subtre exist cover unselect attribut includ subtre duplic member includ multipl subtre ghds choos maxim select depth select depth sum distanc select root ghd queri test implement select emptyhead graph pattern queri contain select cliqu select queri find cliqu connect node second barbel select queri find pair cliqu connect node syntax queri empti head tabl consid cliqu select queri queri syntax cliqu select node barbel select sbarbel node node tabl select queri emptyhead exampl figur ghds queri ghd left produc ing three step push select ghd node ghd filter intermedi high select node lection pass ghd ghd three step node select node ghd ensur high select process earli queri plan discuss count version queri materi output queri prohibit expens materi output queri coupl dataset notic perform gap competitor vari selectiv iti queri chang degre node select test high low degre node experi tabl push select ghds enabl order magnitud perform improv queri essenti enabl peak perform tabl competitor closer emptyhead output cardin low emptyhead outperform competitor exampl cliqu select queri patent dataset queri output outperform logicblox socialit elimin redund work compil worst case optim join optim elimin redund work ghd node phase code generat queri compil perform simpl analysi determin ghd node ident ghd node bottom pass yannakaki algorithm scan list comput ghd node determin result current node comput condit determin ghd node equival barbel queri recogn perform increas barbel queri ghd node produc equival bottom pass node ident join pattern input relat node ident aggreg selec tion project subtre ident elimin top pass yannakaki algorithm attribut appear result appear root node determin final queri result bottom phase yannakaki algorithm exampl perform count queri attribut top pass general unnecessari elimin top pass provid perform improv barbel queri dataset queri ghd googl higg livejourn orkut patent tabl cliqu select barbel select runtim second emptyhead rel ativ runtim socialit logicblox emp tyhead disabl optim indic output cardin indic engin minut ghd emptyhead push select ghd node appendix addit set layout discuss three addit set layout emptyhead implement pshort variant bitpack pshort layout group valu common upper bit prefix gether store prefix variant bitpack layout differ encod encod differ success valu sort list valu origin val origin array reconstruct comput prefix sum bene fit approach differ smaller origin valu allow aggress pression previous work variant bit pack layout compress better order magnitud faster compress tool lzo googl snappi fastlz gzip prefix short prefix short pshort layout exploit fact valu close share common prefix layout consist partit valu share upper bit prefix partit layout store common prefix length partit exampl pshort layout length variant variant layout variabl byte encod popular techniqu propos thiel heap variant layout encod data unit byte lower bit store data bit indic data extend byte decod procedur read byte sequenti bit output data bit decod append data byte output data move byte layout simpl implement reason effici exampl variant layout diff byte byte byte data cont bit data cont bit data cont bit bitpack bitpack layout partit set block compress individu layout determin maximum bit entropi valu block encod block bit lemir techniqu adapt code decod valu effici pack unpack valu granular simd regist individu lemir propos variat layout chose implement bit pack fastest encod decod algorithm cost wors compress ratio exampl bitpack layout comput pack delta sequenti techniqu lemir comput delta granular simd regist delta pack minimum bit width block simd regist time sequenti emptyhead partit set delta neighborhood comput start differ encod element set tail neighborhood fit simd regist variant encod scheme diff byte byte bit bit length bit elem data data data densiti int int int bitset short bitset short short bitset bitset figur highest perform layout set intersect relat perform uint addit set intersect algorithm unsign integ array explor unsign integ layout present literatur iter set block wise compar block valu simd parison iter smaller set check block valu larger set simd comparison gallop lemir perform binari search block data larger set size simd regist identifi potenti match simdgallop iter smaller set form scalar binari search larger set find block data potenti match simd comparison bmiss simd instruct compar upper pre valu filter unnecessari comparison unnecessari branch potenti match algorithm scalar compar ison check full valu partial match bmiss design perform well intersect low output cardin algorithm effici filter valu match figur simdgallop algo rithm outperform algorithm cardin differ set larg figur algorithm outper form algorithm set low densiti base default select algorithm ratio cardin set oth select simdgallop algorithm set graph data typic spars pact select simdgallop graph dataset minim total perform impact livejourn twitter cardin max cardin rang max rang tabl exampl cardin rang set popular graph dataset simdshuffl bmiss simdgallop figur intersect time uint intersect algo rithm ratio set cardin densiti bmiss simdgallop figur intersect time uint intersect algo rithm densiti test cardin skew rang set cardin set chang cardin set confirm find find simdgallop outper form intersect algorithm crossov point cardin ratio contrast algorithm simdgallop run time proport size smaller set simdgal lope effici cardin set figur set cardin find bmiss outperform simdgallop vari rang valu place set fix cardin figur execut time set fix cardin vari rang number bmiss slower set small rang high output cardin rang valu larg output cardin small algorithm outperform find algorithm domin emptyhead switch dynam uint algorithm base queri engin ratio size set exceed case choos simdgallop algorithm figur figur switch ing runtim benefit case cardin simdgallop satisfi min properti trivial algorithm worst case optim join algorithm preserv dataset set optim block optim googl higg livejourn orkut patent tabl set level block level optim overhead triangl count overhead runtim dynam determin type algorithm uint intersect optim def sho return intersect simdgal lop ing return imdshu algorithm set layout optim def rang imd return return uint addit layout discuss intersect algorithm set layout emptyhead implement main paper pshort pshort pshort intersect set tersect algorithm propos schlegel algorithm depend rang data preserv min properti process element cycl algorithm pshort intersect stnii string text process instruct comparison instruct allow ing full comparison short common upper bit prefix cycl pshort layout enabl jump chunk share common upper bit prefix uint pshort uint pshort set intersect advantag stnii simd instruct compar upper bit prefix valu uint layout match compar lower bit set element time stnii instruct variant bitpack develop set intersect variant bitpack type challeng complex decod irregular access pattern set intersect consequ emptyhead decod neighborhood array integ uint intersect algorithm oper neighbor hood repres variant bitpack layout intersect perform figur display highest perform layout combin relat perfor manc increas compar highest perform uint algorithm chang densiti input set fix rang unsurpris variant bit pack layout achiev best perform real data variant bitpack type typic perform triangl count queri slower code step experi synthet data moder perform gain pshort layout real data pshort layout rare good choic set combin layout appendix extend triangl count discuss powergraph repres neighborhood hash set cuckoo hash degre larger repres neighborhood vector sort node powergraph incur addit overhead program model parallel infrastructur share memori set cgt csr layout run java code queri effici nativ code snap prune neighborhood fli simpl merg sort algorithm intersect neighborhood custom scalar intersect set note runtim tabl reflect cost prune graph system powergraph socialit logicblox cgt snap includ time runtim snap pend skew graph prune time account runtim triangl count memori usag util small amount memori ram dataset paper exampl run pagerank queri livejourn dataset engin memori comparison galoi powergraph 