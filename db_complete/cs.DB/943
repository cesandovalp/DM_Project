logic method comput scienc submit apr publish oct express path queri graph data pablo barcelo gaell fontain anthoni widjaja lin center semant web depart comput scienc univers chile mail address pbarcelo gaell yale nus colleg singapor mail address abstract graph data model popular applic social network semant web typic navig queri languag graph databas conjunct regular path queri crpqs express relev properti interact under data topolog languag propos overcom problem walk logic regular express memori rem paper investig funda mental properti rem complex evalu problem express power data complex nonelementari rule practic hand rem low data complex point natur data topolog properti graph express express rem propos regist logic extens rem express natur graph properti express time preserv elementari data complex rem incompar term express power introduct graph databas gain renew interest applic semant web social network analysi crime detect network softwar bug detect biolog network survey despit queri graph acm ccs system data manag system databas design model graph base databas model data manag system queri languag queri languag relat engin theori comput theori algorithm applic domain databas theori databas queri languag principl theori algorithm applic domain databas theori logic databas formal languag automata theori regular languag key phrase graph databas graph logic rpqs elementari regist automata full version confer paper barcelo fund millennium nucleus center semant web grant fontain fondecyt postdoctor grant work lin visit barcelo fund fondecyt grant work partial lin oxford univers support epsrc logic method comput scienc doi lmcs barcel√≥ fontain lin creativ common barcelo fontain lin databas general agreement reach kind featur prac tical queri languag graph databas support consid reason comput cost queri evalu aforement applic typic navig queri languag graph databas includ conjunct regular path queri extens suffer common drawback well suit express relev properti under topolog graph databas label node connect label edg topolog interact node data drawback share common specif languag verif ctl evalu graph data model transit system exampl queri combin graph data topolog express usual navig languag graph databas includ find pair peopl social network connect profession link restrict peopl age find pair citi transport system reach servic oper compani queri connect node topolog constrain data infinit domain sens consid path intermedi node satisfi condit peopl age languag walk logic regular express memori propos overcom problem languag goal walk logic propos hell unifi framework understand express power path queri graph databas strength express side under data model node edg label direct graph context natur extens path quantif abil check posit path data valu paper hell assum restrict node carri distinct data data serv identifi node differ term regular express memori rem propos libkin formal compar data valu singl path retain reason complex queri evalu strength languag side effici data model class rem edg label direct graph node assign data infinit domain rem defin pair node graph databas link path satisfi condit condit defin formal inspir class regist automata allow data valu store regist compar data valu evalu problem rem pspace complet relat databas solv polynomi time data complex assum queri fix languag fact well behav term complex queri evalu aim paper investig express complex queri evalu class rem hope find navig queri data complex reason measur complex databas scenario queri smaller under data express path queri graph data languag data graph strike good balanc aspect queri languag contribut start consid power formal term express cost queri evalu languag save decid evalu problem hard data complex main contribut pinpoint exact complex evalu problem answer open problem prove elementari hold data complex rule practic languag move class rem suffer opposit drawback complex evalu queri class reason express languag rudimentari express path properti inabl compar data valu path express branch properti graph databas exampl interest queri express rem find pair node node path node connect notic queri lie basi queri present second contribut identifi natur extens languag call regist logic close rem boolean combin existenti quantifi cation node path regist assign allow logic express comparison data valu appear path well branch properti data logic incompar express power natur queri relat data topolog data graph express includ queri hamilton exist eulerian trail bipartit connect graph number node studi complex problem queri evalu solv elementari time expspac complet contrast data complex elementari respect data complex prove pspace complet identifi slight extens existenti posit fragment tractabl nlogspac data complex express queri interest includ queri idea extens atom rem enrich existenti branch oper style class nest regular express increas express cost evalu organ paper defin data model recal definit walk logic basic prove data complex nonelementari concern regist logic conclud futur work data model start definit data model data graph definit data graph finit alphabet data graph tupl finit set node set direct edg label tripl edg label function assign data node data model adopt libkin definit rem case author adopt graph databas data model data barcelo fontain lin graph inject node carri data case identifi adopt general model complex data model upper bound hold data graph lower bound prove restrict set graph databas sake comparison express exampl construct scenario graph databas serv node issu edg label node label data graph data model edg label origin node label chosen standard literatur choic inessenti complex paper remain true logic interpret node label graph databas data graph appli expect modif syntax final exampl logic formula express properti undirect graph case assum undirect graph repres graph databas unari alphabet set node symmetr relat iff graph databas inject node uniqu determin data walk logic eleg power formal defin properti path graph databas origin propos yardstick measur express path logic syntax defin respect countabl infinit set path variabl denot posit variabl sort assum sort associ distinct posit variabl denot posit variabl write emphas posit variabl sort definit walk logic set formula finit alphabet defin grammar posit variabl sort iii path variabl posit variabl sort usual formula free variabl call boolean defin semant introduc terminolog path walk data graph finit nonempti sequenc set posit node posit intuit semant formula path variabl interpret path data graph posit variabl sort interpret posit posit variabl sort interpret posit path interpret atom formula true iff interpret path posit interpret successor express path queri graph data posit interpret node posit link label edg node posit hold iff path interpret posit interpret smaller interpret case iff data carri node posit assign data carri node posit assign path formal semant data graph formula assum set consist posit variabl path variabl free variabl path variabl free variabl intuit defin set path posit variabl relev defin semant assign map associ path path variabl posit posit variabl form notic well defin time posit variabl form usual denot assign equal assign posit path satisfi denot hold omit boolean combin standard path case sort sort node posit hold appear free appear free posit appear free appear free path posit hold appear free path exampl simpl exampl express complet properti queri check graph hamiltonian path fact queri express path repeat node satisfi node belong path satisfi node occur path graph databas occur note formula essenti fact graph databas node uniqu identifi data evalu elementari data complex pinpoint precis complex queri evalu proven problem decid precis complex problem left open prove fact elementari problem easi barcelo fontain lin translat satisfi problem formula elementari databas interest measur complex call data complex assum formula fix reason assumpt databas bigger formula set data complex cost evalu queri smaller general set formula input main result data complex evalu formula nonelementari graph databas rule practic formula free variabl evalu problem denot eval defin data graph case prove theorem evalu problem elementari data complex finit alphabet boolean formula problem eval evalu formula expspac hard addit hold input restrict class graph databas prove result show natur number data complex iti model check problem expspac hard natur number provid reduct class problem solvabl ture machin tape size tower input word size tower tower precis natur number ture machin constant problem expspac hard word size accept tower cell prove formula size graph iff accept tower cell proof sketch case illustr proof idea letm ture machin problem expspac hard word size accept cell formula will defin satisfi equival form formula quantif path variabl word size label path graph will encod accept word word size consid configur head scan cell number machin state content tape word encod configur word encod cell number precis defin dci word form defin word binari encod number letter content cell letter equal dummi symbol head scan cell number equal state encod sequenc express path queri graph data path encod consist part encod initi configur path subgraph second encod path subgraph set state alphabet defin graph equal number node outgo edg label equal label path left node node occurr exact descript cell configur binari encod natur number pair form defin formula path start iff label encod configur detail express encod configur tape head number encod binari number encod descript cell number descript cell number formula defin formula path iff label encod accept formula ensur ecec occur label consecut configur express eventu reach final state order express abil check posit correspond node exampl order defin compar consecut configur compar content cell configur content cell express subpath start correspond binari encod number length subpath depend check node node subpath equal suffici check correspond node successor correpond node note fact subpath will defin quantif node variabl quantif path variabl formula oper order express subpath correspond binari encod number successor defin graph introduc graph formula iff label encod initi configur edg construct graph path iff label barcelo fontain lin encod accept formula satisfi case problem adapt proof consid ture machin configur size bound tower exponenti height binari represent bound polynomi trick repres exponenti tower counter counter binari represent number counter word counter definit natur number consid alphabet repres defin alphabet counter length sequenc form counter repres number recal equal resp repres resp counter length sequenc form counter repres number tower counter repres number recal equal resp repres resp descript alphabet sequenc counter repres number tower descript alphabet descript note descript alphabet counter length alphabet set state alphabet machin descript form tower defin counter encod number encod configur defin descript encod label path satisfi well chosen formula well chosen graph encod descript label path lemma notat path graph alphabet denot label alphabet denot trace alphabet subsequ delet letter belong subgraph path form assum express path queri graph data path leav defin trace subpath longest subpath node order notat easier abbrevi formula formula path variabl node variabl denot formula replac quantif form intuit restrict path node occur lemma alphabet formula graph satisfi uniqu node outgo resp incom edg label resp node incom resp outgo edg node call initi resp final node final iff label satisfi condit edg label edg label descript counter length abbrevi formula succk number lastk eqk path satisfi succk iff number encod successor number encod number iff encod number lastk iff encod number tower eqk iff number encod equal number encod proof formula graph defin induct suppos defin graph barcelo fontain lin number node outgo edg label equal label addit label introduc order simplifi notat formula graph defin formula fact path start node incom edg node outgo edg will encod counter defin conjunct formula formula defin formula induct eqk formula path correspond encod number iff choos node label equival choos node label defin formula formula path correspond number iff equal simpl path start node equival graph databas node carri data fact formula hold formula num defin induct path encod number iff choos node label equival choos node label express induct case path encod number iff path encod number number encod successor number encod defin numi formula num order finish base case remain defin formula basic simul addit binari binari encod number binari encod number sequenc equal element equal element equal element sequenc equal element sequenc equal case express formula case treat finish base case turn induct step defin graph express path queri graph data edg label edg label point initi node edg label edg start final node defin formula intuit encod descript path start edg label edg label counter will correspond path subgraph will correspond label edg occur edg label formula ensur hold edg edg label passag path graph correspond encod counter express will formula induct hypothesi time path graph correspond encod number success passag graph correspond success counter edg label occur edg label iff passag path graph correspond encod number tower ensur fulli encod descript subsequ express difficult case treat express passag graph correspond encod counter recal induct hypothesi descript counter length formula true graph iff encod counter length order express ensur node passag node passag formula barcelo fontain lin hold introduc formula hold iff node passag node passag defin formula equival initi node final node path graph enforc impos edg label defin formula express condit node passag node passag formula hold defin formula turn definit formula succk num eqk lastk formula succk num lastk defin fashion basi case order defin formula eqk path satisfi formula recal correspond encod counter correspond passag correspond label edg occur passag structur graph edg incom edg node path correspond encod counter passag passag encod counter node induct hypothesi express formula eqk eqk finish proof lemma readi prove theorem proof theorem explain earlier prove ture machin formula size graph iff accept tower cell ture machinem input alphabet blank symbol initi state final state transit map stand left stand express path queri graph data formula formula form formula quantif path variabl word label graph encod accept word recal encod configur machin suppos configur content tape word tower head scan cell number machin state encod word sequenc defin word counter encod number letter content cell letter equal head scan cell number equal state impli configur word ecc counter alphabet word sequenc configur form encod word sequenc counter will defin formula graph path satisfi iff project label alphabet encod accept path encod consist part label encod initi configur label second encod remain path path subgraph second path subgraph independ graph will edg node node start defin graph recal alphabet graph defin graph addit edg final node initi node proof lemma graph edg label edg point initi node edg label edg start final node paragraph edg point graph edg point barcelo fontain lin initi node graph edg start graph will refer edg start final node graph recal path encod trace will encod configur encod descript will correspond lemma passag path initi node final node defin graph encod initi configur tape recal initi configur tape word cell number blank symbol head scan cell state graph assembl will defin graph label uniqu maxim path encod cell number initi configur trace path graph encod content cell number initi configur precis defin graph graph graph node label will start node path trace encod content cell number initi configur label counter encod number letter alphabet indic cell letter head scan cell current state lemma formula num will impos passag subgraph correspond encod number defin graph recal defin trace encod content cell number initi configur letter head scan cell recal encod cell content counter encod number will formula numik lemma express passag subgraph correspond counter encod final defin graph graph express path queri graph data letter alphabet blank symbol recal trace graph will encod content cell number initi configur fact cell blank symbol scan head encod cell number counter encod label trace word tower label trace uniqu descript alphabet will express passag graph correspond descript alphabet formula provid lemma readi defin graph assembl graph introduc edg graph pictur edg left node graph node second graph final graph graph consid union graph edg final node initi node defin graph readi defin formula formula conjunct formula express path start edg label express eventu configur machin reach final state express passag path initi node final node graph correspond encod descript express trace subgraph graph correspond counter encod express trace path subgraph uniqu descript alphabet final express move configur tape case straightforward case detail case case lemma case subpath correspond passag hold node node satisfi closest node incom edg label express formula defin barcelo fontain lin definit graph iff node passag node passag equival fact hold formula formula express case final treat difficult case case express move configur tape recal trace graph will encod sequenc full machin input subpath correspond encod configur subpath correspond configur express move configur configur suppos configur current state head scan cell letter suppos treat case head move left order formula simpler definit ture machin clear notion simul usual ture machin assum machin scan cell content state machin scan successor content content usual definit content unchang content subpath correspond encod cell configu ration encod arbitrari cell configur successor cell head scan cell content letter express formula changer defin succk recal lemma succk formula express counter associ successor counter associ successor cell head scan cell content remain unchang subpath correspond con tent cell configur express formula stayr defin succk eqk recal lemma eqk express counter associ express path correspond encod counter lemma path correspond passag graph introduc formula defin formula express path correspond encod counter express path queri graph data formula assert path appear encod success configur path appear encod success configur encod configur start uniqu edg label edg occur encod configur equival uniqu edg label express formula config defin readi defin formula config config changer stayr express suppos counter encod number three cell correspond suppos correspond cell occur configur cell correspond occur configur express appli transit move move head updat con tent cell scan express formula changer leav cell unchang express formula stayr defin formula formula formula express move configur head move defin formula express move configur head move left finish proof theorem corollari proof theorem data complex elementari simpl formula talk singl path graph databas corollari evalu problem graph databas elementari data complex restrict boolean formula form path quantif posit variabl sort regist logic previous impract high data complex iti start recal notion regular express memori rem basic view logic limit term express power instanc queri introduct express rem introduc extens rem call regular logic reme die limit express power fact express natur exampl queri express retain elementari complex queri evalu final studi fragment well behav databas applic barcelo fontain lin regular express memori rem defin pair node data graph link path satisfi constraint topolog interact under data rem allow rememb data valu data valu store regist point compar data store regist exampl consid rem read store current data regist repres express check read word data condit formal defin rem regist set condit recurs defin assum extens set data valu symbol satisfact condit defin respect data current scan tupl data valu store regist assum repres fact regist assign boolean combin iff definit rem class rem defin grammar rang symbol condit tupl element rem extend class regular express popular mechan topolog properti path graph databas express form condit tupl regist defin topolog interact data semant defin evalu rem data graph relat jekg consist tupl form node path tupl intuit tupl belong jekg data topolog pars initi assign regist final assign defin pair node jekg path tupl induct defin relat jekg assum tupl set regist vkakvk path defin jakg uav set tupl tupl path jekg jekg jekg jekg jekg jekg jekg express path queri graph data ekg jekg rem will shorthand notat denot exampl rem defin pair node data graph link path node data rem defin pair node link path label data node path data node problem eval rem data graph pair node rem data complex problem refer case consid fix rem tractabl data complex wors combin complex relat databas proposit eval rem pspace complet nlogspac complet data complex regist logic rem well behav term complex evalu express power rudimentari express data topolog properti interest data graph exampl queri introduct easili express express rem prove stronger result main shortcom rem term express power inabl compar data valu path express branch properti data propos regist logic natur extens rem lack express borrow idea logic crpq present close class regular path queri boolean combin existenti node path quantif case start rem close boolean combin node path quantif allow express arbitrari pattern data regist assign quantif permit compar data valu path prove combin complex evalu problem elementari expspac regard stark contrast defin assum exist countabl infinit set node path regist assign variabl node variabl denot path variabl denot regist assign variabl denot definit regist logic defin class formula alphabet grammar atom atom node variabl path variabl regist assign variabl rem barcelo fontain lin intuit hold iff empti regist assign check path check pars start regist assign finish regist assign quantifi read exist assign data valu data graph regist data graph formula assum set data valu mention assign map assign node free node variabl path free path variabl iii tupl regist variabl appear free safeti reason assum data valu appear under data graph repres restrict express logic induct defin data graph formula assign omit equal atom boolean combin standard iff iff path iff jekg assum node iff node iff path iff tupl rem express formula exampl recal queri introduct find pair node graph databas node path node connect queri express singl regist rem check node data store regist appear path rem check node path store regist fact formula defin pair node exist path node hold regist node node case path node connect notic fact under data model graph databas node uniqu identifi data limit express power independ recogn libkin marten vrgoc order allow interest data comparison retain reason complex evalu propos queri languag base xml languag xpath languag compar term express power studi complex evalu evalu problem denot eval data graph formula assign express path queri graph data case denot eval evalu problem fix formula regist logic evalu elementari time exponenti jump complex evalu rem theorem eval expspac complet lower bound hold input restrict graph databas proof start prove upper bound eval expspac structur proof prove crpq queri evalu pspace combin complex differ accommod extra express power allow express properti regist valu check accept data walk rem label data graph formula denot defin assign defin tupl node free node variabl tupl path free path variabl tupl regist valu tupl free regist variabl assum rem mention goal defin expspac procedur check order introduc terminolog order vocabulari node path regist endpoint node path regist unari relat symbol endpoint ternari relat symbol constant defin structur domain disjoint union path belong tupl notic node path consid object appear separ node path domain constant interpret tupl interpret node element domain node interpret path element domain path interpret regist element domain tupl interpret ternari relat endpoint tupl path node node final interpret symbol tupl path tupl formula vocabulari simultan replac ing subformula form node variabl node subformula form path variabl path subformula form regist variabl regist atom formula form endpoint barcelo fontain lin clear iff cours effect construct set path infinit infinit prove exist finit structur iff defin assum quantifi rank quantifi rank formula depth nest quantif path satisfi hold tripl case iff notic path subset satisfi pair node minimum number path satisfi arbitrarili pick pair node distinct path satisfi defin structur domain node path belong tupl path form tupl constant interpret tupl interpret node node domain interpret path element domain path interpret regist element domain tupl interpret ternari relat endpoint tupl form path domain final interpret tupl path domain tupl standard ehrenfeucht fra argument prove claim structur indistinguish sentenc quantifi rank proof duplic win strategi round ehrenfeucht fra game play respons spoiler move round induct defin assum loss general spoiler repeat move round spoiler choos element chosen player previous round move round node structur duplic respond mimick move structur move round tupl structur duplic respond mimick move structur move round path structur duplic respond mimick move structur spoiler play path node structur satisfi path duplic respond path structur satisfi belong chosen game notic duplic choos path pair node express path queri graph data number path satisfi belong easi respons defin preserv partial iso morphism structur impli duplic win strat egi round ehrenfeucht fra game play well structur indistinguish sentenc quantifi rank previous claim iff straightforward approach check construct evalu problem approach doubl exponenti size doubl exponenti number subset imposs construct exponenti space will follow approach assum prenex normal form form qmym node path regist variabl quantifi free prenex normal form convert polynomi time equival formula prenex normal form follow usual argument evalu formula structur main problem element path regist valu treat defin encod path exponenti space regist valu polynomi space clear regist codifi tupl length order denot tupl address regist path add extra bit tupl label symbol codif path requir bit extra work path encod address string satisfi start symbol state address path address continu encod endpoint path separ delimit address space address encod subset satisfi encod easili express string length alphabet flag element belong final address encod integ encod space clear address path defin exponenti space problem check belong evalu overm solv exponenti time altern ture machin will finish proof theorem class problem solv exponenti time altern ture machin coincid class problem solv expspac altern machin proceed replac node variabl encod correspond node path variabl encod address correspond path regist variabl barcelo fontain lin encod correspond tupl machin read formula left time encount existenti quantifi enter existenti state time encount univers quantifi enter univers state case machin guess interpret encod node path regist domain encod path exponenti size altern machin requir exponenti time work final machin verifi hold case accept exponenti time notic impli process perform exponenti time start case atom formula order check element assign variabl belong interpret node inm check encod element start order check element belong interpret path resp regist suffici check encod start resp order check element assign variabl belong interpret endpoint check encod path encod node path final order check element assign variabl belong interpret check regist valu encod start symbol encod path encod start bit correspond tupl address encod set satisfi set atom formula involv comput polynomi time size polys boolean combin atom formula comput polynomi time valu atom formula conclud comput polynomi time small issu requir explan order previous procedur work proper assum procedur guess interpret variabl encod path satisfi check encod impli path order procedur check subroutin exist path satisfi claim exponenti space finish proof theorem claim pair check expspac distinct path satisfi proof symbol denot alphabet automaton alphabet defin set state disjoint union state initi state final state transit relat defin edg transit label node transit label transit label intuit accept exact string form path allow path loop arbitrarili time label node express path queri graph data aiv automaton alphabet defin set state initi state final state transit label iff transit label notic exact product state product clear aiv exponenti size size state polynomi decid polynomi time exist transit label state aiv defin automaton restrict string alphabet satisfi case case string alphabet condit project string accept repres path loop path second condit ensur distinct project path accept repres string hard prove languag accept nonempti iff exist distinct path hard exponenti size size state polynomi decid polynomi time exist transit label state state techniqu construct exponenti time nfa alphabet accept precis string accept path repres satisfi main idea construct posit read state tupl data valu store regist set state exponenti size state repres polynomi space decid transit state polynomi time complement construct doubl exponenti time state exponenti space hard construct doubl exponenti time automaton alphabet start restrict accept string alphabet tupl case accept tupl case accept complement barcelo fontain lin state repres exponenti space check transit state polynomi time clear exist distinct path satisfi accept string check nonempti expspac standard fli argument finish proof claim finish proof eval expspac eval expspac hard constant provid reduct class problem solvabl ture machin tape size input word size ture machin constant problem expspac hard word size accept cell prove formula size formula graph iff accept cell ture machin alphabet consist input alphabet blank symbol initi state final state transit map stand left stand formula associ machin word formula form formula quantif path variabl formula express path graph encod accept word proof theorem encod configur suppos content tape word head scan cell number machin state encod configur word play role delimit dci encod cell number precis alphabet defin dci word defin word binari represent number letter content cell letter equal head scan cell number equal state encod word defin formula graph path satisfi iff label encod accept graph graph graph proof theorem case link graph accept associ path trace will correspond encod initi configur trace encod graph express path queri graph data recal set defin consid simpl path start node data node outgo edg label label form encod cell number label path start node data satisfi encod cell encod number defin formula hold success encod cell describ defin graph encod initi configur suppos introduc graph describ cell number initi configur binari encod number graph label longest path exact encod cell number initi configur defin graph allow encod cell number initi configur graph label simpl path node data node outgo edg label form encod unscan cell blank symbol encod cell number initi configur graph link graph barcelo fontain lin arrow label arrow point node data arrow label graph node graph left node second graph final graph defin edg label edg node node data defin formula iff encod accept cell label fact easier defin formula iff encod accept cell suppos path label encod accept cell iff condit hold letter initi letter reach final state pair form occur symbol place reach symbol enter encod configur label binari encod number binari encod number encod infor mation cell symbol occur label delimit encod configur finish encod cell configur move configur iii substr successor encod cell number encod cell number final string success config urat express case fair easi concentr iii start show express case suppos success binari encod occur label suppos successor iff hold equal equal equal equal occur equal occur equal express path queri graph data express case case express rem set alphabet graph regist store number edg label reach edg label reach node data label outgo edg express final case express string success configur happen reason modifi proper content cell move proper head modifi content suppos remain constant treat case case handl note proof theorem proof will treat case case consid case transit move head case symmetr suppos proof theorem definit ture machin equival usual definit help formula simpler assum machin scan cell content state machin scan successor content content set occurr defin rem store regist binari encod number number number scan cell content current state occurr read word enter configur configur reach cell number read sequenc match content regist encod cell read sequenc consist binari encod number symbol set regist size defin formula care case increas express rem cost data complex iti intract theorem eval pspace data complex finit alphabet formula singl regist eval pspace hard addit hold input restrict graph databas proof upper bound corollari proof upper bound theorem fact clear process carri pspace assum fix queri fact pspace upper bound number regist queri lower bound defin formula constant reduct class problem solvabl ture machin tape size input word size evalu problem precis barcelo fontain lin ture machin constant problem pspace hard word size accept cell prove formula size graph iff accept cell ture machinem input alphabet blank symbol initi state final state transit map stand left stand formula associ machin formula form formula quantif path variabl word path graph will encod accept word word size consid configur content tape word head scan cell number machin state proof theorem encod configur word dci encod cell number configur defin dci pair defin letter content cell letter equal head scan cell number equal state word infinit sequenc configur form encod word play role delimit will defin formula graph path satisfi iff label encod defin accept path encod consist part label encod initi configur label second encod remain path path subgraph second path subgraph independ graph will edg node node graph graph data carri node indic label outgo edg initi configur defin recal indic content cell number head express path queri graph data scan cell uniqu path node incom edg uniqu node outgo edg label word encod initi configur defin graph encod remain machin node data admit outgo edg label path left node node edg label label form belong encod configur machin path left node node edg label label form ecl eci encod configur machin readi defin graph edg label edg uniqu node outgo edg left node defin formula alphabet formula iff form barcelo fontain lin label accept machin fact will intuit easier defin formula iff form defin formula disjunct subformula satisfi start letter encod final configur occurr pair form case express formula rem case express formula set formula express pair form form substr form occur pair form consecut configur happen reason modifi proper content cell move proper head modifi content suppos remain constant will treat case treat case proof theorem treat case proof theorem consid definit ture machin equival usual definit help formula simpler assum machin scan cell content state machin scan successor content content case case distinct suppos case happen modifi content cell scan head configur note move definit modifi content cell scan configur pair set defin set occurr symbol formula reach final state store regist number cell scan current configur content configur read word read cell label edg pair form formula take care case move configur modifi content cell scan configur suppos move modifi content cell scan suppos machin suppos modifi content express path queri graph data letter set pair set pair defin rem reach final state configur store regist number unscan cell content assum cell number exist scan head move cell number configur pair describ cell number pair assum cell number exist scan head move cell number configur cell number describ pair express configur case cell number unscan cell content read word node store regist label edg pair formula take care case case cell modifi cell unscan head finish proof theorem introduc interest languag base restrict tractabl data complex better suit databas applic languag proper extens rem remark express power express power express power logic proven crpq subsum subsum crpq subsum hand subsum theorem theorem standard time space hierarchi theorem complex theori proposit proposit express power incompar hand argu natur queri interact data topolog express aforement queri exampl mention exampl hamilton exist eulerian trail bipartit connect graph number node express express conjectur express exist hamiltonian path graph queri express regist rememb edg consist node formula singl regist rem check path node repeat simpl path rem check barcelo fontain lin node store regist appear path fact queri express path simpl express formula node graph databas mention express formula express bipartit properti graph theori undirect graph bipartit set node partit set edg well graph databas bipartit cycl odd length express exist odd length cycl express express graph databas connect graph odd number node suffici express exist hamiltonian path number edg graph simpl modif formula express hamilton add check number edg conjunct close entir formula existenti quantif tractabl data complex posit fragment logic forbid negat conjunct explicit easi prove data complex evalu problem tractabl nlogspac fragment class conjunct rem identifi tractabl data complex express power limit proposit proposit queri introduct express proof recal queri find pair node node path node connect suppos contradict formula alphabet regist express assum form disjunct conjunct atom graph edg label queri true formula true assign map variabl node path variabl path variabl tupl graph set occur express path queri graph data delet edg definit formula remain true assign true impli hold natur number occur simpli path edg impli set occur edg admit edg form edg occur graph form true contradict fact true hand increas express power simpl form negat lead intract queri evalu data complex proposit finit alphabet rem singl regist eval pspace complet proof proof theorem notat ture machin formula size graph size polynomi iff accept cell formula formula form set rem rem close union equival formula form formula equival prove eval ispspac complet prove eval pspace complet formula form rem intuit differ choos data regist check true store regist check true will chang modifi graph arbitrari node reachabl easili achiev edg node graphh left node graph allow encod initi configur second modifi rem label path satisfi barcelo fontain lin rem encod accept reach final state node check reach final state simpli store regist leav detail intuit pretti simpl detail bit tedious case basic navig languag graph databas increas express power cost evalu extend formula branch oper style class nest regular express idea appli scenario extend atom rem formula branch oper languag express extens express queri remain tractabl data complex formal idea class nest rem nrem extend rem nest oper defin nrem nrem intuit formula filter node data graph origin path pars formal nrem regist data graph consist tupl form jekg node path tupl nrl logic allow atom formula form nrem data graph assign write jekg semant nrl semant atom formula expect exampl queri express nrl nrl increas express exampl graph databas queri introduct express nrl formula regist intuit check path node precis node store regist check node path reach node store regist formula defin set pair node path regist node satisfi node connect extra express power nrl affect data complex queri evalu theorem evalu nrl formula nlogspac term data complex proof data graph nrl formula assum loss general boolean studi complex decid case boolean input consist assign simpli replac free variabl evalu algorithm describ formula assum loss general form tupl node variabl tupl regist assign variabl tupl path variabl quantifi free assum set nrem mention express path queri graph data nrem evalu algorithm guess wit existenti quantifi node regist assign variabl assum guess tupl node ariti guess tupl element ariti clear repres logarithm space fix algorithm guess wit existenti quantifi path variabl wit codifi actual path intepret case string list precis order endpoint tupl jekg wit tupl hard repres logarithm space final algorithm check guess satisfi boolean combin atom formula explain logarithm space atom formula logic atom formula form evid atom formula form requir check wit equal wit atom formula form requir check wit endpoint correspond wit final formula form requir check jekg wit clear logarithm space thing remain check consist check path variabl mention wit path codif correspond tell endpoint path check path case jekg time tell explain nlogspac combin techniqu rem nest regular express evalu algorithm start comput express form appear set pair form node tupl order proceed recurs depend nest depth express nest subexpress maximum nest depth subexpress form algorithm start express nest depth rem nest techniqu comput nlogspac set express continu express nest depth case aforement techniqu time procedur ask check subexpress nest depth simpli check process continu iter set subexpress comput clear iter process perform nlogspac previous step finish algorithm check path case jekg time tell nlogspac appli techniqu previous paragraph knowledg provid set result fact nlogspac function close composit barcelo fontain lin proof theorem nrl formula evalu pspace combin complex conclus futur work proven data complex walk logic nonelementari rule practic logic propos regist logic extens regular express memori paper regist logic capabl express natur queri interact data topolog data graph preserv elementari data complex queri evalu pspace final regist logic tractabl data complex nlogspac logic nrl time preserv level express leav open problem futur work interest question studi express power extens walk logic comparison ecrpq exampl consid extens regular test atom formula test path belong regular languag simpl case express power logic compar ecrpq obvious second nrl strict express final will mention express bipartit open open question leav open queri graph databas connect graph number node express refer angl guti rrez survey graph databas model acm comput survey barcelo queri graph databas acm symposium principl databas system pod barcelo fontain lin express languag path queri graph data confer logic program artifici intellig reason lpar barcelo libkin lin wood express languag path queri graph structur data acm transact databas system barcelo rez reutter relat express nest regular express alberto mendelzon intern workshop foundat data manag amw clark grumberg pele model check mit press cruz mendelzon wood graphic queri languag support recurs acm sigmod confer hell kuijper van den bussch zhang walk logic framework path queri languag graph databas intern confer databas theori icdt kaminski francez finit memori automata theoret comput scienc libkin regular path queri graph data intern confer databas theori icdt libkin regular express data confer logic program artifici intellig reason lpar libkin marten queri graph databas xpath intern confer enc databas theori icdt libkin reutter vrgoc trial rdf adapt graph queri languag rdf data acm symposium principl databas system pod express path queri graph data mendelzon wood find regular simpl path graph databas siam journal comput robertson structur complex weak monad second order theori natur number annual acm symposium theori comput stoc stockmey complex decis problem automata theori logic thesi mit vardi complex relat queri languag annual acm symposium theori comput stoc wood queri languag graph databas sigmod record work licens creativ common attribut noderiv licens view copi licens visit http licens send letter creativ common second suit san francisco usa eisenach strass berlin germani 