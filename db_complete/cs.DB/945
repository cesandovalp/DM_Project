cost optim data flow base task order georgia kougka aristotl univers thessaloniki anastasio gounari aristotl univers thessaloniki abstract analyz big data high dynam environ critic increas process data modern data flow complex effici cost base fulli autom scalabl optim solut facilit flow signer state art propos fail provid optim solut simpl data flow tackl problem introduc set approxim algorithm defin execut order constitu task order minim total execut cost data flow advantag parallel execut data flow valid propos real tool synthet flow achiev speed move closer optim solut keyword data flow optim task reorder pdi introduct data analysi high dynam environ critic order extract high qualiti raw data nowaday produc extrem scale ultim goal deriv tionabl time manner typic employ email address georkoug georgia kougka gounaria anastasio gounari fulli autom data centric flow simpli call data flow busi intellig scientif purpos typic execut demand perform requir complet ond meet requir combin volatil natur environ data rise effici optim techniqu tailor data flow data flow defin process larg data volum sequenc data manipul task exampl real analyt flow process free form text data retriev twitter tweet comment product order compos dynam report consid sale advertis campaign user feedback perform dozen step exampl step includ extract quantifi user sentiment text analysi filter group expand contain tweet lookup static data sourc exampl process newspap articl perform linguist analysi extract name entiti establish relationship compani person task flow direct correspond relat oper filter group aggreg join encapsul arbitrari data transform text analyt machin learn algorithm step data flow design speci ficat execut order constitu task practic result manual procedur case optim flow execut plan data flow optim specif input data set prove suboptim data set characterist tackl problem propos optim algorithm provid optim execut order task data flow effici manner reliev flow design burden select task order consid singl optim object minim sum task execut cost assum execut cost task depend volum data process turn depend relat posit task execut flow main challeng flow optim address differenti problem tradit queri optim arbitrari task order valid optimiza tion algorithm respect preced constraint task introductori exampl move task pute averag sentiment tweet execut task quantifi sentiment user text analysi flow larg constitu task main implic queri optim techniqu oper ate plan ten oper belong relat algebra oper reorder typic permit applic success domain reason data flow solut propos work partial inspir queri optim explain propos deal applic task reorder data flow common characterist propos slow find exact solut small flow find suboptim approxim solut bigger flow work state art approxi mate exact solut approxim solut applic larg flow attain better perform time speed set stand case speed three order magnitud exact solut propos scale general process larger flow current amen exact optim solut appli flow compris type task requir input common metadata task independ averag task select task cost invoc time unit initi target linear flow flow describ chain activ singl sourc singl sink task relax assumpt propos optim solut valid proof concept real environ pentaho data integr pdi widespread data flow tool addit perform thor ough evalu exist approach synthet data flow summari contribut provid case studi data flow optim implement pdi provid insight ineffici exist approach actual benefit approach condit practic deriv optim linear flow number task larg contrari case queri optim effici solut leverag algorithm enumer valid topolog order dynam program backtrack techniqu introduc novel approxim low complex algorithm task reorder data flow form chain discuss algorithm produc flow execut plan task send output downstream task parallel proach suitabl task select fur ther improv perform flow execut plan extend solut mention linear flow arbitrari number sourc sink conduct thorough experi synthet flow detect best optim algorithm linear linear data flow propos evalu prove approach introduc consist outperform state art experi extend abstract idea appear problem statement background paper deal problem order task data flow violat preced constraint task perform flow maxim data flow repres direct acycl graph dag task correspond node graph edg node repres intermedi data ship ping task data flow exchang data task explicit repres edg main notat terminolog assumpt direct acycl graph denot node graph correspond flow task repres edg correspond flow data task correspond execut plan data flow defin exact execut order task set task size flow task respons read retriev store data manipul data edgem set edg size edg edgei equal order pair denot task send data task acycl direct acycl graph defin preced constraint depend exist pair task formal set order pair pair denot preced valid path impli graph correspond higher level execut view data flow exact order task defin partial order defin execut plan respect preced con straint term logic equival flow work initi focus singl input singl output siso flow siso data flow defin flow task incom edg task task outgo edg task incom edg term sourc task task outgo edg term sink task siso flow depend edg sourc task sink task sourc task sink task exampl siso flow figur figur siso flow execut linear flow parallel flow linear physic flow form chain sourc sink task exact incom outgo edg parallel physic flow output singl task fed multipl task parallel linear flow parallel flow figur logic remaind paper will term task servic activ interchang figur exampl logic equival parallel execut plan siso linear conceptu data flow equival flow siso flow logic equival linear call siso flow logic conceptu linear flow task describ tripl seli inpi dataflow assum task receiv data item input output data item result databas terminol ogi data item refer tupl task element cost metric time cost task maximum rate invoc task select seli denot averag number return data item sourc tupl servic filter oper seli data sourc oper manipul input sel oper produc output record input record seli input inpi denot size input task number tupl input data tupl depend product select preced task execut plan formal preci set preced task inpi prec selj output outi size output task sourc tupl easili deriv quantiti equal inpis quantiti assum select indepen dent infer inpi task characterist depend implicit assumpt select independ case product will arbitrarili erron approxim actual select subplan task posit cost select task independ exact includ problem statement set task cost select valu correspond preced constraint graph aim find valid minim sum cost metric scm sourc tupl defin scm inpici inpncn optim plan denot note input set tupl process task data flow typic input tupl attribut requir flow activ unnecessari tupl attribut flow resembl assembl model execut flow activ unnecessari attribut impli task flow abil reorder long preced constraint task preserv problem complex prove find optim order task hard problem flow task character cost input record select cost task linear function num ber record process number record depend product select preced task assum independ selectiv iti simplic iii optim criterion minim sum cost task condit hold case problem intract discuss polynomi time algorithm approxim optim plan factor posit constant note modifi optim criterion optim bottleneck cost metric critic path render problem tractabl motiv case studi kettl applic data flow real busi tool name pentaho data integr pdi kettl order highlight impact optim propos perform flow execut introduc data flow figur analyz tag refer product retriev tweet twitter order compos dynam report associ sale market campaign analyz task data flow flavour combin detail data set data flow process case studi purpos observ data flow singl stream sourc output tweet product flow access static sourc lookup oper initi stream sourc task call tweet flow consist record tweet attribut product refer coordin timestamp data flow describ tweet arriv timestamp string attribut tag task comput singl sentiment rang product mention tweet sentiment analysi lookup oper map product refer tweet perform lookup productid filter appli order choos product rang product valu filter product task lookup task map geograph latitud longitud tweet geograph region lookup region task extract timestamp convert tweet timestamp filter appli choos date specif period time filter date order implement task sentimentavg sentiment valu averag region product sort valu region product appli task sort region product flow continu lookup oper map total sale product region product lookup total sale map campaign interest total sale previous task figur real analyt flow flow task cost sec select tweet data sourc sentiment analysi lookup productid filter product lookup region extract timestamp filter date sort region product sentimentavg lookup total sale lookup campaign filter region report output tabl cost select valu lookup campaign final user option narrow report order focus specif region filter task filter region addit intermedi static sourc input lookup oper cost embed cost task static record input lookup task execut sourc task product record product name region sourc task record set coordin correspond region sourc static task name sale consist sale detail sold product price quantiti region product sold static sourc task name campa campaign combin day campaign region will place product campaign concern tabl select cost valu comput specif dataset record machin intel pentium cpu ram observ expens task group lookup task cost order magnitud compar expens three filter task rest task modifi number record note general select higher data flow scenario select valu lookup transform task select valu correspond filter group task vari tabl preced constraint task present left arrow task preced task defin tabl data flow tabl preced constraint data flow figur preced constraint sentimentanalysi sentimentavg lookupproductid ilterproduct lookupproductid sortregion roductandd lookupproductid lookuptotalsal lookupproductid lookupcampaign lookupregion sortregion roductandd lookupregion lookuptotalsal lookupregion lookupcampaign lookupregion ilterregion extractdatefromtimestamp ilterd extractdatefromtimestamp sortregion roductandd extractdatefromtimestamp lookuptotalsal extractdatefromtimestamp lookupcampaign sortregion roductandd sentimentavg preced constraint describ fulli constrain flow task pcs constraint equival order altern real data flow scenario preserv preced constraint flow present straight forward implement figur appli figur optim plan heurist algorithm flow figur figur optim plan exhaust algorithm figur flow best perform approxim heurist propos optim plan illustr figur case perform improv initi optim flow second previous optim appli exhaust solut flow figur order find optim flow execut cost figur optim plan initi data flow depict case exhaust optim methodolog transpos filter task filter region initi design final option step specif flow metadata tabl obvious optim move pair extract filter task upstream expens filter execut cost optim plan plan time better initi optim mention optim methodolog analyz section repres exampl real manual design data flow exhibit suboptim behavior general draw observ first optim solut yield lower execut cost factor second equal observ simpl case examin exist heurist fail close approxim optim solut generat plan figur main reason exampl approxim solut perform greedi swap adjac activ region filter move earlier campaign lookup task move earlier well action greedi algorithm cover accur algorithm linear execut plan three accur algorithm reorder siso data flow order generat optim execut plan algorithm base backtrack dynam program generat topolog ical sort main novelti examin topo logic sort base algorithm despit worst case complex counter intuit evalu algorithm practic larg preced constraint general scale better option appli arbitrari flow medium larg size backtrack backtrack algorithm find execut plan gener ate reorder task data flow preserv preced constraint algorithm enumer valid flow plan appli set recurs call flow generat data flow plan backtrack placement task spe cific posit violat preced constraint algorithm propos flow optim complex worst case time complex backtrack factori depend order will examin brute forc manner dynam program algorithm extens system type queri optim produc linear join order rational dynam program algorithm term henceforth data flow remain calcul cost task subset size base subset size subset optim solut valid preced constraint algorithm consid flow size flow task nth task key point optim subset size previous step algorithm exhaust examin flow task yield optim subplan size exampl algorithm start calcul subset consist task second step examin subset task examin complet flow number optim empti subset flow equal detail pseudocod exampl provid appendix complex time complex examin subset task subset size examin element subplan check involv test rest task violat preced constraint task element comparison time complex space complex deriv size auxiliari data structur employ three vector size explain appendix store element size space complex topolog sort topsort algorithm topolog sort algorithm base find topolog sort partial order finit set case partial order preced constraint reason algorithm implicit prune invalid plan effici generat plan base previous plan ter perform minim chang purpos work adapt topolog sort algorithm order generat execu tion plan data flow detect execut plan minimum cost algorithm assum receiv input valid task mutat trivial linear time generat valid execut plan appli cyclic rotat swap adjac task first process generat valid flow execut plan topolog sort task flow base partial sort generat valid order plan stage algorithm task left partial plan step stage swap task task partial plan maintain relat posit stop move swap violat preced constraint task transpos second stage algorithm cyclic rotat partial plan consist task preced task posit left initi posit generat topolog sort exampl topolog sort partial plan will generat transposit task generat plan estim total execut cost final choos flow execut plan best perform pseudocod exampl detail appendix complex algorithm check permut time complex worst case compar algorithm produc topolog sort effici space complex plan store main memori point execut approxim algorithm linear execut plan high complex problem hand develop approxim solut generic case consist part exist solut includ straightforward extens exist propos applic problem main novelti approxim optim linear data flow will evalu gap perform optim solut exist approxim algorithm propos fill gap exist solut algorithm reflect current state art task order linear flow implement detail exampl provid appendix swap swap algorithm start random valid execut plan plan trivial comput linear time singl topolog dere algorithm compar cost exist execut plan cost transform plan swap adjac task provid constraint satisfi perform check pair adjac task repeat chang occur swap equival propos task order allow complex swap algorithm repeat time iter complex space complex linear equal complex need store singl plan order prove swap approxim adequ provid exampl algorithm fail yield optim solut assum flow three inner task task sourc sink cost equal select preced constraint task initi plan scm initi introduct exist algorithm appear optim plan scm swap produc plan perform transposit initi produc wors plan eventu lead better solut swap task greedyi greedyii greedyi start empti plan step add activ maximum seli provid meet prece denc constraint step sourc task chosen elig bear similar chain algorithm algorithm propos problem append activ minim time complex greedi algorithm consist step step check perform find effici valid task append help appro priat data structur complex drop nlogn swap optim solut exampl exampl three task cost select preced constraint greedyi will append best plan explain earlier greedi algorithm greedyii rational greedyii greedyi apart fact construct optim execut plan left sink sourc partit partit form cluster activ consider elig cluster consist activ prerequi site consid previous cluster build cluster cluster optim separ check permut cluster task greedyi propos data integr system detail partit run time worst case preced constraint check permuta tion partit size general complex size largest cluster inapplic cluster dozen task previous optim exampl three task easi verifi find optim plan step form cluster task decid place yield better subplan preced constraint topsort swap greedi greedi initi cost preced constraint topsort swap figur averag left maximum improv exhaust solut algorithm rank order base high level algorithm requir set task graph ensur direct acycl graph repres optim plan pre process phase appli kbz algorithm post process phase algorithm base rank order motiv propos approxim solut dis cuss deviat optim order prove conduct experi small flow appli exhaust techniqu optim plan feasibl figur left examin random generat data flow consist task cost sel preced constraint perform improv deriv applic accur algorithm high topsort algorithm better perform improv compar random initi flow respect preced constraint general swap heurist algorithm best perform improv averag figur maximum normal differ swap topsort algorithm present observ case topsort algorithm better perform improv best heurist find highlight propos approxi mate optim methodolog order provid optim flow execut plan fulfil propos set rank order base approxim algorithm analyz build join order algorithm propos queri optim will refer kbz algorithm leverag rank task defin seli depend task solut describ high level algorithm main novelti preprocess flow kbz applic post process result kbz algorithm order guarante valid improv intermedi option phase perform three concret suggest constitut novelti exampl appendix kbz kbz algorithm propos semin queri opti mizat algorithm join order algorithm consid specif form preced constraint represent root tree rational algorithm order task rank case defin preced con straint task merg rank valu updat fact kbz algorithm allow tree shape preced constraint graph impli task independ prerequisit activ data flow scenario percentag prece denc constraint low decreas number task node flow case occur frequent practic time complex kbz algorithm propos call pre process phase ensur transform graph tree shape move incom edg maximum rank task incom edg allow kbz produc invalid flow order ing employ post process phase violat resolv move task upstream need prerequisit task earlier worst case complex pre process phase remov incom edg complex task repeat task flow addit post process figur merg exampl step check task preced task violat preced constraint preced task flow order worst case complex practic averag time complex lower phase algorithm approach order render kbz applic pre process phase approxim algorithm detect path preced constraint graph share intermedi sourc sink merg singl path base rank valu multipl path start merg upstream nest path start merg innermost preced constraint preserv expens implicit examin fewer order exampl figur exampl merg procedur enforc preced constraint origin task preced task task merg process impos restrict order local optim deviat global optim solut averag case requir post process result valid will evalu general behav better case perform wors exampl appendix case time complex remain merg process consid flow task repeat merg process algorithm iii requir set task direct acycl graph preced constraint optim plan direct acycl graph return ensur direct acycl graph repres optim plan repeat maximum subplan size consid consid move subplan size start sth task tth task chang appli iii evalu propos algorithm isol data flow case optim exampl reorder filter task earlier stage flow restrict preced constraint order reduc data flow will process fill gap propos iii support effici optim data flow case iii algorithm present algorithm tackl limit help post process phase introduc appli algorithm order produc intermedi execut plan examin transposit check transposit flow size task plan check appli left address problem task trap suboptim place upstream flow execut addit implicit constraint introduc transposit figur appendix process describ nest loop algorithm repeat chang flow plan reason repeat appli transposit enabl valid transposit initi figur exampl flow parallel execut post process phase iii algorithm complex iti deriv maximum number three inner loop execut repeat process theori execut time practic larg flow chang time experi set parallel optim solut focus advantag parallel execut plan explain parallel physic flow singl task multipl outgo edg impli output task fed input multipl task figur observ singl task multipl outgo edg multipl ingo edg case singl task receiv input data output multipl task join workflow pattern present outgo edg multipl task execut parallel converg singl task case consid merg split process softwar tool pdi implement incorpor merg join process merg multipl input stream incur extra execut cost assess cost evalu parallel data flow execut pdi tool conclus merg task cost small total flow execut cost merg task addit lightweight activ addit size input inpi task receiv incom edg defin task incom edg comput product select valu preced task describ analyz parallel flow execut benefici theoret exampl consid subsequ task illustr figur preced constraint extra cost merg process will denot figur altern plan linear middl parallel scm valu altern vari respect activ distinguish case superscript differenti input case case linear execut cost lower parallel execut cost inp parallel parallel inp linear inp parallel extra merg cost parallel version inp parallel case parallel benefici case case linear execut flow benefici parallel note select affect previous statement case iii parallel execut better perform linear execut case inp parallel fact deduc inp parallel generic case wheremc comput estim cost order verifi option benefici expect small valu parallel execut outperform case rational previous case clear winner execut figur optim linear plan will place correspond case linear plan better parallel previous describ simpl extens ist solut order web servic describ propos novel post process step appli solut previous order render output plan parallel solut leverag general analysi base find case iii parallel task select higher figur exampl execut siso flow parallel pgreedyi pgreedyii pgreedyi optim algorithm distinct featur gen erat parallel flow execut plan rational pgreedyi order flow task amount data receiv task select reduc push select flow task filter task earlier stage flow prune input dataset base select valu optim execut plan dispatch output task multipl task parallel place sequenc flow task select candid parallel execut flow employ algorithm generat parallel flow execut plan detail descript pgreedyi algorithm present appendix weak point pgreedyi step find task minimum cost consid implic task high select second flavour pgreedyii choos activ cost activ highest rank penal task low cost high select yield lower scm valu plan algorithm time compex worst case explain execut siso flow parallel algorithm post process step parallel siso flow requir optim linear plan direct acycl graph preced constraint ensur direct acycl graph repres optim parallel plan selp delet edg task predecessor task connect edg task creat edg connect edg preced task outgo edg connect edg task outgo edg order exploit advantag propos optim tech niqu algorithm introduc post process phase execut data flow parallel generat optim linear execut plan appli post process step restructur flow subsequ task select greater execut parallel incur violat preced constraint post process step appli optim algorithm produc linear order exampl present figur upper flow scenario choos parallel task flow case depict bottom figur execut parallel task preced constraint append constraint execut parallel task select execut parallel figur exampl mimo data flow type butterfli left fork task complex parallel task examin case preced task check number exceed extens mimo flow algorithm optim mimo flow repeat extract siso segment siso segment optim siso segment appli factor distribut optim modifi siso seg ment chang discuss case singl sourc singl sink task arbitrari multipl input multipl output mimo flow benefit solut present previous section generic type mimo flow describ figur main differ siso mimo flow apart order task addit optim oper appli explain factor distribut oper move activ appear input subflow binari activ output allow exampl filter oper initi merg task push merg input provid addit consid case activ split activ consid filter condit refer input yield better perform figur mimo flow consist linear flow optim siso data flow play role optim mimo flow algorithm describ propos optim mimo flow base extract linear segment flow appli optim algorithm siso flow check appli factor distribut oper modifi linear segment process repeat converg work focus sole task order correspond optim linear segment individu investig techniqu combin task order addit oper left futur work experiment analysi set experi conduct order evalu factor perform optim correspond minim estim flow execut cost scm perform improv measur percentag decreas scm optimiza tion time overhead term real time generat opti mize execut plan requir construct synthet flow thorough evalu algo rithm wide rang paramet combin deriv unbias generic applic lesson behaviour algo rithm main configur paramet three number task rang includ sourc sink task cover rang small larg data flow cost select valu flow task distribut rang uniform beta distribut iii number preced constraint flow task general consid case constraint larger opportun optim exist small valu pcs impli exist valid order problem reduc filter order databas queri preced constraint interest rememb real case expect pcs order conduct experi random generat dag task characterist simul environ men tion experi repeat time averag valu present discuss real time machin intel core cpu ram perform improv present gap best perform heurist swap accur solu tion small flow extrapol gap remain widen larger flow main purpos rank order base solut capabl fill gap discuss perform benefit parallel siso flow final eval uat propos mimo flow algorithm present observ case topsort algorithm better perform improv best heurist find highlight propos approx imat optim methodolog order provid optim flow execut plan perform rank order base solut figur present comparison rank order base optim methodolog initi flow execut plan swap valu normal perform initi random execut plan figur perfor manc improv optim propos pcs base main observ iii clear winner outperform optim algorithm erag percentag examin lesson averag improv iii swap iii yield better perform swap averag differ observ iii averag time faster swap case addit maximum observ speed isol case higher exampl total number flow task iii swap initi cost total number flow task iii swap initi cost total number flow task iii swap initi cost total number flow task iii swap initi cost figur improv scm metric pcs top left pcs top pcs bottom left pcs bottom observ speed time favor iii speed exceed time order magnitud outperform preced constraint erag zoom isol run portion plan better preced constraint clear winner observ figur combin figur iii elimin gap approxim accur solu tion task flow provid strong insight optim iii practic real experi feasibl order establish ground truth bigger flow optim theoret prove explain experi refer uniform distribut valu cost select repeat experi valu follow beta distribut describ select explain test paramet distribut big differ tabl normal perform data flow engin constraint uniform distribut cost select valu initi iii swap avg diff max diff beta distribut cost select valu initi iii swap avg diff max diff main beta distribut paramet set tabl present perform improv iii swap heurist normal cost initi random generat plan pcs column tabl comput iter avgdiff swap roiii swap maxdiff max swap roiii swap closer valu bigger relat improv iii main observ beta distribut valu formanc iii swap improv case flow consist task iii scm impli speed reduct higher uniform distribut metadata terest specif iter maximum observ decreas order magnitud general larg flow perform improv beta distribut valu higher techniqu perform parallel optim solut set experi conduct order evalu perform data flow execut parallel techniqu discuss compar parallel version swap name pswap parallel propos rank order base algo rithm denot pro pro pro iii compar pgreedyii outperform pgreedyi addit periment appendix initi assum merg cost relax assumpt comparison present tabl tabl normal perform data flow task alg pcs initi pswap pswap pgreedyii pgreedyii pro pro pro pro pro iii pro iii alg pcs initi pswap pswap pgreedyii pgreedyii pro pro pro pro pro iii pro iii parallel version iii pro iii strengthen posit best perform techniqu merg cost consid name algorithm coupl prime symbol moment focus tabl row linear flow pcs iii decreas scm swap tabl parallel set decreas scm compar pswap pro iii reach perform improv reach tabl relat improv pcs pcs pcs question aris parallel lead benefit alyz individu run observ number currenc count improv higher total number flow task initi cost pro iii swap figur mimo optim preced constraint magnitud improv strong correl number pcs constraint set pcs observ speed order magnitud pcs maximum observ speed drop time respec tive pcs speed exceed final note pgreedyi best perform parallel heurist fulli propos work main conclus refin linear order propos light weight post process step yield tangibl perform improv propos lead advanc current state art linear flow optim repeat experi merg cost verifi impact neglig tabl real experi pdi tool set order magnitud higher expens task order magnitud lower expens averag best perform solut pro iii continu averag perform improv swap order magnitud perform mimo flow set experi consid evalu methodolog analyz mimo data flow optim consid case butterfli flow figur left case consid linear segment task number task percentag pcs figur present averag perform improv pro iii total number flow task tim topsort total number flow task tim topsort preced constraint tim topsort topsort preced constraint tim backtrack topsort figur optim overhead topsort preced constraint top left topsort pcs top pcs vari bottom left backtrack topsort rang preced constraint bottom swap algorithm optim initi data flow case linear segment small task improv small well linear segment size increas pro iii better perform improv swap lower execut cost compar optim case perform improv commensur tabl support claim propos siso flow transfer mimo set well time overhead conduct thorough evalu time overhead accur optim algorithm purpos set experi ment applic exhaust algorithm topsort limit small constrain flow figur top left present averag execut time algorithm compar topsort solut preced constraint figur depict time overhead execut data flow flow task main conclus drawn figur algorithm practic optim solut small flow consist flow activ execut flow task requir day test machin topsort algorithm run time faster execut topsort pattern figur top averag execut time topsort flow preced constraint impli number order restrict topsort scale well accept time medium size flow task addit figur bottom left depict topsort scale arbitrari preced constraint flow flow activ exampl execut time data flow task preced constraint order magnitud higher execut time data flow task final bottom figur time overhead backtrack compar topsort present main observ figur preced constraint rang pcs backtrack time slower topsort conclud topsort hand scale better techniqu applic specif case approach scale general overhead approxim solut neglig work exist approach flow optim classifi fol low main categori subsequ present turn optim structur data flow categori target methodolog optim flow execut plan chang structur flow graph includ task order optim resourc alloc schedul aspect data flow propos categori deal issu alloca tion comput resourc specif execut engin flow time schedul detail workflow structur applic depend solut categori optim techniqu specif set interest techniqu leverag databas technolog optim structur data flow aspect categori relev work consid flow optim inspir queri process techniqu optim algorithm queri plan depend constraint algebra oper present adapt algorithm siso problem set consid algebra oper reduc exist optim algorithm present previous section greedyi partit hoc queri optim methodolog employ order perform structur reform reorder introduc servic exist workflow work investig systemat approach optim extract transform load etl flow analyz author consid etl execut plan state transit swap merg split distribut generat state order navig state space correspond execut plan altern optim algorithm reduc etl workflow execut cost albeit exponenti complex work consid task order propos correspond swap algorithm present evalu interest approach flow optim present optim base analysi properti user defin function implement data process logic work cuse techniqu infer depend constraint task examin intern semant task reorder algorithm introduc suit qualiti met ric qox flow optim algorithm detail addit portion propos flow optimiza tion proceed flow structur optim perform task reorder exampl interest propos aim bine control data flow view workflow appear work present approach merg task data manag decreas number invoc under databas chang relat order task data orient method workflow optim propos order minim execut cost method base fact data share function workflow perform stand benefit opti mizat form incorpor share databas handl common data orient task workflow optim method workflow structur view improv effici workflow present method inspir current limit busi process task redesign method present base consolid task reduc execut time qualiti servic requir qos preced flow technolog support cost account methodolog choos optim physic implement task decid introduc special sort task present implement altern work consid execut order flow activ optim workflow discuss techniqu limit straightforward applic queri optim techniqu join reorder push select optim resourc alloc schedul aspect data flow main motiv propos categori stem effici resourc manag resourc manag ment deem key perform factor contrari work assum execut set multipl execut engin deal optim flow task order exampl introduc resourc alloc algorithm heurist techniqu abil account constraint cost optim user deadlin workflow partit assign deadlin discuss methodolog execut dispatch task activ parallel comput famili optim propos deal task schedul meth consid aspect semant express workflow task namic select servic candid latenc minim schedul method exclus late grid workflow optim linear workflow optim discuss optim time schedul fix alloc activ engin set optim algo rithm base deadlin time constraint analyz schedul flow propos flow optim present base soft deadlin reschedul order deal problem fault toler flow execut optim methodolog minim perform fluctuat occur resourc divers consid deadlin propos addit set optim methodolog base multi object optim exampl auction base schedul methodolog multi object flow optim present propos optim methodolog multi engin environ meet multipl object fault toler perform implement present optim method mention carri help algorithm consider qualiti servic requir ment qos case user respons set constraint reliabl time secur cost fidel principl param ter workflow task schedul work consid resourc alloc schedul issu orthogon task order applic depend solut workflow opti mizat origin optim method creat specif applic applic depen dent exampl applic depend workflow optim dis cuss deal creation process technic docu ment document workflow manag system work par allel opportun present document structur exploit optim workflow exampl process execut manag framework propos order optim busi object process dynam busi environ workflow optim methodolog appli scientif field represen tativ exampl optim algorithm develop molecular model appli simul tool analog exampl achiev workflow optim circumst present optim method adapt general case conclus work deal problem optim execu tion order constitu task data flow order minim sum task execut cost motiv limit fulli autom optim solut data flow nowaday optim complex data flow left flow design manual procedur first queri optim techniqu applic data flow optim preced constraint exist propos optim solut scale signif icant propos flow optim methodolog state art optim algorithm higher execut cost optim solut simplest type singl input singl output siso flow small number task fill gap optim optim techniqu propos set approxim algorithm exhibit perform improv best exist heurist introduc post process optim phase parallel execut flow task order improv formanc data flow extend solut complex data flow scenario deal arbitrari number sourc sink work aim provid basi holist flow timiz algorithm consid complex flow combin task order aspect task implement schedul acknowledg financ european union european social fund esf greek nation fund oper pro gram educ lifelong learn nation strateg refer enc framework nsrf fund program thale invest knowledg societi european social fund refer chaudhuri dayal narasayya overview busi intelli genc technolog commun acm ogasawara oliveira valduriez dia porto mattoso algebra approach data centric scientif work flow pvldb simitsi wilkinson castellano dayal optim ana lytic data flow multipl execut engin proc acm sigmod int conf manag data rheinla nder heis huesk leser naumann sofa extens logic optim udf heavi dataflow corr olston chopra srivastava generat exampl data dataflow program proceed acm sigmod ternat confer manag data sigmod huesk peter sax rheinla nder bergmann kret tek tzouma open black box data flow optim pvldb halasipuram deshpand padmanabhan determin sential statist cost base optim etl workflow edbt chaudhuri overview queri optim relat system proceed seventeenth acm sigact sigmod sigart symposium principl databas system june seattl washington acm press ioannidi queri optim acm comput surv simitsi vassiliadi selli state space optim etl workflow ieee tran knowl data eng yerneni ullman garcia molina optim larg join queri mediat system icdt pentaho data integr kettl http kougka gounari optim data intens flow need solv dolap appear zinn bower mcphillip luda scher scientif workflow design data assembl line proceed workshop workflow support larg scale scienc work acm burg munagala srivastava order pipelin queri oper ator preced constraint technic report stanford infolab srivastava munagala widom motwani queri optim web servic proc int confer larg data base vldb agraw benoit dufoss robert map filter stream ing applic algorithmica seling astrahan chamberlin lori price access path select relat databas manag sys tem proceed acm sigmod intern confer enc manag data varol rotem algorithm generat topolog sort arrang comput journal kougka gounari declar express optim data intens flow dawak kumar kumar effici heurist logic optim etl workflow birt ibaraki kameda optim nest order comput relat join acm tran databas syst krishnamurthi boral zaniolo optim nonrecurs queri vldb van der aalst ter hofsted kiepuszewski barro workflow pattern distrib parallel databas vassiliadi karagianni tziovara simitsi benchmark etl workflow proceed interna tional workshop qualiti databas qdb vldb confer vienna austria septemb babcock chaudhuri robust queri optim prin cipl practic approach sigmod confer florescu levi manolescu suciu queri optim presenc limit access pattern proceed acm sigmod intern confer manag data sigmod acm kougka gounari optim work queri process techniqu ssdbm dayal castellano simitsi wilkinson data integra tion flow busi intellig proc int conf extend databas technolog advanc databas technolog edbt acm vrhovnik schwarz suhr mitschang markl maier kraft approach optim data process busi process vldb minglun weidong shanlin data orient analysi workflow optim proc congress intellig control autom volum ieee comput societi dewan seidmann walter workflow optim task redesign busi process hicss ieee comput societi tziovara vassiliadi simitsi decid physic impl mentat etl workflow proc acm int workshop data wareh olap dolap cost base optim integr flow thesi duan prodan fahring perform cost optim multipl larg scale grid workflow applic proceed acm ieee confer supercomput xiao chang optim workflow resourc alloc cost constraint proc int conf comput support cooper work design springer verlag schikuta wanek haq grid workflow optim dynam chang resourc condit concurr comput pract exper chen zhang ant coloni optim approach grid workflow schedul problem qos requir ieee tran action system man cybernet applic view kumar sadayappan mehta vahi deelman rat nakar kim gil hall kurc saltz integr frame work perform base optim scientif workflow hpdc acm agraw benoit magnan robert schedul algorithm linear workflow optim ipdp ieee interna tional parallel distribut process symposium ieee comput societi press abrishami naghibzadeh epema cost driven schedul ing grid workflow partial critic path ieee tran parallel distrib syst abrishami naghibzadeh epema deadlin constrain workflow schedul algorithm infrastructur servic cloud futur generat comput system plankenstein prodan meet soft deadlin scientif work flow resubmiss impact parallel distribut system ieee transact calheiro buyya meet deadlin scientif workflow public cloud task replic ieee transact parallel distribut system fard prodan fahring truth dynam workflow schedul ing mechan commerci multicloud environ parallel distribut system ieee transact simitsi wilkinson castellano dayal optim ana lytic data flow multipl execut engin sigmod confer simitsi wilkinson dayal hsu hfms manag lifecycl complex hybrid analyt data flow icd dortman somer document workflow optim pro ceed european simul symposium buco chang luan tang ward pem framework enabl continu optim workflow process ecut base busi metric proc ieee intern confer servic comput lsmann ddermann vrabec reith grow gradient base optim workflow autom develop molec ular model comput physic communic reiner siegel carrino workflow optim current trend futur direct digit imag fasching sastri patel tas rfid wireless sensor network base implement workflow optim wow mom huang akram allan walker rana huang workflow portal support multi languag interoper opti mizat articl concurr comput pract exper pearc langley kang huang kulkarni novo autom workflow effici structur base lead optim journal chemic model algorithm dynam program requir set task direct acycl graph preced constraint ensur direct acycl graph repres optim plan initi partialplan cost sel size partialplan cost sel seli subset set subset size specif subset size tempbest tempset findindex tempset findindex predecessor tempset tempp lan tempset costtempp lan cost sel cost costtempp lan tempbest tempbest costtempp lan updat partialplan cost sel partialp lan appendix extra materi algorithm order implement algorithm three vector size partialplan cost sel algorithm implemen tation cell correspond combin task bit binari represent exampl nari represent posit partialp lan correspond optim order figur metadata exampl data flow figur exampl algorithm task cost sel vector hold aggreg cost select subplan cell partialplan cost optim plan total cost complet pseudocod algorithm sake simplic present algorithm fulli optim updat vertic occur final best plan exampl algorithm flow task metadata figur exampl figur subset length singl task subset estim posit partialp lan matrix subset posit partialp lan subset length greater subset examin case element subset subset preced constraint violat continu placement preced constrain violat algorithm estim cost valid partial plan element posit subset reus order smaller subset cost order subset estim algorithm find order subset minimum cost optim partial plan cost product task select store correspond posit partialplan dpcs vertic exampl partial plan store posit partialp lan matrix correct partialplan size optim solut trivial algorithm initi line algorithm assum partialplan size optim prove partialplan size optim sketch proof will base contradict assum produc optim solut linear solut size consist partialplan size task check altern task optim solut partialplan size partialplan size scm cost subplan size comput sum compon cost subplan size cost task time select task cost solut size task differ compon assumpt cost partialplan size higher subplan solut size definit consequ solut solut yield lower cost complet proof algorithm topsort requir set task cost select direct acycl graph preced constraint ensur order task repres optim plan initi valid topolog order order mincost computescm total number task locat task prerequisit rotat stage rotat element posit cost computescm swap stage swap element cost computescm cost mincost mincost cost appendix extra materi topsort algorithm pseudocod present algorithm algorithm exhaust check permut satisfi preced con straint find optim solut linear flow computescm function construct comput cost order scratch naiv lever age comput previous plan account local chang plan figur exampl find optim plan flow topsort present exampl run step topsort algorithm depict input valid flow execut plan figur exampl topsort algorithm initi plan order plan label assum metadata figur plan describ plan generat rotat swap action optim flow execut plan label final plan order note implement topsort task check left flavour claim capabl yield better perform verifi flow appendix extra materi exist approxim gorithm pseudocod swap greedyi partit algorithm algorithm figur algorithm swap requir set task direct acycl graph preced constraint ensur direct acycl graph repres optim plan randomvalidplan initiliaz swap true swap true swap fals task prerequisit computescm computescm swap swap true figur exampl swap algorithm exampl input figur algorithm greedyi requir set task direct acycl graph preced constraint ensur direct acycl graph repres optim plan cand cand hold candid task hold consid task updatecandid cand list cand empti task cand find task maximum cost cost selj costj add task optim plan updatecandid cand algorithm function updatecandid updatecandid cand task task task prerequisit add task list cand prerequisit add task list cand appendix extra materi rank order base tech niqu illustr exampl rank order methodolog present figur depict metadata detail data flow task input applic iii algorithm figur graph valu select cost rank valu correspond figur exampl greedi algorithm figur exampl partit algorithm task flow mention sink node data flow disconnect flow preced constraint graph assum flow task preced task connect optim procedur finish detail exampl rank order propos describ extend figur pre process phase order transform preced constraint graph tree shape graph graph figur final result depend constraint graph appli kbz algorithm depict algorithm partit requir set task direct acycl graph preced constraint ensur direct acycl graph repres optim plan cand cand hold candid task hold consid task updatecandid cand cand estim permut task cand tempbestcost tempbestplan permut perm costperm computescm permcand costperm tempbestcost tempbestcost costperm tempbestplan perm append perm cand updatecandid cand figur preced constraint graph cost select rank valu data flow activ total execut cost figur pre process phase ensur cycl graph valid post process phase analyz ensur optim execut flow plan violat depend constraint final figur cost optim execut plan figur illustr detail step applic step describ pre process phase merg segment linear flow creat cycl share intermedi sourc sink cost optim flow plan return methodolog figur result post process phase algorithm iii describ phase optim flow plan occur move flow task stage optim cost flow execut figur optim phase appli kbz algorithm figur valid phase ensur preced constraint violat optim execut plan figur applic exampl metadata figur appendix extra materi pgreedi algorithm figur post process phase iii algorithm input generat optim execut plan depict pgreedyi algorithm algorithm methodolog comput task cost consid flavor cost metric cost task defin equal inpici step case add candid task minim inpici optim partial plan second flavour pgreedyii cost metric seli inpici metric take account select servic append execut plan select preced servic figur exampl pgreedyi algorithm applic base second cost metric analyz cost select valu preced constraint figur evalu perform improv pgreedi flavour experi compar propos pgreedi optim algorithm rank base flavour pgreedyii flavour compar swap heurist initi plan cost present perform figur normal cost initi random generat flow execut plan figur left pgreedi better perform improv initi plan cost execut cost pgreedyii lower initi iter pgreedyrank clear winner worst case algorithm pgreedi requir set task direct acycl graph preced constraint ensur direct acycl graph repres optim plan initi adjac matrix optim plan empti initi list cand candid task empti initi list consid task empti updatecandid cand list cand empti task cand optim linear program techniqu deter mine optim cost optim plan cutj optim cut cut set task imm diat predecessor topt task cutopt optim cut topt add topt task optim plan direct edg task cutopt topt topt updatecandid cand computecost cost select pgreedyii improv perform optim plan averag swap best case better perform improv initi flow plan preced constraint figur pgreedyii algorithm outperform algorithm data flow scenario perform provement decreas averag limit reorder best case flow task pgreedyrank lower execut cost swap improv initi execut cost figur exampl pgreedi algorithm total number flow task pgreedyi pgreedyii swap initi cost total number flow task pgreedyi pgreedyii swap initi cost figur perform improv data flow prece denc constraint left preced constraint 