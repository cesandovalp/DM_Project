assign problem size input mapreduc foto afrati shlomi dolev ephraim korach shantanu sharma jeffrey ullman abstract mapreduc algorithm describ map schema assign input set reduc requir output exist reduc receiv input particip comput output reduc capac limit set input assign individu input vari term size consid time map schema input size consider restrict paramet optim mapreduc job communic cost map reduc phase communic cost optim minim number copi input reduc communic cost close number reduc constrain capac accommod appropri input requir input meet reduc satisfi work consid famili problem requir input meet input reduc consid famili problem input set requir meet input set reduc prove find optim map schema famili problem hard bin pack base approxim algorithm find optim map schema keyword distribut comput map schema mapreduc algorithm reduc capac reduc capac communic cost tradeoff introduct mapreduc program system parallel process larg scale data phase map phase reduc phase input data process map phase appli user defin map function produc intermedi data form key intermedi data process reduc phase appli user defin reduc function key associ valu final output provid reduc phase detail descript mapreduc chapter communic cost reduc capac perform measur mapreduc algorithm amount data transfer mapper process implement map function reduc process implement reduc function call communic cost minimum communic cost cours size input transfer data mapper reduc transfer input reduc increas communic cost preliminari version paper appear proceed disc beyondmr school electr comput engin nation technic univers athen greec email afrati support project handl uncertainti data intens applic financ european union european social fund greek nation fund oper program educ lifelong learn program thale depart comput scienc ben gurion univers negev israel email dolev partial support deutsch telekom rita altura trust chair comput scienc lynn william frankel center comput scienc israel scienc foundat grant number cabarnit cyber secur magnet consortium grant institut futur defens technolog name medvedi technion isra internet associ depart industri engin manag ben gurion univers negev israel email korach depart comput scienc ben gurion univers negev israel email sharma depart comput scienc stanford univers usa email ullman depend factor set reduc process larger smaller amount data amount data reduc process wall clock time algorithm degre parallel send data reduc low communic equal size data low degre parallel wall clock time increas maximum amount data reduc hold constraint build algorithm defin reduc capac upper bound sum size valu assign reduc exampl choos reduc capac size main memori processor reduc run arbitrarili set low reduc capac high parallel assum paper reduc ident capac denot work field mapreduc algorithm design investig problem build algorithm minimum communic cost reduc size bound number input reduc allow hold paper consid time problem input size reduc capac upper bound sum size input reduc investig problem input requir meet reduc input exampl problem appear practic motiv exampl three exampl exampl comput common friend input list friend list person pair list friend correspond output will common friend respect person mandatori list friend person compar problem set list friend pair element correspond output common friend person figur list friend common friend common friend common friend figur comput common friend exampl figur skew join exampl heavi hitter exampl drug interact problem drug interact problem set input consist drug drug hold medic histori patient drug object find pair drug side effect order achiev object mandatori pair drug compar exampl skew join relat join relat join attribut output tupl relat larg number tupl ident join attribut occur time heavi hitter skew join tupl relat ident heavi hitter appear provid output tupl figur consid heavi hitter requir tupl ofx heavi hitter appear provid desir output tupl depend exact input problem statement defin problem exact input requir comput output problem problem set input pair input correspond output problem problem disjoint setsx pair element set correspond output comput common friend social network site drug interact problem exampl problem skew join exampl problem map schema defin mapreduc algorithm map schema assign input reduc reduc exceed reduc capac pair input problem pair input problem meet reduc communic cost factor perform mapreduc algorithm communic cost tradeoff degre parallel mention map schema optim map schema lower communic cost paper investig construct optim map schema good approxim outlin paper contribut paper investig problem find optim optim map schema case input size warm problem discuss tradeoff appear prove find optim map schema intract preliminari techniqu optim map schema techniqu bin pack collect input bin treat bin input equal size algorithm construct optim map schema case input equal size section combin bin pack algorithm techniqu build algorithm construct map schema good approxim optim algorithm argu good approxim extend idea present equal size input section consid case input size rememb denot reduc capac investig case input size techniqu investig problem problem provid algorithm work mapreduc introduc dean ghemawat karloff present model compar mapreduc parallel random access machin pram model state larg class pram algorithm simul mapreduc parallel sequenti comput mapreduc differenti mapreduc pram model model consid effici mapreduc algorithm term run time suggest author simul pram algorithm mapreduc defin memori bound mapreduc algorithm term reduc size round reduc filter techniqu mapreduc suggest techniqu remov nonessenti data fewer round previous state model essenti model provid simul larg famili pram algorithm mapreduc afrati present model mapreduc algorithm output depend input tradeoff communic cost parallel author consid case pair input produc output upper bound meet lower bound communic cost function total number input reduc author regard reduc capac term total number input assum input ident size reduc general problem graph defin pair input meet reduc solv problem map schema achiev consid problem set close set afrati allow input size best knowledg time restrict input size ident consid realist set mapreduc algorithm practic scenario map schema tradeoff system set extens standard system set mapreduc algorithm consid time input size provid formal definit exampl tradeoff communic cost degre parallel map schema map schema assign set input reduc constraint satisfi reduc assign input sum size equal reduc capac output assign correspond input reduc common map schema optim communic cost minimum number reduc minim optim map schema case desir minim number reduc offer insight communic cost number reduc exampl tradeoff tradeoff appear mapreduc algorithm set tradeoff reduc capac total number reduc exampl larg reduc capac allow smaller number reduc tradeoff reduc capac parallel exampl achiev high degre parallel set low reduc capac tradeoff reduc capac communic cost exampl case reduc capac equal total size data reduc minimum communic cours expens parallel subsequ subsect map schema problem map schema problem fit exampl explain tradeoff map schema problem instanc map schema problem consist set input input size set set ident reduc capac solut map schema problem assign pair input reduc common exceed reduc second assign input optimum communic cost assign input optimum communic cost figur exampl map schema problem exampl set input size set reduc capac figur way assign input reduc best minim communic cost three reduc parallel reduc phase compar reduc observ reduc reduc lighter load reduc capac communic cost second case reduc case reduc tradeoff reduc case low communic cost lower degre parallel reduc case high parallel expens communic cost input set input set assign input reduc second assign input reduc figur exampl map schema problem map schema problem instanc map schema problem consist disjoint setsx set ident reduc capac input setx input set sizesw solut map schema problem assign input set second set reduc common exceed reduc exampl set input input figur reduc capac assign input set input set way order minim communic cost best reduc note solut input reduc reduc parallel reduc phase compar reduc paper assum decis degre parallel set reduc capac intract find map schema will map schema problem possess polynomi solut will assign requir input minimum number ident capac reduc find solut map schema problem achiev polynomi time hard map schema problem set input input size set set ident reduc input instanc map schema problem map schema problem decis problem ask exist map schema input instanc input assign input reduc common answer map schema problem will pair input reduc hold prove map schema problem hard case ident reduc addit prove map schema problem polynomi solut reduc reduc answer sum input size hand answer case reduc singl reduc accommod input input assign reduc input pair input case answer achiev polynomi solut map schema problem ident capac reduc consid case prove map schema problem reduc hard partit problem theorem problem find map schema input input size exist input assign ident capac reduc hard proof appear appendix hard map schema problem set input input size set input size set set ident reduc input instanc map schema problem map schema problem decis problem ask exist map schema input instanc input set assign input set reduc common answer map schema problem will pair input second reduc input map schema problem polynomi solut case singl reduc reduc answer sum input size hand answer will prove map schema problem hard problem ident reduc theorem problem find map schema input input size belong set set exist input second assign ident capac reduc hard proof appear appendix approxim algorithm preliminari map schema problem hard start special case develop approxim algorithm solv propos approxim algorithm map schema problem base bin pack algorithm select prime number divis input set base size approxim algorithm case depend size input input size upper bound input size greater input size equal case communic cost pair larg input input cours largest input greater reduc capac solut map schema problem input assign singl reduc common paramet analysi analyz approxim algorithm paramet map schema creat algorithm number reduc number reduc map schema send input case theorem communic cost approxim ratio lower bound map schema problem size input equal size input lower bound map schema problem size input sumx·sumi optim algorithm map schema problem reduc capac optim reduc capac optim prime optim optim algorithm map schema problem upper bound size input algorithm algorithm algorithm input size optim algorithm map schema problem upper bound size input sumx·sumi tabl bound heurist map schema problem communic cost communic cost defin sum bit requir map schema transfer map phase reduc phase tabl summar paper describ algorithm lower bound paramet express term reduc capac sum size input theorem lower bound communic cost number reduc set input reduc capac communic cost total number reduc map schema problem sum input size proof input replic reduc communic cost input iswi wiq communic cost input will conclud communic cost communic cost total number bit assign reduc reduc hold input sum size total number reduc bin pack base approxim general strategi build approxim algorithm bin pack algorithm place input bin size assum bin place input bin consid singl input size problem find optim map schema cours assumpt input size fit decreas ffd best fit decreas bfd notabl bin pack algorithm exist pseudo polynomi bin pack algorithm suggest karger scott place input bin size exampl discuss detail case case reduc capac bin assign singl reduc approxim algorithm reduc figur exampl bin size reduc figur bin pack base approxim algorithm strategi lower bound communic cost depend theorem lower bound communic cost reduc capac set input sum size communic cost map schema problem proof bin hold input sum size total sum size requir divid input skq bin bin consid ident size input bin requir reduc pair bin sum number copi bin reduc multipli size bin find communic cost communic cost communic cost theorem expect larger theorem restrict specif strategi account exampl appli strategi case algorithm bin pack input bin size provid map schema assign pair bin reduc schema easi discuss literatur ffd bfd bin pack algorithm provid opt approxim ratio optim bin pack algorithm opt bin place input bin size ffd bfd bin pack algorithm opt bin ident size place input requir reduc solut map schema problem algorithm requir opt reduc note case opt indic optim number reduc assign input satisfi map schema problem opt indic optim number bin size requir place input theorem upper bound approxim algorithm achiev communic cost number reduc theorem upper bound communic cost number reduc algorithm bin size reduc capac achiev upper bound total number reduc communic cost map schema problem sum input size proof bin hold input sum size total sum size requir divid input bin ffd bfd bin pack algorithm ensur bin bin half full bin size input sum size input bin size bin consid singl input assign bin reduc requir reduc bin replic reduc communic cost equal size input optim algorithm explain input size sens imagin input bin pack bin size treat bin thing unit size reduc will shift notat input unit size small integ set minim number reduc minim communic reduc fill capac defin minimum number reduc capac solv pair problem input theorem set lower bound communic cost set theorem lower bound communic cost number reduc reduc capac set input size communic cost total number reduc map schema problem proof input requir reduc sum number copi input reduc result communic cost total number copi input reduc reduc hold input reduc capac offer recurs algorithm algorithm bound divid reduc team reduc team exact occurr input will properti output algorithm build algorithm subsect recurs algorithm set size intent pair input set partit team team exact pair input appear exact team call team split set size suppos team set size will team team mix elabor form team team will form kind team team kind team kind team kind will form team kind team union team team team union team team team kind team kind pair reduc input set produc pair pair input input suppos denot input input form team pair exampl form team form team easi will three team kind figur team exampl bold face font triplet figur notic team figur column appear team second column team column team three team pair pair omit write cross subset team team kind team figur order theorem easi prove theorem team input appear team input appear team minimum optim map scheme assign input reduc work number input power techniqu work good approxim general reduc capac algorithm construct optim map schema recurs algorithm start map schema construct previous subsect bound divid reduc team reduc team team exact occurr input split input disjoint set set set suppos set input set input start input set creat team reduc reduc input add reduc team input set team add reduc team input set form triplet reduc team handl input start solut input complet solut add reduc solv problem input team lead recurr solv recurr power exact match lower bound notic prove case optim prove observ pair input meet exact reduc easi prove theorem theorem algorithm construct optim map schema team team team team team team team team team team addit reduc figur exampl map schema exampl exampl figur explain figur construct bold entri algorithm present construct reduc explain detail construct reduc input creat set input input arrang reduc form team reduc team team assign input set input set input set pair input set assign exact reduc explain pair input set assign exact reduc assign ith input set reduc team input assign reduc team reduc pair input set meet reduc pair input meet reduc remain build reduc pair input set meet recurs explain break set set size appli method creat set input arrang reduc form team reduc team assign pair input set reduc ith input set reduc team team team team construct input meet reduc element size reduc reduc suffic happen open problem interest observ argu reduc divid team reduc team occurr input extend idea higher prime number algorithm provid map schema reduc capac prime number input suggest afrati ullman method meet lower bound communic cost call algorithm method sake complet provid overview method interest reader refer divid input equal size subset input arrang squar subset row column repres organ reduc form team player reduc team note sum size input row column squar exact team arrang reduc arrang arrang input team sum size column squar place column squar reduc team place input remain team modulo oper assign subset team subset assign reduc team modulo exampl figur team team team team figur method reduc capac total requir reduc method reduc organ form team reduc team communic cost simpl extens method extend method add addit input add reduc add reduc input reduc size substitut check meet bound figur map schema extens method team team team team extra reduc figur optimum map schema extend method conclus theorem construct optim map schema case prime number prime number open problem general idea optim schema case approxim algorithm map schema problem optim map schema construct good approxim map schema case general techniqu will move dimens idea assum input size greater construct bin size treat bin singl input size assum reduc capac appli optim techniqu construct map schema algorithm present section inspir method develop present case method extend idea construct good approxim algorithm input equal size section section will techniqu construct map schema close optim schema base bin pack algorithm general techniqu reduc capac will algorithm algorithm input size equal odd number algorithm place input bin size bin consid singl input size reduc capac equival consid odd input unit size will continu odd number reduc capac assum input bin input unit size note reduc hold odd number input assum odd remain discuss exampl pack input bin size consid bin singl input size understand algorithm exampl present figur bin consid unit size input implement bin pack algorithm input algorithm algorithm handl odd team team team team team team team group addit reduc setb figur algorithm exampl map schema bin algorithm consist step algorithm algorithm odd reduc capac input total number bin place input size bin size reduc capac variabl set total input set set total input team repres team reduc indic ith team indic jth reduc ith team consid team reduc team groupa repres disjoint group input set groupa indic ith group input set function creat group groupa step odd team groupa assign input team function step odd lower upper upper lower return mid upper assign lower mid upper step odd lower mid step odd mid upper function assign lower mid upper whilemid foreach lower lower mid mid team mid groupa groupa mid upper function mid upper mid upper return mid mid upper return function team lower mid upper foreach team groupa groupa function assign input team foreach team implement bin pack algorithm place input bin size size input equal bin bin consid singl input divid input set size group input disjoint group group hold input consid disjoint group singl input call deriv input make disjoint deriv input input set turn case odd case reduc hold three input input pair deriv input third input set organ reduc form team reduc team assign group reduc will prove lemma suppos power case power add dummi input size power consid requir dummi input group input set size equal dummi input input set place dummi input set will empti lemma pair input assign team reduc team reduc capac size input pair deriv input assign assign ith input set reduc ith team appli mention step set solut map schema problem input algorithm descript divid input bin size place input bin size set disjoint group input set group hold input line group consid singl input call deriv input addit dummi input assum power function step odd lower upper recurs divid deriv input halv function assign lower mid upper pair deriv input assign respect reduc reduc team assign function team groupa line note function step odd lower upper assign lower mid upper lower mid upper common paramet lower upper lower deriv input upper deriv input uth group time call function pair deriv input assign reduc function assign input team assign ith input set reduc ith team line algorithm invok input set assign pair remain input set reduc pair remain input assign reduc theorem communic cost algorithm reduc capac set input sum size communic cost map schema problem proof ffd bfd bin pack algorithm ensur bin bin half full bin size input sum size input bin size bin consid ident size input construct algorithm group deriv input bin order assign pair deriv input deriv input requir assign reduc addit size input bin communic cost algorithm correct algorithm correct appear appendix sake complet includ pseudocod algorithm call algorithm input size equal number algorithm algorithm place input bin size bin consid singl input size reason algorithm case reduc hold number input assum algorithm exampl reduc capac pack input bin size consid bin singl input size proof appear appendix algorithm algorithm reduc capac input total number bin place input size bin size reduc capac variabl team repres team reduc indic ith team indic jth reduc ith team consid team reduc team groupa repres disjoint group input set groupa indic ith group input set function creat group groupa step team function step lower upper upper lower return mid upper assign lower mid upper step lower mid step mid upper approxim factor optim communic cost theorem communic cost algorithm theorem ratio optim communic communic map schema general method extend method handl input prime number algorithm whenm nearest prime tom provid extens method handl ident size input assign reduc capac nearest prime number call extens method algorithm algorithm extens method extend method increas reduc capac total number input algorithm consid method assign ident size input reduc capac prime number add input increas reduc capac ident size input reduc capac select prime number divid input disjoint set hold input hold input algorithm consist step input reduc capac input algorithm divid input disjoint set input input nearest prime number perform method input set place input team bin team size bin organ reduc form team reduc team assign jth bin ith team bin jth reduc ith team reduc group input set disjoint group assign ith group reduc ith team algorithm algorithm pair input set depend case odd number note perform mention step assign pair input set reduc assign capac reduc reduc remain capac assign ith group input set manner input set assign input algorithm correct algorithm correct appear appendix theorem communic cost algorithm algorithm requir reduc communic cost equal provid extens method case optimum map schema input proof case singl reduc assign input set algorithm base method algorithm algorithm reduc reduc assign pair input set base algorithm theorem communic cost maximum communic cost requir algorithm assign input set approxim factor optim communic cost method differ communic map schema assum equal optim communic case larg consid greater squar cube maximum differ prime number case will small will optim ratio small compar case play role total number input set will communic cost algorithm theorem replac will approxim ratio input sizem provid extens method handl ident size input assign reduc capac prime number call second extens method algorithm algorithm second extens method second extens method algorithm handl case prime number recal method assign input prime number reduc algorithm input reduc capac prime number input close handl algorithm dummi input algorithm consist phase phase creation bottom tree simpl exampl bottom creation figur exampl bottom tree creation bottom tree ident size input figur explain construct height bottom tree level input form matric size note column level hold input column call input column creat tree bottom fashion level matric cell refer level level level figur second extens method algorithm phase creation bottom tree input column level notat refer column ith level cij column note column cij level hold column level general matric level cell refer column level bottom tree ident size input height level input form matric size note column level call input column level matric column refer column level root node level column refer column level second phase creation assign tree assign tree creat top fashion object assign pair input reduc input arrang input column bottom tree assign pair input column bottom tree form size matric implement method matric assign pair input reduc pair input column creat tree call assign tree simpl assign tree figur exampl assign tree creation root node bottom tree root node assign tree recal root node bottom tree matrix consid root node understand work method creat assign tree consid cell root node matrix size team bin size team object method root node matrix assign pair cell valu bin assign pair cell valu bin creat matric bin bin creat implement root node hold indic column second level bottom tree bin indic replac column matric size matric child node root node consid matrix separ perform oper root node manner method creat child node matric size ith level assign tree creat child node matric size level assign tree recal input column level bottom tree hold origin input implement method node size matrix level assign tree assign pair input column level assign tree implement level level level level figur second extens method algorithm phase creation assign tree matrix level assign pair origin input reduc lth level reduc form team reduc team ident size input root node bottom tree figur root node assign tree implement method root node assign pair cell valu bin size cell bin column assign pair column second level bottom tree clariti show bin level implement method matric level matric third level matric level pair input column bottom tree implement matrix level assign pair origin input reduc clariti show matrix team level assign tree root node bottom tree implement method root node child node level child node matrix column matric provid pair cell valu root node matrix level assign tree node figur height assign tree level pair input column lth level solut map schema problem input matrix order level level level level lteam figur assign tree creat algorithm algorithm correct algorithm satisfi lemma lemma height assign tree lth level assign tree assign pair input reduc theorem communic cost algorithm algorithm requir reduc communic cost proof assign tree height lemma algorithm lth level reduc provid assign pair input algorithm reduc communic cost approxim factor optim communic replac ratio optim communic communic map schema case larg drop constant ratio equal small compar ratio invers ratio accept practic applic size data well case ratio optim map schema conjectur optim schema techniqu develop present hybrid algorithm map schema problem previous section provid algorithm size equal size input hybrid approach consid size equal size input object hybrid approach place input size bin consid bin singl input hybrid approach algorithm bin pack base approxim algorithm algorithm divid input disjoint set input size bin pack base approxim algorithm algorithm depend size input criteria divid input set base set algorithm algorithm divid input set hold input size hold input size equal algorithm consist step bin pack base approxim algorithm place input set bin size bin consid singl input size call big input consid big input set bin size bin consid singl input size call medium input second bin size bin consid singl input size call small input consid medium small input reduc assign pair big input reduc assign big input medium input method algorithm small input depend case assign pair small input exampl illustr algorithm figur note reduc assign pair origin input size reduc assign big input origin input size origin input size method algorithm algorithm assign pair origin input size equal algorithm correct algorithm correct pair input assign reduc algorithm correct pair big input assign reduc big input assign reduc medium input pair small input assign reduc big input size medium input size small input size assign pair big medium input assign pair small input method figur exampl work algorithm input input size greater input size equal criteria divid input set hold input size hold input size equal divis input set follow approach algorithm approxim algorithm schema problemwith input consid case input size call input big input note big input assign singl reduc solut map schema problem assum input size big input remain input call small input size consid three case big input size big input size big input size communic cost domin big input consid three case big input provid effici algorithm term communic cost case assign input optim number reduc minimum communic cost algorithm bin pack base approxim algorithm algorithm provid solut map schema problem case big input simpl solut ffd bfd bin pack algorithm place small input bin size consid bin singl input size bin assign bin reduc copi big input assign small input bin size consid bin singl input size assign pair bin size reduc manner pair input assign reduc big input size case assum small input size fit decreas ffd best fit decreas bfd bin pack algorithm method algorithm proceed assign big input small input bin pack algorithm place small input bin size consid bin singl input size consid bin assign bin reduc copi big input depend total number bin method algorithm assign pair small input reduc exampl figur place small input bin size assign bin reduc copi big input implement method bin assign pair small input big input size small input size assign small input big input assign pair small input figur exampl assign big input size remain input size equal big input size case assum small input size bin pack algorithm algorithm section proceed assign big input small input bin pack algorithm place small input bin size consid bin assign bin reduc copi big input depend total number bin algorithm assign pair small input big input size case assum small input size case bin pack algorithm place small input bin size place bin reduc copi big input note assign pair small input order assign pair small input bin pack base approxim algorithm algorithm depend size small input theorem upper bound algorithm set input big input size reduc capac input replic reduc map schema problem total number reduc communic cost sum input size size big input sum input size proof big input share reduc input sum size order assign input remain small input requir assign subset input sum size small input size reduc hold big input small input big input requir reduc communic cost pair small input assign reduc place bin size ffd bfd bin pack algorithm assign small input reduc communic cost theorem total number reduc communic cost approxim algorithm map schema problem propos approxim algorithm map schema problem base bin pack algorithm set input input assum sum input size set denot sumx denot sumi greater analyz algorithm criteria number reduc communic cost lower bound theorem theorem upper bound algorithm bound tabl theorem lower bound communic cost number reduc set input set input reduc capac communic cost total number reduc map schema problem sumx·sumyq sumx·sumi proof input set input set replic sumyq sumx reduc communic cost input sumyq sumxq communic cost will sumi sumx sumx·sumi total number bit assign reduc sumx·sumyq reduc hold input sum size total number reduc bin pack base approxim algorithm map schema problem solut map schema problem size input achiev bin pack algorithm set input input algorithm will work set hold input size set hold input size greater input assign singl reduc common size largest input set input set size place input set bin size bin place input place input set bin size bin place input consid bin singl input solut map schema problem assign bin bin reduc manner requir reduc theorem upper bound algorithm bin size reduc capac input set size total number reduc communic cost map schema problem sumx·sumi proof bin hold input sum size requir divid input set sumxb sumi bin ffd bfd bin pack algorithm ensur bin bin half full bin size input sum size input set sumx sumi bin size sumxb sumi bin place input set bin consid singl input assign bin bin reduc requir reduc bin input set resp replic sumyb resp sumx reduc replic individu input set resp sumi resp sumx communic cost sumyb sumxb sumx·sumi approxim factor optim communic sumx·sumyq ratio optim communic communic map schema conclus practic aspect context mapreduc size input reduc capac introduc time capac reduc defin term memori size note process time typic proport memori capac reduc ident capac reduc hold input input size reduc capac demonstr capac aspect consid common map schema problem mapreduc map schema problem input requir assign common reduc map schema problem input input set second input set requir assign common reduc turn find solut map schema problem minimum number reduc polynomi time posit side optim approxim algorithm map schema problem proof theorem lemma theorem problem find map schema input input size exist input assign ident capac reduc hard proof proof reduct partit problem complet problem partit problem defin set posit integ number requir find disjoint subset sum number equal sum number input input size set sum size mwi add addit input aiz size call aiz input medium input addit add addit input size call big input assum reduc capac proof proceed step prove case origin input partit input assign reduc input assign reduc prove case map schema input reduc success disjoint subset origin input satisfi partit requir assum sum divis answer partit problem sure reduct partit problem map schema problem trivial disjoint subset equal size origin input exist solut map schema problem recal reduc hold set input sum size sum size medium input exact set origin input set medium input assign singl reduc reduc assign capac exact capac reduc big input size share reduc medium input aii big input medium input assign reduc remain reduc addit remain reduc assign reduc assign set big input second reduc assign set big input assign solut map schema problem origin input medium input big input reduc figur solut map schema problem input reduc partit origin input equal size block solut map schema problem origin input medium input aii assign exact reduc big input assign exact reduc recal total sum size reduc capac singl reduc input assign singl reduc subset input sum size assign reduc input assign reduc order coupl input aiz subset ofw subset ofw aiz figur proof hard map schema problem ident capac reduc theorem big input share singl reduc subset sum size big input requir assign reduc order pair medium input aii big input share reduc subset origin input sum size fact big input assign reduc hand medium input share reduc origin input total reduc capac occupi input exact total capac reduc origin input medium input aii assign assign exact addit big input assign exact reduc fact reduc entir fill distinct input solut map schema problem yield partit origin input block sum input size block exact polynomi time algorithm construct map schema input requir pair input map schema find partit origin input polynomi time theorem problem find map schema input input size belong set set exist input second assign ident capac reduc hard proof proof reduct partit problem complet problem set input input size set sum size mwi add addit input aiz size call aiz input big input addit add addit input size call small input assum reduc capac set hold input map schema problem consid origin input big input set small input set solut map schema problem assign origin input big input set small input set proof proceed step prove case origin input partit origin input big input small input assign reduc satisfi map schema problem case map schema problem success disjoint subset origin input satisfi partit requir disjoint subset equal size origin input exist solut map schema problem recal reduc hold set input sum size sum size big input exact small input size big input aii assign reduc reduc assign capac exact capac reduc addit remain reduc assign remain reduc assign set small input second aiz subset subset figur proof hard map schema problem ident capac reduc theorem remain reduc assign remain origin input small input assign solut map schema problem input set input set reduc figur prove second claim solut map schema problem partit origin input equal size block recal total sum size reduc capac singl reduc input assign singl reduc subset input sum size assign singl reduc small input assign reduc small input size share singl reduc subset sum size small input requir assign reduc reduc order pair big input aii remain reduc order pair origin input fact solut map schema problem yield partit origin input block sum input size block exact polynomi time algorithm construct map schema input set requir pair input set map schema find partit origin input polynomi time lemma pair input assign team reduc team reduc capac size input proof proof induct basi case input assign team reduc capac lemma hold input induct step assum induct hypothesi solut input pair input assign team reduc team team properti team occurr input will prove algorithm correct true build solut input divid input group input group recurs creat team group creat team input combin jth team group jth team second group induct hypothesi solut input assign input group team reduc team combin jth team group team reduc team team input figur creat addit team pair input group input second group team jth input group assign jth reduc team jth input second group assign jth reduc subsequ team assign second group rotat tth team jth input second group assign reduc team input figur step total team reduc team team hold pair input correct algorithm algorithm correct prove pair input assign reduc prove pair input set assign team claim input set appear exact team claim prove set hold input claim conclud theorem algorithm assign pair input reduc note prove mention claim case general trivial deriv input input set assign manner input pair remain input claim pair input set assign team proof consid assign team valu ident lower mid valu line algorithm lower mid lower valu valu assign team note team select base mid algorithm suppos assign team case valu valu assign team mid algorithm clear pair assign team claim input set appear exact team proof number pair input set total number reduc provid solut map schema problem input set recal reduc arrang form team reduc team note input pair team team hold pair remain reduc input set disjoint pair idi jdi idi jdi input set assign team input assign team claim reduc capac set hold input proof pair input set requir capac reduc team hold input set input set assign reduc team manner input set pair input set team team assign input set set hold input theorem algorithm assign pair input reduc proof pair input set size number reduc reduc hold input pair remain capac reduc team assign input input pair input input prove claim fact input set pair input input set pair procedur algorithm assign pair input reduc correct algorithm pair input assign reduc algorithm satisfi claim claim pair deriv input assign team claim input appear exact team prove claim note claim claim claim pair input set case pair deriv input set case assign team claim claim claim input set appear team case algorithm set consid set input theorem algorithm assign pair input reduc proof number pair deriv input total number reduc assign pair reduc pair input correct algorithm correct pair input assign reduc pair input set assign reduc capac reduc claim prove set hold input conclud algorithm assign pair input reduc claim input set assign reduc assign input set capac reduc claim input set appear team exact prove claim claim follow correct method input set team bin size team assign bin capac reduc bin assign reduc claim correct method input set appear team claim reduc capac set hold input nearest prime number proof team reduc team input set capac reduc reduc hold addit unit size ident size input input set appear team claim assign addit unit size input reduc team pair input set addit input manner team hold input set hold addit input set hold input theorem algorithm assign pair input reduc prove theorem proof theorem consid fact input set pair method pair remain input set input set will pair algorithm theorem refer afrati dolev korach sharma ullman assign size input mapreduc workshop algorithm system mapreduc beyondmr appear announc intern symposium distribut comput disc technic report depart comput scienc ben gurion univers negev israel afrati sarma salihoglu ullman upper lower bound cost map reduc comput pvldb afrati ullman match bound pair mapreduc problem idea coffman garey johnson approxim algorithm hard problem chapter approxim algorithm bin pack survey pws publish dean ghemawat mapreduc simplifi data process larg cluster osdi garey johnson comput intract guid theori complet freeman goodrich simul parallel algorithm mapreduc framework applic parallel comput geometri corr johnson optim bin pack algorithm phd thesi massachusett institut technolog karger scott effici algorithm fix precis instanc bin pack euclidean tsp approx random karloff suri vassilvitskii model comput mapreduc soda lattanzi moseley suri vassilvitskii filter method solv graph problem mapreduc rajaraman meyer auf der heid editor spaa acm leskovec rajaraman ullman mine massiv dataset cambridg univers press pietracaprina pucci riondato silvestri upfal space round tradeoff mapreduc comput ullman design good mapreduc algorithm acm crossroad 