type regular path queri languag data graph dario colazzo lamsad universit pari dauphin carlo sartiani dimi universita della basilicata sartiani abstract regular path queri languag data graph essenti type lack type great limit optim opportun queri engin applic develop complex paper discuss simpl express schema languag edg label data graph schema lan guag defin queri type infer approach good precis properti categori subject descriptor databas manag ment logic design general term theori languag keyword rpqs type infer data graph introduct year graph databas gain rele vanc applic area semant web social net work bioinformat network traffic analysi crime detec tion led definit queri formal graph databas instanc regular path queri rpqs nest regular express nres conjunct regular path queri crpqs gxpath deriv languag base idea regular express describ path input graph consid extent general exist path queri languag semistructur data xpath instanc regular path queri languag graph queri languag cypher pql pattern variabl bind claus regular path queri languag essenti untyp static infer structur queri sult type infer check satisfi schema type check verifi queri empti queri correct lack type informa tion great limit optim opportun queri engin applic develop complex contribut paper describ simpl expr sive schema languag edg label data graph schema form collect schema element describ permiss digit hard copi work person classroom grant fee provid copi distribut profit commerci advantag copi bear notic full citat copyright compon work own acm honor abstract credit permit copi republish post server redistribut list requir prior specif permiss fee request permiss permiss conf month citi countri copyright acm nnnn nnnn http set incom outgo edg class graph node edg regular express hap pen schema languag graph allow design describ full detail structur outgo edg well structur node valu limit mod ell choic incom edg schema languag distinct incom outgo edg design model tool class edg increas express power drawback will general case schema empti check undecid restrict regular pression describ edg need order ensur semant graph schema well defin schema empti decid class schema name well form schema view general dtds data graph propos languag step definit analysi power schema lan guag data graph second paper leverag well form schema build type infer system work polynomi time rpqs nres gxpath queri good sound complet properti type infer sys tem sound complet rpqs complet relax nres gxpath queri system decid rpq satisfi graph conform schema polynomi time paper outlin paper structur describ data model type languag approach schema languag data graph discuss empti problem schema tion survey regular path queri languag describ semant type infer system section discuss work draw conclus preliminari definit data model type languag model data graph edg label graph definit data graph finit alphabet infinit domain data graph tripl finit set node set label direct edg map node valu node indic set incom outgo edg formal jacm robert endr tarjan foc john hopcroft jeffrey ullman journal creator creator seri partof creator creator figur rdf graph assum sequenc outgo incom edg node unord case graph databas set edg will indic unord concaten label edg data model general captur practic graph rang rdf data social network graph exampl exampl consid graph figur graph bibliograph come fragment rdf represent dblp repositori indic node insid graphic represent rdf properti label edg work propos schema languag data graph associ schema element pair regular express describ sequenc label incom outgo edg node regular express obey grammar denot empti sequenc symbol denot union unord concaten kleen star expect unord concaten commu tativ associ neutral element express equival permuta tion will abbrevi semant regular express denot note minim function satisfi equat denot unord languag concaten defin obvious schema languag regular express build block schema lan guag definit regular express sym set symbol appear definit graph schema element finit alphabet schema element pair regular express semant schema element defin jek schema element specifi constraint incom outgo edg node consid instanc schema element element describ graph node incom edg incom edg well incom edg label node outgo edg outgo edg schema languag impos constraint outgo edg incom edg contrast schema languag xml data dtds xml schema choic motiv servat graph vertex multipl incom ing edg multipl father xml tree node root singl father portant schema design abil model set incom edg avoid danger situat con sider instanc data graph describ bibliograph databas node repres book paper author publish cours author node incom edg label writtenbi allow incom edg bel publishedbi allow publish node regular express model incom edg languag exist graph schema languag tsl shex languag design regular express sequenc outgo edg node type edg describ label type receiv node languag instanc node type exact incom edg kind definit graph schema graph schema finit set schema element sym sym sym sym condit ensur schema defin graph dangl edg symbol outgo edg label incom edg vice versa will condit suffici impli empti condit guarante uniqu node type graph node type schema element schema semant defin definit graph schema semant data graph describ graph schema jsk exist jeik exampl consid graph exampl graph type schema journal partof creator journal partof seri seri creator schema empti graph schema satisfi properti defi nition empti difficult user fig ure schema defin empti simpl schema empti easili detect exampl consid graph schema schema satisfi condit definit empti cardin constraint express regular expr sion incom outgo edg incompat schema check compat incom outgo edg obvious exampl consid graph schema schema node produc outgo edg consum node schema empti build well form graph compris node node node impos restrict class regular expr sion check empti schema decid undecid result establish equival graph schema homogen system linear diophantin equat paramet asso ciat schema element distinct variabl build symbol polynomi equat describ produc con sume edg label symbol symbol equat con tain variabl schema element produc consum edg label symbol coeffici variabl scribe number produc consum edg result homogen system natur solut schema empti exampl illustr approach exampl consid schema exampl empti schema consist schema element associ variabl regular express schema three symbol defin three linear equat equat variabl coeffici produc edg variabl coeffici consum edg easili solut system consid schema exampl illustr schema empti compris three schema element associ variabl previous exampl three distinct symbol schema defin system linear equat easi solut system build graph vertic vertic vertic case schema kleen star build equival diophantin system introduc natur param ter exampl exampl consid graph schema build equival system associ distinct ramet occurr kleen star sociat paramet occurr paramet occurr system system equat linear variabl coeffici longer constant assum case schema exampl easi verifi correspond system consist trivial posit integ solut point suffic build convex hull set dimension point defin column system coeffici matrix check contain polytop case schema exampl proach longer coeffici matrix con tain paramet prevent comput convex hull problem consist homogen system dio phantin equat paramet studi xie prove restrict linear poli nomial paramet nest kleen star exist fix problem undecid system equat schema distinct symbol problem decid system equat clauss problem decid system singl paramet variabl number equat motiv restrict class schema ensur empti schema develop restrict propos approach base ingredi consist restrict kind regular express element type sourc difficulti presenc regular express multipl occurr symbol aspect complic problem nest repetit consist system diophantin equat undecid equat degre greater equal nest kleen star schema increas degre equat correspond system consid instanc schema correspond system paramet degre inspir previous work restrict conflict free regular express express symbol occur singl occurr con straint repetit allow symbol ing conflict free express avoid issu nest repetit well concern multipl occurr symbol conflict free express obey grammar satisfi singl occurr constraint subexpress type sym sym hold express conflict free express exampl schema element singl occurr constraint respect express exampl conflict free express singl occurr met restrict repetit exist studi user tend defin pression creat schema xml data will hold context data graph reason lead user adopt express depend aspect orthogon data model hand conflict free express semant simpl understand human time allow describ constrain wide class sequenc context semi structur data manag exampl conflict freedom properti characteris schema def init suffici ensur empti graph schema exampl consid simpl graph schema schema node produc outgo edg node receiv edg turn type node receiv edg turn emit edg impli finit graph meet schema altern equival formul schema distribut element type union type express formul better highlight kind node generat schema node receiv edg second node receiv edg emit kind ensur empti modifi schema easi verifi schema empti infinit graph conform idea under modif symbol emit multipl schema element schema occurr appear receiv express occur impli exist schema element vertic accept edg need will generalis formalis sketch restrict ensur empti switch ing formal treatment worth stress restrict demand symbol emit multipl node type node receiv edg allow type multipl incom edg allow share multipl edg note cours restrict need ceiv symbol wrt emit symbol symbol ceiv multipl schema element schema occur renc appear emit express occur rule empti schema includ node type note schema previous simpli swap express identifi restrict attempt restrict prove empti restric tion main problem construct approach base build graph valid wrt schema crement fail time node type introduc receiv emit pend edg emit receiv node creat process time node introduc constraint pend outgo incom edg exist node satisfi turn trigger introduct node creat situat lead circular termin process identifi depict restrict termin construct approach proof empti restrict adopt artifici limit model opportun schema design safe adopt automat schema learn approach import restrict exclud schema describ graph node receiv edg label illustr exampl exampl consid graph repres social network user publish post comment user turn establish friendship relationship user well form schema databas euser epost euser friend friend post comment epost post comment cours user publish post post post user order formal illustr restrict normal regular express regular express transform disjunct normal form dnf schema normal illustr der distribut union type definit ampl illustr normalis prove empti exampl consid simpl graph schema easili prove contradict schema empti current formul schema satisfi restrict sketch symbol occur incom outgo regular express repetit exampl borrow offici web site blog contradict previous claim fact exampl current formul hide schema defin kind node order exhibit properti outgo regular express normalis obtain schema schema transform order distribut element type definit union emerg normalis obtain observ schema formul satisfi restrict definit disjunct normal form regular express disjunct normal form dnf obey grammar regular express transform dnf function defin denot union free regular express denot definit norm norm norm norm norm norm norm norm norm norm norm norm easi prove norm equival prove norm transform regular express disjunct normal form preliminari lemma lemma regular express singl union norm dnf proof prove thesi induct level pars tree union locat assum pars tree level level root base assum union locat root pars tree level union free dnf norm norm norm dnf induct step assum thesi true regular pression singl union level assum singl union level indic subterm level surround union free case appli rule definit norm norm norm norm norm norm union level induct norm dnf prove thesi lemma regular express norm dnf proof prove thesi induct number union insid base singl union thesi true lemma induct step assum thesi true regular pression union regular express union proceed induct level topmost union topmost union level union induct norm norm dnf norm norm norm dnf assum topmost union level thesi true level subterm level union outer induct norm norm norm dnf appli rule definit norm norm norm norm norm norm norm lift union level inner induct thesi definit dnorm schema indic dnorm doubl normalis schema normalis regular express distribut element type union normalis express formal dnorm set element type eki exist norm norm introduc class well form schema corr spond restrict definit well form schema schema well form hold symbol exist dnorm occur dnorm occurr theorem well form schema empti proof observ dnorm equival type dnorm union free express dnorm respect prop erti definit properti easili prove prove dnorm empti prove schema satisfi valid graph exact node element type node type exist incom outgo edg clear properti entail desir proceed induct number schema element base case build graph node incom outgo edg symbol regular express type dnorm fact graph valid respect dnorm consid case pick type build schema drop ping delet express remain type symbol occur schema satisfi properti induc tion assum exist graph conform type exact correspond node node type exist incom outgo edg add node node node will incom outgo edg symbol regular regular express drop type addit reactiv eras symbol type add correspond incom outgo edg node type symbol reactiv point happen edg dangl will connect edg exit node includ fact properti definit ensur dangl edg exist dangl edg connect node case edg outgo incom edg symbol type dangl edg reactiv label label multipl pend edg exist case distinguish case dangl edg outgo recal type correspond type wlog assum exist edg proceed observ point occur occur occur well form occur impli dangl edg connect second case dangl edg incom edg case prove concern case distinguish case deal pend edg outgo node recal type observ edg origin node type fact exact edg symbol recal reactiv type sym case pend edg exist case prove edg connect node type observ case pend incom edg node case edg simpli merg remain case pend edg case well formed type sym node type receiv pend outgo edg second case deal pend incom ing edg target node case previous rpqs nres gxpath rpqs nres gxpath graph queri languag base idea regular express pattern match path input graph queri result evalu graph set node pair connect path match queri languag differ class support regular express rang standard regular express expr sion counter nest predic regular path queri rpqs basic languag analyz finit alphabet rpq defin grammar graph semant rpqs defin jakg symbol concaten binari relat denot concaten time exampl consid schema exampl follow ing queri partof seri queri select confer paper relat correspond confer seri case graph exampl result foc exampl rpqs express branch backward navig introduc nres queri nest regular express nres evolut rpqs form basi path languag sparql nres introduc abil travers edg backward well abil condit insid path nres obey grammar denot backward navig allow express condit insid path express graph semant nres defin jakg jnkg exampl consid graph exampl schema exampl queri return pair author paper confer seri publish paper journal creator journal creator partof seri result queri foc serv queri express rpqs node denot node figur graph gxpath power languag examin propos libkin gxpath essenti adapt xpath data graph wrt previous languag gxpath introduc complement oper data test valu store node well counter general ize kleen star fragment gxpath focus navig path posit fragment intersect describ grammar graph semant gxpath defin jakg nkg exampl consid graph depict figur consid queri queri select pair node cycl reachabl edg label will indic rpq nre gxp three class regular express studi infer rule type infer approach type rpqs nres gxpath queri approach propos basic associ queri set schema element pair queri type set schema element describ node ning path match advantag type approach perform polynomi time orem sound complet rpqs theorem nre gxpath queri sound hold will provid counterexampl complet type rule reli judgement defin meta variabl denot set schema element pair definit basic judgment judgment state well form graph jsk upper bound jqkg type infer rule rpqs nres gxpath queri tabl rule oper usual combin binari relat tabl rule typeepsilon type queri rule typelabel deal forward navig rule typeunion typeconc type queri union concaten rule typestar final deal queri tabl rule typebacklabel typecond infer type queri backward navig nest condit tabl final rule typeanylabel typecount typeintersect deal wildcard queri count intersect tabl basic infer rule rpqs typeepsilon typelabel sym sym typeunion typeconc typestar tabl addit basic infer rule nres typebacklabel sym sym typecond tabl addit basic infer rule gxpath queri typeanylabel sym sym typecount typeintersect exampl consid queri exampl type queri rule typeconc typecond voke rule typecond turn invok rule typeconc typelabel typebacklabel type creator journal rule typebacklabel return set rule typelabel return rule typeconc turn rule typecond return rule typeconc typelabel typebacklabel call type creator partof seri return result type infer expect sound basic type infer state theorem theorem well form queri graph jsk jqkg exist jeik jejk proof structur induct queri trivial jakg definit queri semant exist definit well form schema exist jeik sym sym rule typelabel definit queri seman tic exist definit well form schema exist jeik sym sym rule typebacklabel definit queri semant exist definit well form schema exist jeik sym sym rule typeanylabel definit queri semant wlog assum case symmetr induct exist jeik jejk rule typeunion definit queri semant exist induct uniqu vertex type exist jeik jejk jekk rule typeconc thesi sound type union concaten definit queri semant exist jnkg induct exist jeik jejk rule typecond thesi sound type union concaten definit queri semant induct uniqu node type exist jeik jejk rule typeintersect basic type infer approach return simpl informa tion fact counterbalanc polynomi complex state theorem theorem complex evalu ate polynomi time proof sketch prove thesi observ queri length rule consum node pars tree impli will type number rule invoc polynomi complet proof suffic prove rule evalu polynomi time proof induct queri trivial case concern rule typestar typecount evalu rule polynomi time suffic recogn set interpret set edg schema element graph evalu rule equival comput reflex transit closur graph bound case rule typecount bound closur comput polynomi time exploit algorithm bound closur comput polynomi time reli usual squar method basic type infer rpqs sound plete proof complet reli number definit properti definit specifi set path match queri definit rpq graph finit alphabet set path match recurs defin path path path path path path path path path second definit specifi node connect path graph path empti path path edg label path turn path concaten defin obvious definit graph node connect path exist pair connect node easi prove connect connect connect lemma relat rpq semant path semant graph path lemma rpq graph connect path path jqkg proof structur induct trivial path definit semant rpqs pair node connect jqkg simpl induct path path connect connect connect node induct jqkg jqkg thesi definit jqkg path path connect connect induc tion jqkg thesi definit jqkg defin path schema definit schema type connect path exist sym sym connect lemma relat rpq type path schema lemma schema queri rpq input describ exist path connect path proof structur induct case trivial induct pair exist connect connect thesi case observ exist coupl connect path path prove complet rpq type rule definit coupl lemma definit schema doubl normalis dnorm indic function dnorm associ type dnorm uniqu type generat definit set element type generat doubl normalis lemma schema pair element type pair connect exist connect dnorm proof induct exist type sym sym norm sym sym norm sym sym definit doubl normalis will normalis prove basic case concern case empti case prove hypothesi connect connect induct assum exist dnorm coupl connect coupl connect easi prove type receiv emit connect connect dnorm thesi prove lemma well form schema exist graph respect connect node connect type proof lemma exist connect dnorm prove desir exist dnorm node type fore proof exist theorem omit detail observ graph graph built proof ensur node built graph correspond type dnorm node type dnorm incom outgo edg sym sym direct impli connect node correspond type path tool prove complet rpq type well form schema theorem well form schema queri rpq input describ exist jsk jqkg jeik jejk proof lemma connect path path lemma exist graph meet includ node connect lemma conclud jqkg jeik jejk theorem consequ corollari prove rpqs satisfi problem decid polynomi time problem sat well form queri languag graph jsk jqkg corollari sat rpq decid polynomi time proof consid queri well form prove jsk jqkg assum graph jsk jqkg theorem theorem exist graph jqkg contradict assum theorem graph jsk jqkg jqkg theorem contradict fact evalu polynomi theorem complet proof sound basic type infer complet nres gxpath queri exampl exampl consid graph schema consid queri a·c queri node outgo edg label prescrib edg mutual exclus result queri empti rule infer set nest regular express set infer set work describ structur graph subject ana lyze paper graph grammar repr approach describ graph plain string grammar graph grammar graph generat start sourc node appli set pro duction rule string tree grammar graph grammar generat graph transform exist graph pattern match suitabl type infer tsl schema languag triniti main memori graph process system base microsoft ecosystem tsl script compil net object code structur node rich defin valu requir bfs dfs algorithm well type outgo edg describ constraint incom edg cardin shex schema languag rdf data tsl shex describ complex node structur tsl outgo edg defin regular express tsl constraint incom edg instanc schema describ car car owner impos constraint singl person car constraint car singl owner time imposs defin empti shex schema limit express languag conclus futur work paper describ schema languag data graph introduc mild restrict imposs defin empti schema schema formal creat type infer system rpqs nres gxpath queri type infer system sound case rpqs complet make check satisfi queri infer type futur plan work three direct understand schema well formed check polynomi doubl normal mandatori second better investig empti problem general class graph schema relax constraint explor approach check consist system linear diophantin equat linear paramet final studi type infer techniqu return detail input queri set path queri travers input graph match schema acknowledg author maria grazia russo sugg tion system diophantin equat refer dblp bibliograph databas http cypher http doc stabl cypher queri pql http titl pql start pql berglund boag chamberlin ferna ndez kay robi sime xml path languag xpath second edit technic report wide web consortium recommend bray paoli sperberg mcqueen maler yergeau cowan extens markup languag xml second edit technic report wide web consortium recommend calvanes giacomo lenzerini vardi view base queri process regular path queri invers pod acm isbn choi real dtds webdb clauss advanc parameter linear diophantin equat precis program analysi technic report icp universit loui pasteur strasbourg sep icp colazzo ghelli sartiani effici inclus class xml type interleav count inf syst colazzo ghelli pardini sartiani effici asymmet ric inclus regular express interleav count xml type check theor comput sci colazzo ghelli pardini sartiani linear inclus xml regular express type acm tran databas syst consen mendelzon graphlog visual formal real life recurs rosenkrantz sagiv editor pod acm press isbn domenjoud solv system linear diophantin equat algebra approach mfcs ghelli colazzo sartiani effici inclus class xml type interleav count databas program languag intern symposium dbpl vienna aus tria septemb revis select paper volum lectur note comput scienc springer isbn harri seaborn sparql queri languag technic report wide web consortium mar recommenda tion libkin marten vrgoc queri graph databas xpath tan guerrini catania gounari editor icdt acm isbn marten neven schwentick bex express complex xml schema acm tran databas syst mendelzon wood find regular simpl path graph databas siam comput rez arena gutierrez nsparql navig lan guag rdf web sem pfaltz rosenfeld web grammar proceed intern joint confer artifici intellig wash ton william kaufmann isbn shao wang triniti distribut graph engin memori cloud proceed acm sigmod intern confer manag data sigmod york usa june acm isbn smoryski logic number theori introduct universi text springer verlag berlin york isbn staworko boneva gayo hym solbrig complex express shex rdf intern confer databas theori icdt march brussel belgium volum lipic schloss dagstuhl leibniz zentrum fuer informatik isbn thompson beech maloney mendelsohn xml schema structur second edit technic report wide web consortium oct recommend xie dang ibarra solvabl class quadrat dio phantin equat applic verif infinit state system automata languag program interna tional colloquium icalp eindhoven netherland june juli proceed volum lectur note puter scienc springer isbn 