principl dataset version explor recreat storag tradeoff souvik bhattacherje maryland colleg park bsouvik amit chavan maryland colleg park amitc silu huang illinoi urbana champaign amol deshpand maryland colleg park amol aditya parameswaran illinoi urbana champaign adityagp abstract relat eas collabor data scienc analysi led prolifer thousand million version dataset scientif commerci domain acquir construct stage data analysi user long period time manag store recr ate dataset version trivial task fundament challeng storag recreat trade storag faster recreat retriev version storag slower recreat retriev version despit fundament natur problem surpris amount work paper studi trade principl manner formul problem set trade quantiti way demonstr problem intract propos suit inexpens heurist draw techniqu delay constrain schedul span tree literatur solv problem built prototyp version manag system aim serv foundat datahub system cilit collabor data scienc demonstr tensiv experi propos heurist provid effici solut practic dataset version scenario introduct massiv quantiti data generat day eas collabor data analysi data scienc led sever issu manag retriev dataset motiv work concret exampl scenario intermedi result dataset organ deal ing larg volum divers dataset common sce nario dataset repeat analyz way intermedi store ture find intermedi pipelin pagerank comput web graph multi step workflow time dataset analyz simpl transform clean oper small updat store tireti current reduc amount store data scenario massiv redund duplic corrobor discuss larg softwar compani comput requir recomput version small merit store version data scienc dataset version convers comput biolog group time data scientist wish work dataset pri vate copi perform modif cleans normaliza tion field row store modifi version folder share entir group massiv redund duplic copi minim storag cost keep version easili retriev scenario essenti track version dataset recreat demand time essenti minim storag cost duce redund duplic abil manag larg number dataset version deriv dataset key foundat piec system build facilit col labor data scienc call datahub datahub enabl user track dataset version repres form direct version graph encod deriv relat ship retriev version analysi paper focus problem trade storag cost recreat cost principl fashion prob lem address paper collect dataset well direct version graph connect mini mize storag store dataset recreat cost retriev goal conflict minim storag cost typic lead increas recreat cost vice versa illustr trade exampl exampl figur display version graph indic deriv relationship version origi nal dataset team collabor dataset team modifi deriv team modifi deriv merg present fig ure associ indic storag cost recreat cost store entireti note typic measur unit second challeng edg notat storag cost store modif call delta recreat cost time recreat recreat naiv solut store dataset store entireti figur case version retriev direct total storag cost larg extrem version store entireti iii figur version graph dataset annot indic storag cost recreat cost iii three storag graph version store modif delta version figur iii total storag cost smaller recreat cost larg instanc path access order retriev recreat cost figur intermedi solut trade creas storag reduc recreat cost version store version entireti store modifica tion version solut exhibit higher storag cost solut lower iii signif icant reduc retriev cost version despit fundament natur storag retriev problem surpris prior work formal analyz trade design techniqu identifi effect stor age solut collect dataset version control system vcs git svn mercuri despit popular iti fair simpl algorithm underneath limit manag larg dataset prior work literatur focus linear chain version minim storag cost ignor recreat cost discuss work detail paper initi formal studi problem decid ing joint store collect dataset version provid version deriv graph handl scale term dataset size number version consider problem challeng applic scenario constraint lead variat basic theme balanc storag recr ation cost tabl variat dif ferent way reconcil conflict optim goal well variat differ tween version store version reconstruct exampl mechan construct differ version lead symmetr differ ver sion recreat version call undirect case scenario asymmetr differ refer direct case relationship storag recreat cost lead variat set case recreat cost proport stor age cost system bottleneck lie cost network communic true system bottleneck cpu comput true sophist differenc mechan pact deriv procedur generat dataset critic issu comput delta pair version typic feasibl reli pure ver sion graph suffici redund dataset miss case rel ativ access frequenc indic relat likelihood retriev dataset baselin algorithm solv problem easili adapt incorpor access frequenc note problem describ inher onlin dataset version typic creat contin uousli system paper focus static version problem focus formal complet understand version plan address onlin version problem futur key contribut work formal defin analyz dataset version prob lem consid variat problem trade storag cost recreat cost manner der assumpt differenc mechan recreat cost tabl summar problem varia tion problem hard provid light weight heurist constraint averag recreat cost constraint maximum recreat cost adapt prior solut balanc minimum span tree shortest path tree undirect graph built prototyp system implement propos algorithm extens experimen tal evalu algorithm synthet real workload demonstr effect algorithm handl larg problem size problem overview introduc essenti notat problem formul map ping basic problem graph theoret problem describ integ linear program solv problem optim essenti notat preliminari version graph collec tion version deriv relationship version repres captur form version graph direct edg repres deriv updat oper explicit transform branch merg mit datahub admit collabor data scienc storag cost recreat cost undirect case direct case direct case problem minim ptime minimum span tree problem minim max ptime shortest path tree problem minim hard hard lmg algorithm problem minim max algorithm hard algorithm problem minim hard hard lmg algorithm problem minim max algorithm hard algorithm tabl problem variat constraint object scenario dag direct acycl graph linear chain exam ple figur repres version graph deriv separ merg form storag recreat collect version reason storag cost space requir store version recreat cost time recreat retriev version version store entireti case denot storag quir record version fulli recreat cost case time need retriev record ver sion denot version store entireti materi store delta case store fulli store modif version exampl record tupl delet refer need construct version version delta algorithm delta call differenc algorithm storag cost record modif size delta denot recreat cost time need recreat record version recreat denot storag recreat cost repres matric entri diagon repres cost materi version diagon entri repr cost delta point forward focus attent matric captur relev informa tion version manag retriev delta variant notic chang differenc algo rithm produc delta type text file unix style diff modifica tion version common list program script sql queri command generat version type data xor version appropri delta tabular data relat tabl record differ enc cell level type delta delta store compress uncompress delta variant lead dimens problem will describ subsequ figur matric corresond exampl figur addit entri reveal version graph reader wonder reason matric case proport uncompress unix style diff case storag cost delta recreat cost appli delta esp cialli delta store compress fashion storag cost straightforward account proport byte requir store delta version recreat cost complic depend network bandwidth version delta store remot bandwidth comput cost decompr sion run script need exampl figur matric base version graph figur annot associ edg figur essenti vertex annot edg version graph choic set correspond entri unknown figur explicit comput valu entri run differenc algorithm instanc comput explicit figur specif number report fictiti result run specif algorithm discuss move formal defin basic opti mizat problem note complic uniqu challeng scenario reveal entri matrix ideal comput pairwis entri redund version version graph number version denot larg comput entri expens typic infeasi ble comput delta pair version reason incomplet matric version graph option restrict delta correspond actual edg version graph option restrict delta close version understand version close version graph simi lar prior work suggest mechan base hash find version close assum mechan choos delta reveal provid multipl delta mechan pair version way maintain delta cost exampl store program deriv longer recreat cost higher compact storag cost lower explicit store unix style diff version lower recr ation cost higher storag cost simplic pick delta mechan matric entri pair techniqu appli general scenario small modif branch branch merg common col labor analysi make version graph direct acycl graph paper assum version store entireti store delta singl version deriv dataset effici allow version store delta version case repres storag solut requir complex construct problem find optim storag solut problem instanc retriev specif version complic plan studi solut futur matrix properti problem dimens storag cost matrix symmetr asymmetr depend spe cific differenc mechan construct delta ampl xor differenc function symmetr trix delta version ident delta unix style diff modif list symmetr asym metric asymmetri larg instanc repres delta command delet tupl age compact revers delta larg tupl delet delta paper consid scenario refer sce nario symmetr asymmetr undirect case direct case second issu relationship scenario reason assum proport general true delta detail cell cell differ true system bottleneck network communic cost larg number case appropri treat independ quantiti overt relationship propor tional case assum proport constant problem statement algorithm guarante unaffect constant proport factor case denot lead identifi three distinct case divers properti scenario undirect case scenario direct case scenario direct case object optim metric goal find good storag solut decid version materi version store delta ver sion denot storag solut indic version vik materi store explicit entireti pair indic store delta vik vjk requir solut consid valid solut reconstruct origin version malli consid valid solut ver sion exist sequenc distinct version vlk ilk ilk con tain version terial recreat chain delta formal defin optim goal total storag cost denot total storag cost solutionp simpli storag cost store materi version delta recreat cost denot vlk denot sequenc reconstruct cost recreat sequenc recreat cost minimum quantiti sequenc recr ate problem formul state problem formul consid paper start base case repres extrem point spectrum problem problem minim storag find valid solut minim problem minim recreat iden tifi valid solut minim formul minim storag cost recreat cost worri pear second formul well defin aim minim averag recreat cost ver sion simpl solut minim averag recr ation cost natur minimizesri version formul minim sum recreat cost version iri max recreat cost version maxiri constraint total storag cost smaller threshold problem relev storag budget limit problem minsum recreat reshold identifi iri minim problem minmax recreat reshold identifi maxiri minim formul seek minim total storag cost constraint sum recreat cost max recreat cost problem relev reduc storag cost satisfi constraint recreat cost problem minim storag sum recreat threshold identifi iri minim figur graph figur storag graph problem minim storag max recreat threshold identifi maxiri minim map graph formul map problem graph problem will help adopt modifi algorithm well studi problem minimum span tree construct delay constrain schedul matric con struct direct edg weight graph repres relationship version ver sion creat vertex ing addit creat dummi vertex add edg assign edg weight tupl add edg edg weight graphg origin version graph differ edg version graph indic deriv relationship edg simpli indic recreat target version sourc version associ edg delta fact ideal complet graph version graph cycl special dummi vertex addit version graph version multipl edg result user applic merg chang multipl ver sion multipl edg ing captur multipl choic recreat version graph goal problem identifi storag graph subset favor balanc total storag cost recreat cost ver sion implicit will store version delta correspond edg storag graph explain context exampl storag graph feasibl problem version recreat base informa tion contain store recreat cost total storag cost meet constraint list problem exampl matrix figur correspond graph figur version reachabl exampl edg weight edg weight figur feasibl storag graph figur materi edg store modif version map problem graph set lemma lemma optim storag graph problem list span tree root dummi vertex graph proof recal span tree graphg graph includ vertic connect vertex reachabl vertex iii cycl satisfi order ensur version recreat path convers subgraph satisfi valid definit iii presenc cycl creat redund formal subgraph satisfi arbitrarili delet cycl subgraph cycl free preserv problem observ minimum span tree defin span tree smallest weight weight tree sum edg weight shortest path tree defin span tree path root vertex shortest path origin graph simpli consist edg explor execut shortest path algorithm lemma optim storag graph problem minimum span tree root consid weight lemma optim storag graph problem shortest path tree root consid weight ilp formul ilp formul optim problem scribe problem exampl problem binari variabl edg indic edg storag graph indic version materi indic modif version version store continu variabl vertex captur recreat cost version minim exi subject lemma problem equival optim problem describ note general form ilp permit statement transform general form aid larg constant constraint express larg constant addit constraint model instanc set hand hand larg addit constraint comput complex studi complex problem list tabl applic scenario problem complex discuss prob lem solv polynomi time direct appli minimum span tree algorithm algorithm algorithm undirect graph edmond algorithm rect graph shortest path algorithm algorithm time complexityo log algorithm time complexityo log binari heap implement prioriti queue log fibonacci heap implement prioriti queue run time edmond algorithm duce log faster implement algorithm construct shortest path tree start root time complex log binari heap base prioriti queue implement time complex log fibonacci heap base prioriti queue plement problem hard special case symmetr will lead hard proof variant triangl inequ primari challeng encount demonstr hard delta obey trian gle inequ set delta obey real constraint case delta repres actual modif store obey addit realist constraint sever complic prove hard transform ing proof simpl fair challeng consid scenario symmetr exampl triangl inequ state inequ state delta version exceed total delta hop path start vertex second inequ indic delta ver sion bigger full storag cost minus full storag cost tupl modif record explicit symmetr natur inequ hold figur illustr proof lemma problem hard demonstr hard lemma problem hard sym metric proof prove hard reduct set cover problem recal set cover problem set item set cover item goal pick set minim set cover instanc construct instanc prob lem will provid solut origin set cover problem threshold will problem will constant greater ensur larg construct graph display construct graph figur vertex set creat vertex creat vertex creat extra vertex dummi vertic add dummi vertic simpli ensur mate rializ will defin storag cost materi vertex cost cost vertex cost vertex cost number color blue tree figur set cost vertex vertic correspond set low terial cost vertic high materi cost design materi vertic edg set connect vertex weight connect weight connect weight easi construct graph obey triangl inequ consid solut problem construct graph demonstr solut lead solut origin set cover problem proof proceed key step step vertex will materi will materi assum contrari materi solut problem materi recreat cost violat condit problem avoid materi delta materi maintain recreat cost reduc storag cost materi will materi reason introduc precis ensur materi provid basi store delta set step will materi mate rializ solut problem set connect figur materi consid case case avoid materi add delta reduc storag cost keep recreat cost fix case pick connect materi delta solut replac edg materi materi delta duce total storag cost keep recreat cost fix case improv solut materi render statement fals step materi edg will storag graph step easi materi materi store delta step set materi correspond minim set cover origin problem easi cover materi ize order recreat cost constraint violat materi set cover orig inal problem order storag cost small materi place save cost materi correspond minim set cover origin problem minim total storag cost equival minimiz ing set cover problem note reduct graph edg weight recreat cost delta reduct deriv complet graph edg weight simpli shortest path graph reduc tion edg weight miss edg case storag graph solut problem will ident storag graph describ problem hard problem hard well general philosophi proof lemma creat dummi vertic dummi ver tice lemma larg ensur materi lemma problem hard sym metric dummi vertic figur illustr proof lemma proof prove hard reduct set cover problem recal set cover decis problem set item set cover item subset set cover instanc construct instanc prob lem will provid solut origin set cover decis problem correspond decis problem problem threshold problem minimum total storag cost construct graph bigger construct graph display construct graph figur vertex set creat vertex creat vertex creat extra vertex dummi vertic add dummi vertic simpli ensur materi aliz will defin storag cost materi vertex cost cost vertex cost vertex cost number color blue tree figur set cost vertex vertic correspond set low materi cost vertic correspond high materializa tion cost design materi vertic cost dummi vertic close will will materi edg set connect vertex weight connect weight connect weight easi construct graph obey triangl inequ consid solut problem construct graph demonstr solut lead solut origin set cover problem proof proceed key step step vertex will materi will materi examin observ will materi assum contrari materi materi recreat cost violat condit exceed total recreat cost threshold problem avoid materi delta materi reduc recreat cost storag cost materi materi will materi will retain delta reduc recreat cost storag cost step complet step will materi mate rializ solut problem set connect figur materi consid case case avoid materi add delta reduc storag cost keep recreat cost fix case pick connect materi delta solut replac edg materi materi delta duce total storag cost keep recreat cost fix case improv solut materi render statement fals step materi edg will storag graph step easi materi materi store delta step minimum total storag cost bigger exist subset origin set cover decis problem vice versa examin minimum total storag cost bigger storag cost bigger storag cost step indic materi set materi prove store modif materi suppos exist store modif total recreat cost exceed total recreat threshold store modif minimum total storag cost bigger exist subset origin set cover decis problem examin second exist subset origin set cover decis problem materi vertex well extra vertex connect well connect total storag total recreat cost equal threshold exist subset origin set cover decis problem minimum total storag cost bigger decis problem problem equival decis problem set cover problem problem hard complet graph oppos graph edg weight problem swap constraint goal compar prob lem hard note decis version problem fact ident proof appli problem hard prove hard special case symmetr conclud problem hard general set symmetr list tabl hop base variant focus prove hard ness special case undirect consid kind special case recreat cost pair undirect case call recreat cost hop cost simpli minimum number delta oper hop need reconstruct reason bring variant direct cor respond special case well studi minimumsteinertre problem undirect graph subset find tree minimum weight span entir ver tex subset diamet bound special case minimumsteinertre problem mini mum span tree problem bound diamet direct corr spond problem hop cost variant describ hard special case demonstr reduct sat problem lemma problem hard sym metric note proof crucial fact lemma proof incompar subsum hop base variant addit hard proxim minimumsteinertre prob lem lemma problem lnn approxim dtime nlog logn hop base variant special case column tabl indic problem general case hard approxim suspect hold problem well remain hard approxim demonstr variant second third column propos algorithm discuss applic scenario lead problem formul span constraint object assumpt natur demonstr previous problem hard focus develop effici heurist novel heurist lmg local move greedi algorithm tailor case bound object averag recr ation cost appli problem second tion modifi algorithm tailor case bound object maximum recr ation cost appli problem variant algorithm tailor set algorithm approxim algorithm call algorithm call gith base git repack adapt literatur fit problem compar algorithm note explicit optim object constraint manner lmg gith algorithm applic set lmg applica ble bound constraint averag maxi mum recreat cost gith applic good solut need note algorithm appli direct undirect version problem symmetr unsymmetr case local move greedi algorithm lmg algorithm applic bound con straint averag case recreat cost focus case constraint storag cost problem case constraint problem solv peat iter binari search previous problem outlin high level algorithm start minimum span tree mst greedili add edg shortest path tree spt respect bound storag cost figur illustr local move greedi heurist detail algorithm algorithm start equal mst spt natur edg correspond complet version basic idea algorithm replac delta version spt maxim follow ing ratio reduct sum recreat cost increas storag cost simpli reduct total recreat cost unit addit weight storag graph consist edg spt precis correspond version explicit store mst comput delta mst round pick edg euv maxim replac previous edg reduct sum recreat cost comput reduct recreat cost descend storag graph clude hand increas storag cost simpli weight euv minus weight process repeat long storag budget violat explain exampl exampl figur denot current node cor respond dummi node consid replac edg edg replac delta ver sion version denomin sim pli numer chang recreat cost version notic tree simpl comput simpli three time chang recreat cost version version equal numer simpli complex round comput edg lead complex round upto edg smart comput precomput maintain ing round number node node reduc complex comput edg lead complex algorithm pseudocod describ techniqu access frequenc note algorithm easili account access frequenc version opti mize total weight recreat cost weight access fre quenci algorithm numer will captur reduct weight recreat cost modifi algorithm introduc heurist algorithm base algo rithm minimum span tree problem goal algorithm local move greedi heurist input minimum span tree mst shortest path tree spt sourc vertex space budget output tree weight root minim sum access cost initi mst distanc denot parent denot storag cost espt foreach euv comput euv euv euv return reduc total storag cost recreat cost version threshold solut problem outlin high level algorithm variant gorithm greedili version smallest storag cost correspond edg form span tree algorithm span tree simpli grow case edg remov futur iter stage algorithm maintain invari recr ation cost version bound detail algorithm iter algorithm pick ver sion smallest storag cost tree version consid delta version recreat cost constraint storag cost increas version maintain pair denot margin stor age cost denot total recreat cost start simpli storag cost entireti describ algorithm detail set repres current version set current span tree initi iter version smallest storag cost prioriti queue pick span tree updat storag cost recreat cost neighbor notic algorithm consid neigh bor scenario better path neighbor result updat instanc edg storag cost smaller recreat cost increas updat well neighbor updat edg storag cost smaller recreat cost bigger algorithm termin iter version iter exampl oper figur threshold version associ pair initi version push prioriti queue dequeu neighbor updat figur direct graph figur undirect graph figur illustr modifi algorithm figur figur notic simpli storag cost version exampl con sider edg updat recreat cost store entireti smaller threshold version insert prioriti queue dequeu smallest version prioriti queue add span tree updat neighbor recreat cost version will storag cost will consid edg updat figur will updat recreat cost consid edg sequent version dequeu lowest tree figur subsequ version dequeu dequeu updat storag cost updat recreat cost consid edg figur eventu final answer figur complex complex algorithm algorithm log edg scan prioriti queue updat worst case algorithm sketch algorithm previous work abl find tree good balanc storag recreat cost assumpt symmetr outlin algorithm start minimum span tree depth traver dfs minimum span tree process dfs recreat cost node exceed pre defin threshold set front current path replac shortest path node detail algorithm discuss balanc tween recreat cost storag cost equival balanc tween minimum span tree shortest path tree root algorithm modifi algorithm input graph threshold output span tree version set current span tree initi parent denot storag cost denot recreat cost root version initi enqueu prioriti queue sort top dequeu neighbor enqueu updat khuller studi problem balanc mini mum span tree shortest path tree undirect graph span tree properti paramet node cost path time shortest path total cost time cost minimum span tree algorithm meant undirect graph appli direct graph case compar guarante pseudocod list algorithm mst denot minimum span tree graph denot shortest path algo rithm start themst conduct depth travers mst node track path cost root well parent denot approxim paramet visit node check bigger stand shortest path replac path shortest path root updat well addit updat depth travers state algorithm exampl figur minimum span tree mst root node ofg figur approxim threshold algorithm balanc mst shortest path tree input graph mst output span tree initi mst distanc parent dfs travers mst edg current travers add shortest path figur illustr figur set algorithm start mst conduct depth travers mst root visit node shortest path node continu visit node visit shortest path set set node place shortest path figur edg travers mst current edg weight current updat updat node node visit updat line execut figur sult span tree algorithm recreat cost node constraint total storag cost complex complex algorithm log minimum span tree shortest path tree root algorithm conduct depth travers mst easi complex algorithm time complex comput minimum span tree short est path tree log heap base prioriti queue git heurist heurist adapt current heurist git refer gith sketch algorithm refer reader appendix analysi heurist gith paramet window size max depth consid version increas order size version order chosen root stor age graph depth materi time maintain slide window version version denot version current window comput depth delta shallow depth prefer smaller delta higher depth find version lowest quantiti choos parent long depth set slide window modifi move window will stay window longer window version window drop complex run time heurist log exclud time construct delta experi built prototyp version manag system will serv foundat datahub system subset git svn interfac dataset version user teract version manag system client server model http server implement java respons store version histori repositori well actual file client implement python function creat commit check version dataset creat merg branch note tradit vcs best effort perform automat merg sys tem user perform merg notifi system creat version parent implement section exten sive evalu design algorithm combin synthet deriv real dataset apart implement ing algorithm describ lmg requir spt mst input direct undirect graph algorithm find singl sourc shortest path tree spt algorithm find minimum span ning tree undirect graph direct graph implement edmond algorithm comput min cost arboresc mca experi intel xeon cpu server memori run bit red hat enterpris linux dataset data set synthet deriv real sourc code repositori public sourc code repositori larg number commit github repositori typic fair small sourc code file chang version tend local typic small expect dataset ver sion generat collabor data analysi larger dataset exhibit larg chang version unabl find realist workload kind generat realist dataset version workload wrote synthet version generat suit driven small set paramet generat varieti version histori correspond dataset second creat real dataset public fork popular repositori github describ synthet dataset synthet dataset generat take synthet dataset generat independ interest dataset number version number delta averag version size mca storag cost mca sum recreat cost mca max recreat cost spt storag cost spt sum recreat cost spt max recreat cost dataset ize lta figur dataset properti distribut delta size delta size scale averag version size dataset step approach generat dataset sketch step generat version graph desir structur control paramet number commit total number version branch interv probabl number con secut version branch creat probabl creat branch branch limit maximum number branch point version histori choos number branch limit uniform random decid creat branch branch length maximum number commit branch actual length uniform chosen integ tween branch length version graph generat second step generat appropri version comput delta file synthet dataset order csv file tabular data delta base unix style diff previous step annot edg version graph edit mand produc edit command combin instruct add delet set consecut row add remov column modifi subset row column generat synthet dataset figur dens connect dataset base flat version histori number branch high occur short length version data set comput delta version hop distanc version graph popul addit entri linear chain dataset base linear version histori number branch low occur larg interv longer lenght version data set comput delta version hop distanc version graph popul real dataset fork twitter bootstrap repositori fork linux repositori deriv real workload repositori checkout latest ver sion fork concaten file travers directori structur lexicograph order comput delta pair version repositori provid size research work version manag differ version consider threshold set threshold twitter bootstrap repositori linux repositori real dataset bootstrap fork linux fork properti figur comparison svn git evalu perform popular ver sion control system svn git dataset creat fsfs type repositori svn space effici berkeley base repositori import entir dataset repositori singl mit amount space occupi rev directori take minut complet port contrast naiv approach appli gzip file total compress storag case git add commit file repositori git repack depth window repo size git pack file repack consum memori take minut higher win dow size git fail complet repack run mem ori comparison solut mca algorithm occu pie compress storag uncompress unix diff comput delta fair comparison git xdiff libxdiff librari comput delta form basi delta pute routin xdiff bring total storag cost total time minut includ time comput delta find mca correspond graph main reason poor perform skip delta ensur logn delta need reconstruct version lead repeat store redund delta result total space requir increas heurist git better svn fig implement heurist gith requir storag lmg guarante recreat cost experiment direct graph comprehens evalu three algorithm lmg direct dataset git repack svnadmin pack neglig storag cost aim reduc disk seek version disk usag penalti concaten file singl pack dataset dataset dataset dataset storag cost lmg gith figur direct case compar storag cost total recreat cost storag cost dataset storag cost dataset storag cost dataset storag cost dataset lmg figur undirect case compar storag cost total recreat cost maximum recreat cost dataset dataset storag cost lmg figur direct case compar storag cost maximum recreat cost algorithm paramet trade storag cost total recreat cost pare plot solut find valu respect input paramet fig ure plot algorithm rang valu input paramet plot storag cost total sum recreat cost solu tion minimum valu cost vertic dash red indic minimum stor age cost requir store version dataset mca horizont indic minimum total recr ation cost spt equal sum version size key observ total recreat cost decreas drastic allow small increas stor age budget mca exampl dataset sum recreat cost mca tabl compar spt solut minimum possi ble figur space budget mca storag cost reduc sum recreat cost three order magnitud trend observ remain ing dataset algorithm observ lmg best tradeoff sum recreat cost storag cost perform fair close takeaway amount prior work focus pure storag cost minim construct balanc tree sum recreat cost reduc brought close spt fraction space spt gith heurist dataset vari ing window depth set algorithm window size fix depth provid gith algorithm delta request dataset gith infinit window size restrict choos delta algorithm delta size threshold solut gith exhibit good tal recreat cost requir higher storag algorithm surpris gith greedi heurist choic arbitrari order figur plot maximum recreat cost stead sum recreat cost version dataset dataset exhibit behavior algorithm best solut dataset observ lmg plateaus dataset maximum recreat cost chang storag budget increas surpris basic algorithm optim storag cost bound maximum recreat cost lmg focus minim storag cost version high recreat cost affect undirect graph test three algorithm undi rect version three dataset figur dataset dataset storag cost lmg lmg figur workload account lead better solut undirect delta pair version concaten direct delta dataset unix diff produc undirect delta serv lmg consist outperform algorithm term find good balanc storag cost sum recreat cost best ing balanc maximum recreat cost total storag cost observ dataset omit ted space limit workload awar sum recreat cost optim case estim access frequenc vari ous version histor access pattern account construct stor age graph lmg algorithm easili adapt account clear adapt ther fashion experi lmg comput storag graph sum recreat cost minim space budget workload format account worload assign frequenc access version repositori zipfian distribu tion expon real access frequenc follow distribut workload gorithm find storag graph sum recreat cost workload account version assum access equal frequent figur experi dataset account access frequen cie optim led better solut ignor access frequenc hand dataset observ larg differ run time evalu run time lmg algorithm recal lmg take mst mca spt put fig report total run time well time lmg generat set version graph subset graph dataset number version random choos node tra vers graph start node breadth manner till construct subgraph version generat graph increas valu report averag run time lmg storag budget lmg set three time space requir mst report experi lmg storag budget time lmg dataset number version lower delta valu fig requir edg spt satisfi storag budget hand take second dataset recreat cost set maximum lmg requir mst mca spt input run time linear take direct undirect number version lmg lmg total total figur run time lmg storag cost ilp ilp ilp tabl compar ilp solut small dataset bound max recreat cost second case final time gith dataset vari window size rang second window minut window note exclud time construct delta summari lmg inher expens algo rithm run reason time larg input size note time dwarf time take construct delta moder size dataset comparison ilp solut final compar qualiti solut optim solut gurobi optim problem ilp formul constraint maximum recreat cost compar optim storag cost algo rithm solut lowest maximum recreat cost evalu synthet dataset generat suit generat three small dataset version denot comput delta tween pair version tabl report exper iment valu ilp turn difficult solv small problem size case optim finish report number best solut solut close ilp solut small problem size solut optim extrapol admit limit data point expect larg prob lem size wors optim variat problem note optim problem formul involv max recreat cost turn harder formul focus averag recr ation cost develop better heurist approxim algorithm provabl guarante problem introduc rich area work close prior work sourc code ver sion system git mercuri svn manag sourc code repositori despit popular iti system fair simpl algorithm underneath optim work modest size sourc code file disk structur optim work base diff system limit han dling larg file larg number version result varieti extens git annex git bigfil develop work reason well larg file prior work tempor databas literatur manag linear chain version retriev version specif time point call snapshot queri propos archiv techniqu version data merg hierarchi element appear mul tipl version store timestamp techniqu store version contrast techniqu retriev version requir undo chang roll delta hierarch data archiv repres xml format enabl xml tool xml compressor compress archiv full fledg version control system repres arbitrarili graph version focus algorithm compact encod linear chain version snapshot queri studi context array databas graph databas seer consid problem store arbitrari tree version context scientif databas propos tech niqu base find minimum span tree dis cuss earlier solut repres extrem spectrum solut consid propos sev eral heurist choos version materi distribut access frequenc histor version databas support time travel featur oracl flashback postgr allow branch tree version articul vision datahub vision propos formal algorithm solv under data manag challeng addit schema tabl encod flashback chang prior work compact encod differ enc file string order reduc communic storag cost addit standard util unix diff sophist techniqu propos comput differ edit sequenc file xdelta vdelta vcdiff zdelta work orthogo nal complementari work prior effort look problem minim total storag cost store collect file problem work typic consid recreat cost tradeoff quinlan propos archiv dedupl storag system identifi duplic block file store reduc storag requir zhu optim basic theme doug techniqu iden tifi pair file effici store delta pression explicit deriv file techniqu better iden tifi entri matric reveal sce nario ouyang studi problem compress larg collect file perform sequenc pair wise delta compress propos suit text cluster ing techniqu prune graph pairwis delta encod find optim branch mca minim tal weight burn long techniqu place construct delta compress file graph theoret approach work incorpor frame work reduc memori requir reconstruct dictionari base refer encod techniqu effici repres target web term addit modif small number refer web kulkarni general techniqu combin techniqu identifi block col lection file delta compress reduc total storag cost ignor recreat cost refer reader cent survey comprehens coverag work conclus futur work larg dataset collabor iter analysi come norm applic domain lack data manag infrastructur effici manag dataset version time deriv data product high overlap duplic dataset attract con sider delta compress store dataset compact manner dataset version store modifica tion dataset delta compress lead higher latenc retriev specif dataset paper studi trade storag recreat cost principl manner formul optim prob lem trade way show variat hard present effici algorithm effect explor trade pre sent extens experiment evalu prototyp ver sion manag system built terest rich avenu futur work plan pursu plan develop onlin algorithm mak ing optim decis dataset version creat adapt algorithm reevalu optimiza tion decis base chang workload plan explor challeng extend work distribut decentr set refer http cgit git tree document technic pack http http edmond http repo asf subvers trunk note fsfs http http repo asf subvers trunk note fsfs http xdiff http repo asf subvers trunk note skip delta https git http wiki git bigfil https pub softwar scm git doc technic pack bar ilan kortsarz peleg general submodular cover problem applic theoret comput scienc bhardwaj bhattacherje chavan deshpand elmor madden parameswaran datahub collabor data scienc dataset version manag scale cidr bolour anderson dekeys wong role time process survey sigmod rec buneman khanna tajima tan archiv scientif data acm transact databas system tod burn long place reconstruct delta compress file podc chan woo cach base compact techniqu optim web transfer infocom charikar chekuri cheung dai goel guha approxim algorithm direct steiner problem alg doug iyengar applic specif delta encod resembl detect usenix atc gatterbau suciu manag structur collect communiti data cidr biennial confer innov data system asilomar usa januari onlin proceed hunt tichi delta algorithm empir analysi acm tran softw eng methodol khuller raghavachari young balanc minimum span tree shortest path tree algorithmica khurana deshpand effici snapshot retriev histor graph data icd korn engin differenc compress data format usenix atec kortsarz peleg approxim shallow light tree soda kulkarni doug lavoi tracey redund elimin larg collect file usenix atc macdonald file system support delta compress phd thesi berkeley ouyang memon suel trendafilov cluster base delta compress collect file wise ozsoyoglu snodgrass tempor real time databas survey ieee tkde aug paulo pereira survey classif storag dedupl system acm comput surv june quinlan dorward venti approach archiv storag fast salzberg tsotra comparison access method time evolv data acm comput surv seer cudr mauroux madden stonebrak effici version scientif array databas icd snodgrass ahn taxonomi time databas sigmod soroush balazinska time travel scientif array databas icd stonebrak kemnitz postgr generat databas manag system communic acm tansel clifford gadia jajodia segev editor tempor databas theori design implement tarjan find optimum branch network trendafilov memon suel zdelta effici delta compress tool technic report zhu patterson avoid disk bottleneck data domain dedupl file system fast appendix git repack git delta compress reduc amount storag quir store larg number file object plicat algorithm clear describ discuss linus sketch algorithm chang heurist appear document describ understand algorithm base latest git sourc code focus repack decis larg group object algorithm appear normal commit well algorithm code file builtin pack step sort object type hash size decreas order compar static int type_size_sort const void const void note hash true hash pack_name_hash function pack simpli creat number white space charact charact count file suffix will sort step key function ll_find_delta file sort order maintain list ject window size default time object find delta ject sayb window choos object mini mum delta max_depth depth max_depth paramet default depth refer length delta chain root origin algorithm appear delta decis depth bias denomin point prefer larger delta smaller delta chain key line check object window ret try_delta max_depth mem_usag line depth bias max_siz max_siz max_depth src depth max_depth ref_depth https git git commit comput delta compar size delta_buf create_delta src trg data trg_size delta_s max_siz create_delta return null delta smaller current delta modulo depth bias specif ical size delta max_siz gument note line appear redund depth bias calcul step origin window object fore object consider current gorithm shuffl object window base choic current object window object chosen delta move list list move object slide window window small detail list maintain circular buffer list physic shift move involv shift relev code line final note git consid comput store delta object type multi thread fashion partit work number thread thread oper independ 