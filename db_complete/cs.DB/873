adapt partit larg rdf data razen harbi ibrahim abdelaziz pano kalni niko mamouli yasser ebrahim maje sah abstract state art distribut rdf system par tition data multipl comput node worker system perform cheap hash partit result expens queri evalu appli heurist aim minim inter node munic queri evalu requir expens data pre process phase lead high startup cost larg rdf knowledg base apri ori knowledg queri workload creat partit static adapt workload chang result inter node munic consist avoid queri favor initi data partit paper propos adhash distribut rdf system address shortcom pre vious work adhash appli lightweight partit ing initi data distribut tripl hash ing subject render startup overhead low time local awar queri opti mizer adhash take full advantag partit ing support fulli parallel process join pattern subject minim data communi cation general queri appli hash distribut intermedi broadcast wher second adhash monitor data access pattern dynam redistribut replic instanc frequent worker harbi abdelaziz kalni sah king abdullah univers scienc technolog thuwal saudi arabia mail mamouli univers ioannina greec mail niko ebrahim microsoft corpor redmond unit state mail yaelsa result communic cost futur queri drastic reduc elimin control repli cation adhash implement evict polici redistribut pattern experi synthet real data verifi adhash start faster exist system process thousand queri system onlin iii grace adapt queri load evalu queri billion scale rdf data second introduct rdf data model requir predefin schema repres divers sourc versatil manner social network search engin shop site scientif databas adopt ing rdf publish web content larg public knowledg base billion fact rdf format rdf dataset consist tripl form subject predic object predic repres relationship enti tie subject object rdf dataset regard long relat tabl three column rdf dataset view direct bele graph vertic edg label correspond entiti predic figur exampl rdf graph student professor academ network standard queri languag rdf queri set rdf tripl pattern node pattern variabl appear multipl pattern exampl queri figur return professor work http http yago http org rdf sparql queri razen harbi fig exampl rdf graph edg associ ver tice correspond rdf tripl bill worksfor fig queri find professor advise advise queri correspond graph pattern figur answer set order bind ing render queri graph isomorph subgraph data assum data store tabl queri answer decompos subqueri correspond ing tripl pattern worksfor advisor subqueri answer independ scan tabl join intermedi subject object tribut appli queri data figur prof stud jame lisa bill john bill fred bill lisa volum rdf data continu soar man age index queri rdf data collect challeng earli effort focus build effici central rdf system rdf hexastor triplebit gstore central data manag search scale well complex queri web scale rdf data result distribut rdf manag sys tem introduc improv perform system scale partit rdf data comput node worker evalu queri distribut fashion sparql queri decompos multipl subqueri evalu node independ data distribut node exchang intermedi queri evalu consequ queri larg interm diat incur high communic cost detriment queri perform distribut rdf system aim minim number decompos subqueri partit data worker goal node data evalu entir queri exchang intermedi parallel queri evalu node contribut partial result queri final queri result union partial achiev tripl replic multipl partit exampl figur assum data graph vide dot partit assum tripl follow subject placement answer queri figur node exchang inter mediat tripl lisa advisor bill fred advisor bill cross partit boundari replic tripl partit allow node answer queri communic sophist partit replic guarante arbitrarili complex sparql queri process parallel expens distribut queri evalu intermedi exchang node avoid distribut rdf system fac ing limit partit cost graph parti tion complet problem exist system perform heurist partit system simpl hash partit heuri tic queri low chanc evalu paral lel communic node hand system sophist partit heurist suffer high preprocess cost high replic import pay cost partit entir data regard anticip workload studi small fraction graph access typic real queri work load exampl real workload consist queri execut dbpedia tripl touch data argu distribut rdf system leverag queri workload data partit adapt warp partout consid workload data partit achiev duction replic ratio show better queri perform compar system partit data blind system sume repres static queri workload adapt chang workload divers dynam aluc sys tem continu adapt workload order consist provid good perform reli static workload perform degrad queri repres paper propos adapt hash hash distribut memori rdf engin adhash allevi aforement limit exist sys adapt partit larg rdf data tem base key principl lightweight initi partit adhash initi hash partit distribut tripl hash ing subject partit low cost incur replic preprocess time low partial address challeng hash base local awar adhash achiev competit perform maxim number join execut parallel data communic exploit hash base local join pattern subject includ queri process parallel addit intermedi hash distribut singl worker broadcast local awar queri optim adhash consid prop erti comput evalu plan minim intermedi ship worker adapt increment monitor execut workload increment date hierarch heat map access data pattern hot pattern redistribut repli cate system futur queri clude execut parallel worker data communic control replic hash oper budget employ evict polici redistribut pattern adhash overcom limit static partit scheme adapt dynam chang workload summari contribut introduc adhash distribut sparql gine requir expens preprocess lightweight hash partit avoid upfront cost adopt pay approach adhash execut ten thousand queri larg graph time take system conduct initi partit propos local awar queri planner cost base optim adhash effici exe cute queri requir data communic novel approach monitor dex workload form hierarch heat map queri transform index map facilit adapt adhash introduc increment redistribut ird techniqu guid workload ird incremen talli redistribut portion data cess hot pattern base ird adhash pro cess futur queri data communic evalu adhash synthet real data compar state art system adhash partit billion scale rdf data start answer ing queri minut sys tem hour day adhash execut larg workload order magnitud faster exist approach best knowledg adhash system capabl provid second execut time queri complex structur billion scale rdf data rest paper organ tion review exist distribut rdf system techniqu scalabl sparql queri evalu present architectur hash overview compo nent discus local awar queri plan ning distribut queri evalu explain adapt featur adhash experiment con clude paper work review distribut rdf sys tem adhash tabl summa rize main characterist system lightweight data partit system base mapreduc framework hadoop distribut file system hdfs store rdf data hdfs horizont random data parti tion shard store rdf data hdfs file hadooprdf hdfs split data multipl smaller file shard hadooprdf solv sparql queri set mapr duce iter distribut memori rdf engin handl web scale rdf data rep resent rdf data nativ graph form adjac list key store storag rdf graph partit vertex hash key equival partit data subject hash key ond object graph explor sparql queri evalu reli heavili under high infiniband interconnect iter singl subqueri explor start valid bind worker generat redund intermedi avoid explor involv vertic sourc target prune invalid intermedi carri histor bind worker ship candid master final potenti bot tleneck system rya key store rdf data storag rang partit data base key key partit sort razen harbi tabl summari state art distribut rdf system system partit strategi partit cost replic workload awar adapt triad graph base meti horizont tripl shard high rdf graph base meti high partout workload base horizont fragment high shape semant hash high path partit moder hash low base partition rang low shard hash low adhash hash low solv sparql queri rya execut subqueri rang scan appropri util lookup subqueri execut simpl queri central fash ion complex queri solv set mapreduc iter system lightweight partit scheme comput inexpens queri long path complex structur cur high communic cost addit system mapreduc join evalu suffer high overhead contrari hash system lightweight hash partit avoid excess data exploit hash base data local adapt increment workload minim communic sophist partit scheme repli cation system employ general graph parti tion techniqu partit rdf data order improv data local eagr focus minimiz ing cost rdf graph transform compress entiti graph partit mincut algorithm meti rdf meti partit rdf graph work enforc call hop guarante queri radius execut communic queri radius larger execut expens mapreduc join repli cation increas exponenti small eagr rdf suffer overhead mapr duce base join queri evalu local queri second queri evalu state art mapreduc implement hadoop spark triad meti data partit edg cross partit replic hop guarante summari graph defin includ vertex partit vertic graph connect cross partit edg queri triad evalu summari graph order prune partit contribut queri queri evalu rdf data resid partit retriev summari graph multipl join oper execut concurr worker communic asynchron mes sage pass protocol sophist partit tech niqu mincut reduc communic cost sig nific techniqu prohibit expens scale larg graph mincut yield good parti tion dens graph triad benefit summari graph prune techniqu dens rdf graph high edg cut allevi meti overhead effici approach partit larg graph introduc will sparql queri poor local cross partit boundari result poor perform shape propos semant hash portion approach rdf data shape start simpl hash partit employ hop strategi rdf reli uri hierarchi group vertic increas data local rdf shape suffer high overhead mapreduc base join uri base group ing skew partit larg percentag vertic share prefix behavior notic real well synthet dataset propos path partit scheme consid rect path rdf graph path merg bottom fashion path start ing vertic approach work well star chain direct cyclic queri type queri result communic exampl queri object object join queri associ queri vertex type predic quir inter worker communic note adap tiviti techniqu orthogon combin path partit well partit heurist effici evalu queri favor partit adapt partit larg rdf data workload awar data partit aforement partit techniqu focus min imiz communic consid work load studi real queri work load touch small fraction data uti lize queri workload help reduc communica tion cost queri evalu par allel base partit scheme partout distribut engin reli workload divid data node tract repres tripl pattern queri load pattern partit data fragment colloc fragment cess queri worker simi lar warp repres queri workload replic frequent access data workload chang user queri rep resent workload partout warp incur high communic cost adapt chang workload appli expens partit entir data contrari adhash system adapt increment replic data cess workload small discuss sparql vertex centric sedg solv problem dynam graph partit demonstr partit effect sparql queri rdf entir graph replic time replica partit differ sparql queri translat manual pregel program execut replica minim munic approach incur excess repli cation duplic entir data time lack support hoc queri counter product user manual write optim queri evalu program pregel materi view work attempt speed execut sparql queri materi set view set path express select view base repres work load approach generat local materi view redistribut data access hot pattern preserv data local allow queri execut minim communic relat model exist relev system focus data model rdf schism deal data placement distribut oltp rdbms sampl workload schism minim number distribut transact popul graph access tupl tupl access transact server appropri sparql queri access larg part data overwhelm sin fig system architectur adhash gle machin adhash exploit parallel execut queri machin parallel communic store memori distribut oltp rdbms data partit ing techniqu store sume schema queri workload advanc assum hoc queri valid assumpt oltp databas rdf data store eventu index idreo introduc concept reduc data queri time rela tional data avoid build indic data load reorder tupl increment dur ing queri process adhash extend eventu index dynam adapt graph partit problem graph partit expens potenti benefit minim data queri time substanti system architectur adhash employ typic master slave paradigm deploy share cluster machin figur master worker communic messag pass architectur system triad master master partit data work collect global statist receiv queri user generat execut plan coordi nate worker collect return final string dictionari rdf data long string form uri liter avoid storag pro cess communic overhead encod rdf string numer build direct dic tionari approach state art sys tem data partition studi join subject column account razen harbi join real workload sparql queri adhash lightweight hash base tripl shard subject valu worker tripl assign worker result hash function appli tripl share subject will assign worker consequ star queri join subject evalu communic worker hash object liter common type hash object assign tripl type worker load imbal limit parallel vali argument synthet lubm real dataset tripl dataset par tition partit method hash subject hash object iii random partit tabl statist tripl distribut partit method hash object sever imbalanc parti tion random partit hash subject result balanc partit random partit destroy data local statist manag maintain statist rdf graph global queri plan adapt statist collect dis tribut manner bootstrap redistribut control monitor workload form heat map trigger adapt crement redistribut ird process hot pat tern data access hot pattern redi tribut replic worker redistribut hot pattern answer work parallel communic hierarchi cal represent replic hot pattern index structur call pattern pattern combin evalu futur queri communic control implement replica replac polici replic threshold local awar queri planner planner global statist statist manag pattern redistribut control cide queri partial process communic queri fulli swere communic plan exe cute worker independ hand queri requir communic planner ploit hash base data local queri struc simplic mod http project lubm http yago tabl tripl distribut thousand tripl lubm method max min stdev max min stdev hash subj hash obj random ture find plan minim communic number distribut join failur recoveri master store data consid singl point failur maintain dictionari global statist standard failur recoveri mechan log base recoveri employ adhash assum stabl storag master recov load dictionari global statist read chang system easili recov read queri log recon struct heat map worker hand store data case failur data partit recov shen propos fast fail ure recoveri solut distribut graph process system solut hybrid checkpoint base log base recoveri scheme approach adhash recov worker partit recon struct replica reliabl paper scope leav futur work worker storag modul worker store local set tripl memori data structur support search oper subject predic object return set return set return set search requir predic hash tripl worker predic predic simpli imm diat support search predic erat hash map partit bucket tripl predi cate base subject object hash map support second third search oper call predic subject predic object number uniqu predic typic small storag scheme avoid unnecessari repetit predic valu note answer ing queri predic variabl simpli iter predic index scheme adapt partit larg rdf data tailor typic rdf knowledg base workload orthogon rest system altern scheme index spo combi nation worker final storag modul comput statist local data share master data load replica worker memori replica store index replic data sult adapt initi data updat dynam increment redistribut ird process queri processor worker queri proce sor oper mode distribut mode queri requir communic case worker solv queri concurr exchang termedi parallel mode queri answer communic worker data need queri evalua tion local local queri planner queri execut parallel mode plan worker autonom exam ple star queri join subject process parallel initi partit queri answer parallel adapt pro cess plan local queri planner statist collect adhash collect aggreg statist work global queri plan adapt process keep statist vertex tire rdf data graph prohibit expens adhash solv problem focus predic vertic storag complex stati tic linear number uniqu predic typic small compar data size uniqu predic calcul stati tic cardin denot num ber tripl data graph predi cate number uniqu ject object predic iii subject score denot averag gree vertic object score denot averag degre vertic predic subject pps averag number tripl predic uniqu subject predi cate object ppo averag number tripl predic uniqu object exampl figur illustr comput stati tic predic advisor data graph figur advisor appear time three uniqu subject uniqu object fig statist calcul advisor base figur subject score advisor appear uniqu subject fred john lisa degre degre degre final number predic subject pps lisa associ instanc predic advisor system overview abstract overview adhash encod partit data worker load tripl collect local statist master node aggreg statist adhash start answer ing queri user submit sparql queri master queri planner master consult redistribut control decid ecut parallel mode redistribut control global statist transform hierarch represent detail exist pattern star queri join subject column answer parallel mode execut distribut mode execut distribut mode local awar planner devis global queri plan worker copi plan evalu queri answer parallel mode master broad cast queri worker worker generat local queri plan local statist execut communic queri submit system redistribut control updat heat map identi fie hot pattern trigger ird process cons quentli adhash adapt queri load answer queri parallel mode queri evalu basic sparql queri consist multipl subqueri tripl pattern subqueri includ variabl constant bind pattern form entir queri graph figur queri subqueri quir evalu join data razen harbi tabl match result worker prof prof jame bill tabl final queri worker prof stud prof stud jame lisa bill lisa bill john bill fred memori resid hash index favor hash join prove competit sophist join method queri planner devis order subqueri generat left deep join tree operand join base subqueri intermedi result bushi tree plan avoid build indic intermedi distribut queri evalu adhash tripl hash partit worker base subject valu consequ subject star queri subqueri join subject col umn evalu local parallel munic type queri worker communic intermedi join evalu exampl consid queri fig ure partit data graph figur queri consist subqueri prof worksfor stud advisor prof queri evalu singl subject object join worker data need evalu entir queri worker communic object local iti solv queri adhash ploy distribut semi join dsj algorithm worker scan find tripl match worker ble worker creat project join column prof exchang worker project column receiv worker comput semi join prof probe advisor bill probe advisor jame note worker evalu semi join ing local project column semi join ship sender case send lisa advisor bill fred advisor bill tabl final queri worker prof stud prof stud jame lisa bill john bill lisa bill fred candid tripl jame advise final worker comput final join prof final queri worker tabl hash base data local observ dsj benefit subject hash caliti minim communic join column operand subject project column left operand hash distribut worker oth erwis project column worker broad cast worker exampl join column ject column prof worker send entir join column worker base obser vation communic minim join order revers case worker scan find tripl match creat project prof prof ject worker exploit subject hash base local partit project column munic partit respect worker oppos broadcast entir project column worker consequ send bill hash final queri tabl notic final queri plan port worker pin subject observ subject hash partit combin deep tree plan dsj algo rithm solv sparql queri interm diat final local subject execut subqueri pattern refer ject pin subject exampl execut prof pin subject subject intermedi final local pin bind prof jame bill chang order execut stud pin subject pin bind stud adapt partit larg rdf data fig execut queri qprof subqueri order consequ adhash leverag observ minim communic synchron head consid qprof extend queri figur tripl pattern stud ugradfrom univ assum qprof ecut order queri ecut plan pictori figur join tabl prof pin subject demonstr queri continu join intermedi ate result stud subject worker project intermedi stud hash distribut bind stud observ worker evalu semi join return candid tripl worker final queri formul notic execut order requir communic evalu join better order minim munic execut plan figur join prove incur communic avoid broadcast entir project column join pin stud tabl join column stud pin subject join intermedi process local worker commu nicat local hash join lhj order subqueri amount munic incur queri execut case join formal join subqueri termedi pattern scenario three assum join column subject pin subject join answer worker parallel communic subject pin subject join eval uat dsj project join column hash distribut iii subject join execut dsj project join column worker worker includ join object predic column nalli join multipl column opt join subject column join tribut allow join column hash distribut subject column join attribut join column broadcast project column worker scenario iii verifi column carri join final dsj evalu join order base scenario introduc local awar distribut queri execut algorithm algorithm algorithm receiv order ing subqueri pattern join iter second subqueri join subject pin subject join execut commu nicat join evalu dsj algorithm line iter base subqueri pattern subs quent iter pattern intermedi subqueri match worker find local match project join column join column subject worker hash distribut pro ject column send worker worker perform semi join receiv data send final worker final join formul final result line implement local hash join local worker final result dsj iter iter algorithm solv star queri join subject parallel mode plan razen harbi algorithm local awar distribut exe cution input queri order subqueri result answer pin subject subject getjoincolumn pin subject subject joinwithoutcommun intermedi pattern answersubqueri result previous join project subject hash worker send worker answersubqueri foreach worker denot receiv candid tripl join send worker foreach worker receiv worker resw result join worker resw resn master global statist argu allow worker plan queri execut tonom result better perform exampl data graph figur tabl tripl match star queri advisor ugradfrom global plan requir total lookup solv join evalu join lookup solv queri master send queri worker worker util local statist formul ecut plan evalu queri local munic send final result master local awar queri optim local awar planner leverag queri struc ture hash base data distribut queri plan generat minim communic accord ing planner cost base optim find tabl tripl match advisor ugradfrom worker worker worker advisor advisor fred bill john bill lisa bill lisa jame ugradfrom ugradfrom lisa mit bill cmu jame cmu john cmu ing best subqueri order dynam pro gram optim plan state identifi subgraph queri graph state reach order maintain state order estim communica tion cost estim cardin variabl queri maintain cardin state cumul cardin intermedi led state reason cardin state will order reach state dere will result cumul cardin initi state subqueri pattern subgraph size initi queri singl pattern answer communic expand subgraph join pattern lead state cost min cost cost reach state order cost cumul cardin subqueri join pin subject minim tabl size maintain global minimum cost minc plan cost function monoton creas branch cost minc prune observ start process consid subqueri connect subject highest number outgo edg consid subqueri increas proba biliti converg optim plan faster cost estim set initi communic cost state cardin subqueri variabl subject object captur global statist set cumul cardin adapt partit larg rdf data initi state cardin subqueri set size subject object bind master con sult worker updat cardin subqueri pattern attach constant bound predic local worker simpl lookup indic updat cardin variabl bind estim cost expand state subqueri join column predic join incur communic cost state expans carri dsj incur phase communic transmit project join column repli ing candid tripl estim commu nicat phase depend cardin join column bind denot second phase communic depend lectiv semi join number variabl constant communic subject column hash distribut project column column worker cost expand cost subject pin subject pps subject pin subject ppo subject estim cardin variabl variabl note subject object ppv denot pps subject ppo object estim cardin state min min min ppv cumul cardin reach state order fore estim cumul state cardin iti ppcj denot pps ppo depend posit ppcj notic upper bound estim cardin special case equat subqueri constant case assum tupl previous state connect constant set ppcj adhash adapt studi minim communic perform degrad data redistribut minim elim inat communic synchron overhead adhash adapt workload redistribut part data need current workload adapt workload chang increment redistribu tion model adhash combin hash parti tion hop replic guid queri load data hot pattern hot pattern detect dis cuss system select special ver tex pattern call core vertex system group data access pattern bind core vertex system transform pattern redistribut tree root core start core vertex hop tripl hash distribut base core bind tripl bind ond level subqueri colloc adhash util redistribut pattern swer queri parallel communic core vertex select hot pattern choic core signif icant impact amount replic data well queri execut perform exampl con sider stud ugradfrom univ assum worker refer graph figur mit cmu bind univ lisa john jame bill bind stud sume univ core tripl match will hash bind univ figur note bind stud appear worker assum stud core tripl hash bind stud bind univ cmu exist work figur problem pro nounc queri tripl pattern con sider prof gradfrom univ sume stud chosen core cmu exist worker graduat will repli cate tripl match prof gradfrom cmu will replic worker replic grow exponenti number tripl pattern razen harbi core univ core stud fig choic core replic replic cmu worker intuit random walk start random vertic student probabl reach well connect vertex univers hop higher reach student univers order minim replic avoid reach vertex start core reason select well connect vertex core literatur definit constitut well connect vertex base complex data mine algorithm contrast employ definit pose minim computa tional overhead assum connect pro portion degre central degre degre edg vertex rdf dataset follow power law distribut vertic extrem high degre exampl vertic appear object tripl high degre central treat vertic core imbalanc partit prevent sys tem full advantag parallel recal maintain statist predic set predic data set filter predic extrem high score consid outlier outlier filter criterion predic detect outlier set comput comput score vertex queri definit vertex score queri vertex eout set outgo edg ein set incom edg set eout edg ein edg vertex score defin max figur exampl vertex score assign ment vertex prof ein prof advisor eout prof gradfrom predic fig exampl vertex score number correspond valu assign vertex score bold algorithm pattern transform input vertex weight undirect graph core vertex result redistribut tree edg prioriti queue pend edg vert set pend vertic core edg incid edg visit true foreach core edg edg notempti parent vertex predic visit vertex true vertex foreach visit vert vertex vertex vertex duplic visor gradfrom contribut score prof prof definit core vertex queri ver tex highest score call core vertex figur univ highest score core vertex pattern generat redistribut tree hot pattern adhash decid redi tribut data access pattern goal redistribut partit worker evalu munic previous work perform static mincut base partit elimin edg cut replic edg cross partit bound ari partit complet prob lem introduc heurist partit object mind redistribut benefit well patten replic elimin communic redistribut result minim replic adapt partit larg rdf data fig queri figur transform tree algorithm number vertic defin score shade vertex core address object transform pat ten tree break cycl duplic vertic cycl reason cycl constrain data group core cyclic exampl queri pattern figur triev student share alma mater advisor group data univers remov cycl retriev professor advise share univers consequ pattern figur transform tree break cycl dupli cate stud vertex figur refer result transform redistribut tree goal construct redistribut tree minim expect amount replic tion explain start vertex highest score potenti minim replica tion intuit idea appli recurs level redistribut child node tree lower score parent achiev exampl path pattern lower score vertex high score vertic greedi algo rithm transform hot pattern redistri bution tree score function discuss previous transform vertex weight undirect graph node score direct edg disregard vertex highest score lect core vertex transform redistribut tree algorithm algorithm modifi version breadth search bfs algorithm differ bfs tree span vertic graph tree span edg graph edg queri graph appear exact tree vertic duplic travers vertic high score identi fie explor prioriti queue travers span edg element prioriti queue store edg form parent vertex predic element order base vertex score edg label pred icat explor follow tra tabl tripl figur match pattern figur worker worker lisa ugradfrom mit bill ugradfrom cmu jame ugradfrom cmu john ugradfrom cmu jame gradfrom mit bill gradfrom cmu lisa advisor jame fred advisor bill john advisor bill lisa advisor bill dition bfs order maintain pointer parent edg insert proper tree exampl consid queri figur highest score univ chosen core queri transform tree figur note node weight score direct edg move increment redistribut increment redistribut ird aim redistribut ing data access hot pattern worker elimin communic achiev ing high parallel redistribut tree hash distribut data path root leav depth travers algorithm phase distribut tripl core vertex worker hash function tripl core vertex core subject object worker will hash distribut worker mod note subject will replic ird initi subject base hash partit figur consid hop tripl pattern prof ugradfrom univ stud gradfrom univ core univ determin placement tabl assum worker hash distribut mit hash distribut cmu object tripl call sourc column definit sourc column sourc column tripl column subject object determin placement second phase ird place tripl remain level tree worker parent tripl seri distribut semi join column opposit sourc column previous step propag column previous exampl propag col umn subject prof razen harbi definit propag column propagat ing column tripl object resp subject sourc column tripl subject resp object second level redistribut tree fig ure subqueri pattern stud advisor prof propag column prof previ ous level sourc column current pat tern tripl tabl match queri join tripl worker algorithm increment redistribut input path consecut edg core vertex result data replic path hash distribut core adjac edg replic coredata gettriplesofsubqueri foreach coredata mod number worker sendtowork colloc tripl level foreach replic candidtripl dsj indexcandidatetripl candidtripl ird process formal describ algorithm breviti describ algorithm path input follow depth travers algo rithm run parallel worker line hash dis tribut tripl core vertex nece sari tripl remain level local replic worker parent replic avoid tripl worker carri seri dsj line maintain candid tripl level final join manag replica raw tripl format allow util rdf indic answer queri replic data queryload monitor effect monitor workload system face fol low challeng queri pattern occur constant subqueri order vari name queri workload determinist transform representa tion unifi queri representa tion updat increment minim overhead final iii monitor recal core vertex subject redistribut level pattern queri allow system identifi common hot pattern queri heat map introduc hierarch heat map rep resent monitor workload heat map main tain redistribut control queri decompos redistribut tree algo rithm procedur describ result tree core vertex root detect overlap queri transform tree templat constant replac variabl avoid loos constant bind workload store constant valu frequenc meta data templat ver tice insert heat map prefix tree structur includ combin tree templat queri insert proceed travers heat map root match edg edg exist insert edg heat map set edg count oth erwis increment edg count updat meta data vertic heat map meta data vertic exampl consid queri decomposit figur assum queri execut state heat map execut queri figur insert edg updat edg count vertex meta data heat map exampl edg ugradfrom edg count appear mit meta data hot pattern detect redistribut control monitor queri updat heat map queri execut control identifi hot pat tern heat map current hardwir frequenc identifi hot pattern hot pattern detect redistribut control trigger ird process pattern rememb pattern heat map templat vertic variabl avoid excess replic variabl replac domin constant store heat map exampl assum lect heat map figur identifi hot replac vertex constant grad domin hand replac mit mit dom inat valu queri instanc includ hot pattern boyer moor major vote algo rithm decid domin constant auto tune frequenc threshold subject futur work adapt partit larg rdf data fig updat heat map select area indic hot pattern fig queri pattern allow execut communic pattern replica pattern pattern creat main tain replic control master structur heat map store redistribut pattern exampl figur pattern state redistribut pattern heat map figur pattern queri planner check queri execut communic queri pose planner transform tree root root pattern edg exist pattern answer parallel mode answer distribut fashion exampl queri figur answer parallel redistri bution tree figur contain pattern edg pattern time stamp access facilit evict polici replica replica worker ident pattern master updat ird process edg replica associ storag modul store origin data modul store replic data tripl pattern add repli cate data main indic replic data singl reason segreg pattern redistribut date singl bottleneck replic mandat filter dupli cate iii data coupl singl intermedi join will larger will fect perform final hierarch repr sentat allow evict replic data system perfor manc notic replic data associ tripl pattern subject core vertic data access main direct initi subject base hash partit figur replica structur pattern figur stor age modul associ member store replic tripl match tripl pattern tripl qualifi join tripl patern parent edg conflict replic subqueri appear level pat tern tripl replic hot pattern includ term cor rect problem adhash conflict ing tripl store separ differ ent storag modul approach avoid burden housekeep manag duplic cost memori consumpt adhash employ lru evict polici system replic budget worker experiment evalu evalu adhash exist system includ adapt version system refer adhash includ featur describ provid tail data hardwar setup competi tor approach demonstr razen harbi tabl dataset statist million dataset tripl indegre avg stdev outdegre avg stdev lubm watdiv watdiv low startup initi replic overhead hash compar system appli queri complex dif ferent dataset adhash leverag subject base hash local achiev better perform compar system adapt featur adhash render order magnitud faster system conduct detail studi cost adapt featur system adapt increment workload chang minim overhead resort full data repar tition final studi data machin scalabl adhash setup competitor dataset conduct experi real synthet dataset variabl size tabl scribe dataset denot number uniqu subject predic object synthet data genera tor creat dataset univers consist billion tripl benchmark wide spectrum queri vari ing structur characterist select class version dataset watdiv watdiv billion tripl lubm templat queri distribut rdf engin test queri eval uation perform lubm queri tend semant inferenc complex lie semant structur watdiv dataset wide rang queri complex select class lubm watdiv synthet real dataset real dataset deriv wikipedia wordnet geonam tripl dataset link data life scienc semant web technolog http project lubm http watdiv http yago http releas releas billion tripl connect biolog dataset hardwar setup implement adhash messag pass interfac librari synchron communic wise state deploy adhash competitor cluster machin ram amd opteron cpus core machin bit linux kernel connect ethernet switch competitor compar framework memori rdf system triad best knowledg system provid fastest queri respons time comparison compar port runtim correspond paper note testb inferior finiband interconnect theoret faster triad faster processor larger number core interconnect slower intercon nect ethernet phistic partit scheme join ahead prun ing triad communic small amount data queri evalu ten megabyt faster interconnect affect perfor manc dataset compar hadoop base system employ lightweight partit shard compar shape system reli static replic rdf under data store limit parison distribut system perform state art central rdf system startup time initi replic experi measur time take sys tem prepar data prior answer queri exclud string map time sys tem triad time partit graph meti number shape better replic queri perform rdf compar shape adapt partit larg rdf data tabl preprocess time minut lubm watdiv adhash meti shape shard partit report partit lubm watdiv dataset partit partit tabl meti prohibit expens scale larg rdf graph appli meti remov tripl connect liter oth erwis meti take day partit lubm dataset configur shape full level semant hash partit enabl type optim detail fair comparison shape configur partit dataset queri process communic lubm shape incur preprocess time compar meti base system wat div shape perform wors data imbal caus rdf engin time build databas particu lar partit watdiv hop ward hop undirect data singl partit reason behavior dataset uniform shape fulli util semant hash parti tion shape finish partit phase termin hour shard employ lightweight parti tion random rang base fore requir time compar system hadoop base suffer overhead store data hadoop file system hdfs build data store adhash lightweight hash partit avoid upfront cost sophist partit scheme tabl adhash start order magnitud faster exist system report initi replic shape triad adhash shard incur initi replic replic caus adapt evalu triad replic edg cross partit bound ari produc hop undirect guarante fore consid edg cut report meti amount replic triad tabl replic ratio percentag origin data size lubm triad tabl initi replic lubm watdiv shape worker worker triad tabl queri runtim lubm lubm adhash adhash shape shard abort triad replic lubm uniform structur univers full level semant hash partit type optim shape incur doubl replic triad watdiv meti produc bad partit dens natur data consequ triad excess replica tion high edg cut note high est radius watdiv queri templat undi rect partit data blind ing hop guarante rdf will result excess replic grow exponenti increas thing appli dataset shape place data singl partit uniform watdiv incur replic form good singl machin rdf store queri perform compar adhash perform individu queri state art distribut rdf system multipl real synthet dataset demonstr adhash version system includ adapt fea ture competit perform system ploy sophist partit techniqu subject base hash partit dis tribut evalu techniqu propos effect adhash adapt perfor manc better system consist outperform competitor wide margin lubm dataset experi tabl compar perform system lubm dataset queri defin triad shape execut queri communic hop forward semant hash partit recal number triad copi correspond per system public fore compar queri razen harbi type optim queri classifi base structur select simpl plex simpl select star queri simpl select star queri gen erat larg final consid simpl queri high select hand complex queri generat larg intermedi return small final shard suffer expens overhead mapreduc perform wors system hand shape incur minim communic form better shard uti lizat semant hash partit mapreduc dispatch queri worker suffer neglig overhead mapreduc memori rdf engin triad adhash perform better system base mapreduc queri selec tive subject star queri produc small termedi memori system solv queri effici adhash exploit ini tial hash distribut solv queri communic explain version adhash perform con sist singl subject subject join adhash faster triad order magnitud low select explor reduc inter mediat size lead expens central join master triad hand solv queri distribut scan base subqueri distribut merg join adhash perform better triad avoid unnecessari scan util hash dex deep tree plan adhash requir singl scan hash lookup prune techniqu elimin communi cation requir solv outperform adhash adhash adapt execut communi cation compar perform triad adhash outperform triad simpl hash partit ing adhash achiev better compar perfor manc memori system queri cyclic reduc size intermedi queri worker ship intermedi master final queri evalu central ize manner master node potenti bottleneck intermedi huge sophist partit tabl queri runtim watdiv watdiv machin adhash adhash shape triad tabl queri runtim adhash adhash shape shard abort abort ing prune techniqu triad queri requir inter worker communic hash execut queri parallel munic adhash order magnitud faster triad adhash evalu join lead empti intermedi earli caus adhash avoid useless join join elimin queri plan time hand adhash detect queri empti plan worker local paral lel queri plan worker detect cardin subqueri replica termin watdiv dataset watdiv benchmark defin queri classifi categori linear star snowflak complex queri triad generat queri watdiv queri generat queri categori deploy adhash machin match set triad tabl perfor manc adhash compar system complex famili calcul geometr system perform wors system overhead mapreduc shape hop forward partit data machin perform better singl machin rdf adhash triad hand provid better perfor manc mapreduc base system triad benefit asynchron messag pass perform better adhash queri complex queri larg diamet adhash form better result local awar adhash adapt consist perform better system queri http watdiv basic adapt partit larg rdf data tabl queri runtim adhash adhash shard local local pin local pin execut time localityloc pin local pin communic cost fig impact local awar lubm yago dataset provid benchmark queri creat set repres test queri defin appendix tabl perform adhash shape shard adhash continu sig nific outperform system queri fur thermor adapt version adhash order magnitud faster system dataset dataset dataset benchmark queri defin queri dif ferent structur complex requir object object join contradict initi data distribu tion queri star queri num ber tripl pattern requir subject object subject subject join simpl star queri tripl pattern complex queri hop radius shape fail preprocess data hop forward partit ing reason time behavior lubm watdiv dataset shard wors adhash mapr duce overhead adhash outperform system order magnitud impact local awar experi local awar plan distribut queri evalu adhash adapt defin three configur adhash disabl pin subject optimiza tion hash local awar disabl pin subject optim maintain hash local awar worker local subject vertic join pin subject synchron final iii optim lubm queri lubm dataset configur adhash queri respons time munic cost figur disabl hash local exc sive communic drastic queri respons time enabl hash local queri high select perform gain queri rang order magnitud third configur pin subject optim affect amount communic hash local iti awar join subject local adhash communic intermedi perform syn chroniz overhead queri optim star queri join subject hand queri requir communic perform gain rang case behavior notic watdiv dataset workload adapt adhash thorough evalu adap tiviti purpos defin workload billion scale dataset characteri tic watdiv lubm watdiv workload watdiv benchmark fine queri classifi categori linear star snowflak complex queri benchmark queri generat creat queri workload categori total queri generat random workload queri queri templat lubm workload adhash system support inferenc queri lubm benchmark queri http watdiv basic queri pattern class properti fix queri return larg intermedi razen harbi tio frequenc threshold lubm watdiv execut time frequenc threshold lubm watdiv communic cost lic tio frequenc threshold lubm watdiv replic cost fig frequenc threshold sensit analysi list appendix queri gen erat queri constant random select queri queri workload cover wide spectrum queri plexiti includ simpl select queri star queri well queri complex structur low lectiv detail refer appendix frequenc threshold sensit analysi frequenc threshold control trigger increment redistribut ird process consequ influenc execut time amount munic replic system periment conduct empir sensit analysi select frequenc threshold base aforement queri workload execut workload vari frequenc threshold valu note frequenc monitor ing queri queri basi heat map monitor frequenc subqueri pattern erarch manner workload exe cution time communic cost replic ratio figur observ lubm sensit slight chang frequenc threshold complex queri frequenc threshold increas redistribut hot pattern delay caus queri execut communica tion consequ amount communic synchron overhead system increas fect execut time replic ratio low fewer pattern redistribut hand watdiv sensit rang frequenc threshold queri solv subsecond local awar distribut semi join algorithm cur excess communic fre quenci threshold increas synchron tim queri adhash adhash execut time queri adhash adhash communic cost fig adhash adapt workload watdiv head execut time fine grain queri monitor adhash cap ture common watdiv queri templat frequenc threshold threshold replic ratio remain differ system will converg faster lower threshold valu reduc execut time subsequ experi frequenc threshold good bal anc time replic plan studi auto tune paramet futur workload execut cost simul chang workload queri watdiv templat consecut enforc replic threshold worker adapt partit larg rdf data tim queri adhash adhash execut time queri adhash adhash communic cost fig adhash adapt workload lubm figur cumul time execu tion progress adapt featur sequenc queri execut type queri chang adapt adhash cumul time increas sharpli long complex queri execut queri queri hand adhash adapt chang workload overhead caus mulat time drop time figur cumul communic cost adhash adhash communic cost exhibit pattern runtim cost figur prove communic synchron overhead detriment total queri respons time communic cost adhash lower compar adhash adhash start adapt futur queri solv minimum communic behavior observ lubm workload figur partit base repres workload partit dataset base rep resent workload partout partit data larg workload reason time hour consequ experi simul assum repres workload partit data adhash train adhash differ ent combin workload categori tim queri adhash execut time queri adhash communic cost fig comparison static repres workload base partit defin watdiv combi nation categori effect produc combin train adhash test system dom workload select queri categori consist queri queri test workload parallel repres workload requir munic figur cumul execut time communic respec tive test workload exclud train time figur perform adhash train perform test workload high depend complex iti queri train phase ampl complex snowflak queri expens queri benchmark fore system train train workload perform better train workload hand allow system adapt increment dynam train better perform pare case adhash incur communic ird process converg constant communic workload requir communic queri train workload requir excess data exchang execut time increas exist communic synchron overhead razen harbi redistribut tree generat experi evalu queri transforma tion heurist altern approach recal transform hot queri pattern redistribut tree select ver tex highest score tree root queri travers high score vertic lower score compar heurist refer high low heurist vertex vertex score select core queri pattern travers explor ver tice lower score refer heurist low high compar approach vertex score function score vertex hot queri pattern degre pattern travers high score vertic lower score refer approach qdegre note approach aim min imiz replic greedi manner fulli ploit initi hash partit recal data bind tripl pattern subject core replic evalu heurist run lubm workload figur replic communic cost amount data touch ird process low high qdegre heurist replic compar high low approach reason heurist benefit initi hash partit select core larger num ber outgo edg amount data touch redistribut process data main replica indic low high qdegre higher adapt formanc ird process carri seri dsj iter data touch process evalu parallel queri perform parallel queri eventu consequ cumul workload execut time high low heurist faster heurist figur qdegre low high heurist touch communi cate amount data cumul execut time note qdegre heurist statist format data reli struc ture hot queri pattern redistribut pattern benefit futur queri structur repeat experi watdiv heurist communic cost wall time touch data high low low high qdegre replic ratio touch data ratio communic tib replic communic cost tim queri high low low high qdegre execut time fig hot pattern transform time qdegre replic exploit best initi subject base hash partit tabl load balanc adhash dataset percentag tripl replic ratiomax min averag stdev lubm watdiv replic load balanc experi evalu load balanc adhash perspect data bal anc consid balanc initi partit well replic ird process work balanc consid evalu cost balanc worker system execut workload tabl report statist charact ize data load balanc adhash report averag standard deviat percentag tripl store worker tabl adhash achiev good data balanc workload initi subject base hash partit well hash ird process result data balanc work well balanc worker amount adapt partit larg rdf data data size univ adhash adhash adhash adhash adhash adhash adhash adhash data scalabl simpl data size univ adhash adhash adhash adhash adhash adhash data scalabl complex worker strong scalabl fig adhash scalabl lubm dataset worker lubm worker watdiv fig workload balanc work contribut worker system figur lubm watdiv scalabl data scalabilityw lubm benchmark data gen erat generat dataset size lubm lubm lubm lubm lubm lubm number worker fix worker machin figur data scalabl adhash adhash simpl complex queri simpl queri select touch amount data data size describ steadi perform adhash adhash queri selec tive return massiv final inevit scalabl degrad data size increas fig ure scalabl adhash complex queri queri generat larg number intermedi caus high communic cost explain poor scalabl adhash adhash adapt workload queri evalu parallel mode faster strong scalabl lubm fix workload increas number worker adapt adhash communic mini mize lead optim scalabl figur scalabl parallel queri increas number worker conclus paper present adhash adapt dis tribut rdf engin lightweight partit hash tripl subject adhash exploit queri structur hash base data local der minim communic cost queri evalu adhash monitor queri workload increment redistribut part data frequent access hot pattern maintain index pattern futur queri evalu communic adap tiviti featur adhash complement excel formanc queri benefit hash base data local frequent queri pattern favor partit star join object process parallel adapt experiment verifi adhash achiev better partit replic data petitor import adhash scale larg rdf graph consist superior perfor manc adapt dynam chang workload current investig possibl utiliz razen harbi ing adhash general rdf graph erat graph travers reachabl queri refer aluc zsu daudje workload matter rdf databas design pvldb atr chaoji zaki hendler matrix bit load scalabl lightweight join queri processor rdf data blana patel design evalu main memori hash join algorithm multi core cpus sigmod ubaidullaeva test classic theori error theori probabl applic boyer strother moor mjrti fast joriti vote algorithm boyer autom reason essay honor woodi bledso kluwer london chong chen zhang shu zhou rdf pattern match sortabl view cikm curino jone zhang madden schism workload driven approach databas replic partit pvldb dean ghemawat mapreduc simplifi data pro cess larg cluster osdi dittrich quian ruiz jindal kargin setti schad hadoop make yellow ele phant cheetah notic pvldb dritsou constantopoulo deligiannaki tidi optim queri shortcut rdf databas eswc elnozahi alvisi wang johnson survey rollback recoveri protocol messag pass system acm comput surv galarraga hose schenkel partout dis tribut engin effici rdf process corr gallego ferna ndez mart prieto fuent empir studi real sparql queri usewod goasdou karanaso leblay manolescu view select semant web databas pvldb gurajada seufert miliaraki theobald triad distribut share rdf engin base asynchron messag pass sigmod harth umbrich hogan decker feder repositori queri graph structur data web iswc aswc hose schenkel warp workload awar replica tion partit rdf icdew huang abadi ren scalabl sparql queri ing larg rdf graph pvldb husain mcglothlin masud khan thu raisingham heurist base queri process larg rdf graph cloud comput tkde idreo kersten manegold databas crack ing cidr karypi kumar fast high qualiti mul tilevel scheme partit irregular graph siam sci comput lee liu scale queri big rdf graph semant hash partit pvldb malewicz austern bik dehnert horn leiser czajkowski pregel system larg scale graph process sigmod neumann weikum rdf engin scalabl manag rdf data vldb papailiou konstantinou tsoumako karra koziri high perform distribut join larg scale rdf graph ieee big data punnoos roshan crainiceanu adina rapp david rya scalabl rdf tripl store cloud cloud rietveld hoekstra schlobach gue ret structur properti proxi semant relev rdf graph sampl iswc rohloff schantz high perform massiv scalabl distribut system mapreduc soft ware framework shard tripl store psi eta shen chen jagadish ooi tudor fast failur recoveri distribut graph process system pvldb stonebrak madden abadi harizopoulo hachem helland architectur era time complet rewrit pvldb wang xiao shao wang partit billion node graph icd weiss karra bernstein hexastor sextupl index semant web data manag pvldb buwen zhou yongluan yuan pingpeng liu ling jin hai scalabl sparql queri path partit icd yang yan zong khan effect partit manag larg graph sigmod yuan liu jin zhang liu triplebit fast compact system larg scale rdf data pvldb zaharia chowdhuri franklin shenker stoica spark cluster comput work set usenix zeng yang wang shao wang dis tribut graph engin web scale rdf data pvldb zhang chen tong wang eagr ward scalabl effici sparql queri evalu cloud icd zou zsu chen shen huang zhao gstore graph base sparql queri gine vldb lubm benchmark queri prefix rdf http org rdf syntax prefix http univ prefix rdfs http org rdf schema prefix http yago resourc adapt partit larg rdf data select http select zwhere udent undergraduatedegreefrom select http universit select sociateprofessor http select tudent http univ select tudent select atestud http associateprof select duatestud http select testud select ant http univ select ttp select http select xwhere http select xwhere lubm workload generat workload queri lubm bench mark queri queri con stant generat queri pattern remov tripl mutat node type ampl generat pattern alternat ing student type undergraduatestud grad uatestud tabl queri pattern generat remov combin queri tripl pattern generat variat tripl pattern singl constant rest queri generat dif ferent pattern queri vari valu queri constant exampl generat queri pattern vari valu student type undergraduatestud graduatestud graduat cours tabl lubm workload pattern chang constant structur constant constant constant constant chang constant constant structur constant constant constant constant constant chang queri select givennam familynam asgivennam givennam famili citi citi select givennam familynam asgivennam givennam famili citi citi citi select rednam movi movi select rednam citi citi select http pubm sourc investig http ubm http pub med resourc author http ubm select articletomesh http pubm http pubm vocabulari mesh head articletomesh articletomesh http bio pubm descriptor mesh select phenotyp phenotyp omim phenotyp label gene http omim vocabula phenotyp select pharmgkbid pharmgkbid http pharmgkb http org pharmgkbid http pharmgkb pccid ddiassoci ttp pharmgkb pccid ddiassoci http pharmgkb vocabulari event ddievent ddiassoci http armgkb ddiassoci pharmgkb pvalu select interact interact http irefindex http 