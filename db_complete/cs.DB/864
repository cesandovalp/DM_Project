faq question ask frequent mahmoud abo khami hung ngo atri rudra logicblox depart comput scienc engin univers buffalo suni mabokham hungngo atri abstract defin studi function aggreg queri faq problem encompass frequent ask question constraint satisfact databas matrix oper probabilist graphic model logic main conceptu contribut simpl algorithm call insideout solv general problem insideout variat tradit dynam program approach constraint program base variabl elimin variat add coupl simpl twist basic variabl elimin order deal general faq full advantag grohe fraction edg cover framework analysi worst case optim relat join algorithm case constraint program graphic model infer insideout effici solv optim problem comput appropri variabl order main technic contribut work precis character variabl order semant equival variabl order input faq express design approxim algorithm find equival variabl order best fraction faq width impli host graphic model infer matrix oper relat join logic faq thought declar languag function examin input output function represent affect tractabl problem dynam program approach power case input function compact repres explain algorithm worst case analysi join solv sat sat view variabl elimin solv faq compact repres input function introduct motiv exampl fundament problem three divers domain share common algebra structur exampl matrix chain multipl mcm seri field dimens comput product problem reformul variabl domain dom matrix view function variabl dom dom mcm problem comput output function dom dom exampl maximum posteriori map queri probabilist graphic model pgm consid discret graphic model repres hypergraph discret random variabl finit domain dom factor dom typic infer task comput margin map estim written form max dom max dom exampl quantifi conjunct queri qcq order formula form qnxn atom qcq problem count number tupl relat free variabl reformul qcq construct hypergraph set variabl atom hyperedg var consist variabl atom view function indic assign variabl satisfi atom defin aggreg oper max qcq problem comput constant function dom dom turn dozen fundament problem constraint satisfact csp databas matrix oper pgm infer discret fourier transform logic code theori plexiti theori view special instanc generic problem call function aggreg queri faq problem defin column tabl problem appendix present problem faq formul previous algo algo qcq trivial algo faqw max qcq faqw max max max faqw join fhtw fhtw margin distribut htw faqw map queri max htw faqw matrix chain mult bound bound dft logpn logpn tabl runtim algorithm assum optim variabl order problem shade red csps logic csp csp problem shade green fall pgms problem shade blue fall matrix oper denot size largest factor assum repres list format htw notion integr cover width defin pgm optim width prefix graph poli fhtw quantifi star size output size list represent width faqw wors three class queri unbound better three dft length input vector hide logarithm factor data complex polynomi factor queri complex faq problem paper convent uppercas denot variabl lowercas denot domain dom variabl subset defin dom tupl variabl tupl specif valu support input faq set function output function comput seri aggreg variabl input function variabl discret domain dom dom faq problem comput function dom dom multi hypergraph set variabl overload notat refer set variabl set set free variabl integ variabl call bound variabl fix domain hyperedg dom input function call factor bound variabl binari aggreg oper domain bound variabl form commut semir call product aggreg semir aggreg assum semir aggreg semir requir restrict glanc appendix describ method turn semir aggreg semir aggreg variabl aggreg valu dom rest paper will write dom will refer faq queri faq faq singl semir denot special case faq variabl aggreg semir paper will hide logarithm factor data complex polynomi factor queri complex input output represent problem definit complet will input output function faq instanc repres subtl issu vast landscap tractabl problem streamlin present time general algorithm paper will assum input factor oracl access function assum oracl satisfi simpl properti call condit queri assumpt product margin assumpt input common applic satisfi properti list represent satisfi assumpt list represent factor tabl tupl form entri tabl entri represent common csp databas spars matrix comput domain delv deeper input output represent issu paper organ summar contribut paper sketch attack work discuss defin notat terminolog establish fact paper discuss main idea insideout analyz runtim variabl order explain detail comput good variabl order final present input output represent insideout problem sat sat tripl commut semir commut binari oper satisfi commut monoid addit ident denot commut monoid multipl ident denot usual semir definit multipl monoid commut distribut element semir share annihil properti semir multipl annihil rest semir share ident product oper share summari contribut conceptu contribut formul faq root sumprod problem formul dechter solv variabl elimin sumprod problem exact faq work aji mceliec address sumprod renam margin semir faq general faq faq captur problem logic qcq quantifi conjunct queri qcq sharp quantifi conjunct queri argu faq power think problem issu faq thought declar queri languag function exampl input represent vast affect landscap tractabl problem output represent notion factor databas algorithm contribut singl algorithm call insideout solv faq insideout variat variabl elimin algorithm pgm variabl elimin propos zhang pool dechter observ strategi appli problem semir constraint satisfact sat solv databas literatur yannakaki algorithm cast variabl elimin set semir boolean semir insideout add three minor twist basic variabl elimin strategi backtrack search strategi call outsidein comput intermedi strategi allow analysi worst case optim join algorithm bound time take comput intermedi fraction edg cover bound second introduc idea project function support fraction hypertre width style runtim guarante third addit make distribut law fold common factor face semir aggreg appli swap aggreg insid product aggreg product insideout run time faqw variabl order choos algorithm input size output size list represent input output factor faqw paramet call fraction faq width faq width faq analog induc fraction edg cover width variabl order definit fact variabl elimin framework power case fraction hypertre width bound longer applic special case faq input function compact repres explain suitabl modif insideout recov worst case join algorithm minesweep tetri tractabl sat sat acycl formula practic side preliminari implement join algorithm base fraction hypertre width count graph pattern encourag faster exist commerci system order magnitud select queri graph pattern implement insideout logicblox databas system great perform main technic contribut width faq queri key technic problem choos minim faqw general faq requir idea tradit variabl elimin csps pgm infer requir comput good variabl order minim treewidth fraction hypertre width variabl order case variabl order valid tradit set well variabl elimin messag pass equival special case faq comput tree decomposit maximum bag size maximum fraction edg cover number bag minim gyo elimin procedur will produc good variabl order general set faq logic altern quantifi set semant equival variabl order depend input queri express structur queri hypergraph equival order consid natur class valid permut consid permut aggreg maxim block ident aggreg queri express queri hypergraph account better consid exampl faq queri max max factor rang case max commut rewrit variabl order result cours aggreg will permut variabl attach special case faq type semir aggreg permut valid comput optim variabl order hard queri complex comput fraction hyper treewidth queri hypergraph hard extra complic consid valid order faq task harder surpris complex comput optim order general faq essenti complex comput optim order faq instanc summari technic contribut faq queri defin set evo variabl order semant equival rough evo rewrit express order aggreg permut function ident matter input factor faq width faqw evo faqw describ poli time queri complex construct express tree input faq queri express tree induc partial order set variabl call preced poset defin notion call compon wise equival complet character evo evo compon wise equival linear extens preced poset prepar approxim algorithm faqw order evo set linear extens preced poset suffici purpos linear extens preced poset semant equival evo faq width linear extens poset final approxim algorithm fraction hypertre width fhtw approxim ratio fhtw blackbox express tree guid approxim algorithm comput order faqw faqw faqw input output represent input faq collect function observ represent input function huge comput complex problem represent input factor option truth tabl represent factor involv faq instanc condit probabl tabl pgm usual array represent matric represent wast input factor entri option common csp databas spars matrix comput domain list pair factor list tabl implicit assum list represent best algorithm marx fhtw handl succinct represent gdnfs decis agram csp literatur algebra decis diagram pgm literatur common view represent input factor output faq instanc free variabl succinct represent repres factor list format list technic analyz compos faq instanc interest framework general class structur matric includ dft matric quantifi better algorithm run quadrat time algorithm observ input factor compact class tractabl faq queri smaller fraction hypertre width framework longer appli variabl elimin strategi power approach will chang outsidein algorithm longer backtrack search style algorithm exampl explain worst case join algorithm minesweep tetri tractabl sat sat acycl formula special case faq explain idea observ represent output function case faq instanc free variabl algorithm output singl element free variabl repres output default option list represent output insideout general output faq instanc output issu subtl faq instanc repres output interest represent general algorithm allow input factor output repres faq instanc observ close spirit databas factor olteanu vodni highlight corollari light fact problem reduc faq tabl present select subset corollari impli list assum optim variabl order hold true optim variabl order expon case chang best approxim factor correspond width faq case problem tabl list correspond faq instanc runtim best algorithm runtim insideout problem highlight yield altern interpret faq framework tabl rough span three area csps logic pgms matrix oper join problem area full general faq formul insideout improv exist yield problem area reduc faq insideout improv take advantag grohe frac tional hypertre width bound final problem area tabl classic insideout yield intrigu explain textbook dynam program algorithm matrix chain multipl algorithm find good variabl order correspond faq instanc dft result write aji observ prior qcq focus dichotomi theorem bound ariti class input hypergraph best runtim faqw notion general fraction hypertre width step unbound ariti marx detail discuss csp unbound ariti case list tabl implicit assum list represent input factor matrix vector multipl structur matric appendix work faq encompass area work discuss incomplet appendix disscuss work factor function represent issu problem semir mention introduct faq problem explicit defin aji mceliec call thempf problem formargin product function present messag pass algorithm faq essenti algorithm meet treewidth bound paper list number problem faq instanc includ matrix chain multipl specif result argu essenti variabl order rise way parenthes matrix chain multipl matrix vector multipl general algorithm fft special case phrase interpret fft insideout basic decod problem code theori cast faq instanc kohla wilson present applic faq problem paper categor exist messag pass algorithm depend extra properti commut semir paper explor algorithm approxim comput work sole deal exact comput approxim comput pgms explor semir framework pgm literatur algorithm treewidth bound best knowledg finest notion hypergraph width bound perform algorithm integr hypertre width bound appear section detail discuss notion width databas literatur koch describ algebra queri languag call agca ring databas spirit faq framework addit invers allow effici view mainten factor databas bakibayev olteanu vodni introduc notion factor databas effici comput join aggreg factor databas hindsight common approach insideout appli singl semir case faq approach runtim complex dynam program algorithm insideout bottom factor databas comput top memoiz faq framework general handl multipl aggreg type contribut involv character evo approxim algorithm faqw hand aspect factor databas faq handl includ evalu sql queri output size bound factor represent notion width notion hypergraph width develop year pgm csp databas theori properti input queri acycl bound width queri acycl classic algorithm yannakaki relat join csps run time linear input output size modulo log factor belief propag algorithm work well acycl graphic model touch appendix yannakaki algorithm essenti belief propag boolean semir set semir algorithm reinterpret insideout subsequ work databas csps expand class queri evalu polynomi time work defin progressivelymor general notion width queri intuit measur queri acycl rough state correspond notion width bound constant queri tractabl polynomi time algorithm evalu exampl gyssen queri bound degre acycl tractabl queri width chekuri rajaraman hypertre width general hypertre width ghw gottlob fraction hypertre width grohe marx marx develop general width notion call adapt width submodular width pgm literatur common notion treewidth textbook variabl elimin messag pass algorithm state time tree width model freuder dechter pearl late csp instanc bound treewidth tractabl logic finit model theori literatur notion width develop will describ relev section paper finit model theori pichler skritek studi problem special case queri acycl refer special case acq acq tractabl data complex number variabl count constant queri complex relat constant size combin complex problem turn complet durand mengel introduc paramet call quantifi star size basic measur free variabl connect hypergraph bound general hypertre width fraction hypertre width bound quantifi star size character class instanc tractabl bound ariti bound general hypertre width case quantifi star size idea expand appli core queri origin queri core minim subqueri homomorph origin queri homomorph preserv count map free variabl explicit preserv core color queri origin queri develop lower bound appear qcq second row tabl long earli interest result tractabl qcq domain size treewidth number quantifi altern constant chen dalmau introduc notion width qcq base elimin order minimum width variabl order equival origin queri tractabl qcq width bound runtim insideout qcq unbound better tabl result qcq best knowledg trivial effici algorithm qcq prior work essenti insideout unifi umbrella preliminari factor oracl applic area faq way input factor repres appendix list main represent collect area logic pgm matrix comput definit list represent relat databas system constraint satisfact spars matrix oper list represent represent choic represent input factor repres tabl list entri factor entri list implicit case output report format obvious comput complex faq high depend input result general advoc oracl model show general captur exist mode input output represent will analyz algorithm base number queri oracl note assumpt met represent discuss appendix differ price oracl pay answer queri assumpt condit queri assumpt assum dom total order order domain arbitrarili natur total order fals true boolean problem blue green red color problem factor oracl capabl answer queri call condit queri integ vector dom arbitrari factor oracl return minimum ysk min xsk exist symbol return queri return simplic will call queri condit queri second assumpt input oracl assumpt product margin assumpt input oracl input oracl return oracl denot defin dom number oper perform comput factor bound assumpt reason infer note list represent comput entri condit queri appendix explain list represent satisfi condit queri assump tion product margin assumpt condit factor factor size recal addit ident semir annihil element multipl assum variabl factor boolean predic defin kroneck delta hold note number multipl addit ident subset variabl dom tupl condit factor function dom defin factor defin size number point domain arbitrari write factor size sum condit factor size dom denot maximum input factor size agm bound fraction cover number hypergraph subset vertic integr edg cover edg feasibl solut integ program min optim object denot number call integr edg cover number optim object relax min feasibl solut linear program call fraction edg cover edg note function input faq problem denot optim solut linear program min quantiti agm call agm bound edg obvious agm call quantiti agm integr cover number fraction cover number agm bound correspond note agm bound data depend sens function input factor cover number depend hypergraph notat agm implicit assumpt input factor fix tree decomposit acycl definit tree decomposit hypergraph tree decomposit pair tree assign node tree subset vertic set call bag tree decomposit properti bag satisfi hyperedg bag vertex set empti form connect subtre definit acycl hypergraphh acycl iff exist tree decomposit bag hyperedg repres join queri tree definit call join tree queri queri acycl hypergraph acycl possess nice properti notion acycl unsatisfi turn hypergraph acycl hypergraph hyperedg cover vertic observ motiv second notion acycl definit acycl hypergraphh acycl hypergraph form subset edg acycl width tree decomposit width function framework introduc adler hypergraph function assign negat real number subset width tree decomposit maxt width minimum width tree decomposit note width hypergraph minimax function definit tree width function tree width graph denot exact width tree width tree decomposit maximum bag size minus tree width minimum tree decomposit will repeat english translat notion width notion tree width develop semin seri paper robertson seymour graph minor meant measur tree graph remark properti treewidth neat notion exampl long time independ context csp instanc bound treewidth poli time solvabl prove generic algorithm faq huge defect captur hypergraph acycl exampl hypergraph hyperedg tree width unbound denot number variabl vertic acycl csp instanc polynomi time solvabl fill gap notion width introduc addit discuss definit fraction hypertre width hypertre width hypergraph denot htw width fraction hypertre width hypergraph denot fhtw width vertex variabl order equival tree decomposit character defin acycl tree width notion hypergraph width list vertic hypergraph folklor track precis refer corollari vertex order hypergraph simpli list vertic vertic variabl interchang paper term variabl order will semant remark literatur elimin order elimin order global attribut order vertex order chose elimin order vertex order meant revers gyo elimin order explain elimin hypergraph sequenc vertex order recurs defin hypergraph sequenc call elimin hypergraph sequenc associ vertex order avoid cumbersom super script will denot sequenc vertex order clear context set set hyperedg incid union edg precis notat standard graph theori denot set edg incid construct hypergraph remov edg add hyperedg add allow hypergraph multi hypergraph hypergraph paper multi hypergraph rest hypergraph defin recurs precis set defin hypergraph strict speak set denot drop superscript implicit understood intim relationship tree decomposit vertex order prove make elimin hypergraph sequenc tree decomposit vertex order vertex order hypergraph construct tree decomposit recurs induct construct tree decomposit graph vertex order base case tree decomposit trivial hypergraph vertex note hyperedg bag hyperedg creat bag connect note hyperedg subset verifi induct tree decomposit call tree decomposit tree decomposit induc vertex order proposit straightforward induct proposit tree decomposit induc vertex order bag precis set note tree decomposit induc vertex order bag gyo elimin procedur explain vertex order revers typic call elimin order typic good vertex order tree decomposit gyo elimin procedur procedur repeat appli oper tree decomposit remov bag subset bag remov vertex belong bag typic procedur fix arbitrarili root bag elimin bag vertic leav root bag revers sequenc vertic remov vertex order induc fraction width good fraction width tree decomposit key aspect gyo procedur fix bag root bag vertic insid bag elimin will occur vertex order vertex order tree decomposit technic reason describ specif variat basic gyo elimin procedur tree decomposit will construct order vertic order will call vertex order induc tree decomposit construct vertex order three simpl step find remov bag modifi tree decomposit recurs construct find appli procedur color bag blue call blue tree blue tree leaf node subset neighbor blue mark node red repeat step blue tree ignor red node longer turn bag red blue tree smaller red branch hang blue tree consid blue leaf node node vertex belong blue neighbor will choos call blue bag describ modifi tree decomposit blue neighbor neighbor red consid tree root red branch red bag tree subset time color bag red blue leaf subset parent tree bag member subset bag consequ member subset subset remov red bag connect rest red bag direct remov difficult tree decomposit proposit induct proposit vertex order induc tree decomposit subset blue bag vertex order construct polynomi time readi character acycl width vertex order proposit acycl hypergraph acycl vertex order proof forward direct assum acycl tree decomposit bag hyperedg vertex order induc tree decomposit blue bag bag hyperedg subset proposit construct bag hyperedg vice versa bag bag bag belong acycl induct complet proof convers suppos vertex order induct acycl tree decomposit bag hyperedg hyperedg hyperedg hyperedg replac add bag set connect bag bag hyperedg creat bag connect connect remain bag creat tree decomposit bag hyperedg vice versa definit induc width hypergraph function vertex order induc width quantiti maxk call induc width call induc integr edg cover width call induc fraction edg cover width character three notion width hypergraph vertex order prove generic theorem function monoton lemma general width monoton function hypergraph width exist vertex order vertic induc width proof forward direct consid tree decomposit width induc vertex order proposit set subset bag monoton convers suppos vertex order tree decomposit induc order proposit bag set complet proof function monoton follow corollari hypergraph treewidth hypertre width fraction hypertre width exist vertex order vertic note corollari three corollari tree width well probabilist graphic model literatur folklor find explicit state main algorithm algorithm build block outsidein algorithm consid faq form faq express free variabl recal faq aggreg semir aggreg case write express dom condit factor evalu express comput inner express condit implement strategi wast time condit factor ident obvious idea comput set valu factor recurs comput express call outsidein algorithm evalu express outer aggreg inner serv algorithm build block insideout input factor repres list format entri list comput express recurs join algorithm disguis algorithm work fact outsidein algorithm work free variabl lder inequ analysi approach easili recal definit agm bound detail descript outsidein algorithm proof theorem appendix theorem suppos faq queri hypergraph edg vertic condit queri assumpt satisfi algorithm outsidein appli satisfi properti number condit queri factor oracl agm number oper perform agm iii number oper perform agm corollari factor repres list represent runtim outsidein agm logn outsidein backtrack search year ago constraint program ming pgm literatur method condit search main theoret object condit graph acycl main advantag backtrack search requir extra space main disadvantag resolv problem multipl time dualiti backtrack search dynam program well constraint program literatur explor side dualiti dynam program side insideout algorithm faq case describ intuit explain insideout special instanc faq sumprod idea variabl elimin fold common factor exploit distribut law factor equal fact distribut denot edg incid assum moment effici comput intermedi factor problem instanc faq modifi multi hypergraph construct remov vertex edg hyperedg recurs continu process variabl elimin textbook treewidth base pgm infer databas context faq queri boolean semir intermedi result essenti intermedi materi relat queri plan correct basic variabl elimin describ effici spars input factor factor size smaller product domain size main reason product factor annihil entri intermedi result spent time comput exampl tupl comput entri xun entri will kill idea comput xun valu will surviv factor simpl achiev comput factor xun margin variabl true fals comput idea precis relat join csp algorithm achiev fraction hypertre width bound general rang pgm infer aggreg queri databas chang produc incorrect result particip product multipl time elimin step propos simpl multipli actual multipli indic factor check definit project set defin project function dom project entri project arm indic factor insideout comput factor margin xun elimin remain variabl left open question comput effici simpli appli outsidein algorithm note comput instanc faq free variabl general case final describ general case insideout consid faq queri written general form recal oper form semir variabl elimin general scenario elimin depend case case form semir case appli strategi comput intermedi factor outsidein case suppos case rewrit express dom dom pass product aggreg factor power point wise power dom number multipl need dom factor general chang factor size case power idempot element product aggreg knew dom factor semir case case instanc faq reduc qcq qcq exampl exampl motiv exampl defin concept definit idempot product aggreg product aggreg call idempot product aggreg respect input variabl order product aggreg intermedi factor rang idempot element idempot product aggreg note faq instanc construct reduct qcq qcq product aggreg idempot case rewrit inner product assumpt comput product margin factor individu comput intermedi factor case elimin variabl case correspond remov hyperedg insert set formal idea algorithm definit hypergraph sequenc associ faq queri algorithm insideout faq requir hypergraph factor set free variabl requir faq queri semir outsidein comput outsidein comput multiset edg comput product margin factor skip loop product aggreg idempot rang idempot wrt dom idempot return outsidein definit hypergraph sequenc faq queri faq queri written general form defin hypergraph sequenc denot recurs defin construct differ depend form semir denot remov edg commut semir construct defin note hypergraph sequenc defin assumpt algorithm variabl order general select equival variabl order insideout case symbol will signifi variabl order choic drop superscript clear context output represent set support factor remain elimin free variabl output faq express faq instanc free variabl comput output direct run outsidein inspir olteanu vodni comput output factor represent report idea comput set tupl tupl comput multipli correspond comput output tupl join problem faq set semir rough runtim fhtw tabl work specif variabl order runtim analyz exampl implement wise project idea defint will elimin free variabl outsidein comput factor defin xuk xuk xuk aggreg defin logic replac fals replac true definit final outsidein express xuk elimin free variabl recov equival phase yan nakaki algorithm implement insideout logicblox elimin recoveri method hypergraph sequenc definit extend aggreg semir aggreg runtim analysi runtim insideout sum runtim variabl elimin step time need report output cost kth step analyz aggreg semir aggreg runtim domin outsidein runtim comput intermedi factor theorem bound agm bound set denot agm hand runtim linear input size modulo log factor final invoc outsidein report output list represent linear time second phase yannakaki algorithm recal agm bound definit bit care write precis express runtim insideout summar theorem proof appendix theorem suppos faq queri hypergraph edg vertic condit queri assumpt product margin assumpt satisfi defin defin idem rang idempot dom output size list represent insideout algorithm appli algorithm satisfi properti number condit queri factor oracl agm idem total number oper perform agm iii number oper perform agm idem discuss anlysi insideout elimin variabl order input faq express exampl reason forc insideout follow order variabl order runtim insideout lot smaller algorithm work correct order exampl variabl order runtim illustr insideout variabl order run time insideout exampl consid faq queri free variabl max max max max support factor determin variabl write paramet factor sake breviti exampl consid input factor rang straightforward insideout algorithm algorithm variabl order evalu express max max max max write max max max max spent time max max max write max max max spent time max max write max max spent time max max write max max spent time max max write max max spent time max spent time note dom runtim algorithm slight chang assumpt input factor allow conclud aggreg idempot product aggreg allow variabl order equival origin variabl order help reduc runtim insideout suppos knew input factor rang evalu queri max max max max write max max max max spent time max max max write max max max write max max max spent time max max max write max max max act idempot max max max spent time max max max arrang max max max crucial arrang max max max arrang max max max spent time max max arrang max max spent time max spent time case fact factor insid scope rang idempot element reduc runtim key insideout variabl order achiev runtim main technic contribut paper lie answer question variabl order equival origin faq queri express find best variabl order equival variabl order effici better brute forc search formal question present answer select good variabl order runtim insideout captur express good runtim natur idea rewrit faq queri variabl order queri answer chang express small chang variabl order sure result remain ident variabl aggreg permut variabl risk chang result equival variabl order formal concept equival variabl order definit evo faq queri written form equival variabl order vertex order hypergraph satisfi condit set exact equival variabl order free variabl order function defin xvf xvn ident function matter input factor assum variabl domain rang aggreg fix advanc input factor evo denot set equival variabl order applic specif class input factor allow correspond faq problem exampl logic applic input factor valu function motiv stronger definit evo definit evo class function rang evo denot set equival variabl order promis input factor definit evo definit requir input factor belong requir minim express variabl order belong evo trickier find optim variabl order general faq problem oppos typic elimin order graphic model matrix comput constraint satisfact domain variabl aggreg equival illustr point appendix present coupl exampl includ thematrix chain multipl problem minim easi general know bit structur problem hard deriv general result find variabl order minim exampl lucki permut variabl aggreg yield express equival origin faq express exampl variabl aggreg oper second thing help exampl good estim size project plug express general size high instanc depend faq width variabl order minim bit unwieldi approach remaind paper minim upperbound usual defin max bound term term term bound agm second term involv factor origin input factor termedi factor note intermedi factor faq sum margin factor product margin factor algorithm turn product margin factor sum margin factor earlier fortun product margin increas factor size bound second term note bound estim chose compact form bound precis third fourth term simpl put bound bound express idem idem nmaxk idem addit term requir report output key paramet control complex algorithm quantiti maxk quantiti function variabl order chose write input queri depend sequenc variabl aggreg hypergraph multipl way write faq queri lead wild runtim insideout exampl formal equival order previous definit natur definit fraction faq width variabl order equival variabl order defin sequenc hypergraph set definit respect fraction faq width variabl order quantiti faqw max equival variabl order hyperedg defin rang idempot wrt dom xvk analysi simplifi version theorem basic insideout run time faqw hide factor polynomi queri size logarithm data size theorem suppos faq queri hypergraph edg vertic condit queri assumpt product margin assumpt satisfi defin equival variabl order order insideout algorithm algorithm satisfi properti number condit queri number oper number oper perform bound faqw section studi main problem select equival variabl order minimum faqw definit faq width faq queri defin faq width faq queri faqw min faqw evo question determin variabl order belong evo tricki question answer formal answer depend exact meant variabl aggreg factor aggreg variabl domain size rang difficulti analog situat logic decid order formula specif form logic equival approach consist step balder ten cate point essenc difficulti refer defin class variabl order input faq queri class will precis set linear extens linex partial order set poset variabl call preced poset preced poset defin tree call express tree input queri express tree construct polynomi time queri complex variabl order linex equival sound linex defin combinatori notion call compon wise equival relat pair variabl order compon wise equival preserv evo membership preserv faqw variabl order evo compon wise equival order linex call strong complet linex trace compon wise equival variabl order start linex list evo exponenti time find order minim faqw better prove linex variabl order consid equival variabl order belong linex faqw faqw linex complet linex width concern complet result rest assumpt variabl aggreg commut simpl statement clarif proposit final result bit technic involv increment stage relax assumpt time time assumpt relax coupl idea introduc deal relax theorem algorithm appendix describ step appli faq free variabl case determin evo trivial appendix cover simpl trivial case block semir aggreg reader read slower pace start section appendix connect pgm join yannakaki algorithm solut case arbitrari number semir aggreg product aggreg idea express tree introduc final section cover general case variabl order faq semir aggreg present variabl order faq variabl aggreg form semir product aggreg note arbitrari number type semir consid faq queri form semir set defin main aim illustr key technic idea express tree express tree defin preced poset key compon complet notion compon wise equival variabl order compon wise equival preserv faq width equival will fact preced poset sound linear extens preced poset equival variabl order complet equival variabl order compon wise equival faq width linear extens preced poset evo plete character compon wise equival preced poset pute approxim faqw consid linear extens preced poset direct appli definit compon wise equival check variabl order evo polynomi time structur express tree comput variabl order approxim faqw approxim algorithm fhtw blackbox express tree crucial guid construct good variabl order express tree preced poset express tree defin sequenc tag variabl hypergraph sequenc vertex equival variabl tag correspond oper variabl free variabl tag free sequenc tag variabl tag block maxim subsequ consecut variabl tag tag block sequenc tag variabl longest prefix consist variabl tag definit express tree express tree root tree node tree set variabl construct express tree step compartment step compress step compartment step construct express tree base connect compon structur faq queri relat hypergraph structur compress step collaps tree shorter compartment step initi start sequenc variabl correspond tag exact written sequenc start free variabl tag free variabl tag technic reason add dummi variabl sequenc free tag sequenc start free free vertex isol vertex hypergraph tag variabl sequenc hypergraph build tree construct node variabl tag block node will root express tree dummi variabl origin queri free variabl block variabl natur tree node connect compon construct sequenc tag variabl list variabl exact relat order appear sequenc hypergraph recurs construct express tree final connect root express tree node complet compartment step remov dummi variabl express tree origin free variabl tree empti root node subtre correspond connect compon exampl figur compress express tree compartment step long node tag child node tree merg child set remov connect subtre subtre repeat step merg figur note compress step node larger final tree shorter tree compartment step step crucial correct express tree instanc faq tree depth root node free variabl children rest variabl exampl intuit express tree consid faq queri semir aggreg max free variabl max max max denot factor support hypergraph depict figur compartment step construct express tree depict figur figur depict compress step final express tree appear figur max max max max max max max max max max max max max max max max max figur compartment step express tree exampl depict color depict hypergraph faq queri max max max simplic dummi free variabl ignor exampl compartment step tag block remov queri break connect compon red blue express tree point appear color denot correspond part queri express hypergraph express tree color appli compartment recurs red compon blue compon compartment max max max max max max max max max max figur compress step express tree exampl recal figur depict express tree compartment step compress node merg parent tag max compress merg compress depict final express tree definit preced poset express tree defin partial order variabl abus notat will denot partial order poset strict descend express tree variabl node express tree compar partial order call partial order preced poset linex denot set linear extens poset aggreg prove sound complet small technic detour recal aggreg simpli binari oper definit aggreg aggreg pair ident definit commut aggreg aggreg commut recal faq semir share annihil rest select equal proposit commut aggreg ident aggreg convers commut aggr gate aggreg note semant aggreg ident accid exampl domain min ident paper assum aggreg input faq express function ident recal assum dom aggreg trivial ignor proposit suppos binari oper domain function dom dom dom dom dom dom proof analysi oper commut member arbitrari element dom dom defin dom dom defin ident function dom dom will proof sound complet fulli equip linex sound theorem linex evo linear extens preced poset equival proof express tree construct compartment step express tree defin poset variabl will linear extens compartmen taliz poset equival prove claim induct number tag block input sequenc denot input sequenc tag variabl input hypergraph base case tag block variabl sequenc belong node compartment express tree permut variabl linear extens poset expect permut equival induct step suppos tag block block set variabl sequenc connect compon defin faq express set condit factor condit variabl express complet factor product faq express written seri aggreg variabl product insid induct linear extens compartment poset equival linear extens arbitrari interleav form observ complet proof claim linear extens express poset consist variabl arbitrari interleav linear extens express poset consid express tree compress step linear extens final preced poset equival induct number merg child node parent node tag linear extens express tree merg variabl consecut variabl tag permut equival variabl order nice equival variabl order linear extens true consid faq queri max max factor rang variabl semir variabl case express tree three node empti root node children linear extens will enforc easi rewrit max max max max max max condit express factor multipli allow max max max max verifi faqw faqw faqw linex express tree queri note linear extens factor compon interleav long respect relat order compon interleav add faqw concern exampl arbitrarili select variabl tag block construct compartment express tree variabl root variabl time tag block time reason proof theorem linear extens variabl wise poset equival idea work will forbid select variabl exampl crucial construct compress express tree determin variabl equival variabl order ultim set linex canon list variabl order matter evalu implement inform discuss intuit show equival variabl order width order linex lemma express tree complet list variabl occur free variabl equival order lemma variabl order evo variabl belong child node root express tree proof denot function defin faq queri variabl order input factor aim conclus lemma hold exist input factor suppos sake contradict belong node parent root express tree denot union strict ancestor express tree construct express tree vertic set belong connect compon graph shortest path gaifman graph vertic belong distinct hyperedg variabl arbitrari valu dom arbitrari dom sake breviti denot construct input set factor defin factor xsk xik xik function defin defin xsj xij xij free variabl locat root express tree root express tree empti ident function defin factor ident matric final defin free variabl will evalu left hand side imagin run insideout algorithm evalu contradict pick order linex preced variabl lower level express tree theorem evo preced turn preced comput order insideout algorithm hand side desir definit realiz intuit construct preced tree variabl time strategi oppos tag block time strategi interleav linear extens connect compon arbitrarili variabl order equival faq width interleav happen level definit induct definit compon wise equival faq queri variabl aggreg semir aggreg evo variabl order variabl order compon wise equival equival connect compon connect compon equival variabl order consist connect compon equival order consist set variabl order evo cwe denot set variabl order equival variabl order proposit variabl order equival evo evo faqw faqw proof fact condit connect compon interact insideout observ prove claim theorem complet theorem evo cwe linex variabl order equival equival linear extens preced poset proof evo cwe linex revers contain proposit theorem loss general assum root express tree empti child node connect compon interleav arbitrarili prove separ arbitrari evo lemma connect compon defin queri variabl order condit factor subsequ pick vertic preced poset express tree induct number variabl evo cwe linex exist linex equival express tree consist empti root free tag root child node subtre root call subtre attach root subtre will creat tree root union add root add empti parent will exact express tree observ pick variabl order consist start variabl linex equival exampl compon wise equival definit role play plete theorem exampl compon wise equival complet consid faq queri semir aggreg max three variabl bound max denot input factor support queri evo ignor dummi free variabl express tree consist root tag variabl singl child node tag max linex evo suggest theorem note origin order linex compon wise equival definit cwe linex evo predict theorem proposit faqw faqw search variabl order best faq width order redun dant suffici consid linex suggest corollari proposit theorem impli result precis proxim faqw corollari faqw min faqw linex approxim faqw recal definit faq width definit faqw max product aggreg defin exact express tree construct queri form defin notat will node express tree set variabl variabl tag parent node express tree defin set node subtre root ancestor parent default set contribut node branch set contribut node branch strict ancestor node express tree defin hypergraph leaf node subgraph induc leaf node descend child set project hyperedg intersect descend express tree child project union hyperedg intersect descend prove simpl lowerbound faqw lead approxim algorithm comput faqw approxim algorithm fhtw blackbox lemma node express tree faqw fhtw faqw proof inequ corollari suffici prove faqw fhtw variabl order linex node express tree leaf node express tree faqw fhtw fhtw induc subgraph suppos leaf node child smallest integ belong node subtre root fact linex set precis equal time elimin vertex belong node subtre root insert hyperedg interconnect neighbor hypergraph hypergraph sequenc time reach node belong hyperedg ancestor observ faqw min max min max monoton min max min max fhtw variabl order entir set prove second inequ linex node express tree faqw observ smallest integ monoton faqw max theorem faq queri hypergraph variabl aggreg semir aggreg suppos approxim algorithm hypergraph output tree decomposit fraction hypertre width fhtw time fhtw decreas function time faqw comput equival vertex order faqw faqw faqw proof blackbox approxim algorithm fhtw construct tree decomposit hypergraphhl node express tree tree decomposit construct variabl order variabl set standard final construct variabl order concaten respect preced partial order suppos variabl order consid arbitrari vertex node preced tree bag belong elimin construct argument proof lemma consid simpler case leaf node express tree elimin set union set cover elimin algorithm work cover maximum residu left elimin vertic residu precis set time elimin vertex collect neighbor hyperedg time vertex elimin entir set hyperedg leaf node situat exact fact work graph hypergraph restrict residu subtre lemma fact subaddit relat impli fhtw faqw faqw faqw final faqw max faqw faqw variabl order faq inner faq formula close idempo tent element consid faq express special form general problem specif defin special case faq solv defin clarifi coupl concept set idempot element domain variabl aggreg close belong recal faq context element idempot element canon exampl max close close true fals close matrix domain idempot element matrix multipl note semir aggreg close close close hand product aggreg close definit ident aggreg subset set aggreg close ident note aggreg ident accid consid faq queri form input factor rang set idempot element close integ arbitrari semir aggreg close product semir aggreg semir aggreg ident ident compact write faq express general faq express aggreg close special case faq captur qcq qcq instanc exampl exampl written form exampl qcq revisit qcq basic qcq formula input factor rang output comput rang choos comput qcq qcq exploit fact product aggreg idempot definit qcq full domain enjoy fact product aggreg qcq aggreg max close equiva lent logic aggreg notic ident max arithmet interpret logic max qcq satisfi condit problem formul special case faq long variabl order list order product aggreg idempot definit aim find good variabl order set evo set factor rang definit notic context evo stronger notion harder deal evo variabl order evo output evalu differ input factor rang long factor rang set idempot element close element commut aggreg ident aggreg discuss condit variabl aggreg product commut notic close condit suffici recogn case semir aggreg select semir aggreg commut ident problem formul requir semir aggreg ident ident well exact aggreg product select contradict commut infer variant proposit notic rang proposit suppos semir aggreg ident product aggreg function dom dom dom dom dom dom proof semir aggreg defin exact proof proposit exact aggreg product defin arbitrarili element dom dom dom dom defin express tree preced poset approach mirror deal product aggreg queri requir extra care correspond variabl play role determin connect compon construct express tree belong set defin contribut direct width faqw faqw defin algorithm design faq help reader qcq run exampl definit express tree express tree root tree node tree set variabl tree construct compartment compress compress step remain ident compartment step trickier compartment step initi start sequenc variabl correspond tag exact written appli trick dummi free variabl start sequenc free free free hypergraph extra isol vertex mark free tag tag variabl sequenc hypergraph build tree construct node tag block set product variabl belong connect compon ofh construct hypergraph call extend compon set extend compon construct construct special set variabl call dangl product variabl set defin extend compon construct sequenc tag variabl list variabl exact relat order appear sequenc hypergraph recurs construct express tree final connect subtre node creat node dangl product variabl connect dummi variabl remov complet compartment step note compartment variabl node tag compress express tree compartment step long node tag child node tree merg child repeat step merg proceed proof exampl illustr comput express tree presenc product aggreg exampl intuit express tree consid faq queri factor rang max max max max exampl max close comparison format notic max close max ident condit problem specif satisfi figur illustr hypergraph correspond faq instanc exampl consist singl extend compon ignor dummi free variabl construct express tree compartment step symbol decompos problem fact product aggreg idempot decompos problem gradual note breviti scope aggreg entir express specif limit scope express insid pair parenthes max max max max figur hypergraph correspond faq instanc factor rang figur extend compon faq instanc figur ignor dummi free variabl case set product node contain defin byw vertic three extend compon solid circl hyper edg drawn solid complet contain insid vertic extend compon drawn dot partial contain insid vertic extend compon correspond faq instanc compon max max max max max max level recurs second level recurs compartment compress figur construct express tree figur left panel compartment top left tree level recurs bottom left tree second final level recurs panel compress step node label correspond tag blue node tree tag dangl node mark orang top left dummi free variabl ignor exampl max max max max max max max max max max max max max max max max max max max max max set set dangl product variabl condit inner instanc factor product independ faq queri extend compon correspond faq factor figur intermedi express tree level recurs top left figur recurs construct express tree queri connect root node express tree bottom left figur compartment step symbol level real comput involv illustr compress step arrang express max max max max max max max max max max max max max max max max ravel inner aggreg outer aggreg correspond merg child node parent node compress step final express tree figur free semir variabl product variabl appear multipl time express tree exampl occur three time three express three variabl domain dom dom dom rewrit max max max max luckili distribut product variabl multipl copi express tree exhibit nice properti hold semir variabl nice properti enabl care multipl copi product variabl integ semir aggreg strict ancestor express tree compress step strict ancestor strict ancestor express tree exampl consid faq queri express tree rough correspond write queri origin express strict ancestor express tree lemma scenario imposs product aggreg lemma allow comparison relat form express tree partial order lemma express tree satisfi properti copi strict ancestor copi copi strict ancestor copi proof proof induct number tag block base case tag block express tree node lemma trivial induct step suppos tag block tag block sequenc extend compon defin faq express express condit factor dangl compon express defin compress express tree construct compress express tree connect root root merg children tag consid case case case tag semir tag consid express extend compon copi product variabl merg root express tree root semir tag merg copi product variabl strict ancestor copi product variabl assum lemma hold express tree will hold express tree case tag claim extend compon rough construct express tree product variabl account determin connect compon remov increas number extend compon assum lemma hold will hold elabor claim dummi free variabl tag block tag free condit recurs construct express tree extend compon compon condit block recurs construct express tree extend compon apart time block assum hypergraph consist extend compon suppos singl extend compon place previous stage hypergraph tag block product block product vertic obtainedh singl connect compon ofh extend vertic connect tag block suppos consist product vertic product vertic note extend compon connect compon vertic connect connect add vertic singl extend compon prove claim readi express tree defin partial order variabl express tree defin definit defin binari relat variabl pair write belong strict ancestor express poset note variabl occur time express tree obvious partial order corollari binari relat defin partial order set proof reflex transit hold trivial check antisymmetri properti suppos case semir variabl semir variabl occur semir variabl strict ancestor strict descend strict ancestor copi violat lemma left case product variabl case origin express lemma ancestor corollari justifi correct preced poset definit definit preced poset preced poset partial order set abus notat denot poset definit linex denot set linear extens prove sound linex theorem linex evo linear extens preced poset equival proof proof theorem prove sound compartment poset poset defin express tree construct compartment step tricki issu case compar theorem multipl occurr product variabl variabl order write prove claim induct number tag block input sequenc base singl tag block hold trivial induct step suppos tag block tag block extend compon form sequenc defin faq express express condit factor recal product variabl construct express dangl compon express condit factor condit variabl express factor complet product faq express empti note product aggreg occur correspond copi construct arbitrari linear extens compartment poset extend compon denot subsequ pick variabl linear extens compartment poset evo induct note variabl faq express defin ident factor exact follow script prove complet linex lemma variabl order evo variabl belong child node root express tree proof sketch proof lemma main differ con sider connect compon will consid extend compon path assum intermedi vertic prod uct variabl addit defin proposit will defin proposit rang variabl depend semir product aggreg semir aggreg product aggreg defin proof lemma definit componentwis equival remain connect compon will extend compon definit definit componentwis equival faq queri evo variabl order variabl order componentwis equival short equival extend compon extend compon equival variabl order consist semir free variabl product variabl extend compon equival order consist spectiv set variabl order evo cwe denot set variabl order equival variabl order notic variabl dangl product set order ignor definit proposit variabl order equival evo evo faqw faqw proof proposit differ product variabl set consid definit faqw definit initi block product variabl definit order arbitrarili theorem evo cwe linex faq express form variabl order equival equival order linear extens preced poset proof proof theorem contain cwe linex evo proposit theorem prove direct prove contain evo cwe linex induct stronger duction hypothesi equival linear extens linex product variabl exact relat order loss general assum root express tree empti arbitrari evo lemma recogn case tag extend compon defin queri variabl order condit factor subsequ pick vertic preced poset express tree induct number variabl evo cwe linex variabl order linex equival product variabl maintain relat order product variabl appear compon pick variabl order consist start variabl linex equival product variabl maintain relat order tag extend compon argument proof lemma appli lemma extend compon argument repeat infer maxim extend compon corollari faqw min faqw linex approxim faqw recal definit faq width definit faqw max union set semir variabl key differ equal will follow strategi definit set node child bit delic definit semir node product node node express tree call semir node variabl tag form semir node call product node node express tree parent node express tree defin set semir node subtre root ancestor note node semir descend empti compar previous definit differ set residu impos process elimin semir variabl subtre defin graph defin small differ leaf node subgraph induc leaf node semir descend child correspond definit project hyperedg intersect semir descend key point notic intersect semir descend contribut node summar follow script proof lowerbound ident lemma note bound hold semir node lemma semir node express tree faqw fhtw faqw design approxim algorithm theorem faq queri form hypergraph suppos approxim algorithm hypergraph output tree decomposit fraction hypertre width fhtw time fhtw decreas function time faqw comput equival vertex order faqw faqw faqw proof construct super tree express tree replac semir node singl super variabl super variabl product variabl defin poset descend relat defin poset descend relat call super poset linear extens super poset super variabl semir node blackbox approxim algorithm construct tree decomposit hypergraph tree decomposit construct variabl order variabl set final replac occurr variabl order call final variabl order linear extens preced poset suppos variabl order consid arbitrari vertex semir node argument proof theorem lemma fact subaddit fhtw faqw fhtw faqw rest proof ident theorem note requir copi variabl consecut insideout work algorithm work consid variabl domain collaps copi origin copi need rigor definit evo note theorem impli theorem theorem appli theorem approxim algorithm marx corollari faq queri form defin suppos faqw constant queri answer time faqw recal hide factor polynomi queri complex logarithm data complex corollari logic reduct exampl qcq faq corollari qcq tractabl class quantifi conjunct queri faqw bound determin class qcq formula tractabl chen dalmau defin notion prefix graph width definit iii paper prefix width correspond exact quantiti faqw stronger notion result impli main posit result paper theorem construct famili qcq instanc faqw bound prefix width unbound exampl consid quantifi conjunct queri chen prefix width case faqw consequ result strict stronger corollari resolv open question pose durant paper corollari qcq tractabl class quantifi conjunct queri faqw bound requir inherit marx approxim algorithm variabl order faq case faq fall previous case idempot product aggreg general case natur hard find practic exampl repres form complet describ handl definit defin idempot algorithm point view product aggreg call idempot time elimin insideout rang factor time idempot wrt definit depend specif elimin order input factor data depend definit sens algorithm point view captur idempot semant level semant point view reason product idempot entir domain close subset domain think idempot properti product aggreg will properti product oper domain product oper idempot interest case idempot will explain basic idea simpl exampl exampl faq idempot consid faq notic consist connect compon extend compon defin assum product idempot written dom connect impos order construct express tree direct describ equival express express fail captur fact notic situat happen sibl node express tree happen arbitrari node incompar preced poset express tree solv issu extend factor product variabl construct express tree extend exact describ exampl extend defin dom dom dom extend call will express tree definit equival express express forc order notic extens take place semant level construct express tree algorithm level will work origin exampl elimin insideout elimin rais origin power dom repeat squar definit express tree preced poset faq queri defin hypergraphh domaind idempot underd letk set semir aggreg free variabl defin set product aggreg defin faq queri domain hypergraph dom defin dom defin express tree construct appli definit preced poset construct appli definit express tree notic factor product variabl matter product idempot situat rais power dom happen semant level exact analysi order prove theorem linex evo linear extens preced poset equival notic semant determin order evo algorithm insideout will run definit express tree captur complet intuit level argu exampl achiev complet rigor requir long definit unnatur assumpt class faq well motiv practic exampl skip rigor complet definit proof input output factor represent input represent analyz runtim insideout algorithm term size input factor number point input factor input factor repres list represent precis input size factor assum function size applic input factor compact repres represent exponenti smaller canon exampl sat problem cnf claus size repres bit condit search outsidein algorithm algorithm longer good choic compact input represent runtim depend heavili number element input factor expect sort hold sat sat input queri acycl problem hard hard recal acycl hypergraph fhtw coupl interest show sat sat tractabl acycl queri relat join problem phenomenon discov comput difficulti face precis problem compact input factor represent technic assumpt minimum number comparison comparison base join algorithm perform order minimum number rectangular box format need cover entir output space design algorithm call minesweep core function aliti determin set rectangular box cover entir output space tetri algorithm relax assumpt input box formal defin box cover problem bcp case difficulti lie precis fact box repres point output condit search style algorithm algorithm work well minesweep tetri collect support rectangular box form hypergraph sat sat case hypergraph acycl box cover problem hard acycl linear time algorithm solv box cover problem algorithm explain insideout outsidein dualiti framework insideout algorithm remain variabl elimin taylor outsidein algorithm suit compact encod bcp sat sat reduc faq instanc input factor special form call box factor definit box factor box support tupl iij dom xij interv domain dom xij box set point dom xij iij factor dom xij call box factor box constant sat sat cnf claus box factor exampl claus box fals true fals sat domain true fals sat domain rectangular box bcp clear box factor boolean domain point cover box solv correspond faq instanc key algorithm sat algorithm sat minesweep tetri variabl elimin intermedi factor comput repres product box factor second key observ acycl hypergraph variabl order call nest elimin order neo collect set form chain contain nest allow box factor represent intermedi factor compact intermedi factor product small number box factor minesweep tetri bit work set proper explain algorithm idea explain nest elimin order nest variabl order acycl independ effici algorithm verifi hypergraph acycl variabl order construct sequenc hypergraph defin edg form partial order set poset respect set inclus poset chain member linear order relat chain member form nest inclus collect set result ngo nguyen rudra proposit acycl neo hypergraph acycl vertex order chain vertex order call nest elimin order neo induct algorithm verifi acycl simpli find vertex chain recurs acycl polynomi time verifi properti corollari verifi hypergraph acycl polynomi time nest elimin order exist construct polynomi time insideout sat consid sat problem exist satisfi assign elimin variabl case set claus variabl claus occur posit liter negat variabl set claus set claus construct boolean factor true fals true fals true fals true fals simpli origin claus elimin complet rule claus claus creat claus cij instanc sat problem procedur davi putnam procedur sat solv procedur enumer truth assign faster depend input hand will combinatori explos problem number claus exampl step claus dechter rish algorithm run time cours better rough runtim advantag creat theori proof system will delv point note represent intermedi factor product box factor interest class input cnf formula class acycl cnf formula class vertex order nest elimin order claus box factor explos problem fact set form chain variabl set subset variabl set variabl subset variabl claus cij tautolog remov equal resolv subset resolv resolut call subsumpt resolut time elimin variabl increas number claus polynomi time algorithm solv acycl cnf formula result prove theorem ordyniak paulusma szeider sat polynomi time solvabl class acycl cnf formula proof complex claus cij call resolv claus insideout sat sat problem claus correspond function sat view faq semir claus variabl var correspond factor defin xvar xvar satisfi will work general version sat call wsat claus associ weight weight correspond factor xvar xvar satisfi weight claus weight wsat reduc sat statement box factor formul specif context problem chose work wsat elimin variabl variabl sat instanc variabl wsat instanc will short elimin variabl wsat defin set weight claus variabl xvar xun xvar claus call monochromat respect set weight claus claus true color respect denot colorc defin colorc weight claus variabl var will denot claus drop liter whichev occur set claus contain remov arbitrarili fix order defin set claus minim monochromat formal claus var andc monochromat notic monochromat weight color color color color hard verifi definit satisfi size larger larger acycl case cnf formula acycl conveni work nest elimin order variabl order proposit choos claus var xik conveni defin claus var var elimin remain hypergraph acycl hyperedg var remedi situat claus sort ascend var var var var var tie broken arbitrarili equival proposit fact neo defin will choos empti claus weight weight weight color color color color color color definit satisfi var var var elimin remain hypergraph acycl guarante elimin wsat instanc size origin conclud theorem brault baron capelli mengel sat polynomi time solvabl class acycl cnf formula output represent framework addit handl multipl input represent handl output represent describ modifi insideout output represent inspir factor databas idea develop olteanu vodni extens aggreg bakibayev inspir discuss faq instanc input factor observ faq express defin function store comput need comput function spectrum tradeoff explor term time take queri function store compress form time take decompress order explain idea clean simplifi present bit will consid faq instanc will assum illustr modifi insideout repres output three output represent addit default list represent recal insideout run elimin variabl run outsidein faq correspond option will chang step will talk runtim algorithm elimin variabl list represent default behavior insideout spend rough faqw variabl elimin run outsidein time report output agm call output process time recal list represent allow queri dom time constant delay enumer list delay output consecut output tupl take time consid option smaller output pre process time time handl queri enumer oper larger cost faq represent option output process elimin free vari abl note faq instanc construct insideout elimin valid represent output target time determin check construct enumer algorithm constant delay represent final represent advantag consid input faq instanc nice symmetri represent output faq instanc discuss general framework olteanu vodni factor represent faq instanc delay enumer represent option outsidein algorithm step case output store factor represent factor databas framework output requir form essenti runtim faqw term output represent note target time determin check yui import design delay enumer function assum store btree trie sort order start figur easi check delay output consecut output tupl faq composit messag pass effici enumer entri function defin faq express applic answer conjunct queri databas delay enumer represent decent choic mention case output faq queri feed input faq queri output represent allow effici answer condit queri logic applic product margin queri effici problem advanc variabl order futur condit queri product margin queri will pose pose order delay represent suffici easili answer condit queri intermedi factor effici time playbook graphic model literatur key reason messag pass belief propag advantag variabl elimin prepar graphic model futur unknown queri messag pass algorithm essenti variabl elimin direct comput tree decomposit graph insideout elimin messag pass algorithm bag tree decomposit complex fhtw converg bag calibr state allow answer condit queri gyo elimin order tree decomposit leav tradeoff involv realiz idea futur work point olteanu vodni step direct databas domain appendix list preliminari observ fhtw chang respect composit acknowledg work part support nsf grant cnf ccf darpa agre ment govern author reproduc distribut reprint government purpos notwithstand copyright thereon refer aberg tzli olukotun emptyhead boolean algebra base graph process arxiv print mar abiteboul hull vianu foundat databas addison wesley abo khami ngo rudra join geometr resolut worst case proceed acm sigmod sigact sigart symposium principl databas system pod melbourn vic australia june adler width function hypertre decomposit dissert albert ludwig universita freiburg adler weyer tree width order formula logic method comput scienc aji graphic model iter decod phd thesi california institut technolog aji mceliec general distribut law ieee transact theori aref ten cate green kimelfeld olteanu pasal veldhuizen wash burn design implement logicblox system selli davidson ive editor proceed acm sigmod intern confer manag data melbourn victoria australia june acm arnborg proskurowski linear time algorithm hard problem restrict partial tree discret appl math atseria grohe marx size bound queri plan relat join foc ieee comput societi bahar frohm gaona hachtel macii pardo somenzi algebra decis diagram applic formal method system design bakibayev kociski olteanu zavodni aggreg order factoris databas pvldb bodlaend treewidth algorithm techniqu mathemat foundat puter scienc bratislava volum lectur note comput sci springer berlin bolloba thomason project bodi hereditari properti hypergraph bull london math soc rger gra del gurevich classic decis problem universitext springer verlag berlin reprint origin brault baron capelli mengel understand model count acycl cnf formula corr cai chen graph homomorph complex valu dichotomi theorem siam comput cai xia complex complex weight boolean csp comput system sci chekuri rajaraman conjunct queri contain revisit theor comput sci chen quantifi constraint satisfact bound treewidth proceed eur opean confer artifici intellig ecai includ prestigi applic intellig system pai valencia spain august chen dalmau decompos quantifi conjunct disjunct formula proceed annual ieee symposium logic comput scienc lic dubrovnik croatia june ieee comput societi chen grohe constraint satisfact succinct relat comput syst sci chen mengel trichotomi complex count answer conjunct queri corr cooley tukey algorithm machin calcul complex fourier seri mathemat comput cormen leiserson rivest stein introduct algorithm mit press cambridg second edit davi logemann loveland machin program theorem prove commun acm dechter bucket elimin unifi framework reason artif intel dechter otten marinescu practic signific hypertre treewidth ghallab spyropoulo fakotaki avouri editor ecai european confer artifici intellig patra greec juli proceed volum frontier artifici intellig applic press dechter pearl tree cluster constraint network artifici intellig dechter rish direct resolut davi putnam procedur revisit doyl sandewal torasso editor proceed intern confer principl knowledg represent reason bonn germani morgan kaufmann durand mengel structur tractabl count solut conjunct queri tan guerrini catania gounari editor joint edbt icdt confer icdt proceed genoa itali march acm durand mengel complex weight count acycl conjunct queri comput syst sci fagin degre acycl hypergraph relat databas scheme acm freuder complex tree structur constraint satisfact problem shrobe dietterich swartout editor proceed nation confer artifici intellig boston massachusett juli august volum aaai press mit press gogat domingo structur messag pass proceed twenti ninth confer enc uncertainti artifici intellig bellevu usa august auai press corval oregon goldberg grohe jerrum thurley complex dichotomi partit function mix sign siam comput aug golomb baumert backtrack program golub van loan matrix comput john hopkin studi mathemat scienc john hopkin univers press baltimor fourth edit gottlob leon scarcello robber marshal guard game theoret logic character hypertre width comput syst sci graham univers relat tech report greco scarcello count solut conjunct queri structur hybrid tractabl hull grohe editor proceed acm sigmod sigact sigart symposium principl databas system pod snowbird usa june acm grohe marx constraint solv fraction edg cover soda acm press grohe marx constraint solv fraction edg cover acm transact algorithm guruswami algorithm list decod guruswami uman vadhan unbalanc expand random extractor parvaresh vardi code acm art gyssen jeavon cohen decompos constraint satisfact problem databas techniqu artif intel gyssen paredaen decomposit methodolog cyclic databas advanc data base theori huang darwich infer belief network procedur guid int approx reason kask dechter larrosa dechter unifi tree decomposit reason graphic model artif intel khatri rao solut function equat applic char acter probabl distribut sankhya indian journal statist seri koch increment queri evalu ring databas paredaen gucht editor proceed twenti ninth acm sigmod sigact sigart symposium principl databas system pod june indianapoli indiana usa acm kohla wilson semir induc valuat algebra exact approxim local computa tion algorithm artif intel koller friedman probabilist graphic model adapt comput machin learn ing mit press cambridg principl techniqu maier theori relat databas comput scienc press marx approxim fraction hypertre width acm tran algorithm apr marx tractabl structur constraint satisfact truth tabl theori comput syst marx tractabl hypergraph properti constraint satisfact conjunct queri acm newman structur function complex network siam rev elec tronic ngo nguyen rudra worst case analysi join minesweep proceed acm sigmod sigact sigart symposium principl databas system pod snowbird usa june ngo porat rudra worst case optim join algorithm lenzerini benedikt editor pod acm ngo porat rudra effici decod error correct list disjunct matric applic extend abstract automata languag program volum lectur note comput sci springer heidelberg ngo rudra skew strike develop theori join algorithm sigmod record nguyen aref bravenbo kollia ngo rudra join process graph pattern dog trick proceed third intern workshop graph data manag experi system grade melbourn vic australia june olshevski shokrollahi matrix vector product confluent cauchi matric applic confluent ration interpol yao luk editor proceed thirti second annual acm symposium theori comput portland usa acm olteanu vodni size bound factoris represent queri acm tran datab syst ordyniak paulusma szeider satisfi acycl acycl cnf formula fsttcs volum pagh tsourakaki color triangl count mapreduc implement inf process lett mar pan optim comput structur matric shmoy editor proceed ing eleventh annual acm siam symposium discret algorithm januari san francisco usa acm siam pearl reverend bay infer engin distribut hierarch approach waltz editor proceed nation confer artifici intellig pittsburgh august aaai press pearl fusion propag structur belief network artif intel sept pichler skritek tractabl count answer conjunct queri comput syst sci sept robertson seymour graph minor algorithm aspect tree width algorithm rollon larrosa dechter semir base mini bucket partit scheme rossi editor ijcai proceed intern joint confer artifici intellig beij china august ijcai aaai rossi beek walsh handbook constraint program foundat artifici intellig elsevi scienc york usa scarcello queri answer exploit structur properti sigmod record suri vassilvitskii count triangl curs reduc tarjan yannakaki simpl linear time algorithm test chordal graph test acycl hypergraph select reduc acycl hypergraph siam comput juli traci singh matrix product applic partit matrix differen tiation statistica neerlandica tsourakaki fast count triangl larg real network count algorithm law proceed ieee intern confer data mine icdm decemb pisa itali ieee comput societi ullman principl databas knowledg base system volum comput scienc press vardi complex relat queri languag extend abstract lewi simon burkhard landweb editor stoc acm veldhuizen triejoin simpl worst case optim join algorithm icdt yannakaki algorithm acycl databas scheme vldb ozsoyoglu determin tree queri membership distribut queri informatica yuster zwick fast spars matrix multipl acm tran algorithm juli zhang pool simpl approach bayesian network comput proceed tenth canadian confer artifici intellig zhang pool exploit causal independ bayesian network infer artifici intellig res sampl applic faq explain faq captur wide rang problem graphic model infer matrix multipl constraint satisfact quantifi conjunct queri evalu taxonom exampl faq consid semir true fals boolean semir sum product semir max max product semir essenti equival min semir set semir set call univers case addit ident multipl ident boolean semir exampl satisfi cnf formula boolean variabl hypergraph claus factor question satisfi evalu constant function note case factor compact repres size factor linear number variabl factor will compact represent section exampl color graph defin instanc faq dom defin factor edg predic question color equival evalu constant function constant factor exampl compact repres amount inequ exampl boolean conjunct queri boolean conjunct queri evalu problem bcq written queri input relat set atom relat atom attribut set var exist tupl satisfi relat atom var rang factor negat log factor turn product sum defin hypergraph set attribut var atom correspond relat factor problem reduc evalu constant function note case typic input relat encod list tupl belong input relat input compact exampl exampl constraint satisfact constraint satisfact problem csp reduc faq obvious note sat color bcq special case csp summar subtl issu input encod exampl sat input factor encod claus size bcq list encod input factor encod tabl entri function valu true csp problem defin underspecifi exampl conjunct queri general conjunct queri evalu cqe problem queri existenti quantifi subset variabl obvious conjunct queri evalu reduc form faq problem comput output function exampl natur join queri natur join queri cqe problem variabl free essenti natur join queri quantifi free conjunct queri pre process step reason pre process strict speak conjunct queri relat appear time variabl appear atom point immateri point discuss exampl code theori typic set code theori prime power denot field order integ code simpli subset fnq size fkq pair codeword member ham distanc call code code list recoveri problem modern code theori problem posit code subset symbol object recov set codeword technic lax fraction posit requir discuss list recover code code small list codeword recov satisfi condit small cours recoveri process fast list recoveri paradigm applic list decod problem power expand graph construct parvaresh vardi famili code precis list recover list recoveri construct good group test scheme list recoveri problem factor true iff true iff faq instanc sum product semir exampl complex network analysi complex network analysi count number occurr small induc induc subgraph insid massiv graph problem pervas social network biolog network analysi occurr subgraph pattern mine network canon exampl triangl count problem count number triangl graph number triangl comput cluster coeffici transit ratio reduc triangl count faq faq hypergraph domain dom factor term input encod factor repres data structur size exampl problem comput constant function strategi count number occurr fix graph exampl cliqu remark list induc subgraph factor indic exist edg subgraph pattern factor correspond inequ compact repres exampl sat sat boolean answer formula satisfi sat specif piec exact satisfi assign cnf formula boolean variabl hypergraph claus factor defin satisfi problem count number satisfi assign evalu constant function exampl perman sat complet canon complet problem perma nent problem evalu perman perm binari squar matrix denot symmetr group perman aij defin perm note perm exact form det written leibniz formula sign perman problem written sum product form input matrix aij singleton factor vertex aij factor problem evalu constant function exampl probabilist graphic model consid probabilist graphic model pgms discret finit domain loss general restrict undirect graphic model call markov random field factor graph gibb distribut input model direct moral undirect model model repres hypergraph discret random variabl finit domain dom dom factor call potenti function dom typic learn model perform infer model exampl comput margin distribut set variabl comput condit distribut set variabl specif valu set variabl comput argmaxxa map queri exampl condit variabl restrict factor entri match condit variabl obvious question special case faq problem sum product semir third question max product semir well fact matrix vector multipl special case matrix matrix multipl exampl matrix vector multipl problem special case faq problem comput discret fourier transform special case faq interpret dft thesi algorithm impli fast fourier transform fft exampl discret fourier transform recal discret fourier transform dft matrix vector multipl axi x·i exampl will consid case prime integ recal dft defin x·i write base form write transform fmp yk·p bayesian point view differ learn refer task estim paramet model observ data exampl estim paramet maximum posteriori map estim log log set observ valu map call mpe stand probabl explan mode posterior distribut infer refer task comput hidden variabl paramet recal note yk·p equival fmp suggest reduct faq edg edg variabl domain dom dom correspond factor defin x·i final factor defin output fmp exampl graph homomorph function hyper graph symmetr matrix aij graph homomorph function defin reader refer masterpiec cai goldberg refer long fascin histori problem correspond faq instanc dom ident factor map axu exampl holant problem holant problem express faq essenti holant instanc function vertex graph function set incid edg edg assign domain problem comput sum edg assign product vertex factor detail max product semir addit map queri pgms well reduc faq max product semir common instanc max product semir exampl maximum likelihood decod linear code instanti maximum likelihood decod mld linear code instanc faq aji mceliec consid decod problem discret memoryless channel assum alphabet denot probabl receiv receiv transmit channel binari linear code dimens block length receiv word codeword probabl receiv receiv transmit maximum likelihood decod output codeword output argmax simplic will concentr problem comput probabl max defin hypergraph singleton edg correspond factor linear code pariti check matrix row supp factor xsupp defin correspond pariti check satisfi easi verifi faq instanc equival problem max fnq xsupp set semir exampl natur join queri consid natur join queri atom hypergraph defin factor domain set semir dom relat correspond comput output comput constant set valu function applic faq problem faq problem general class problem captur basic faq formul consid problem count number answer conjunct queri call problem input queri quantifi free formul problem faq sum product semir map true fals queri existenti quantifi straightforward map work second consid general quantifi conjunct queri qcq problem existenti univers quantifi conjunct atom insid reduc problem faq problem count number solut formula qcq harder problem qcq qcq reduc faq signatur max exampl conjunct formula form atom problem count number assign satisfi reduc problem faq constant function max max atom atom correspond note max commut exampl qcq reduct order formula form qnxn atom problem comput relat free variabl reduc problem faq function exampl atom atom correspond max min reduc qcq faq reduct will paper exampl qcq second reduct order formula form qnxn atom problem comput relat free variabl reduc problem faq function exampl atom atom correspond max interest note reduct product occur aggreg oper univers quantifi variabl aggreg oper input factor exampl exampl revisit qcq exampl order formula form qnxn atom problem count number tupl relat free variabl reduc problem faq constant function atom atom correspond max factor represent truth tabl represent truth tabl represent input factor repres tabl dom row row list paramet function implicit set semir exampl dens matrix multipl problem input output matrix rep resent list entri exampl text book descript pgm infer condit probabl tabl assum truth tabl represent truth tabl represent problem easier input size larger obvious represent wast input factor spars sens valu entri succinct represent consid specif represent factor goal succinct represent factor list represent effect represent effici algorithm unpack succinct represent list represent main aim will explain represent essenti encod input factor output faq faq instanc will notat oppos exist work gdnfs start general disjunct normal form gdnf csps consid chen grohe recal csp problem exampl correspond faq instanc comput case present list represent boolean con junctiv queri gdnf format present list represent note three thing ifm repres factor combinatori rectangl gdnf represent bring represent size dom dom big save iii effect faq problem solv decis diagram represent consid decis diagram represent chen grohe general well studi order binari decis diagram obdd consid csp problem decis diagram represent repres breviti consid repres list format three remark equival represent present connect obdd appar tupl corr spond sequenc label path length layer graph layer edg vertex layer vertex layer label easi gdnf represent convert decis diagram essenti size decis diagram represent exponenti smaller equival gdnf represent iii note effect faq problem solv order element factor databas olteanu vodni consid factor represent conjunct queri exampl recal consid instanc faq factor represent call represent repres recurs general case isi xsi partit base case factor form dom remark altern formul represent repres tree format leav tree singl attribut intern node union node correspond cartesian product node correspond natur semant attach node easi check gdnfs special case represent iii general represent consid call represent take represent remov repeat express altern tree represent mention short circuit tree repeat dag main contribut factor present factor represent output repres format prove tight bound output size touch compress output factor factor represent big faq instanc repres faq instanc boolean semir instanc determin recurs definit fast matrix vector multipl exampl dft marix rep resent factor correspond matrix succinct will faq formul describ generic talk matric quadrat matrix vector multi plicat algorithm algorithm thing chang represent elimin order provid detail claim recal aim comput assum integ general repres matrix factor integ rang assum hypergraph short hand project pick pick notat place recal solv problem specif instanti faq instanc dft matric recal dft matrix x·i exampl case hypergraph consid circul matrix column vector rest column cyclic shift previous column vector convolut note equival faq instanc fmp fmp fmp consid case matrix product matric simplic will consid case product squar matricesd order restrict remov focus special case goal framework uniform measur effici algorithm matrix vector multipl structur matric kroneck product matric kroneck product defin case hypergraph consid khatri rao product collect matric matric kharti rao product defin case hypergraph final consid traci singh product collect matric matric traci singh product defin case hypergraph conclud note semir field matric complex number faster matrix vector multipl wider famili matric interest semir paper explor connect represent spars tabl pgms summar main succinct represent factor pgms exampl correspond list represent definit second decis diagram represent spars tabl general list idea list input represent call evid shrink algebra decis diagram algebra decis diagram add introduc bahar succinct represent close decis diagram short bahar defin add consid basic properti analyz standard algorithm matrix multipl shortest path problem linear algebra input problem repres add will definit add repres singl factor bit larger domain element repres bit general multipl factor straightforward consid case add represent dag sink vertic outgo edg label valu sink node label variabl consist order variabl consist direct edg label sink node outgo edg label add factor comput input natur start root branch correspond continu recurs reach sink label recal sink label element add represent decis diagram represent present main differ decis diagram case under dag layer graph add represent layer graph vertic label layer edg connect layer toler blowup represent size convert add represent layer graph edg layer replac edg dummi path node label rest assum order edg label precis parallel edg label label final add layer connect sink distinct vertic layer sink layer dummi path appropri length function map vertex layer correspond sink label add layer form repres suitabl modif longer binari encod edg layer layer definit binari function list represent blowup factor origin add represent layer represen tation accept potenti way mitig blowup sink total convert layer graph addit blowup note construct sink lead dummi path length justifi term note edg layer dummi path label edg dummi path common suffix path length note distinct suffix justifi term addit factor advantag multipl blowup vertic compar altern encod add faq instanc essenti encod boolean function suggest add modulo label sink formal root outgo neighbor easi defin recurs final sink advantag represent blowup represent size size faq instanc size origin oppos earlier represent size faq instanc depend size gogat domingo messag pass algorithm work spars tabl add represent work focus exact comput work present algorithm approxim mix represent typic sql datalog queri relat repres list represent relat repres combinatori rectangl represent exampl queri inequ view collect rectangl rectangl point queri comparisonsx rectangl larger overlap miss detail factor oracl argu list represent definit satisfi condit queri assumpt product margin assumpt long choos appropri data structur support list answer queri data structur take time will assum represent depend order variabl will short requir need assum element factor store tree data structur respect will store tupl root node node level correspond variabl order variabl sort level closest root farthest consist children root node correspond label correspond assum children sort increas order valu child build tree recurs final leav correspond vector form concaten label uniqu path leaf root store will call leaf note case argu list represent satisfi condit queri assumpt assum wlog path tree label node path comput basic correspond figur lie sort list valu children binari search return desir result note queri respect order argu list represent satisfi product margin assumpt assum order perform product margin tree represent leav multipli valu leav parent pretend throw leav store comput product leaf construct throw leav margin pretend depth trie tree note queri respect order algorithm will case queri respect order tree algorithm input variabl order queri respect order essenti linear time construct tree represent factor simpl pre process step caveat project input factor pre process amount time detail analysi outsidein algorithm recurs outsidein consid simplest form express free variabl dom outsidein algorithm algorithm evalu express evalu inner express condit implement strategi will time mndn assum dom access factor point take time comput product factor point take time comput point wast point factor evalu condit factor ident will wast step obvious idea comput set valu factor recurs comput express basic recurs structur idea algorithm start recurs call recurs outsidein algorithm recurs outsidein requir requir dom requir hypergraph factor base case return return recurs outsidein queri return iter outsidein recurs outsidein algorithm implement difficult analyz factor oracl access special algorithm specif kind factor oracl turn satisfi applic consid condit queri assumpt assumpt turn recurs outsidein effici iter version algorithm iter version recurs outsidein turn interest implic short algorithm essenti backtrack search well strategi constraint program literatur year essenti leapfrog triejoin algorithm comput join implement commerci databas engin logicblox appli variat worst case optim join algorithm result note algorithm type queri factor oracl condit queri queri theorem fraction edg cover hypergraph vertic edg condit queri assumpt satisfi faq problem free variabl algorithm iter outsidein satisfi properti number condit queri factor oracl number oper perform iii number oper perform proof proof techniqu develop learn bolloba thomason prove theorem induct note iter outsidein specif implement algorithm iter outsidein requir hypergraph factor satisfi condit queri assumpt number addit ident semir symbol start search true ysk min max ysk advanc furthest min ysk break backtrack return recurs outsidein condit queri easier induct proof refer recurs structur recurs outsidein base case number condit queri iter outsidein basic dimension merg join algorithm set intersect number condit queri issu min inequ hold consid case discuss defin set valu factor vector fraction edg cover graph induct number condit queri algorithm issu consequ total number condit queri recurs call bound lder inequ total number condit queri comput bound base case total number condit queri algorithm issu claim theorem statement proof part iii virtual ident proof slight differ coeffici exampl base case number oper perform bound min number oper base case bound min oper level factor count corollari worst case optim join algorithm recurs outsidein worst case optim data complex natur join problem run time mnn logn logn fraction edg cover queri hypergraph proof join problem input relat variabl order consist variabl order chosen outsidein input relat index tree trie data structur take time mnn logn condit queri take time logn typic search tree oper essenti gather tupl iter outsidein case behav exact leapfrog triejoin algorithm join outsidein algorithm faq queri free variabl consid general queri faq problem free variabl algorithm exact accumul valu return accumul prefix guess observ nice thing runtim stay exact general case general algorithm algorithm note precis iter outsidein spars matrix multipl outsidein algorithm essenti simpl spars matrix multipli cation algorithm entri repres row col dictionari key format practic effici variat implement compress row compress column diagon skylin storag spirit remain algorithm outsidein faq free variabl requir hypergraph factor satisfi condit queri assumpt requir integ number initi constant function symbol start search true ysk min max ysk advanc furthest min ysk break initi entri backtrack return theorem restat theorem fraction edg cover hypergraph edg vertic condit queri assumpt satisfi algorithm outsidein appli faq satisfi properti number condit queri factor oracl number oper perform iii number oper perform key advantag outsidein algorithm depend variabl order long free variabl order advantag weak remark reader notic state analyz outsidein version faq will outsidein context faq instanc explain outsidein backtrack search year ago constraint pro gram probabilist graphic model method condit search main theoret object condit graph acycl main advantag backtrack search requir extra space main disadvantag redo subproblem multipl time cach dualiti backtrack search dynam program well constraint program literatur explor side dualiti dynam program side detail analysi insideout algorithm suggest insid algorithm elimin variabl start fromxn outsidein algorithm semir properti insid algorithm will graphic model constraint satisfact literatur famili algorithm call variabl elimin bucket elimin will add twist basic idea variabl elimin improv runtim spars input factor deal general faq runtim algorithm good basic variabl elimin class queri better basic insideout variabl elimin faq free variabl discuss insid algorithm describ basic idea variabl elimin will refer paper basic insideout previous will describ algorithm faq free variabl consid instanc faq problem hypergraph variabl order hypergraph evalu express idea variabl elimin comput humong sum rightmost variabl accumul comput factor common factor sum variabl elimin bottom dynam program write sum distribut factor crucial point notic comput intermedi factor instanc faq free variabl naiv time take comput factor mosto mnd domain size step instanc faq problem set factor hypergraph precis defin runtim algorithm hypergraph treewidth exist vertex order consequ modulo time take comput vertex order solv faq time well result probabilist model literatur insideout algorithm faq free variabl mention comput factor instanc faq problem free variabl key idea find speedup comput small base case instanc will sped variabl elimin strategi simpl fulli exploit power outsidein algorithm will outsidein algorithm comput factor analysi defin xun straightforward applic algorithm will lead number condit queri fraction edg cover hyperedg bound bad consid exampl faq queri fraction cover set number condit queri need elimin factor size suppos factor support incorpor factor margin cost condit queri cover support hyperedg drawback set larger will affect number condit queri comput intermedi factor key idea exploit potenti sparsiti input factor factor speedup comput increas support achiev goal defin definit project set defin project function dom essenti project entri project write factor comput xun intermedi factor xun chang oppos product factor xun save term comput key observ comput factor potenti wastag comput entri point xun turn factor will annihil well comput entri will kill hypergraph comput subqueri dens number condit queri outsidein algorithm comput intermedi factor bound fraction cover entir edg set algorithm implement idea formal algorithm insideout faq free variabl requir hypergraph factor requir index fix variabl order outsidein comput multiset edg return formal analyz algorithm theorem consequ theo rem theorem suppos hypergraph edg vertic condit queri assumpt satisfi fraction edg cover set insideout algorithm appli faq free variabl algorithm satisfi properti number condit queri factor oracl number oper perform iii number oper perform applic cost condit queri domin cost essen tialli best runtim bound select fraction edg cover minim express difficult grasp depend size intermedi factor comput execut algorithm sum product hyperedg character condit queri complex insideout depend input explain bound incompar note bound differ bound fact fraction edg cover theorem suppos hypergraph edg vertic condit queri assumpt satisfi fraction edg cover set insideout algorithm appli faq free variabl algorithm satisfi properti number condit queri factor oracl number oper perform iii number oper perform proof result easili algorithm comput intermedi factor project factor comput comput earlier intermedi factor condit vector equal condit vector equal impli number condit queri outsidein increas replac input impli runtim outsidein increas replac input continu algorithm maintain runtim bound induct will maintain runtim bound origin input factor exampl exampl show bound theorem theorem incompar consid queri variabl order chosen insideout suppos dom domain margin intermedi factor consid case input unspecifi factor valu implicit input case bound theorem number condit queri hyperedg appli bound theorem set second input case bound theorem clear better case bound proxi actual number queri algorithm surpris input proxi better term bound real number insideout faq faq queri free variabl insideout algorithm elimin residu queri hypergraph free variabl strategi describ elimin free variabl comput factor aggreg definit final outsidein residu queri factor algorithm implement strategi remark state version analysi theorem theorem state global version runtim depend input reader mind local version analog theorem theorem suppos hypergraph edg vertic condit queri assumpt satisfi fraction edg cover set output size list represent insideout algorithm appli faq free variabl algorithm satisfi properti number condit queri factor oracl number oper perform iii number oper perform algorithm insideout faq requir hypergraph factor set free variabl requir faq queri outsidein comput outsidein comput multiset edg return outsidein proof theorem theorem extra term number condit queri oper term associ final invoc outsidein report output analog output phase yannakaki algorithm runtim analysi denot size project list output tupl faq queri condqueri denot number condit queri outsidein appli will induct prove condqueri base case hold assum input factor hold condqueri eze inequ observ number queri outsidein increas constant factor add input factor condqueri eze inequ hold factor hold condqueri mfz miss detail exampl choos good variabl order describ coupl exampl express easi minim note avoid cumbersom notat index variabl state assumpt variabl order input express exampl variabl indic arrang differ natur order exampl matrix chain multipl consid matrix multipl problem reduct faq describ exampl problem set free variabl arbitrari permut problem state comput function xvn xvi xvi express find variabl order minim express variabl order fact easi set will size elimin process number hyperedg intersect fraction cover set bound bound term simpli usual rough estim cost multipli matrix matrix recurs find best variabl order minim exact find best sequenc matrix multipl minim multipl cost set textbook matrix chain multipl problem problem solv dynam program exampl matrix vector multipl structur matric dft matrix recal assum constant prime bound insideout run time factor logn runtim fft will framework special case messag pass interpret fft algorithm aji mceliec will pre process input factor run insideout defin note entir truth tabl represent comput time comput truth tabl time logn note factor pre comput comput faq instanc zmp consid variabl order note elimin note chang notat default note project insideout impli algorithm comput time execut time time mpm logn desir circul matrix note pick variabl order algorithm variabl order correspond comput comput comput comput compon wise product final comput note dft comput logn lead runtim log comput consid case kroneck product case consid variabl order correspond fraction cover set cover set final cover set runtim bound defer discuss khatri rao product case consid case consid algorithm variabl order correspond set note cover cover set cover set final cover set given runtim bound final consid case khatri rao product consid algorithm variabl order correspond set cover edg cover will trivial quadrat runtim case dft consid insideout algorithm argu runtim factor repres truth tabl represent algorithm time project factor project extra factor cover impli runtim desir variabl order faq free variabl faq free variabl easiest special case faq variabl order equival case variabl aggreg semir aggreg express simpl quantiti faqw faqw max case faqw exact induc fraction edg cover width definit lemma faqw fhtw comput tree decomposit optim fhtw hard approxim algorithm marx corollari essenti grohe marx appli wider context corollari grohe marx faq free variabl semir solv time fhtw time need report output assumpt fhtw constant applic earlier exampl visit natur join problem lot larger fhtw describ applic corollari theorem quantifi free solvabl time fhtw assumpt fhtw constant tractabl class conjunct queri bound fraction hypertre width result probabilist graphic model context find paper textbook prove note fhtw dtw input domain size fhtw arbitrarili smaller dtw spars input corollari partit function pgm partit function probabilist graphic model comput time fhtw assumpt fhtw constant natur join problem issu output report work insideout set semir formul natur join problem exampl analyz time take report output semir prove fhtw runtim insideout comput join tabl exampl insideout join set semir detail insideout work semir describ behavior familiar relat algebra notat problem input factor input relat intermedi factor materi intermedi relat project precis relat algebra project intermedi factor comput margin oper set semir perform set union brute forc tupl tun map point output space luckili store tree trie data structur attribut order travers trie attribut will access exact tupl visit tupl level trie trie respect variabl order implicit comput margin oper issu time take report output represent output set implicit set implicit represent output point comput spent faqw time total number output tupl lot larger assumpt inherit marx approxim algorithm order report output tupl will align seri semi join reduct disguis rough correspond second third phase yannakaki algorithm perform total amount time report output tupl logn number output tupl corollari relat join optim variabl order insideout algorithm solv natur join queri time fhtw output size optim order assum fhtw constant runtim fhtw discuss assum present output list represent option discuss variabl order faq block semir aggreg highlight subtl problem variabl aggr gate consid instanc faq problem free variabl input faq queri block variabl aggreg block variabl semir aggreg second block variabl function semir aggreg exampl reduc faq instanc form max note function commut proposit preced poset defin poset call preced poset variabl pair connect compon linex denot set linear extens preced poset linex sound proposit linex evo suppos ident domain queri block variabl aggreg written linex evo proof suppos connect compon linear extens poset variabl list variabl sound linex multipl connect compon express factor product connect compon factor product faq express variabl connect compon case connect compon prove linex sound will prove general result state equival variabl order faqw linex sens linex complet linex find minim faqw will faqw min linex faqw star join queri acycl fhtw easi instanc relat factor output size larg consid case explain preced poset linear extens help find good variabl order case free variabl express simpli faqw longer clear faqw fhtw simpl properti observ straightaway faqw fhtw faqw fhtw faq width faqw arbitrarili fhtw exampl consid star graph edg case fhtw graph acycl equival variabl order vertex faqw equival variabl order relat star size prove main result analyz faq width faqw notion width defin durant mengel deal problem durant mengel introduc notion star size hypergraph character complex count solut conjunct queri set hyperedg set vertic independ number maximum size set satisfi condit vertic belong hyperedg definit star size hypergraph subset vertic connect compon vertex set edg set defin star size denot maximum independ number connect compon max connect compon note definit edg member edg origin edg relat faqw simpl technic lemma lemma tree decomposit hypergraph fraction hypertre width arbitrari set vertic exist tree decomposit fraction hypertre width satisfi condit vertex set connect compon bag intersect proof modifi gradual satisfi requir condit increas bag tree decomposit arbitrari root connect compon desir condit violat bag farthest root intersect child intersect set split bag remov connect parent root edg children ofb intersect connect children intersect connect arbitrarili straightforward verifi tree decomposit theorem faq queri defin hypergraph subset vertic faqw fhtw class hypergraph set faqw bound unbound proof prove exist equival vertex order faqw fhtw construct tree decomposit fraction hypertre width fhtw exist gyo elimin order vertic elimin tree decomposit construct tree decomposit fraction hypertre width equal fhtw lemma assum bag intersect set connect compon bag intersect call bag adapt argument bag amend defin definit step tree decomposit restrict collect bag form connect subtre amend connect compon construct tree decomposit fraction hypertre width fhtw fhtw subgraph fhtw supergraph bag set final construct tree decomposit connect tree decomposit tree decomposit connect arbitrari bag bag bag claim claim tree decomposit claim fraction hypertre width fhtw assum claim hold complet proof theorem construct prefix variabl order show elimin vertic vertex gyo elimin procedur connect compon vertic resid subtre gyo elimin procedur subtre root node connect center tree process vertic elimin neighbor induct elimin connect compon theorem prove prove claim hyperedg complet contain subset bag contain bag final tree decomposit contain bag origin tree decomposit contain bag amend bag set verifi run intersect properti rip vertex connect compon rip hold amend bag rip properti hold tree decomposit final prove claim crucial point notic bag amend bag bag connect compon lemma lemma durand mengel set cover bag amend bag fhtw fhtw fhtw fhtw amend bag fraction cover quantiti complet proof claim prove theorem consid hypergraph graph faqw approxim faqw prove lowerbound faqw lead approxim algorithm comput faqw approxim algorithm fhtw blackbox recal consid faq queri special form idea develop will lead approxim algorithm faqw general faq queri case hypergraph subset vertic connect compon set definit defin hypergraph connect compon lemma connect compon faqw fhtw faqw note hypergraph faqw fhtw proof connect compon easi faqw fhtw fhtw prefix variabl order faqw faqw variabl order exist connect compon smallest integ set precis reason chose notat note time elimin vertex insert hyperedg interconnect neighbor hypergraph hypergraph sequenc time reach neighbor connect set faqw faqw remain prove faqw fhtw argument connect compon set hyperedg precis graph defin faqw min linex max min linex max min max fhtw variabl order variabl oppos variabl order theorem faq queri form hypergraph suppos approxim algorithm hypergraph output tree decomposit fraction hypertre width fhtw time fhtw decreas function time faqw comput equival vertex order faqw faqw faqw proof blackbox approxim algorithm construct tree decomposit connect compon construct tree decomposit recal defin form tree decomposit connect tree decomposit add set bag tree decomposit arbitrarili connect node tree bag tree lemma fact decreas cover bag tree fraction cover number fhtw faqw cover bag tree fraction cover number fhtw faqw faqw final run gyo elimin procedur combin tree decomposit make sure variabl elimin appli theorem fraction hypertre width approxim algorithm marx corollari corollari faq queri form suppos faqw constant polynomi time comput equival vertex order faqw faqw solv faq problem form time corollari assum faqw constant problem solvabl time tractabl class conjunct queri faqw bound note theorem corollari impli result durant mengel solvabl time npoli fhtw observ class graph faqw result strict stronger assumpt inherit marx approxim algorithm reduct semir semir practic encount queri format faq aggreg product semir aggreg suppos comput function dom defin wlog product semir aggreg elimin describ situat find map commut semir extend domain extend version fit domain map exist transfer input factor carri calcul semir transfer origin domain order bypass deal semir formal suppos exist function function satisfi condit condit met exampl variabl elimin place commut semir factor condit met exampl appli step factor will remain transform domain factor will well transfer origin domain product comput denot ident denot ident natur faq algorithm reli entri order save comput outsidein insideout section desir satisfi properti remark notic condit impli assum practic exampl clarifi abstract idea exampl exampl averag number avg denot averag number convent number zero averag avg avg semir avg associ avg avg avg avg extend commut semir defin defin defin hard verifi condit met exampl notic exampl uniqu quantif boolean variabl uniqu denot truth uniqu true uniqu true problem uniqu cumul true fals exampl uniqu true true true fals uniqu uniqu true true true true fact binari uniqu reduc logic xor ari uniqu correspond xor commut semir true fals xor solv faq extend domain defin commut semir min min defin true fals true fals defin true fals notic condit met exampl notic fals true exampl max max semir max ident extend domain nan nan special symbol properti max nan max nan min nan min nan nan nan nan max ident nan product ident ident max semir distribut max max max extend commut semir nan nan min max min max notic nan nan defin defin exampl meet condit composit faq instanc consid fraction hypertre width chang compos faq instanc precis consid problem hypergraph hypergraph denot collect hypergraph consid compos hypergraph set node edg set fhtw behav respect fhtw fhtw term width hypergraph simpl observ proposit hypergraph correspond collect hypergraph fhtw fhtw max proof tree decomposit width fhtw easi check valid tree decomposit claim bag max complet proof final argu claim bag optim edg cover edg yee optim fraction edg cover easi check valid edg cover edg defin claim note max yee complet proof remark note proof better bound state proposit specif hypergraph chose uniform bound hypergraph eleg natur wonder improv bound proposit worst case natur wonder prove bound form fhtw fhtw max fhtw argu bound achiev lemma exist hypergraph famili correspond hyerpgraph unbound gap fhtw fhtw max fhtw proof hyperedg note essenti star graph fhtw graph star graph center leav note fhtw note subgraph subgraph form cliqu edg spoke verifi fhtw complet proof question prove upper bound fhtw note argument proof proposit wast tree decomposit represent hypergraph describ simpl algorithm advantag choic optim width tree decomposit proof proposit consid arbitrari bag tree decomposit edg optim width tree decomposit root tree arbitrari bag build tree bag creat bag edg add hang rest tree argument proof proposit argu bag fhtw max fhtw defin vertex valid tree decomposit satisfi run intersect properti obvious greedi patchup phase final tree will modifi bag defin map vertex consid forest vertic bag add set vertic forest graph tree initi note patchup phase valid tree decomposit hard verifi tree decomposit bound lemma fhtw max fhtw max fhtw max finish remark worst case algorithm will result reduc case proof proposit lemma hard instanc proof lemma translat bound essenti tight will smarter choic root 