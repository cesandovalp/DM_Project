slow network time redesign vision carsten binnig andrew crotti alex galakato tim kraska erfan zamanian brown univers firstnam lastnam abstract generat high perform rdma capabl network requir fundament rethink design modern distribut memori dbmss system common design assumpt net work bottleneck avoid assumpt longer hold true finiband fdr bandwidth transfer data network ballpark bandwidth memori channel bandwidth increas edr standard increas advanc rdma transfer latenc improv fast paper argu distribut databas design capabl full vantag fast network architectur second discuss initi prototyp implemen tation architectur oltp olap markabl perform improv exist design introduct argu current trend high perform remot direct memori access rdma capabl network infiniband fdr edr will requir complet design modern distribut memori dbmss built assumpt network main bottl neck consequ system aim avoid commu nicat machin techniqu local awar partit scheme semi reduct join complic preprocess step nascent modern network technolog sumption network bottleneck longer hold today infiniband fdr bandwidth transfer data network ballpark bandwidth memori channel memori bandwidth current rang channel infiniband bandwidth fdr edr nic port fig ure futur infiniband standard hdr well ndr promis bandwidth exceed band width local memori bus modern system typic support memori channel socket exampl machin memori channel total aggr gate memori bandwidth dual port fdr nic provid rough bandwidth surpris cpu memori bandwidth half duplex infiniband pcie full duplex nic satur memori bandwidth read write workload figur theoret left assum pcie bus bottleneck current dual socket xeon board typic lane socket achiev total bandwidth qdr fdr fdr edr memori specif experi figur memori network bandwidth spec ific dual socket xeon server fdr nic socket measur total memori network throughput dual socket machin memori fdr nic socket total microbenchmark network transfer limit total memori bandwidth network bandwidth microbenchmark measur infiniband expect ethernet network will advanc factor major advanc rdma network latenc improv experi infiniband fdr system requir transfer data rdma compar cpu read amount data memori virtual differ access time bandwidth start domin transfer time argu network latenc will fast memori latenc cach memori local will play role small data request hash tabl system perform longer domin network transfer time time smaller deploy infiniband afford exampl small cluster server xeon cpus chine memori port infini band fdr nic machin cost rough switch nic configur bandwidth send data network close bandwidth memori channel network memori memori price continu drop make feasibl larg data set entir memori machin remov disk bottleneck creat bal anc system wrong assum fast network chang cluster numa architectur rdma base memori access pattern local memori access numa architectur latenc tween machin higher access singl random byte numa system hardwar embed coher mechan ensur data consist numa architectur support rdma cluster rdma capabl network hybrid share memori messag pass system share memori system address space ist pure messag pass system data direct access rdma consequ critic entir distribut dbms architectur full advantag generat network technolog exampl fast network longer obvious avoid distribut transact benefici sim ilar distribut storag manag distribut execu tion algorithm join longer design avoid communic cost consid multi core architectur cach effect care distribut environ attempt leverag rdma databas exist work fulli recogn gen erat network creat architectur point paper contribut microbenchmark assess perform characterist latest infiniband stan dard fdr altern architectur distribut memori dbms fast network introduc novel network attach memori nam architectur common wisdom phase commit scale longer hold true rdma enabl network outlin oltp workload advantag network nam architectur analyz perform distribut olap erat join aggreg propos gorithm nam architectur background make detail case distribut dbms chitectur fundament chang advantag generat network technolog provid background micro benchmark showcas characterist infiniband rdma infiniband rdma infiniband expens high band width low latenc network common larg high perform comput environ infiniband cost competit ethernet viabl altern enterpris cluster communic stack infiniband offer network communic stack infiniband ipoib mote direct memori access rdma ipoib implement classic tcp stack infiniband allow exist socket base applic modif ethernet base network data copi appli cation buffer kernel process buffer transmit packet network provid ing easi migrat path ethernet infiniband experi ipoib fulli leverag network hand rdma verb api enabl data transfer process capabl rdma nic rnic verb process ing execut rnic involv essenti achiev low latenc rdma verb communic model side side side rdma verb write read atom oper execut involv cpu remot machin rdma write read oper allow machin write read data remot memori machin atom oper fetch add compar swap allow remot memori modifi atom side verb send ceiv enabl applic implement rpc base communic pattern resembl socket api categori side oper involv cpu remot machin well rdma detail rdma connect implement ing queue pair send receiv queue applic creat queue pair client server rnic handl state queue pair communic client creat work queue element wqe verb paramet remot memori locat client put wqe send queue inform local rnic program pio process wqe wqes signal unsign signal local rnic push complet event complet queue dma write wqe process remot side side verb wqes handl remot rnic interrupt remot cpu dma oper remot side call server caveat side oper memori region reg ister local remot rnic access dma oper rnic store virtual phys ical map regist region side verb server regist memori region receiv request receiv queue handl send request client queue pair process wqes fifo order typic pattern reduc overhead client side hide latenc select signal send receiv queue length client send wqes unsign wqe signal complet event acknowledg messag server wqe arriv client implicit previous wqes process comput communic client effici overlap expens synchron mechan interest aspect rdma oper rnic interfer oper cpu data concurr access intel cpus intel sandi bridg provid featur call data direct ddio ddio dma execut rnic read write data remot memori place data direct cpu cach memori address resid cach guarante coher system cach flush invalid dma oper ation guarante coher final coher sys tem leav coher problem softwar fect consid design distribut rdma base algorithm note concern coher enc cach memori coher tween data copi left softwar messag size ipoeth ipoib rdma verb throughput messag size ipoeth ipoib rdma rdma latenc figur network throughput latenc micro benchmark present microbenchmark compar throughput latenc tcp stack ethernet ipoeth ipoib rdma sult inform suggest redesign distribut dbmss infiniband experiment setup micro benchmark machin intel xeon proce sor ram machin equip mellanox connect fdr dualport rnic port rnic bandwidth full duplex addit machin eth ernet nic port connect ethernet switch machin ubuntu server ofe driver rnic experi port rnic better compar infiniband ethernet sult order isol low level network properti microbenchmark execut singl thread mode throughput latenc figur experi ment vari messag size simul characterist workload oltp olap measur throughput latenc ipoeth ipoib rdma send receiv write read addit measur rdma atom oper support maxim messag size latenc throughput read figur rdma verb satur infiniband network bandwidth messag size greater ipoib achiev maximum throughput despit infiniband hardwar rdma latenc messag rtt ipoib higher rdma fact small messag size latenc ipoib closer tenci ethernet network ipoeth exam ple messag size latenc ipoib ipoeth rdma write take tcp stack ipoib high cpu overhead messag small messag will figur larger messag size latenc ipoib closer rdma factor higher rdma exam ple messag latenc ipoib rdma interest result rdma write send messag size rdma read write send payload inlin pio avoid subsequ dma read cpu overhead measur overhead cpu cycl messag communic stack client server vari messag size messag size ipoeth ipoib rdma verb client messag size ipoeth ipoib rdma rdma server figur cpu overhead network oper previous experi figur rdma constant overhead client server side independ mes sage size reason cost regist wqe rnic independ messag size actual data transfer execut rnic act processor handl wqe client side overhead cycl independ rdma verb cpu overhead atom oper tualli expect server side receiv verb cpu overhead verb side read write atom oper overhead server side overhead ipoib rdma fact overhead classi cal ethernet base tcp stack iboeth major dif ferenc rdma ipoeth ipoib mes sage overhead grow linear messag size messag size exceed tcp window size default ipoeth ipoib experi interest small messag size messag overhead ipoib higher ipoeth exampl messag cycl ipoeth cycl ipoib rethink architectur discuss tradit architec ture distribut memori dbmss optim real workload novel alterna tive fast rdma enabl network discuss challeng architectur architectur fast network tradit share architectur figur classic share chitectur distribut memori databas slow network databas state partit main memori ram multipl node node direct access databas partit locat cal ram order implement distribut control flow data flow node communic socket base send receiv oper effici distribut queri transact process quir main goal maxim data local workload appli local awar partit scheme leverag communic avoid strate gie semi join ideal communic node real workload network communic entir avoid larg perform penalti slow network exampl resort best techniqu partit tabl avoid expens distribut join oper distribut socket send receiv ram dbms ram dbms ram dbms ram dbms pute storag server ipoeth socket send rcv cpu cpu cpu cpu ram ram ram ram pute storag server ipoib rdma send rcv cpu cpu cpu cpu pute storag server ram ram ram ram rdma rdma pute server storag server ram ram ram rdma atom rdma send rcv cpu cpu cpu cpu ram rdma send rcv ram ram ram ram cpu cpucpu cpu nam rdma figur memori distribut architectur transact caus high communic cost fur thermor workload chang time harder find good static partit scheme dynam strategi requir move huge amount data restrict bandwidth actual work result network limit throughput system scalabl machin bottleneck network share architectur ipoib easi migrat tradit share architectur fast network infiniband sim pli ipoib figur advantag architectur requir chang databas system benefit extra bandwidth data flow oper send larg messag data partit will benefit tremend chang tion ipoib fulli leverag network surpris type oper upgrad network ipoib decreas perform true control flow oper requir send small messag figur cpu overhead ipoib overhead ipoeth small messag fact will small differ negat impact perform distribut transact process distribut share memori architectur better leverag network advantag rdma rdma allow system fulli util bandwidth figur reduc network latenc cpu overhead figur chang applic socket base messag pass interfac rdma verb trivial possibl treat cluster share memori system figur type communic pattern messag pass rdma base send receiv verb remot direct memori access side rdma read write verb state cach coher protocol machin care declar sharabl memori region priori connect queue pair care neg ativ perform addit memori access rdma share memori system local memori access copi data conceptu move data main memori cach cpu mote memori access creat fulli independ copi rang implic garbag collect cach buffer manag consist protocol order achiev appear share memori system softwar stack hide differ enc provid real distribut share memori space attempt creat distribut share memori architectur rdma singl abstract local remot mem ori wrong approach databas full control memori manag vir tual memori manag databas system true share memori rdma ambit valid assump tion experi commer cial offer ibm mainfram oltp comparison implement simplifi version chitectur essenti architectur place socket communic side rdma verb send receiv omit architectur entir olap comparison side rdma verb addit synchron overhead system rdma receiv issu strict rdma send arriv rnic simpli slow execut olap algorithm compar nam altern network attach memori architectur base previous consider envis type architectur refer network attach mem ori nam short figur nam architectur comput storag logic decoupl storag server provid share distribut memori pool access comput node storag node awar databas specif oper join consist protocol implement comput node logic separ help control complex system awar type main mem ori storag node care issu garbag collect data reorgan metadata man agement find appropri remot memori address data note physic locat storag node comput node chine improv perform contrast previous architectur system gain control data copi copi synchron nam architectur advantag import storag node scale independ comput node nam architectur effici handl data imbal node access remot partit distribut data separ pute storag exist sys tem extend key interfac storag node focus cloud built scratch leverag high perfor manc network infiniband argu storag server nam architectur expos terfac support fine grain byte level memori access preserv under hardwar featur exampl fine address abil allow effici implement concurr con trol futur plan advantag fact messag arriv order queue pair challeng opportun move share share memori system nam architectur requir redesign entir distribut databas architectur storag manag queri process transact manag ment queri compil metadata manag transact queri process distribut queri process typic implement data parallel execut scheme leverag partit oper data network partit oper typic pay attent effici leverag cpu cach individu machin cluster parallel cach awar algorithm queri oper rdma requir queri optim techniqu distribut memori databas system high band width network mention exist distribut databas system assum network domin bottleneck exist cost model distribut queri optim consid network cost cost factor fast network balanc system optim consid fac tor bottleneck shift compon cpu memori bandwidth addit nam architectur requir load balanc scheme implement idea suggest work steal singl node machin exam ple queri oper access central data structur work queue side rdma verb con tain pointer small portion data process queri node idl pull data work queue distribut load balanc scheme effici implement decentr manner compar exist distribut load balanc scheme avoid singl bottleneck allow greater scal abil avoid straggler storag manag latenc side rdma verb read write access remot databas partit higher local memori cess optim storag layer distribut databas minim latenc idea direct develop complex storag access oper combin storag primit order effect minim network roundtrip comput storag node contrast exist storag manag offer simpl read write opera tion exampl complex stor age oper distribut protocol combin lock valid commit phase singl rdma atom oper complex oper memori layout care develop current prototyp combin lock informa tion singl memori locat modern rnic connect pro provid programm devic fpga rnic idea reduc storag access latenc plement complex storag oper easili map exist rdma verb hardwar exampl write data direct remot hash tabl storag node implement complet rnic singl roundtrip involv cpus storag node allow distribut join oper final novel techniqu devel ope allow effici pre fetch rdma idea storag manag issu rdma request rdma read memori region access rnic process asynchron background rdma storag manag poll complet queue request remot memori address execut check remot memori prefetch straightforward sequenti scan tabl partit structur reli random access requir care design metadata manag queri compil typ ical distribut dbms architectur central node respons metadata manag queri compil classic architectur central node fail bottleneck heavi load nam architectur node access central data structur remot memori access node read updat metadata node compil queri coordin execut queri compil metadata manag exist nei ther bottleneck singl point failur case oltp tradit wisdom distribut transact phase commit scale case share architectur slow network novel protocol nam architectur full advantag network theoreti calli remov scalabl limit scale discuss factor hinder scalabil iti distribut transact process slow network modern dbmss employ snapshot isol impl ment concurr control isol promis superior queri perform compar lock base alterna tive discuss base pro tocol general find general tradit protocol dissect figur tradit simplifi protocol ing phase commit general guarante assum data partit node share architectur consid read phase assum client applic server read record issu full transact older read timestamp rid guarante consi tent view data client finish read record send commit request transact man ager messag figur even distribut load node step request commit timestamp cid round trip messag paper assum global order timestamp exter nal servic suggest timestamp servic implement orthogon simpli assum timestamp servic potenti bottleneck ing approach spanner epoch base receiv cid prepar node involv transact prepar messag resourc manag round trip messag check record partit modifi read transact lock tupl prevent updat transact valid requir check record write set higher cid rid prepar involv rms tran action commit send commit messag rms round trip messag instal ver sion commit timestamp releas lock order readabl transact wait second phase complet messag inform timestamp servic version instal messag remaind assum timestamp ser vice implement logic oracl rac ensur properti client request rid timestamp servic return largest commit timestamp final notifi client outcom transact messag protocol requir messag delay outlin sequenti order messag parallel commit time stamp messag request parallel prepar ing resourc manag messag commit timestamp requir phase mes sage simplif assum blind write allow transact read data item correspond rid work set attempt commit client inform messag parallel phase messag reduc number messag delay client inform outcom messag round trip messag transact visibl messag round trip messag compar central dbms messag delay requir increas execut time transat describ protocol tradit pro tocol requir timestamp servic tradit protocol consist prepar commit abort phase requir messag delay total includ client notif discus sion specif general tradit protocol well increas content likelihood increas transact latenc messag delay increas chanc content abort outlin averag latenc small messag ethernet rough actual work transact rang today disk network involv short run transact instanc report singl partit tran action ancient xeon processor client timestamp servic tcp lock data tcp lock data lock data tcp tradit client timestamp servic rsi protocol figur distribut commit protocol domin factor latenc network amplifi bottleneck order model content rate assum queue estim number wait conflict transact record rival rate model increas transact process time refer servic time yield servic capac decreas creas conflict likelihood transact rare consist singl record record likelihood con flict increas employ simplifi assumpt access rate record independ intuit likelihood conflict increas true consid read phase easi relat differ sever record read add fix cost addit redesign commit protocol rdma verb decreas conflict likelihood latenc lower small messag fig ure work conflict avoid commut updat fact newer consist protocol advantag block commut updat preserv limit constraint stock fall high avail central ordin result increas conflict likelihood longer argument dis tribut transact scale cpu overhead increas likelihood conflict main reason distribut transact general doom scalabl increas number server node number network messag increas central system dbms handl messag transact quest respons client assum client scale independ server consid server handl receiv messag send messag central case rdma receiv sender spend cpu cycl messag distribut scenario figur server involv rms figur transact requiresmr andm nmessag assum send reciev expens cidn recordn cid record cid record bit bit bit bit bit bit bit oldaddr tabl potenti data structur rdma enabl snapshot isol singl central case assum transact access server assum server core execut cyclesc second messag cost cyclesm optimist upper bound number transact second trxu cyclesc cyclesm modern node cluster core cpus assum cycl messag figur lead trx second terest increas cluster node hardwar configur maximum throughput cours envelop calcul messag overhead essenti consum cpu power make system inher unscal workload partit messag batch help increas batch size process time messag increas redesign protocol data structur cpu overhead will remain domin bottleneck instanc figur figur ipoib implement fdr network help creas bandwidth reduc latenc compar ipoeth reduc cpu overhead case exacerb situat discuss tradit wisdom distribut transact pecial scale true distribut transac tion increas content rate ond protocol consid messag head simpl impact perform simpli check messag arriv contain remain domin factor increas cpu load handl messag network bandwidth assum ethernet server averag record size transac tion updat averag three record read written transact limit total throughput transact second result complic partit scheme propos avoid distribut transact pos sibl solut impos set challeng develop workload social graph data notori hard partit rsi rdma base protocol fast high bandwidth network infiniband lift limit factor cpu head network bandwidth experi scalabl sever limit chang techniqu redesign distribut dbmss rdma base architectur novel rdma base pro tocol call rsi design network attach memori nam architectur implement tradit protocol discuss side rdma verb tcp socket simplifi share memori architectur implement clude experiment evalu focus novel rsi protocol core rsi move transact process logic client comput node server storag node dumb main purpos share main memori client client plement transact process logic side rdma oper client transact man ager allow comput node client access data storag node server design optim direct memori access cloud servic move logic client advantag import scale easier cpu intens oper client easi add throughput system limit number rdma request rnic infiniband switch han dle rnic machin architectur high scalabl dition load balanc easier transact execut node independ data local latenc reduc client fetch data direct server involv assum read happen transact assign read timestamp rid client act contact time tamp servic receiv commit timestamp cid implement pre assign timestamp client ing bitvector bit bit vector belong client repres timestamp client repres timestamp posit belong client timestamp client switch bit scheme highest commit timestamp deter mine find highest consecut bit vector bit set client allow client wrap start note wrap requir addit bookkeep avoid bit overwritten simpl scheme allow client timestamp synchron bottleneck implicit assum client progress rough rate assumpt hold strag gler long run transact addit techniqu requir skip bit scope paper note ensur fair comparison techniqu tradit protocol implement experi provid benefit case client execut phase check version chang read valid phase oper quir lock record prevent transact chang valid transact fulli commit tradit design server respons lock valid version order oper effici cpu propos storag layout allow client rsi rdma trad ipoib trad ipoeth figur rsi rect valid lock singl rdma oper tabl key idea store version fix size record bit length fix size slot ted memori record call record block global dictionari dht exact determin memori locat record cluster will explain global dictionari handl insert subsect assum moment ter read phase memori locat slot version record block hold depend updat read pattern heavili influenc perform moment assum record max record size slot record version read retriev slot figur transfer rough differ latenc thre fore make smaller essenti benefit simplic current implement abort transact requir older snapshot structur slot memori organ bit lock lock lock bit latest commit cid commit record payload record second latest cid payload record data structur client direct valid lock record write compar swap oper bit round trip messag exampl assum client rid read record memori address row tabl instal version cid simpl rdma compar swap oper bit record address test set acquir lock record chang read transact fail oper valid prepar resourc updat singl round trip techniqu prepar involv record insert succeed compar swap succeed intend updat transact transact guarante suc cess instal version check record block free slot insert version head block shift version left write entir record block signal write memori locat server messag final write success inform timestamp servic outcom messag tradit protocol messag unsign rdma enabl protocol storag layout requir round trip messag signal messag involv cpu mal oper case experi will design enabl dimens scalabl experiment evalu evalu algorithm implement tradi tional protocol figur share archi tectur ipoeth figur ipoib figur implement simplifi variant share memori architectur figur replac tcp socket side rdma verb requir modifiy memori manag adjust tradit implement local time stamp server remot servic tradi tional implement advantag final rsi pro tocol implement nam architectur figur extern timestamp servic describ earlier evalu protocol node cluster configur machin execut client three nam storag server timestamp server transact manag tradit measur protocol simpl extrem write heavi workload checkout transact tpc benchmark transact read product creat order orderlin record updat stock product base data creat product record rough avoid content data even distribut machin client wait transact finish issu transact figur scalabl tradit protocol rsi protocol number client thread vari tradit protocol ipoib worst scalabl transact second ipoeth achiev transact second ipoib implement perform wors effici tcp implement ipoib play role small messag contrast rsi protocol achiev stun distribut transact second share memori architectur side rdma verb achiev throughput transact second rsi proto col overlap rsi log scale notic side rdma verb implement stop scale client throughput decreas transact second client rsi impl mentat scale linear client reason decreas perform transac tion manag major bottleneck rsi implement longer scale linear client dual port fdr rnic machin total bandwidth three record transact achiev oret maximum throughput transact second transact read write greater client network satur specul distribut transact longer scalabl limit network band width match memori bandwidth complex partit scheme obsolet sce nario note reduc latenc manag hot item case olap order motiv redesign distribut dbmss olap workload discuss exist distribut algorithm design share archi tectur slow network optim fast rdma capabl network novel rdma optim oper nam architectur requir funda mental redesign central compon memori man agement optim discuss paper focus distribut join aggreg predomin oper olap workload exist distribut olap oper network intens oper olap workload distribut join distribut join algorithm three compon local join algorithm par tition scheme option reduct techniqu three compon combin way exampl hash sort merg join local join algorithm partit scheme rang static dynam hash partit simi lar techniqu reduc partit cost propos promin semi join reduc tion bloom filter explain common parti tion techniqu distribut join algorithm share architectur grace hash join ghj detail expand distribut join algorithm addit semi join reduct bloom filter reduc communic develop simpl cost model argu algorithm case optim memori databas fast rdma capabl network rest tion assum skew data partit node hold data optim grace hash join ghj execut distribut join phase phase partit phase ghj scan input lation hash partit join key relat join second phase local node cost ghj tghj sum runtim partit phase tpart local join phase tjoin consid static pre partit cost repartit split cost partit join relat cost repartit split cost read data sender transfer data network materi data receiv assum cost send network tnet cnet scan memori tmem cmem number tupl width tupl byte cnet cmem cost access byte network memori repartit cost express tpart tmem read sender tnet net tmem write receiv cmem cnet cmem cmem cnet partit cost note ignor cpu cost assum limit factor memori network access cpu rea sonabl simpl hash base partit scheme local join algorithm ghj fastest local memori join algorithm parallel radix join radix join proceed phase phase radix join scan input relat partit relat local cach size block multipl pass data softwar manag buffer relat effici partit pass partit data radix join scan relat join cach size block exist work phase radix join memori bandwidth bound estim total cost local radix join tjoin tmem tmem radix phase tmem tmem radix phase cmem total runtim ghj tghj tghj tpart tpart tjoin cmem cnet semi reduct bloom filter final cost equat previous ghj requir rough time memori access network transfer distribut memori dbmss network cost typic domin runtim join state art join algorithm track join neo join reduc network traffic cost intens comput neo join linear solver multipl communi cation round trip partit data optim network traffic focus tradit approach semi join reduct bloom filter core idea semi join reduct send tupl input rela tion join partner relat algorithm creat bloom filter join key copi node hold partit node bloom filter filter tupl guarante join partner bloom filter match join key cost creat includ scan data tmem transmiss network tnet tbloom tmem creat reduc tnet ship reduc size bloom filter small tbloom disregard assum sel select bloom filter relat includ error rate bloom filter total cost ghj semi join reduct bloom filter tghj bloom tbloom tbloom creat bloom filter tpart selr tpart sel reduc partit cost tjoin selr selr reduc join cost equat model cost creat bloom filter reduc partit join cost assum select join ghj ghj red ipoeth select join ghj ghj red rdma ghj rrj ipoib rdma figur cost analysi join infiniband select relat sel selr sel lead simplifi total cost tjoin bloom cmem sel cmem sel cnet discuss figur plot mention cost clas sical distribut join join select slow fast network network cost cnet byte ideal latenc byte mes sage size bloom filter assum error fals posit select select data tabl size tupl width main memori assum cost cmem access singl byte relat relationship constant ccpu cmem cnet absolut cost access byte main memori ipoeth network demonstr semi join reduct ghj red pay fig ure fast network trade off chang optim exist distribut join gorithm figur exampl ipoib network cost longer domin cost factor bloom filter select sel graph bloom filter error semi join duction pay reduct join ship cost ghj ghj red ipoib full advantag network capabl infiniband outlin join algorithm direct advantag infiniband rdma describ join algorithm leverag rdma base nam architectur present redesign ghj side rdma verb write direct remot memori stor age node partit call join rdma ghj main goal partit phase rdma ghj nam architectur enabl data parallel execut join phase comput node input tabl partit phase pre fetch storag node comput node write output partit storag node rdma ghj leverag select signal overlap putat communic cpu sender activ partit phase cost partit reduc tpart tmem tmem remot data transfer write execut background rnic select signal final join phase pre fetch parti tion tabl lead reduc join cost render semi join reduct benefici pare classic ghj figur select bloom filter ghj ipoeth ghj red ipoeth ghj ipoib ghj red ipoib rdma ghj rrj join distinct group dist agg ipoeth dist agg ipoib rdma agg aggreg figur classic rdma optim optim sound trivial quir redesign join buffer manag work effici nam architectur server reserv buffer output par tition storag server ensur data written phase partit ing phase design comput node execut partit phase scale depend storag node describ tech niqu detail scope paper step optim partit phase ghj leverag rdma pre viousli describ partit phase radix join optim block size cach local partit phase ghj adjust distribut join algorithm ghj propos extend memori radix join leverag rdma direct refer algorithm rrj rdma radix join algorithm present algorithm join optim share architectur rrj algorithm optim nam architectur enabl effici scale addit comput server rdma base join algorithm rrj algorithm remot softwar manag buffer partit phase softwar manag buffer singl node radix join present achiev high fan radix partit phase avoid mul tipl pass rrj adopt idea work optim nam architectur rdma appli chang buffer copi background storag node select signal write buffer size optim leverag full bandwidth rdma micro benchmark messag satur infiniband bandwidth fan remot radix partit phase select buffer fit cach cpu note rrj algorithm straight forward extens radix join exampl current implement manual alloc rdma enabl mem ori buffer storag node redesign dis tribut dbms major challeng manag global mem ori alloc effici impos perform penalti critic path distribut join algorithm assum network cost memori cost partit pass suffici softwar manag buffer rrj algorithm total expect cost trrj cmem cost analysi algorithm rdma ghj rrj figur demonstr popular semi join reduct dis tribut join pay corner case low join select rdma base aggreg algorithm primari concern distribut aggreg share architectur slow network avoid net work communic tradit distribut aggr gation oper hierarch scheme phase node individu execut aggreg local data partit second phase intermedi ate aggreg merg global union post aggreg execut union scheme suffer problem data skew individu node phase longer node finish high number distinct group key lead high execut cost global union post aggreg order tackl issu novel rdma optim aggreg oper implement dis tribut version modern memori aggreg opera tor nam architectur phase oper cach size hash tabl pre aggreg data local core thread hash tabl full flush overflow partit rdma variant oper direct copi data background remot partit pre aggreg activ second phase individu partit post aggreg parallel comput final gregat oper fine grain parallel phase partit worker thread second phase robust data skew vari number distinct group key experiment evalu implement distribut join aggreg variant discuss execut server thread node node experi host comput storag node configur describ join workload variant adopt distribut set node generat partit size tupl width generat data set select bloom filter cover reduc network cost figur total runtim ghj ghj red ethernet ipoeth infiniband ipoib well rdma variant rdma ghj rrj infiniband rdma thread node rrj algorithm outperform state art join algorithm semi join select cost analysi vari cach effect cpu effect play crucial role rdma variant second experi analyz perform rdma aggreg rdma agg compar classic hierarch distribut aggreg dist agg classic aggreg algorithm scribe local aggreg oper workload tabl size partit tupl attribut group key aggreg attribut tupl width generat data set number distinct valu group key rang uniform distribut figur classic hierar chical aggreg dist agg runtim increas distinct number group key cost global union post aggreg post aggreg execut union produc output size node groupkey show sim ilar perform small number distinct group key rdma aggreg rdma agg robust high number distinct group key major perform gain case experi figur figur redesign dbms oper nam architectur major benefit sheer perfor manc aspect robust distribut oper share share memori architectur oper opti mize nam architectur enabl effici scale addit comput server nam architectur enabl effici scheme handl data skew fine grain parallel work steal algorithm challeng dress analyz detail redesign distribut analyt dbmss nam architectur work major focus high perform comput muniti develop techniqu advantag modern hardwar fast network infiniband vast major work limit specif applic gain experi high relev develop generat dbmss fast network paper case rdma enabl net work direct influenc distribut dbms architec ture algorithm project academia industri attempt add rdma afterthought exist dbms exampl oracl rac rdma support includ rdma atom primit design scratch har full power network rac direct advantag network transact process essenti workaround legaci system work investig build rdma awar dbmss top rdma enabl key store transact queri process afterthought class design consider system separ storag comput node treat rdma afterthought ibm purescal direct leverag rdma provid activ activ scaleout reli central manag coordin distribut transact hand nam chitectur nativ incorpor rdma primit order build share distribut memori pool central ize coordin propos idea rdma build huge amount work distribut transact protocol distribut join process overview awar rdma enabl transact protocol previous work explor rdma awar join algorithm approach work assumpt network limit bandwidth stream relat node block nest loop join contrast rrj join well work extens state art memori join algorithm rdma effici rdma join compar publish number join support effi cient scale partit input tabl conclus argu emerg fast network technolog cessit fundament rethink build dis tribut dbmss initi experi oltp olap workload indic potenti fulli leverag network wide open area interest challeng address trade local remot process creat simpl abstract hide complex rdma verb refer standard document doc jesd http product architectur http deliv applic perform oracl infiniband tech http technetwork server storag network document pdf share memori communic rdma http softwar network commserv smcr intel data direct technolog http content direct data associ infiniband architectur specif releas http associ infiniband roadmap http babu massiv parallel databas mapreduc system foundat trend databas baili eventu consist today limit extens comm acm balkesen multi core main memori join sort hash revisit vldb barshai deliv continu extrem capac ibm purescal featur ibm redbook barthel rack scale memori join process rdma sigmod binnig distribut snapshot isol global transact pay global local transact pay local vldb journal brantner build databas sigmod campbel extrem scale full sql languag support microsoft sql azur sigmod corbett spanner googl global distribut databas acm toc crotti architectur compil udf centric workflow vldb curino schism workload driven approach databas replic partit vldb dewitt gamma databas machin project ieee tran knowl data eng dragojev farm fast remot memori nsdi elmor squall fine grain live reconfigur partit main memori databas sigmod elniketi databas replic general snapshot isol srds rber sap hana databas architectur overview ieee data engin bulletin feldman roce ethernet infiniband love stori hpc wire frey spin join dizzi icdc islam high perform rdma base design hdfs infiniband jone low overhead concurr control partit main memori databas sigmod jose memcach design high perform rdma capabl interconnect parallel process icpp kalia rdma effici key servic sigcomm kallman store high perform distribut main memori transact process system vldb kossmann state art distribut queri process acm comput surv kraska mdcc multi data center consist eurosi lee sap hana distribut memori databas system transact session metadata manag icd lei morsel driven parallel numa awar queri evalu framework core age sigmod levandoski high perform transact deuteronomi cidr lin middlewar base data replic provid snapshot isol sigmod lin snapshot isol integr constraint replic databas acm tran databas syst loes design scalabl distribut share data databas sigmod high perform design hadoop rpc rdma infiniband icpp macarthur perform studi guid rdma program decis hpcc icess mohan transact manag distribut databas manag system tod ousterhout case ramcloud commun acm ozsu principl distribut databas system prentic hall press edit pavlo scalabl transact execut partit main memori databas manag system phd thesi brown univers pavlo skew awar automat databas partit share parallel oltp system sigmod polychroniou comprehens studi main memori partit applic larg scale comparison radix sort sigmod polychroniou track join distribut join minim network traffic sigmod pruscino oracl rac architectur perform sigmod quamar sword scalabl workload awar data placement transact workload edbt raman blu acceler column store vldb ramesh optim distribut join bloom filter icdcit ren thomson abadi lightweight lock main memori databas system vldb diger local sensit oper parallel main memori databas cluster icd diger high speed queri process high speed network corr schenkel feder transact manag snapshot isol fmldo stonebrak size fit idea time icd subramoni rdma ethernet preliminari studi cluster thomson case determin databas system vldb tinnefeld elast onlin analyt process ramcloud edbt tinnefeld parallel join execut ramcloud workshop icd speedi transact multicor memori databas sosp zamanian local awar partit parallel databas system sigmod 