forecast cost process multi join queri hash main memori databas extend version feilong liu comput scienc engin ohio state univers liu spyro blana comput scienc engin ohio state univers blana abstract databas manag system dbmss care optim complex multi join queri avoid expens disk server today featur ten hundr gigabyt ram fraction analyt databas memori resid care tune memori environ linear disk model implement postgresql queri spons time predict slower optim multi join queri plan memori resid data paper introduc memori cost model iden tifi good evalu strategi complex queri plan multipl hash base equi join memori resid data propos cost model care valid accuraci three system includ amazon instanc control hardwar specif differ prior work parallel queri evalu advoc deep bushi tree multi join queri greater parallel pipelin potenti surpris find ing convent wisdom share disk base system direct appli modern share memori hierarchi corrobor model perform gap optim left deep deep queri plan grow number join queri increas introduct hoc analyt queri common perform seri equi join tabl databas manag system accur forecast respons time dif permiss digit hard copi work person classroom grant fee provid copi distribut profit commerci advantag copi bear notic full citat copyright compon work own acm honor abstract credit permit copi republish post server redistribut list requir prior specif permiss fee request permiss permiss extend version paper appear socc ferent join evalu order provid time answer queri major compon predict estim cost access data cost mod tradit assum data resid singl direct attach hard disk cloud infrastructur provid amazon offer memori optim stanc type dozen vcpus hundr giga byte memori environ fraction databas fit memori process parallel multipl cpu core time respons user queri databas communiti investig queri process techniqu memori resid dataset three decad develop tail cost model singl core cpus deep cach hierarchi commodit multi core multi socket system rekindl interest queri execut effici process techniqu modern hardwar memori hash base join algorithm receiv attent ramif ampl singl node paral lelism multi join queri evalu memori data well understood consequ system implement find dark best synthes queri plan complex multi join queri effici cpu core turn prior parallel queri evalua tion parallel databas share architec ture multi join queri common evalu seri hash join tabl hash join queri optim choos input will store hash tabl henceforth refer build left side input will probe hash tabl refer probe side prior work parallel hash base multi join queri evalu advo cate deep queri tree build left tree process parallel probe singl long pipelin convent wisdom good queri plan common encod hoc heurist paral lel queri optim avoid combinatori explos search space singl databas server cpu core parallel databas hardwar architectur resem ble share environ exist queri optimiz augment accur model resourc hoc queri memori data paper focus hash base join evalu strate gie main memori databas contribut detail cost model accur predict queri respons time hoc multi join queri thesi respons time process complex multi join queri cpu core proport number memori oper ation weight perform cost access pattern exhaust explor queri plan join tabl find memori access cost predict model prove accu rate proxi elaps time demonstr lin ear disk model current cost model post gresql accur account access pattern main memori optim adjust model weight linear regress propos cost model conceptu simpl account multi layer cach hierarchi numa effect find loss accuraci factor minor cach oblivi partit hash join algorithm model focus top layer memori hierarchi model gain versatil adapt under hardwar conceptu simplic model portant light limit topolog cpu cach hierarchi glean cloud environ experi premis sys tem amazon model accur pre dict respons time individu queri plan will chang base perform characterist system surpris find thorough experiment evalu left deep queri tree effici bushi deep tree counterpart join pipelin complet result memori traffic execut corrobor model perform gap optim left deep deep queri tree grow number join queri increas find challeng held belief sys tem implement mpp style optim good parallel memori queri process background work queri process techniqu memori data main memori databas manag system commenc three decad ago earli work vestig join algorithm main memori databas sys tem dewitt investig memori queri process techniqu lehman carey cpu architectur evolv addit hardwar opera tion perform bottleneck ail amaki studi perform bottleneck commerci databas manag system highlight minim data cach stall instruct cach stall shatdal propos join algorithm cach conscious improv local join perform partit step join boncz propos radix base queri process ing techniqu improv memori perform duce cach tlb miss multi core cpu architectur norm databas communiti explor altern establish queri process paradigm harizopoulo propos pipelin model queri process oper map hardwar core share multipl queri arumugam develop push base dataflow engin queri process krikella investig techniqu dynam generat code queri execut neumann propos fur ther improv perform compil queri nativ machin code llvm gianniki design system process thousand concurr queri shar ing comput intermedi live ongo debat effici parallel memori equi join techniqu balkesen compar sort merg radix hash join multi core main memori environ claim radix hash join superior sort merg join lei break input data small fragment assign thread entir oper pipelin control dispatch data fragment queri execut parallel dynam numa awar fashion polychroniou ross pro pose famili main memori partit algorithm includ hash radix rang partit studi data shuffl numa system improv perform employ thread bind numa awar thread alloc relax global coordin lang optim hash join numa architectur optim physic represent hash tabl barber introduc concis hash tabl sig nific reduc memori consumpt offer competit perform research propos cost model memori data process manegold propos hierarch model captur level cach hierarchi accur captur total respons time quick sort hash join partit oper calibr cpu cost algorithm parallel queri evalu strategi multi join queri plan optim difficult problem uncertainti cardin intermedi ate larg optim space chaudhuri sum mariz foundat find queri optim lohman identifi open problem queri optim prior extens studi parallel dis tribut queri optim techniqu earli search prototyp optim queri minim data transfer cost share environ chen propos generat parallel queri plan phase generat optim queri plan singl node parallel multi processor viron hong stonebrak phase optim produc good queri plan share memori system research studi parallel hash join algorithm dewitt gerber introduc multi processor version popular hash join algorithm singl join evalu advantag disad vantag multi processor environ chu propos novel distribut multi join algorithm theoret proven better perform evalu multi join seri binari join perform multi join evalu strate gie extens studi schneider witt studi multi join queri process hash base method gamma parallel databas system observ tree shallow hash join build phase long probe pipelin deep tree provid perform advantag larg multiprocessor databas machin key advantag deep queri tree ampl parallel potenti build subtre execut concurr intermedi ate materi long probe pipelin stream oper deep tree introduc problem processor allo cation join tree parallel evalu greedi algorithm generat queri plan multi join queri determin order join number parallel join pro cessor assign join ioannidi kang optim bushi left deep tree ier optim left deep tree chen propos bushi tree deep pipelin call segment deep tree effici execut multi join queri queri evalu strategi share main memori databas manag system examin context prisma system wilschut aper identifi synchron cost perform bottleneck parallel giceva studi alloc sourc deploy queri plan multi core context oper centric shareddb system liu rundenstein introduc segment bushi queri tree effici evalu multi join queri pipelin delay studi desh figur partit hash join algorithm pand hellerstein propos reduc pipelin delay plan interleav plan fragment ahm propos techniqu optim bushi join tree snowstorm queri oracl databas system machin learn techniqu explor predict respons time queri introduc leo learn optim adjust queri predict base observ queri cost zhang propos statist learn approach comet adapt chang workload xml oper dug gan machin learn techniqu predict perform concurr workload akder introduc learn base model plan level model oper level model contribut hybrid model predict queri perform combin gression tree model scale function estim resourc consumpt individu oper partit memori hash join algorithm propos memori model captur fundament memori access oper popular partit memori hash join algorithm data structur layout optim balkesen main data structur hash tabl share thread figur hash tabl contigu array bucket bucket metadata payload metadata header pointer overflow bucket bucket spill hash join divid phase build phase probe phase build phase empti hash tabl creat build tabl divid equi size part assign thread thread scan input sequenti hash join key tupl lock bucket write tupl bucket unlock bucket probe phase start entir build tabl consum probe phase thread sequenti scan probe tabl hash join key tupl join tupl correspond bucket join key equal model memori fundament challeng build memori model pull base natur data movement memori hierarchi stark contrast disk hierar chi data movement explicit initi plicat applic control memori limit mnemon access pattern read cach sequenti read random cach write cach sequenti write random cach tabl access pattern captur model prefetch flush tempor access hint complic matter memori load store trig gere retriev user data queri process manipul local variabl access call stack ordin cpu core determin compon memori cost model delic balanc equal includ suffici detail accur predict avoid paramet exagger minor fluctuat model input fit mem ori cost model generic avoid obsol cenc light quick pace innov hardwar construct perform model general algo rithm model level cach hier archi partit hash join algorithm cach oblivi memori bound thesi model sequenc partit hash join queri respons time domin cost access ing main memori individu cach access pattern memori equal expen sive sequenti access pattern effici leverag prefetch result tlb miss write expens read requir exclus access cach mesif cach coher protocol requir cach invalid cpu core outlin access pattern tabl model respons time process queri proport number oper weight perform cost access pattern time wsr wrr wsw wrw perform cost access pattern tain experiment system control microbenchmark procedur describ detail number oper calcul model section sum mariz key insight model model assumpt limit model assum memori share process ing core automat coher hardwar data transfer oper perform granu lariti cach assum databas work memori queri fit memori page secondari storag occur consid multi join queri evalu parallel thread partit hash join algorithm balkesen offer competit perfor manc judici memori fact propos model account cach numa effect impli architectur awar contrari memori cost model abstract well design queri engin comput bound will trigger redund memori queri process ineffici implemen tation partit hash join will result higher memori traffic will captur model assum hash tabl stripe numa node final limit join cost model assump tion cardin intermedi join estim reason accur acknowledg cardin estim solv problem inac curaci estim cardin skew build side problemat improp size hash bles will result creation probe overflow hash bucket dbmss will track excess bucket overflow paus hash tabl build process resiz hash tabl accommod tupl join algorithm centli propos avoid popul hash tabl heavili skew data bucket overflow hash tabl resiz account propos model bootstrap model model depend perform cost access pattern accur predic tion general perform cost encapsul dif ferenc under hardwar system cpu model memori modul hardwar configur option memori tim ing numa set chang bio specif configur option num ber size huge tlb bootstrap consist specif microbenchmark thread transfer data memori specif access pat tern trigger time microbenchmark form comput deriv perform cost thought worst case scenario thread wait memori deriv perform cost pat tern thread alloc numa local contigu array popul random valu array size power memori system page secondari storag occur thread concurr read local array sequenti accumul byte cess pattern accumul write byte symbol mean access pattern perform cost access pattern number oper access pattern cach size cardin relat size tupl relat hash tabl number hash bucket hash bucket size tupl bucket hash tabl load factor size metadata hash bucket queri subtre depth intermedi output figur tabl notat access pattern notic access pattern includ explicit memori read microbenchmark array size share thread benchmark thread gen erat random sequenc cach align array offset numa local memori wait barrier bench mark start thread access entir cach offset random generat sequenc cess pattern thread accumul valu byte local variabl read cach access pattern thread read write entir cach byte unit perform cost calcul divid ecut time microbenchmark number cach line access model individu oper analyz memori access cost indi vidual oper notat summar tabl sequenti scan thread read data sequenti memori scan scan entail random read memori write relat number memori oper determin size input relat cach size nscan nscan nscan nscan hash join build phase hash join build phase thread concurr read tupl build relat hash tupl join key insert share hash tabl hash figur model cach write hash bucket insert tupl join key involv comput will memori access good hash function design assign key hash bucket hash bucket will access random order appropri ate hash bucket identifi thread latch bucket write prevent insert race thread latch metadata informa tion store bucket header structur bucket size acquir latch will sult local modif cach absenc latch content releas latch will modifi cach latch brought cach latch acquir oper latch releas oper will hit cach will trigger addit memori access memori access will occur tupl build relat nbuild nbuild nbuild write tupl hash bucket will requir addit write number memori write depend cach line overlap modifi memori region write pattern consid insert tupl relat denot hash bucket consist cach line figur tupl insert fit entir caus memori write insert span cach line requir memori write trigger memori write span cach line insert requir memori write fit complet cach deriv close form solut memori write trigger insert tupl width cach line size calcul bound ari cach line tupl vertic dash line figur appli inclu sion exclus principl add tupl boundari cach boundari will subtract boundari tupl cach boundari boundari figur tupl boundari cach line boundari common boundari locat multipl multipl lcm common multipl locat pre cise lcm lcm number common boundari lcm conclud number memori access sert tupl size hash bucket will lcm hash tabl relat hash bucket bucket size fit tupl total num ber memori access nbuild hash join probe phase build phase complet thread will read tupl probe relat hash tupl join key compar join key tupl join key tupl correspond hash bucket memori access involv evalu hash function join key will compar key hash bucket hash bucket empti hash bucket metadata will retriev discov bucket determin hash join key input tupl access hash bucket tupl probe relat nprobe tupl hash bucket will retriev mem ori join key comparison access pattern number sequenti read determin number addit cach line bucket occupi bucket hash tabl will byte data byte account access pattern assum hash bucket fit tupl number memori access probe nprobe output join will written output buffer thread oper queue buffer reus oper size figur left deep tree bushi tree deep tree output join pipelin oper black dot denot build side join input will buffer hash tabl process probe side fit cach generat memori access popul output buffer well tune system model probe phase hash join includ oper nprobe nprobe model multipl join queri tree number memori access subtre root depth posit bushi tree figur memori access oper ator depth posit memori access left subtre access pattern denot intermedi result oper depth posit number memori access pattern entir queri nscan seq scan nbuild nprobe hash join equat account cost materi ize output intermedi periment cost output buffer size appropri buffer store materi output batch oper stay cach trigger memori access note cost process larger intermedi sult captur cardin width count memori access subsequ oper valid model choic nal join output materi increment consum aggreg top oper pattern instanc occur queri tpc cision support benchmark entir queri output materi model trivial extend addi tional access reflect materi cost cost ident queri plan insight join evalu order model offer valuabl insight memori requir queri plan illustr model common case linear primari key foreign key join relat multi join oper join sequenc left deep evalu strategi deep evalu strategi consid common case join produc tupl probe side common case primari key foreign key join close formula memori access cost deep queri tree figur set bri bri cost left deep tree figur bii bii insight left deep deep eval uation strategi perform number type memori write ident queri tree cardin interm diat output left deep strategi deep strategi insight left deep evalu strategi form fewer memori access deep strategi access left deep strategi access deep strategi ident strategi tupl thinner level cach common case project push columnar storag extens model propos model account wide tupl assum tupl width fix input relat accur attribut repres variabl length field varchar blob nest structur json object model crude appli averag tupl size accur requir complet histogram attribut size join key challeng devis techniqu collect metadata effici promis direct extend model distribut memori join forese challeng general model distribut memori hash join model data placement local model cost remot data transfer model current con sider data placement model account local remain accur cess remot order magnitud expens current model model ing cost remot data transfer barthel propos perform model estim cost tran fer data rdma primit join process hash tabl store data memori cach memori transact process mod ele cost access step stand perform characterist complex opera tion transact consist seri read write hash tabl specul main lim itat model appli hoc oper account concurr write read promis direct construct content awar perform model memori data process cost access pattern vendor cpu instanc type wsr wrr wsw wrw intel amd opteron amazon tabl measur cost access pattern system detail bootstrap process predict memori observ memori respons time slowdown load factor total write total read write read pred observ error build build scan total error total error tabl model accuraci hash tabl load factor event million predict memori observ respons time slowdown join select million total total error pred observ error build probe scan scan tabl model accuraci larger probe relat join select event million experiment evalu describ experiment evalu val idat model section focus singl join evalu accuraci model pre dict memori activ valid tiviti linear correl queri respons time find impact increment materi inter mediat pipelin stage neglig tion evalu parallel subtre evalu perform valid sequenti subtre evalu queri respons time fastest parallel evalu strategi memori pressur turn attent multi join queri exhaust compar multi join queri plan join input relat discuss simpl memori model compar linear disk base model haa model paramet tune disk base model suffici predict respons time queri memori resid data highlight model adapt dif ferent hardwar accur predict respons time drift queri plan memori hierarchi evolv remaind evalu sensi tiviti model chang databas size tion join skew input cardin ratio join select final evalu predict power model forecast cost deeper multi join pipelin extend pythia prototyp open sourc memori queri engin support multi join complex queri pipelin start optim partit hash join implement balkesen creat hash join oper plex queri pipelin parallel vector pull base execut model build prior work prefetch hash bucket access peek ing ahead batch input tupl built custom memori alloc huge memori request larger tight control memori alloc enforc numa placement support pre alloc queri plan time precis monitor memori consumpt queri process hardwar setup methodolog three system experiment evalu system will refer intel server numa node memori intel xeon core processor core processor share cach enabl hyper thread oper system simul taneous execut thread second system will refer amd server numa node memori amd opteron core processor total concurr thread core opteron processor share cach cloud environ precis hardwar specifi cation instanti advantag propos cach oblivi model adapt hardwar unknown specif third system refer amazon instanc type instanc memori vcpus control cyclic variat perform bid singl spot instanc morn eastern time consecut day observ day day variat perform report averag day experi measur perform cost access pat tern three system tabl refer detail bootstrap process built perf tool linux kernel tap hardwar counter perfor manc event memori access minim port overhead perf inspect coun ter complet initi build probe phase three time join oper eri experi repeat ten time report averag assum memori manag prealloc memori dbms start queri reus pre alloc memori memori alloc time includ report queri respons time valid model assumpt valid key model assumpt intel system describ dis sect singl hash join evalu accur model memori traffic memori traffic good predictor join execut time turn atten tion parallel evalu distinct build subtre queri plan perform hash join build phase experi evalu accuraci model captur memori activ predict complet time hash join build phase creat relat attribut attribut byte integ rang cardin relat second attribut random byte integ narrow tupl common encount column store extens experiment evalu prior work input relat random permut key random order stripe numa node system experi number hash bucket byte bucket bucket header cach hold tupl experiment model predict build hash tabl tabl vari car dinal build relat billion tupl build relat size vari tupl will cach bucket header build relat size reach exceed tupl will insert cach will traffic pare model predict observ activ notic read write predict accu rate common deviat observ memori traffic compar model predict experiment observ execut time observ memori activ accur predictor exe cution time build phase common deviat observ time hash join probe phase evalu accuraci model captur hash join probe phase build relat cardin tupl tabl cardin probe relat vari probabl tupl find match tupl hash tabl vari observ memori activ predict accur observ memori read traffic memori activ linear correl queri respons time fact predict overpredict queri respons time final cardin join output notic affect memori activ respons time join output materi increment output buffer pipelin oper valid design choic explicit account output materi cost intermedi parallel sequenti build subtre evalu schneider dewitt argu aspect supe rioriti deep tree left deep tree poten tial exploit parallel independ build tree studi perform util inter subtre parallel memori resid dataset creat three relat billion tupl evalu queri plan figur probe tupl match build tupl join execut queri plan sequenti parallel execut queri sequenti thread build move build complet build execut queri parallel thread divid group thread build hash tabl concurr thread build hash tabl remain thread build hash tabl thread particip probe pipelin number thread parallel sequenti respons time num ber thread deviat optim alloc figur explor sequenti parallel build subtre evalu deep queri tree build hash tabl thread particip probe phase evalu strategi respons time evalu strategi figur vertic axi number thread assign chang horizont axi relat equal size optim alloca tion divid thread equal size group perform will degrad optim thread assign predict correct queri optim process complex queri subtre communic cost main memori envi ronment neglig compar share architec ture perform build hash tabl sequenti equal perform parallel eval uation best thread alloc advantag sequenti evalu memori con sumption queri build sequenti memori alloc correspond memori requir build memori con sumption increas amount mem ori need build queri remain constant build parallel memori need upfront start queri built concurr perform peak memori consumpt sequenti evalu strategi impos pressur memori manag dbms gradual reach peak memori locat light find process independ build subtre sequenti experi follow evalu multi join queri plan order exhaust evalu predict multi join queri plan generat synthet databas relat relat long integ attribut tupl size byte attribut rang cardin relat figur queri plan notat exhaust relat join experi letter denot tree shape input relat read left valu random distribut evalu sql queri select sum synthet databas relat allow plore queri plan shape figur left deep left bushi bushi bushi deep tree txxxx refer queri plan queri type sequenc number denot input relat read left focus databas relat systemat explor entir queri plan space keep number queri plan didat reason limit present purpos relax constraint evalu model queri plan involv join comparison popular disk base model cost model memori adjust ing weight exist linear disk base model suffi cient answer question compar accuraci model postgresql disk model mimic haa model cost number oper queri plan predict queri optim function cardin join input join output cost weight user adjust paramet exhaust explor viabl multi join queri plan relat queri set relat cardin bil lion tupl respec tive join ratio tupl match valu forc post gresql specif join order explicit set car dinal estim actual join cardin lie predict queri optim set report total cost queri plan explain postgresql disk model predict arbitrari unit left left bushi bushi bushi postgresql disk cost model model predict arbitrari unit left left bushi bushi bushi model intel system model predict arbitrari unit left left bushi bushi bushi model amd system model predict arbitrari unit left left bushi bushi bushi model instanc figur observ queri respons time predict cost postgresql cost model squar fit model intel amd system denot pearson correl coeffici spearman correl coeffici command likewis find final perform linear regress find optim negat cost minim error cost predict serv execut time figur predict postgresql disk model horizont axi paramet fit linear regress observ respons time intel system vertic axi optim cost weight predict postgresql disk model cluster point vertic band figur postgresql cost predict plan execut time predict best plan will respons time plan realiti expens make matter wors optim deep queri plan predict expens queri plan comparison figur predict model intel system predict cheapest plan addit observ respons time lie narrow band predict disk model consid size data access access sequenti random account access pattern memori hash join model adapt hardwar test accuraci system describ lim ite memori size set cardin tupl join ratio set queri relat join describ predict noisi cach effect smaller databas size instanc cach entireti system explor model sensit databas size figur compar cost predict observ queri respons time amd system model remain accur queri plan fall band propos model adapt hardwar architectur under platform serv queri plan intel system figur plan accur pre dict compar perform amd system figur model accur predict queri plan expens plan differ attribut pro portion activ plan plan plan wrr weight chang intel system amd system tabl model captur perform differ adjust cost predict plan test model amazon instanc ing dataset amd system figur sult intel system plan pre fix construct hash tabl model predict plan faster tual respons time closer perform coun ter reveal discrep cost translat virtual physic memori address access larg hash tabl intel system configur huge pythia stanc huge support model hierarch natur tabl improv accuraci model huge enabl support adopt concis metric quantifi model accuraci prior work correl metric measur accuraci model predict pearson correl coeffici measur linear corr lation variabl predict actual queri respons time defici pearson effici assign low coeffici score model correct predict relat order queri plan correl observ respons time linear spearman correl coeffici accom modat linear model measur linear corr lation rank queri plan remaind paper will pearson spearman coeffici metric model accuraci model sensit databas size propos model assum cach queri plan equal valid design assump tion show accuraci model grow frac tion databas fit cach databas shrink size multi join queri intel system join ratio fig ure plot pearson spearman correl coef ficient rang billion tupl tupl data point billion tupl reflect coeffici figur dip billion tupl caus three outlier plan respons time slowest quartil queri plan expens queri plan realist consid viabl altern queri optim model remain accur spearman coeffici databas size fewer tupl ples fit entir cach pearson spearman correl coeffici model remain queri plan spons time model predict tupl pearson coeffici spearman coeffici sensit databas size zipf factor bushi left left bushi bushi sensit data skew join select pearson coeffici spearman coeffici sensit join select figur model sensit chang databas size skew join select intel system cardin ratio coeffici pearson undefin spearman undefin tabl model sensit cardin ratio model sensit data skew data skew profound formanc singl join evalu data skew predict multi join queri discuss car dinal billion tupl attribut rang probabl refer enc individu key zipf distribut vari zipf factor skew figur plot normal queri respons time queri plan exhibit probe side data skew model account data skew produc predict zipf factor queri plan respons time remain stabl zipf factor smaller zipf factor frequent occur time drop queri respons time skew queri plan proport zipf factor high queri plan respons time relat order queri plan chang model perfect rank queri figur model sensit input cardin ratio evalu sensit model ratio vari ratio match ratio match correl coeffici tio tabl coeffici und fine model predict queri plan varianc model predict ratio accur serv respons time queri plan vari well margin statist error ratio chang pearson coeffici stay spearman coeffici stay drop ratio caus three outlier plan expens plan evalu queri competit evalu strategi model sensit join select studi accuraci model chang select join join queri cardin billion figur dataset attribut rang occur time half tupl will match tupl tupl will match tupl dataset likewis instanc dataset tupl will match will match exact figur model remain accur join select chang spearman coeffici stay model longer join pipelin focus exhaust explor queri plan space queri three join will explor perform best deep tree best left deep tree chang number join increas model predict accur generat relat join ratio grow queri tree accord ing plot queri respons time number join increas left deep tree deep number join left observ perform number join left predict perform figur compar optim left deep deep queri plan number join increas perfor manc gap grow predict model tree figur contrast result predict figur left deep tree deep tree perform number join tree ident number join increas perform deep tree linear wor perform left deep tree key draw deep tree largest rela tion probe relat data largest relat flow pipelin stage addit memori access stage model accur forecast perform trend left deep tree deep tree number join increas conclud remark fraction databas fit entir main memori analyz parallel multipl cpu core queri respons time short accur fore cast respons time memori queri plan queri optim envi ronment goal contribut cost model accur predict queri respons time hoc queri plan multipl hash base join surpris insight model left deep queri tree effici bushi deep tree counterpart result mem ori execut prior work parallel hash base multi join queri evalu advoc deep queri tree build subtre process parallel probe singl pipelin experimen tal evalu corrobor main memori set evalu queri subtre sequenti thread fast evalu separ queri subtre concurr find suggest evalu join time store intermedi result hash tabl viabl queri execut strategi memori resid dataset amelior cascad error join cardin estim queri process techniqu adapt cardin estim error promis area futur work acknowledg acknowledg taso sidiropoulo yang wang anonym review shepherd jenni duggan action insight comment improv paper partial support nation scienc foundat grant iii googl faculti award evalu conduct nation energi sci entif comput center doe offic scienc user ciliti support offic scienc depart ment energi contract refer ahm sen poess chakkappen snow storm bushi tree pvldb ailamaki dewitt hill wood dbmss modern processor time vldb akder etintemel riondato upfal zdonik learn base queri perform model predict icd arumugam dobra jermain pansar perez datapath system data centric analyt pro cess engin larg data warehous sigmod balkesen alonso teubner ozsu multi core main memori join sort hash revisit pvldb balkesen teubner alonso ozsu main memori hash join multi core cpus tune lie hardwar icd barber lohman pandi raman sidl taluri chainani lightston sharp memori effici hash join proc vldb endow dec barthel loes alonso kossmann rack scale memori join process rdma sigmod blana patel memori footprint matter effici equi join algorithm main memori data process socc boncz manegold kersten databas chitectur optim bottleneck memori access vldb boncz zukowski nes monetdb hyper pipelin queri execut cidr candea polyzoti vingralek scalabl pre dictabl join oper high concurr data warehous pvldb chaudhuri overview queri optim relat system pod chen young segment deep tree execut pipelin hash join vldb chen schedul processor alloc parallel execut multi join queri icd chen ailamaki gibbon mowri prove hash join perform prefetch icd chu balazinska suciu theori practic effici join queri evalu parallel databas system sigmod deshpand hellerstein flow algorithm parallel queri optim icd dewitt gerber multiprocessor hash base join algorithm vldb dewitt katz olken shapiro stone braker wood implement techniqu main memori databas system sigmod duggan etintemel papaemmanouil upfal perform predict concurr databas workload sigmod gianniki alonso kossmann shareddb kill queri stone pvldb giceva alonso rosco harri deploy queri plan multicor pvldb graef encapsul parallel volcano queri process system sigmod soliman waa test accuraci queri optim dbtest haa carey livni shukla seek truth hoc join cost vldb harizopoulo shkapenyuk ailamaki qpipe simultan pipelin relat queri engin sig mod hong stonebrak optim parallel queri execut plan xprs distribut parallel databas ioannidi kang left deep bushi tree analysi strategi space implic queri optim sigmod krikella vigla cintra generat code holist queri evalu icd lang lei albutiu neumann kemper massiv parallel numa awar hash join imdm lehman carey queri process main memori databas manag system sigmod lei boncz kemper neumann morsel driven parallel numa awar queri evalu framework core age sigmod nig narasayya chaudhuri robust estim resourc consumpt sql queri statist techniqu pvldb pandi ller raman lohman numa awar algorithm case data shuffl cidr liu rundenstein revisit pipelin paral lelism multi join queri process vldb lohman queri optim solv problem acm sigmod blog apr lohman mohan haa daniel lindsay seling wilm queri process queri process databas system springer shan tan optim multi join queri parallel execut vldb manegold boncz kersten join dissect cpu memori optim fect vldb manegold boncz kersten generic databas cost model hierarch memori system vldb markl lohman learn tabl access cardin iti leo sigmod neumann effici compil effici queri plan modern hardwar pvldb ono lohman measur complex join enumer queri optim vldb polychroniou ross comprehens studi main memori partit applic larg scale comparison radix sort sigmod polychroniou sen ross track join dis tribut join minim network traffic sigmod sig mod pythia http sblana pythia schneider dewitt tradeoff process complex join queri hash multiprocessor databas machin vldb shatdal kant naughton cach conscious algorithm relat queri process vldb stillger lohman markl kandil leo learn optim vldb wilschut aper dataflow queri execut parallel main memori environ pdis wilschut flokstra aper parallel eval uation multi join queri acm sigmod record ume acm hacigu naughton uncer tainti awar queri execut time predict pvldb zhang haa josifovski lohman zhang statist learn techniqu cost xml queri vldb 