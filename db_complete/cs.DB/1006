effici core graph decomposit web scale dong wen qin ying zhang xuemin lin jeffrey centr quantum comput intellig system univers technolog sydney australia univers south wale australia chines univers hong kong china lxue abstract core decomposit fundament graph prob lem larg number applic exist proach core decomposit assum graph memori machin real graph big resid memori literatur work effici core decomposit avoid load graph memori approach scalabl handl big graph bound memori size load part graph memori addit approach handl graph updat paper studi effici core decomposit semi extern model allow node load memori model work well web scale graph propos semi extern algorithm optim algorithm effici core decomposit simpl structur data access model handl dynam graph updat algorithm natur extend handl edg delet propos effici core mainten algorithm handl edg insert improv algorithm reduc cpu cost investig graph properti conduct extens experi real larg graph optim algorithm outperform exist effici algorithm term process time memori consumpt memori resid graph algorithm core decomposit mainten outperform memori algorithm simpl structur data access model algorithm scalabl handl web scale graph exampl handl web graph node billion edg memori introduct graph repres relationship entiti larg spectrum applic social network web search collabor network biolog prolifer graph applic effort devot fundament problem manag ing analyz graph data problem comput core graph studi graph core largest subgraph node subgraph degre node core number denot largest contain core core decomposit problem comput core number node core decomposit graph core valu easili linear time memori algorithm devis batagelj zaversnik comput core number node applic core decomposit adopt real applic communiti detect network cluster network topolog analysi network visual protein protein network analysi system structur analysi addit research devot core decomposit specif kind network eleg structur properti core linear solut core decomposit larg number graph problem core decomposit subroutin preprocess step cliqu find dens subgraph discoveri approxim betwe score variant communiti search problem motiv despit larg amount applic core decomposit network solut core decomposit assum graph resid main memori machin real graph big resid entir main memori exampl facebook social network bil lion node billion domain web graph clueweb node billion literatur solut studi effici core decomposit emcor propos cheng allow graph partial load main memori emcor adopt graph partit base approach partit load main memori emcor bound size memori process real graph emcor load edg graph main memori emcor unscal handl web scale graph addit real graph dynam updat complex structur emcor difficult handl graph updat increment solut paper address drawback exist solut core decomposit propos algorithm core decomposit guarante memori bound adopt semi extern model sume node graph associ small constant amount load main memori edg store disk find assumpt practic larg number real web scale graph adopt handl graph problem base assumpt compani info handl core decomposit effici simpl structur data access mechan enabl algorithm effici handl graph updat increment semi extern model contribut contribut effici core decomposit algorithm memori guarante propos effici core decom posit algorithm semi extern model algorithm core number node memori updat core number iter converg iter requir sequenti scan edg disk best knowledg work effici core decomposit memori guarante optim strategi reduc cpu cost analysi observ number iter increas small proport node core number updat iter total scan edg disk iter will result larg number wast cpu cost propos optim strategi reduc cost strategi base observ updat core number node trigger updat core number neighbor graph second strategi maintain node result complet avoid wast core number comput sens core number comput guarante updat core number correspond node optim strategi easili adapt algorithm framework effici core decomposit algorithm handl graph updat consid dynam graph edg delet insert semi extern algorithm natur support edg delet simpl algorithm mod ific edg insert util graph properti adopt exist memori algorithm handl graph updat core decomposit propos phase semi extern algorithm handl edg insert graph properti explor graph properti propos phase semi extern algorithm reduc cpu cost edg insert best knowledg work effici core mainten dynam graph extens perform studi conduct extens formanc studi real graph graph properti demonstr effici algorithm compar algorithm memori resid graph emcor memori algorithm core decomposit core mainten algorithm faster memori emcor dataset algorithm core decomposit maint nanc faster memori algorithm simpl structur data access model algorithm scalabl handl web scale graph instanc consum memori handl web graph clueweb node billion edg outlin preliminari prob lem statement iii introduc exist solut core decomposit set present semi extern core decomposit algorithm explor optim strategi reduc cpu cost discuss design semi extern gorithm maintain core number increment graph dynam updat investig graph properti improv algorithm handl edg insert evalu introduc algorithm extens experi vii review work viii conclud paper problem statement consid undirect unweight graph repres set node repres set edg denot number node number edg nbr denot set neighbor node nbr degre node denot deg number neighbor deg nbr simplic nbr deg denot nbr deg context evid graph subgraph denot set node induc subgraph denot subgraph definit core graph integ core graph denot maxim subgraph node degre kmax maximum core exist core graph kmax properti properti kmax defin core number definit core number graph node core number denot core largest contain core core max simplic core denot core context evid base properti definiton easili deriv lemma lemma graph integ core problem statement paper studi problem core graph decomposit core decomposit short defin graph core decompo sition comput core kmax consid updat core kmax increment dynam updat insert delet edg lemma core decomposit equival comput core paper studi comput core maintain increment graph dynami calli updat consid real graph huge entir resid main memori aim design effici algorithm comput maintain core number node graph analyz algorithm extern memori model introduc size main memori disk block size read will load block size disk main memori write will write block size main memori disk assumpt paper follow semi extern model assum node load main memori edg store disk assum small constant assumpt practic social network web graph number edg larger number node exampl real graph largest graph node edg real graph largest graph node edg real graph largest graph node edg second largest graph node edg propos algorithm paper handl largest graph webgraph requir memori afford normal graph storag paper edg tabl disk store edg store nbr nbr nbr consecut adjac list edg tabl node tabl disk store offset degre consecut load neighbor node access node tabl offset deg access edg tabl load nbr fig sampl graph core decomposit exampl consid graph fig induc subgraph core node degre core exist core core core core deriv core core core core core edg insert core increas core number node unchang iii exist solut introduc three state art exist solut core decomposit set memori core decomposit effici core decomposi tion memori core mainten memori core decomposit state art memori core decomposit algorithm denot imcor data network algorithm imcor graph minv deg deg core remov incid edg return core propos pseudocod imcor algorithm algorithm process node core number increas order time select minimum degre current node graph exist node degre larger graph guarante core number remov incid edg graph final core number node return help bin sort maintain minimum degre graph imcor achiev time complex optim effici core decomposit state art effi cient core decomposit algorithm propos algorithm denot emcor algorithm divid graph partit disk partit disjoint set node incid edg upper bound core denot comput node partit algorithm iter comput core number node top manner iter node core valu fall rang comput estim base number partit load main memori algorithm comput set partit leat node fall partit load main memori form memori graph gmem memori core decomposit algorithm appli gmem node gmem core number fall exact core number partit load memori node exact core number comput remov partit core number upper bound degre updat node degre consid deposit degre remov node final memori partit merg written disk set process rang valu iter complex emcor kmax cpu complex emcor kmax space complex emcor well bound worst case requir memori space load graph main memori emcor scalabl handl larg size graph memori core mainten handl case graph dynam updat insert delet edg state art core mainten algorithm propos base find theorem theorem edg insert delet graph core number core increas algorithm emcor graph disk divid partit disk partit comput estim pmem gmem load partit pmem main memori core core gmem core gmem partit pmem remov node core gmem updat deg write disk merg small partit return core decreas theorem edg insert delet graph suppos core core set node core number chang connect subgraph core core base theorem theorem edg insert delet graph suppos core core comput core number node scratch restraint core comput small rang node specifi calli follow step approach step perform depth search node comput node core core reachabl path consist node core number equal core node form set smaller second step restraint core number updat subgraph memori updat increas decreas core number node algorithm detail optim techniqu effici core decomposit basic semi extern algo rithm discuss improv algorithm partial node comput final will propos algorithm elimin useless node comput basic semi extern algorithm drawback emcor emcor algorithm state art effici core decomposit algorithm emcor handl big graph number partit load main memori iter well bound algorithm long partit node partit load main memori small high partit node consequ partit load main memori reason space emcor reduc practic verifi experi local properti paper aim design semi extern algorithm core decomposit introduc algorithm semicor graph disk core deg updat true updat updat fals load nbr disk cold core core localcor cold nbr core cold updat true return core procedur localcor cold nbr num nbr min cold core num num cold num break return local properti core number propos theorem theorem local graph core valu core number iff exist nbr core core core exist nbr core core core base theorem core number core node calcul recurs equat core max nbr core base local properti core number dis tribut algorithm design node initi assign core number arbitrari core num ber upper bound deg updat core number converg basic solut paper local properti design semi extern algorithm core decom posit pseudocod basic algorithm algorithm core denot intermedi core number upper bound core will final converg core initi core assign arbitrari upper bound core deg iter updat core local properti converg iter sequenti scan node tabl disk offset deg node load nbr disk offset deg node recal edg tabl disk store nbr sequenti load nbr easili sequenti scan edg tabl disk record origin core number cold comput updat core number invok localcor cold nbr continu iter core updat final core unchang return core number procedur localcor cold nbr comput core number algorithm num denot number neigh bor core equal cold core smaller cold comput num cold decreas cold comput number neighbor core denot nbr core maximum nbr core return core number cold nbr time complex localcor cold nbr deg algorithm analysi space cpu time complex algorithm theorem theorem algorithm requir memori number iter algorithm complex algorithm cpu time complex algorithm proof three memori array algorithm core num nbr bound memori consequ algorithm requir memori second iter algorithm scan node tabl edg tabl sequenti algorithm consum final iter node invok localcor cold nbr requir deg cpu time result cpu time complex algorithm discuss note denot number iter algorithm bound prove smaller practic influenc size graph exampl social network twitter kmax experi number iter algorithm web graph kmax experi number iter largest dataset clueweb kmax experi number iter iter init iter iter iter iter fig illustr semicor exampl process comput core number node fig algorithm fig number cell core correspond node iter grey cell upper bound comput invok localcor iter process core valu neighbor neighbor core neighbor core core updat algorithm termin iter partial node comput ration subsect reduc cpu consumpt algorithm recal algorithm node iter neighbor load disk core recomput guarante core unchang recomput load neighbor disk recomput core invok localcor twitter vari iter vari iter fig number node core number chang illustr effect elimin useless node comput fig number node core valu updat iter twitter dataset experi twitter dataset total iter involv iter node core number updat iter node core number updat number iter iter node core number updat iter dataset observ total iter number core number updat iter time larger iter iter iter node core number updat iter observ indic reduc number useless node comput improv perfor manc algorithm algorithm design reduc useless node comput investig condit core number node updat node core number neighbor chang core number will chang lemma easili deriv lemma node core updat iter exist nbr core updat iter base lemma algorithm activ denot node updat iter node activ true load neighbor core recomput chang core will trigger neighbor nbr assign activ true maintain valu vmin vmax minimum node maximum node activ true vmin vmax avoid check node iter check node rang node vmin node vmax updat algorithm semicor algorithm initi core activ vmin vmax updat iter updat core number node converg min max record mini mum maximum node check iter algorithm semicor graph disk core deg activ true vmin vmax updat true updat updat fals min max vmin vmax activ true activ fals load nbr disk cold core core localcor cold nbr core corg nbr activ true updaterang min max vmax updat vmin min vmax max return core procedur updaterang min max vmax updat vmax max vmax updat true min min min max max max iter check node vmin vmax recomput node activ true load nbr disk recomput core number core number decreas neighbor set activ true updat min max vmax invok updaterang min max vmax updat procedur updaterang updat vmax comput current iter delay iter updat min max iter set updat true iter updat vmin vmax iter final algorithm converg return core core number iter init iter iter iter iter fig illustr semicor exampl fig recomput node grey cell core number process graph fig algorithm iter core updat trigger larger neighbor comput iter smaller neighbor comput iter compar algorithm exampl algorithm reduc number node comput optim node comput semicor improv semicor partial node comput involv larg number useless node comput instanc iter exampl semicor perform node comput node updat core number aim design optim node comput scheme sens node comput will guarante updat core number algorithm semicor graph disk core deg cnt vmin vmax updat true updat updat fals min max vmin vmax cnt core load nbr disk cold core core localcor cold nbr cnt computecnt nbr core updatenbrcnt nbr cold core nbr cnt core updaterang min max vmax updat vmin min vmax max return core procedur computecnt nbr core nbr core core return procedur updatenbrcnt nbr cold core nbr core core core cold cnt cnt ration general idea maintain node check node comput need note core will increas algorithm core determin number neighbor core core node graph maintain number neighbor denot cnt defin cnt nbr core core assist cnt deriv suffici condit core number node updat lemma lemma node core updat cnt core proof prove suppos cnt core nbr core core core consequ core decreas satisfi prove suppos core updat nbr core core core larger nbr core imposs core will increas algorithm cnt core algorithm design base discuss propos algorithm semicor optim node comput algorithm algorithm initi phase algorithm cnt initi will updat real iter iter partial scan graph disk algorithm node condit load nbr disk cnt core lemma comput core guarante core will decreas comput cnt invok computecnt nbr core core decreas cold updat cnt nbr invok updatenbrcnt nbr cold core node core fall rang core cold will cnt decreas updat min max vmax updat nbr cnt core lemma invok procedur updaterang algorithm final algorithm converg final core number node graph return compar algorithm hand algorithm reduc number node comput gorithm comput core number node hand node comput addit invok localcor algorithm take extra cost maintain cnt computecnt updat cnt nbr updatenbrcnt easi computecnt updatenbrcnt deg time time complex localcor extra cost well bound algorithm analysi compar state art effici core decomposit algorithm emcor semicor algorithm advantag bound memori semicor semi extern model requir memori emcor requir memori worst case instanc handl orkut dataset node edg experi semicor consum memori emcor consum memori memori algorithm imcor algorithm consum memori read semicor requir read scan node edg tabl sequenti disk iter emcor read write partit load main memori will repartit written disk iter practic write slower read simpl memori structur data access emcor invok memori algorithm imcor complex data structur bin sort involv complex graph partit repartit algorithm semicor array core cnt data access sim ple semicor effici practic effici memori algorithm imcor dataset instanc handl orkut dataset experi emcor imcor semicor consum second second second iter init iter iter iter fig illustr semicor exampl process handl graph fig algorithm fig core iter recomput core valu grey cell instanc iter core cnt neighbor core valu smaller algorithm semidelet graph disk edg delet core core cnt cnt vmin vmax core core cnt cnt vmin vmax cnt cnt cnt cnt vmin min vmax max algorithm iter core recomput updat updat cnt neighbor core note iter comput core cnt unknown iter compar algorithm exampl algorithm iter reduc number node comput effici core mainten discuss increment maintain core number edg insert delet graph semi extern set edg delet algorithm design theorem edg delet core number will decreas edg delet core number node graph upper bound core number recal algorithm long core initi arbitrari upper bound core core final converg core algorithm termin algorithm easili modifi handl edg delet algorithm semidelet edg delet algorithm edg remov delet will discuss updat disk edg delet insert updat cnt cnt delet edg comput initi rang vmin vmax node check consid three case core core decreas cnt set vmin vmax second core core decreas cnt set vmin vmax third core core decreas cnt cnt set vmin vmax min max algorithm updat core number node graph mainten introduc maintain graph disk edg insert delet graph recal graph store term adjac list disk simpli updat list edg insert delet cost will high handl allow memori buffer maintain latest insert delet edg edg memori buffer buffer full updat graph disk clear buffer notic time load nbr node disk insert delet edg memori buffer comput updat nbr iter iter fig illustr semidelet delet exampl suppos exampl delet edg fig algorithm updat cnt cnt invok algorithm vmin vmax iter need node comput fig edg insert ration edg insert graph theorem core number will increas result core number node graph upper bound core number algorithm appli direct handl edg insert theorem insert edg suppos core core find candid set consist node reachabl node path consist node core equal core guarante node core number increas subset consequ increas core guarante core upper bound core number appli algorithm comput core number algorithm design algorithm semiinsert edg inser tion algorithm insert updat cnt cnt caus insert edg activ denot candid node core number increas initi fals node iter updat activ converg iter find node activ true core increas node increas core load nbr disk core chang comput cnt updat cnt valu neighbor set activ true neighbor candid updat rang node check iter iter comput rang candid node guarante core upper bound core number invok algorithm comput core number node graph iter iter iter iter iter fig illustr semiinsert insert exampl suppos delet edg graph fig exampl insert edg process comput core number node fig iter algorithm semiinsert graph disk edg insert swap core core cnt cnt core core cnt cnt cold core activ fals activ true vmin vmax updat true updat updat fals min max vmin vmax activ true core cold core core load nbr disk cnt computecnt nbr core nbr core core cnt cnt nbr core cold activ fals activ true updaterang min max vmax updat vmin min vmax max vmin vmax activ true vmin min vmin vmax max vmax algorithm comput candid node iter comput core number iter comput trigger smaller neighbor comput iter trigger larger neighbor comput current iter total number node comput optim edg insert ration algorithm handl edg insert phase phase comput superset node core number will updat increas core number node phase comput core number node algorithm problem algorithm size larg result larg number node comput phase phase algorithm crucial reduc size suppos edg insert graph cnt cnt updat core valu updat loss general assum core core cold core set candid node comput algorithm consist node reachabl path consist node core equal cold set node core updat cold insert lemma lemma cnt unchang cnt will increas proof lemma easili verifi theorem lemma cnt cold proof increas core easi verifi cnt unchang suppos cnt cold deriv local properti theorem hold core core number indic lemma cnt cold proof cnt smaller cold lemma origin cnt smaller cold cnt will increas lemma hold theorem defin cnt cnt nbr core cold updat cnt cnt cnt cold proof core will cold node will contribut cnt hold deriv prove suppos cnt cold prove prove increas core cold appli algorithm core will cold converg note node nbr core will cold will contribut cnt node nbr core cold will contribut cnt cnt cnt cold core will decreas lemma indic theorem cnt defin recurs equat cnt nbr core cold core cold cnt cold comput cnt initi cnt cnt appli iter converg algorithm comput ineffici note theorem care node cnt cold comput expand node expand node guarante cnt cold expand comput cost reduc algorithm design base discuss node status denot status node process node expans node status status expand node expand cnt calcul cnt calcul cnt cold cnt calcul cnt cold status theorem lemma reus cnt repres cnt status cnt repres cnt calcul status status cnt calcul algorithm semiinsert graph disk edg algorithm status status vmin vmax updat true updat updat fals min max vmin vmax status load nbr disk cnt computecnt nbr cold status core cold nbr core cold cnt cnt cnt cold nbr core cold cnt cold status status updaterang min max vmax updat status cnt cold load nbr disk load cnt computecnt nbr cold status core cold nbr core cold cnt cnt nbr status cnt cnt cnt cold updaterang min max vmax updat vmin min vmax max procedur computecnt nbr cold nbr core cold core cold cnt cold status return algorithm semiinsert edg insert algorithm initi phase algorithm initi status status initi algorithm iter updat status core cnt iter check vmin vmax check consid status transit status load nbr disk comput cnt invok computecnt nbr cold compar add condit nbr status node status comput contribut cnt comput cnt set status increas core cold core increas cold increas cnt neighbor core cold set cnt cold will set iter case expand neighbor core cold cnt cold refer lemma expand status set status expand updat rang node check status cnt cold chang status load nbr disk load comput cnt set status updat core cold lemma core chang cold cold neighbor core cold decreas cnt addit status chang will trigger neighbor decreas cnt status cnt decreas cold status updat iter compar algorithm requir phase updat core number algorithm requir phase invok algorithm core number updat iter iter iter fig illustr semiinsert insert exampl suppos delet edg graph fig exampl insert edg process updat status node iter fig iter check updat status updat status neighbor iter status calcul cnt cold set status decreas cnt cell involv node comput mark grey total iter need node status core number updat compar exampl decreas number node comput perform studi experiment evalu perform propos algorithm core decomposit core mainten subsect compar solut state art algorithm subsect effici mainten algorithm report algorithm scalabl subsect algorithm implement gcc complier optim level experi perform linux oper system run machin intel xeon cpu ram rpm sata hard drive time cost algorithm measur amount wall clock time elaps execut adher standard extern memori model statist dataset group dataset demonstr effici semi extern algorithm group consist graph smaller size dblp youtub wiki cpt orkut group consist big graph webbas twitter clueweb detail dataset display tabl group small graph dblp authorship network comput scienc bibliographi dblp youtub dataset densiti kmax dblp youtub wiki cpt orkut webbas twitter clueweb tabl dataset social network base user friendship youtub wiki network user discuss incept wikipedia till januari cpt citat graph includ citat patent grant livejourn free onlin blog communiti user declar friendship orkut free onlin social network group big graph webbas graph crawl perform webbas crawler fair larg crawl domain twitter social network collect twitter node user edg follow tweet transmiss graph crawl domain graph gather snapshot deli project final clueweb web graph under dataset dataset download core decomposit small graph explicit reveal perform core decomposit algorithm select extern memori core decomposit algorithm emcor classic memori algorithm denot imcor comparison fig total run time semicor time faster emcor averag remark semicor faster memori algorithm imcor fig algorithm semicor requir memori emcor imcor algorithm semicor memori reli cnt number node compar semicor contrast emcor consum larg amount memori orkut cpt emcor consum memori size imcor fig consumpt algorithm imcor semicor emcor consum simpl read data access semicor semicor effici emcor refer fig big graph report perform algorithm big graph fig largest dataset clueweb billion node billion edg fig semicor process dataset minut clueweb fig semicor total cost memori process largest dataset clueweb result demonstr algorithm deploy commerci machin dblp youtub wiki cpt orkut semicor semicor semicor emcor imcor time cost small graph min min min min min webbas twitter clueweb day semicor semicor semicor time cost big graph dblp youtub wiki cpt orkut semicor semicor semicor emcor imcor memori usag small graph webbas twitter clueweb semicor semicor semicor memori usag big graph dblp youtub wiki cpt orkut semicor semicor semicor emcor small graph webbas twitter clueweb semicor semicor semicor big graph fig core decomposit dataset dblp youtub wiki cpt orkut semiinsert semiinsert semidelet iminsert imdelet averag time small graph webbas twitter clueweb semiinsert semiinsert semidelet averag time big graph dblp youtub wiki cpt orkut semiinsert semiinsert semidelet averag small graph webbas twitter clueweb semiinsert semiinsert semidelet averag big graph fig core mainten dataset process big graph data fig reveal advanc optim term cost semicor spend semicor semicor dataset core mainten test perform mainten algorithm semiinsert semiinsert semidelet state art stream memori algorithm denot iminsert imdelet compar small graph random select distinct exist edg graph test test perform edg delet remov edg graph averag process time test perform edg insert edg remov insert graph averag process time experiment report fig fig semidelet effici semiinsert process time dataset semidelet simpli semicor reli calcul graph properti fig find core mainten algorithm semiinsert compar state art memori algorithm iminsert edg insert semidelet faster imdelet edg delet simpl structur data access model tte semicor semicor semicor vari twitter semicor semicor semicor vari tte semicor semicor semicor vari twitter semicor semicor semicor vari fig scalabl core decomposit tte semiinsert semiinsert semidelet vari twitter semiinsertsemiinsert semidelet vari tte semiinsert semiinsert semidelet vari twitter semiinsertsemiinsert semidelet vari fig scalabl core mainten semidelet semiinsert outperform semiinsert process time dataset scalabl test experi test scalabl core decomposit core mainten algorithm choos big graph twitter test vari number node number edg twitter random sampl node edg sampl node induc subgraph node sampl edg incid node edg report process time memori usag linear number node curv cost process time core decomposit fig report process ing time propos algorithm core decomposit vari twitter increas process time algorithm increas semicor perform best case order magnitud faster semicor twitter fig process time core decomposit algorithm vari twitter increas process time algorithm increas semicor perform best three algorithm increas gap semicor semicor increas exampl reach semicor order magnitud faster semicor core mainten scalabl test core mainten fig fig fig increas process time algorithm increas semidelet perform best semiinsert faster semiinsert test case curv core mainten algorithm vari fig fig twitter semidelet semiinsert stabl increas twitter high scalabl core mainten algo rithm semiinsert perform worst three algorithm increas perform semiinsert unstabl semiinsert locat connect compon size larg case vii work core decomposit core introduc batagelj zaversnik linear memori algorithm core decomposit present detail tion iii problem studi weight graph direct graph cheng propos effici algorithm core decomposit distribut algorithm core decomposit core decompo sition random graph studi core decomposit uncertain graph studi local comput estim core number studi propos memori algorithm maintain core number node dynam graph semi extern algorithm semi extern model strict bound memori size popular pro cess big graph exampl propos semi extern algorithm find strong connect compon massiv direct graph semi extern algorithm comput dfs tree graph disk divid conquer strategi studi maximum independ set semi extern model viii conclus paper consid real graph big resid main memori machin studi effici core decomposit web scale graph larg number applic exist solut scalabl handl big graph bound memori size load graph memori follow semi extern model well bound memori size propos effici semi extern algorithm core decomposit explor optim strategi reduc cpu cost propos semi extern algorithm optim techniqu handl graph updat conduct extens experi real graph node billion edg demonstr effici propos algorithm refer aggarw vitter jeffrey input output complex sort problem commun acm altaf amin nishikata korna miyasato shinbo arifuzzaman wada maeda oshima mori kanaya predict protein function base core protein protein interact network amino acid sequenc genom infor matic alvarez hamelin barrat vespignani core decomposit tool visual larg scale network corr alvarez hamelin barrat vespignani larg scale network fingerprint visual core decomposit proc nip alvarez hamelin dallasta barrat vespignani core decomposit help understand internet topolog isma workshop internet topolog volum andersen chellapilla find dens subgraph size bound algorithm model web graph bader hogu autom method find molecular complex larg protein interact network bmc bioinformat balasundaram butenko hick cliqu relax social network analysi maximum plex problem oper batagelj zaversnik algorithm core decomposi tion network corr bonchi gullo kaltenbrunn volkovich core decom posit uncertain graph proc kdd cheng chu ozsu effici core decomposit massiv network proc icd cui xiao wang wang local search communiti larg graph proc sigmod dorogovtsev goltsev mend core organ complex network physic review letter giatsidi thiliko vazirgianni core measur collabor direct graph base degeneraci proc icdm giatsidi thiliko vazirgianni evalu coopera tion communiti core structur proc asonam heali janssen milio aiello character graph degre core algorithm model web graph janson luczak simpl solut core problem random struct algorithm qin mao influenti communiti search larg network pvldb mao effici core mainten larg dynam graph ieee tran knowl data eng liu yang xiao wei maximum independ set massiv graph pvldb luczak size connect core random graph discret math molloy core random hypergraph boolean formula random struct algorithm montresor pellegrini miorandi distribut core decomposit tpds sullivan local estim core number proc icdm pittel spencer wormald sudden emerg giant core random graph comb theori ser qin chang zhang local densest subgraph discoveri proc kdd gedik jacqu silva atalyu rek stream algorithm core decomposit pvldb seidman network structur minimum degre social network sozio gioni communiti search problem plan success cocktail parti proc kdd verma butenko network cluster cliqu relax communiti base approach graph partit graph cluster zhang zhao cai liu zhou core decomposit analyz static structur larg scale softwar system journal supercomput zhang qin chang lin effici comput sccs massiv graph proc sigmod zhang qin shang divid conquer effici depth search proc sigmod 