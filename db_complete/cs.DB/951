matter degre degre optim multiway join mana christoph depart comput scienc stanford univers serra mall stanford usa manasrj chrismr abstract optim multiway equijoin relat tabl degre bound degre tight bound maximum output size queri real data bound number triangl social network time tighter exist worst case bound constant amount degre join algorithm run time smaller expon exist algorithm databas instanc degre linear time yield asymptot faster algorithm serial set lower communic algorithm mapreduc set serial set data complex join process express function inx term input size output size depend queri upper bound fraction hypertreewidth interest situat algorithm strict smaller fraction hypertreewidth join process subquadrat time build ayz algorithm process cycl join quadrat time restrict class join call seri parallel graph complet decis procedur identifi subquadrat solvabl subject sum problem requir quadrat time sum base quadrat lower bound tight make tight bound join requir assumpt matrix multipl expon mapreduc algorithm meet improv communic bound handl essenti optim parallel acm subject classif analysi algorithm problem plexiti keyword phrase join degre mapreduc digit object identifi introduct studi queri evalu natur join queri tradit databas system process join pairwis fashion tabl time breed multiway join algorithm develop satisfi stronger runtim guarante sequenti set worst case optim sequenti algorithm nprr lftj process join runtim upper bound largest output size stronger guarante tradit optim provid mapreduc set describ appendix share algorithm describ appendix process multiway join optim communic complex skew free data tradit databas system develop sophist techniqu improv queri perform popular techniqu commerci databas system collect statist mana joglekar christoph licens creativ common licens confer titl volum base editor billi editor bill editor leibniz intern proceed informat schloss dagstuhl leibniz zentrum f√ºr informatik dagstuhl publish germani matter degre degre optim multiway join auxiliari data relat size histogram count distinct attribut valu help system better estim size output runtim queri plan better choic plan motiv statist queri process consid statist improv breed multiway join algorithm sequenti parallel set consid natur choic statist data degre degre tabl number row occur tabl describ simpl preprocess techniqu facilit degre demonstr three applic improv output size bound improv sequenti join algorithm iii improv mapreduc join algorithm applic improv expon relat correspond state art version key techniqu call degre uniform assum moment degre relat partit relat degre attribut assign degre bucket paramet creat bucket degre degre place tupl relat partit base degre bucket attribut valu join problem natur split smaller join problem smaller problem consist join partit relat denot input size set constant number smaller join process will exponenti number relat constant respect data size intuit benefit join partit separ partit will input will reduc skew set appropri scheme allow tighter agm bound consid concret exampl suppos regular graph edg number triangl graph bound min degre base bound agm bound worst case bound match agm bound degre better better simpli sum agm bound combin partit tabl compar bound agm bound triangl join social network snap dataset tabl stand million column ratio agm bound bound bound tighter factor compar bound facebook network number friend user bound tighter agm bound network bound agm bound agmmo twitter epinion livejourn tabl triangl bound social network degre uniformiz ation tool develop algorithm satisfi stronger runtim communic guarante gree uniform allow runtim better expon exist algorithm quir linear time preprocess data demonstr idea serial parallel mapreduc set describ turn serial join algorithm degre uniform deriv case subquadrat algorithm join process precis denot size input denot size output runtim algorithm queri written inx note algorithm queri model read input answer queri queri joglekar acycl yannakaki algorithm achiev queri fraction hypertre width fhw general tree width equal achiev combin algorithm nprr lftj yannakaki algorithm work focus case call subquadrat algorithm subquadrat algorithm interest creatur provid tool attack common case join process smaller work build classic ayz algorithm deriv subquadrat algorithm cycl degre better result achiev fhw result fhw length cycl result specif cycl rais question join solvabl subquadrat time technic ayz algorithm properti cycl result heavi light node high degre low degre degre uniform general method allow deriv subquadrat algorithm larger famili join devis procedur upper bound process time join algorithm match upper bound procedur improv runtim expon relat exist work larg famili join class graph call seri parallel graph complet resolv subquadrat question sens seri parallel graph solv subquadrat time solv subquadrat sum problem appendix solv subquadrat time note seri parallel graph fhw equal solv quadrat time exist algorithm make sum base lower bound tight sum base lower bound triangl join process match upper bound assumpt matrix multipl expon contrast quadrat lower bound match exist algorithm assumpt knowledg tight bound join process time small output size recov sequenti join well ghd framework novel notion width call width larger fhw smaller submodular width appendix resolv subquadrat problem seri parallel graph general subquadrat problem remain open notion width submodular width width fulli character subquadrat solvabl join appendix join mapreduc degre improv effici join mapreduc previous work beam knowledg heavi hitter valu high degre improv parallel join process skew data allow limit rang parallel number processor subject achiev optim communic round mapreduc algorithm degre allow level parallel process join improv degre base upper bound output size better agm bound simpl queri improv parallel algorithm take three round mapreduc match improv bound perform optim round algorithm case exampl improv bound correct upper bound output spars triangl join degre suggest agm bound process join maximum level parallel processor handl tupl total communic cost seri parallel graph consist sourc vertex target vertex set path length share node matter degre degre optim multiway join contrast previous work requir communic previous work edg pack bound communic cost process join edg pack paradox properti size subrel subrel join communic cost larger exampl suppos join relat attribut schema pia set relat join chang join output weight term subrel pia edg pack linear program increas communic cost bound contrast add pia join degre base bound increas will fact decreas pia small comput degre case degre case simpl comput degre valu time linear input size degre comput procedur fulli parallel mapreduc includ complex comput degre algorithm outperform state art join algorithm paper structur describ work describ process call degre uniform mitig skew bound join output size strengthen expon agm bound describ method comput degre attribut relat dart sequenti algorithm achiev tighter runtim expon state art dart process join subquadrat time establish quadrat runtim lower bound class queri modulo sum problem final recov dart familiar ghd framework novel notion width width tighter fhw bound tighter expon agm dbp bound tunabl parallel algorithm communic cost maximum paral lelism equal input size dbp bound guarante work input independ skew work divid work broad categori join algorithm implement agm bound tight output size multiway join term queri structur size relat queri exist join algorithm nprr lftj generic join worst case runtim equal bound exist instanc relat output size smaller worst case output size agm bound algorithm higher cost output size demonstr bound output size tighter expon agm bound account degre valu match paralleliz algorithm acycl queri yannakaki algorithm instanc optim constant multipl factor cost input size cyclic queri combin yannakaki algorithm worst case optim algorithm nprr better perform nprr general hypertre decomposit ghds queri answer queri time infhw fhw measur cyclic queri queri acycl fhw work allow tighter runtim expon joglekar fhw deal valu degre separ parallel join algorithm share algorithm optim round algorithm skew free databas match lower bound beam communic cost wors optim skew work deal skew optim round algorithm skew gym algorithm allow log round mapreduc round reduc cost allow round reduc work three round improv exist round algorithm parallel algorithm incorpor step gym well reduc communic cost databas statist cycl detect algorithm alon yuster zwick improv fhw bound degre sequenti set fhw cycl ayz algorithm process cycl join time function cycl length general obtain subquadrat runtim larger famili graph develop general procedur upper bound cost join deal degre valu separ beam work degre parallel join process assum heavi hitter valu high degre degre process separ optim round work edg pack bound cost algorithm edg pack counterintuit properti constraint subrel size worsen edg pack cost suggest edg pack provid framework degre account work remedi perform algorithm improv constraint addit beam assum relat size number processor algorithm maxim parallel contrast algorithm work level parallel rang processor tupl singl processor process degre uniform partit techniqu alon degre uniform techniqu stronger guarante higher cost split relat part maximum degre attribut set constant factor averag degre contrast degre uniform upper bound maximum degre absolut term relat averag degre work stronger partit techniqu fulli character fix paramet tractabl join term submodular width hypergraph marx achiev degre uniform small project output achiev uniform degre relat preprocess expens techniqu written paper take time submodular width join hypergraph preprocess expens join process algorithm time inmw join marx attempt minim expon applic concern fix paramet tractabl unabl find easi achiev runtim techniqu matter degre degre optim multiway join degre uniform describ algorithm degre uniform count well improv output size bound introduc notat high level overview join algorithm describ degre uniform key step algorithm describ bound upper bound join output size tighter expon agm bound provid realist exampl bound tighter agm bound final describ linear time algorithm comput degre preliminari notat paper consid multiway join set relat join set attribut relat schema relat attr denot set attribut schema process join onr defin set tupl piattr denot number tupl relat set attribut attribut set defin tupl attr pia attr degre relat number time occur deg pia valu deg denot join queri hypergraph vertic graph correspond attribut hyperedg relat denot relat schema denot input size sum size input relat denot output size output size bound comput cost communic cost will express notat hide polylogarithm factor logc depend number tupl depend number relat attribut ensu logarithm paper will base agm bound consid linear program linear program minim log attr valid assign weight relat linear program call fraction cover minimum object function agm bound join output size general set relat agm denot agm bound onr degre uniform describ high level join procedur algorithm step comput degre attribut set relat degre maintain databas skip step describ step step constitut degre uniform step partit relat degre assign relat bucket base degre bucket degre degre process join partit relat combin joglekar algorithm high level join algorithm input set relat bucket rang paramet output onr comput deg attr pia comput set degre configur foreach comput partit relat comput comput join onr return partit combin refer degre configur denot individu degre configur denot set degre configur denot relat join configur denot step consist enumer degre configur step consist find partit relat correspond degre configur step comput onr degre configur describ perform step sequenti set describ mapreduc set step combin join output final output step perform effici mapreduc well sequenti set cost algorithm determin step step carri differ sequenti mapreduc set cost sequenti set lower cost mapreduc set step cost step cost read input output cost extra cost incur step process join cost step will describ section degre uniform describ degre uniform detail pick paramet call bucket rang defin bucket bucket iff degre configur specifi uniqu bucket relat set attribut relat formal definit paramet defin degre configur function map pair attr uniqu bucket denot attr attr bblogl exampl join relat configur definit degre configur relat defin set tupl degre consist attr deg pia defin set degre configur paramet matter degre degre optim multiway join exampl tupl degre tupl hand degre configur bound degre valu relat state lemma attr pia deg pia choos optim paramet depend applic three effect dbp bound section sequenti algorithm error output size estim exponenti expon depend number attribut load processor parallel algorithm iii number round parallel algorithm logl result choos small sequenti algorithm dbp bound larger load capac parallel algorithm agm bound degre uniform tighten upper bound join output size idefinit letr set relat attribut ina attr maxv pia deg attr denot log dpib consid linear program linear program maxim iii attr defin maximum object program proposit output size onr inma prove appendix intuit stand valu log pia onr explain constraint project empti set size project size monoton third constraint fact ind valu tupl pia onr ind tupl pib onr linear program attempt maxim total output size insa satisfi constraint defin bound definit denot join queri consist relat bound inmo theorem bound agm constant notat depend number attribut queri number tupl result prove step theorem state dbp bound introduc smaller agm bound theorem impli bound smaller dbp bound time constant joglekar exampl exampl consid triangl join agm bound degre valu will find upper bound output size case log log log log final log log bound case distinct valu log degre degre configur log log log final log log log bound strict smaller expon agm comput agm bound individu degre configur help better exampl tupl singl degre configur exampl consid match databas attribut domain size relat match degre equal bound databas trivial equal unbound smaller expon agm bound appendix compar dbp agm bound show dbp strict smaller expon agm degre degre comput degre advanc comput fli state lemma relat attr find deg pia mapreduc set total communic logl mapreduc round load processor sequenti set comput degre time proof lemma straightforward appendix perform degre uniform comput degre relat attr number pair exponenti number size relat constant respect input size sequenti join process sequenti join process describ problem set sequenti join algorithm dart degre base attribut relat transform dart handl queri consist join project join simpli join project attribut pre process input perform degre uniform dart degre configur dart work perform sequenc transform join problem transform reduc problem smaller problem fewer attribut relat describ transform turn dart recov improv join nprr algorithm yannakaki algorithm fhw algorithm ayz algorithm appli dart subquadrat join problem present case exist term runtim expon famili matter degre degre optim multiway join join call seri parallel graph full dichotomi subquadrat join problem seri parallel graph dart process join subquadrat time algorithm process subquadrat time modulo sum problem note seri parallel graph treewidth make easili solvabl quadrat time sum base quadrat lower bound graph tight make knowledg tight bound join process time small output size contrast lower bound sum triangl join match upper bound depend addit assumpt matrix multipl expon equal dart algorithm recov well framework general hypertre decomposit ghds novel notion width call width width larger fhw smaller submodular width set focus sequenti join process set interest subquadrat join problem state problem graph node graph repres attribut edg repres relat size graph process join relat subquadrat time perform join subquadrat time larg dataset join output size smaller worst case output size note defin subquadrat poli factor smaller instanc logn algorithm subquadrat definit exampl join queri acycl yannakaki algorithm answer time subquadrat general fraction hypertre width fhw queri join process time combin nprr yannakaki algorithm fhw acycl queri graph fhw process join subquadrat time ayz algorithm describ appendix allow process join length cycl time cycl length fhw best knowledg previous result process join fhw subquadrat time dart algorithm applic join project problem equal relat size problem appli dart problem process join subquadrat time despit fhw recov subquadrat runtim dart ghds width dart algorithm describ dart algorithm problem dart solv general join take input set relat set attribut stand output comput pio onr problem reduc join pre process input perform degre uniform degre configur process separ dart paramet degre uniform set small total comput time sum comput time degre configur specifi queri joglekar relat output attribut degre attribut set relat degre configur denot degre configur relat output attribut defin notion runtim complex join project problem definit smallest join project queri structur degre output attribut process time smallest join project queri structur degre output attribut process time exampl exampl differ consid chain join relat relat size degre attribut relat worst case size output attribut valu relat full cartesian product hand join acycl yannakaki algorithm process join time heavi light split dart algorithm perform seri transform reduc smaller problem step choos three type transform call heavi light split transform take input attribut set attribut relat reduc join project problem simpler problem procedur reduct bound term valu simpler problem describ transform turn input procedur bound heavi input attribut procedur attr comput valu lie relat val pixr val margin solv reduc problem pio onr onr pia final output val piox relat maximum bucket val minr second reduc problem size reduc relat pia reduc denot reduc relat degre output attribut bound minr minr light input attribut set procedur light transform reduc number relat defin attr comput onr pixr subjoin comput sequenti version parallel techniqu take time equal dbp bound join delet relat add degre attribut comput term degre relat long reduc problem stay unchang matter degre degre optim multiway join reduc problem size relat upper bound dbp bound well dbp denot bound bound dbp dbp split input articul set attribut join attribut set attribut common satisfi attr procedur comput pis onr take time onr attr comput output step cost comput tupl match output tupl set comput pio onr tupl pair match tupl output attr defin bound attr combin transform transform dart algorithm straightforward consid sequenc transform solv problem pick smallest upper bound number transform sequenc exponenti number attribut relat constant respect data size valu comput recurs degre configur recurs step specifi degre configur smaller problem degre comput term degre note case cost bound bound split transform dart algorithm dart consid perform transform upper bound cost dart recov exist sequenti join proposit comput join singl light transform total cost agm bound recov result nprr algorithm proposit success appli split transform acycl join ear join step total cost algorithm recov result yannakaki algorithm proposit queri fraction hypertre width equal fhw combin split light transform bound cost run dart infhw recov fraction hypertre width result proposit cycl join length relat size process dart time recov result ayz algorithm proposit prove appendix subsect case exist interest join output attribut set assum joglekar subquadrat join consid applic dart subquadrat join problem analyz dart join graph allow subquadrat runtim upper bound case appendix mention simpl extens ayz result graph tree cycl embed defin set graph complet decis procedur determin solv subquadrat time modulo sum problem seri parallel graph definit seri parallel graph consist sourc node sink node number path arbitrari length node common equival seri parallel graph seri parallel graph number seri transform creat path exact parallel transform join path endpoint cycl special case seri parallel graph theorem seri parallel graph decis procedur determin join graph process quadrat time direct edg path length join process quadrat time remov path length affect quadrat solvabl join problem remain number path length join process subquadrat time modulo sum number remain path graph solv quadrat time theorem establish decis procedur subquadrat solvabl seri parallel graph appendix exampl subquadrat solut specif seri parallel graph exampl general bipartit graph exampl dart achiev better runtim expon algorithm three statement impli theorem formal state prove appendix lemma seri parallel graph direct edg path length join graph process subquadrat time suppos seri parallel graph direct edg vertex edg path length graph delet vertex edg xsxu xuxt join process subquadrat time process subquadrat time seri parallel graph edg path length join process subquadrat time sum problem solv subquadrat time matter degre degre optim multiway join notion width width demonstr formul dart algorithm join project term ghds defin defin constraint linear program object set maxim maxim defin object function prog denot linear program find size pia onr bound inma appendix proposit ghdd queryr definemw maxt simpli minimum ghds definit width join queri onr uniform degre maxc theorem queri width answer time inmw theorem recov subquadrat join well seri parallel graph subquadrat join algorithm theorem construct ghd width appendix bound better dbp bound consequ agm bound state theorem earlier theorem join queri degre configur dbp log cover dbp bound note logarithm base log term neglig expon bound expon constant theorem recov dart algorithm appendix theorem impli notion width width tighter fhw appendix compar width submodular width bar width tightest notion width applic general join appendix exampl width tighter submodular width general width tighter submodular width appendix width impli subquadrat solvabl convers true exampl join width submodular width solv subquadrat time notion width fulli character subquadrat solvabl graph parallel join process sequenti set degre uniform appli mapreduc set dbp bound bound output size tighter agm bound tighter character complex parallel algorithm round mapreduc algorithm cost equal dbp bound highest level parallel dbp bound start defin quantiti call degre base pack dbp joglekar definit set relat attribut denot cover set pair attr consid linear program linear program minim log dpia maximum object program defin dbp minc minimum cover proposit constant output size onr indbp implicit prove result provid parallel algorithm complex equal output size bound maximum parallel level defin dbp bound arbitrarili set definit choos constant chang bound constant factor defin dbp bound dbp simpl corollari output size join dbp bound theorem degre configur indbp agm prove theorem sequenc linear program transform start agm bound dbp bound transform decreas object function key transform switch cover base program pack base program proof long defer appendix appendix simpl triangl join exampl dbp bound tighter expon agm bound general exampl show dbp bound strict better expon agm degre parallel join algorithm parallel round join algorithm algorithm work level parallel load level communic cost match dbp bound formal state result provid exampl perform addit exampl provid appendix theorem process join logl round three round degre load processor communic cost maxc indbp proof sketch join consist step perform degre find uniform bucket rang degre configur comput degre solv linear program cover cover smallest object smallest will equal dbp mapreduc round join pia singl step share algorithm attribut assign share inva solut linear program ensur load processor communic cost maxc indbp lemma prove appendix matter degre degre optim multiway join mapreduc round attr semijoin output previous join semijoin parallel round intersect semijoin round load communic cost lemma share algorithm attribut share inva solut linear program load processor high probabl communic cost maxc indbp exampl consid spars triangl join relat size degre load level join requir dbp processor equival processor load processor decreas fast function contrast vanilla share algorithm alloc share attribut load processor current state art work load well explor general exampl appendix exampl parallel algorithm oper maximum parallel lower total cost exist state art sequenti algorithm conclus futur work demonstr degre join tighten expon output size bound present parallel algorithm work level parallel communic cost match tighten bound maximum parallel level propos question decid join process subquadrat time progress answer tight quadrat lower bound famili join make tight bound assumpt matrix multipl expon present improv sequenti algorithm dart general join algorithm outperform case recov dart ghd framework novel notion width tighter fhw tighter submodular width well present case dart outperform exist algorithm context subquadrat join dart outperform exist algorithm join higher treewidth well fuller explor improv upper bound achiev dart left futur work appendix exampl join perform subquadrat time despit width submodular width problem precis character join perform subquadrat time remain open focus entir degre join process kind store databas improv join process promis direct futur work acknowledg author atri rudra point connect modular width grate acknowledg support defens advanc project agenc darpa xdata program deft program dar pas memex program nation scienc foundat nsf career award award ccf earthcub award aci offic naval onr award sloan fellow ship moor foundat data driven investig award gift american famili insur googl lightspe ventur toshiba joglekar refer afrati joglekar salihoglu ullman gym multiround join algorithm mapreduc corr afrati ullman optim multiway join map reduc environ ieee tkde alon newman shen tardo vereshchagin partit multi dimension set small number uniform part eur comb alon yuster zwick find count length cycl extend abstract proceed second annual european symposium algorithm esa london springer verlag atseria grohe marx size bound queri plan relat join siam comput ilya baran erikd demain mihai patrascu subquadrat algorithm dehn lopez ortiz sack editor algorithm data structur volum lectur note comput scienc springer berlin heidelberg beam koutri suciu communic step parallel queri process pod beam koutri suciu skew parallel queri process pod andrea bj√∂rklund rasmus pagh virginia vassilevska william uri zwick list triangl javier esparza pierr fraigniaud thore husfeldt elia koutsoupia itor automata languag program volum lectur note comput scienc springer berlin heidelberg chekuri rajaraman conjunct queri contain revisit tcs gottlob grohe nysret marko scarcello hypertre decomposit structur algorithm applic gross yellen zhang handbook graph theori second edit chapman hall crc edit koutri suciu parallel evalu conjunct queri proceed thirtieth acm sigmod sigact sigart symposium principl databas system pod york usa acm leskovec krevl snap dataset stanford larg network dataset collect http data june marx tractabl hypergraph properti constraint satisfact conjunct queri acm ngo porat rudra worst case optim join algorithm extend abstract proceed symposium principl databas system pod york usa acm ngo rudra skew strike develop theori join algorithm sigmod veldhuizen leapfrog triejoin worst case optim join algorithm corr yannakaki algorithm acycl databas scheme vldb matter degre degre optim multiway join background general hypertre decomposit ghds definit set relat attribut general hypertre decomposit pair tree function node relat exist tree node cover relat attr attribut set tree node form connect subtre condit call run intersect properti set refer bag ghd ghds defin notion width captur cyclic queri exampl treewidth ghd maximum node treewidth queri treewidth minimum treewidth ghd fraction hypertreewidth fhw maximum login agm agm agm bound set attribut relat fhw queri minimum fhw ghds width ghd notion width size join onr inw join comput comput join bag run yannakaki algorithm relat runtim inw mapreduc mapreduc model unbound processor network file system processor unbound hard disk space load capac explain comput proceed phase step processor refer mapper read tupl hard disk send tupl processor call reduc total number tupl receiv reduc mapper exceed load capac step reduc local process tupl receiv stream output network file system output size reduc exceed load capac stream network file system communic cost round defin total number tupl mapper reduc measur complex algorithm term communic cost number round share algorithm share round mapreduc algorithm share parameter algorithm communic cost queri machin size suppos join onr attribut set share assign paramet call share attribut hash attribut bucket hash function asa processor processor correspond tupl hash valu processor attribut denot hash correspond processor share singl round mapreduc round tupl processor attr processor join joglekar tupl receiv final output join equal union output produc processor tupl relat attr processor communic cost algorithm attr expect load processor number input tupl receiv attr simpli total communic divid total number processor hand varianc load high lead processor receiv high number input tupl general share chosen minim total communic cost number processor articul set suppos hypergraph hypergraph connect pair exist sequenc connect articul set set hypergraph connect equival articul set ayz algorithm consid join cycl join length cycl fhw equal join process time process join subquadrat time attribut comput degre valu choos threshold call degre light valu heavi process heavi light valu separ number heavi valu attribut heavi attribut margin restrict effect comput join valu remov effect turn join chain join pixj hrj column output chain output call output outh yannakaki algorithm chain solv time outh total time process heavi valu attribut outh outh find output heavi delet heavi valu process light valu simpl brute forc search start neighbor neighbor intersect neighbor direct total run time procedur number valu time total number neighbor explor matter degre degre optim multiway join total process time join set minimum run time subquadrat sum defin sum problem problem problem integ polynomi size exist three number algorithm solv problem time believ algorithm exist hand algorithm solv problem time smaller subpolynomi log factor state xor problem subquadrat reduc sum problem problem problem integ polynomi size exist three number refer bitwis xor degre comput lemma relat attr find deg pia mapreduc set total communic logl mapreduc round load processor sequenti set comput degre time proof suppos schema attribut loss general assum find degre assumpt start locat tupl tupl processor processor index tupl processor find hash addit processor generat random number send processor processor receiv tupl expect second random hash processor correspond tupl bucket hash correspond distinct valu tupl associ count field initi count field tupl processor start step logl step step processor local aggreg count tupl processor reciev multipl copi processor send aggreg tupl count pair processor logl step will tupl processor processor distinct tupl count step number tupl receiv processor joglekar correspond number distinct valu hash time number processor send tupl log factor earlier stage total count equal degre need sequenti set simpli processor simul mapreduc comput comput cost equal sum comput communic cost mapper reduc round total comput fulli subsum total communic mapreduc algorithm recov previous dart proof proposit proposit comput join singl light transform total cost agm bound recov result nprr algorithm proof perform light transform set equal set attribut join dbp simpli equal dbp bound join theorem tell agm bound join light transform join singl relat size equal dbp bound join valu origin join equal dbp bound agm bound proof proposit proposit success appli split transform acycl join ear join step total cost algorithm recov result yannakaki algorithm proof proce acycl join impli proposit induct number relat join clear true relat suppos equal input size acycl join relat consid acycl join relat acycl ear relat relat attribut uniqu attribut well appli split transform attr attr join consist attribut bound relat consid consist relat relat origin join attribut subset attribut light transform attr definit includ attribut contain dbp bound join size join light transform relat acycl induct hypothesi join complet proof proof proposit proposit queri fraction hypertre width equal fhw binat split light transform bound cost run dart infhw recov fraction hypertre width result matter degre degre optim multiway join proof fhw fraction hypertre width join exist ghd highest agm bound bag ghd equal infhw bag ghd perform light transform equal set attribut bag time comput dbp bound join agm bound infhw ghd chosen light transform left acycl join relat size infhw proposit dart process join time infhw prove dart recov fhw bound proof proposit proposit cycl join length relat size process dart time recov result ayz algorithm proof relat schema schema proof ayz algorithm describ degre configur attribut degre relat perform heavi transform number distinct valu acycl consid degre configur attribut degre perform sequenc light transform step perform light transform step perform light transform dbp bound transform prove induct set cover solut linear program valu output size bound case assum induct hypothesi upto consid cover attr relat schema light transform induct hypothesi solut linear program attr wri requir bound case light transform transform will relat schema size relat schema size relat form acycl join relat form acycl join proposit join time requir subquadrat join tree cycl structur mention simpl extens ayz result definit tree cycl structur tcs cycl length includ singl isol node tcs disjoint tcss edg vertex vertex tcs tcss form step join tcss process subquadrat time well joglekar theorem join tcs time length longest cycl tcs definit tree cycl structur extend includ graph subquadrat solvabl subquadrat seri parallel graph lemma seri parallel graph direct edg path length join graph process subquadrat time proof set path length induct join singl edg process time assum subquadrat solut perform split transform articul set consist consist attribut cycl subquadrat suffic subquadrat suppos length path suppos attribut degre perform sequenc light transform join solv total cost subquadrat suppos path attribut degre perform heavi transform heavi transform left chain perform split tranform articul set consist output attribut set consist lie entir split bound term simpli split transform effect remov chain remov remain attribut edg leav subquadrat join process subquadrat time lemma suppos seri parallel graph direct edg vertex edg path length graph delet vertex edg xsxu xuxt join process subquadrat time process subquadrat time proof direct lemma easi prove requir quadrat time solv set xsxu xuxt full cartesian product join equival quadrat time assum solv time first degre relat perform heavi transform total cost subquadrat assum degre perform matter degre degre optim multiway join light transform relat size split consist relat attribut xsxt size proof proof previous lemma edg number path time edg relat size choos path length perform split articul point consist attribut left choos small attribut degre relat size perform sequenc light transform total cost subquadrat attribut degre relat size choos smallest degre written suppos degre perform light transform total cost relat attribut degre perform heavi transform min distinct valu chain relat size size split transform previous lemma proof left project cost total cost min subquadrat prove lemma requir sum hard proof formal state prove lemma sum hard seri parallel graph lemma seri parallel graph edg path length join process subquadrat time sum problem solv subquadrat time will reduc join problem xor problem prove hard simplest seri parallel graph path size join larger graph easili reduc graph prove theorem notat attribut name conveni theorem consid join graph attribut relat relat size suppos algorithm process join time sum solv time proof assum power simpli introduc dummi number increas problem size factor suppos correspond algorithm consid xor instanc will join algorithm subquadrat solv instanc famili linear hash function hash function input length output length function bit key defin denot inner product modulo hash function linear addit bitwis xor pra joglekar pick small exact will assum pick power larg will hash number log bit linear hash function well hand probabl will solv xor problem hash valu origin problem solut number sum will hash valu hand expect number fals posit tripl number sum hash valu sum number tripl time probabl fals posit bucket number total call hash bucket heavi element bound number element contain heavi bucket lemma refer lemma random function prh set element prh expect number element expect number element heavi bucket heavi element sum sum xis check sum condit heavi element time assum bucket element instanc join reduc xor problem instanc attribut valu consist bit combin log bit distinct attribut valu attribut attribut distinct attribut valu relat edg origin problem heavi bucket express hash add edg valu relat consid tripl log bit number bitwis xor tripl tripl element connect element connect join instanc relat size set join instanc xor instanc take time analyz output join instanc suppos output tupl relat hash equal hash equal hash equal connect bitwis xor bitwis xor tripl solut xor problem fals posit appli subquadrat join algorithm exist assum join instanc size run time greater termin return true xor problem will justifi output tupl tripl hash bucket bitwis xor matter degre degre optim multiway join tripl bucket check correspond tripl check sum take time find tripl return true xor problem find tripl output join return fals recal expect number fals posit correct answer xor problem fals program termin time high probabl justifi decis return true program run polynomi longer time probabl correct answer fall exponenti program run solv xor problem high probabl time choos small set min xor solv time prove theorem dart applic exampl exampl join special case seri parallel graph potenti applic recommend consist attribut side connect side join relat instanc friendship graph pair peopl friend common list friend attribut netflix user movi yis attribut genr join interpret find user movi pair user like attribut movi exampl dart seri parallel graph prove join process subquadrat time join relat prove join subquadrat induct base case graph chain solv linear time yannakaki algorithm dart includ yannakaki algorithm special case solv chain linear time well induct assum consid degre configur degre greater perform heavi transform number reduc graph heavi transform configur hand degre configur yis degre perform light transform relat ryi size perform split transform articul set consist project size well upper bound subquadrat complet induct exampl runtim improv dart limit treewidth join general process join complet bipartit graph treewidth min time inmin simpli margin attribut side time bound inmin dart margin attribut exampl consid treewidth relat size attribut side suppos process join time set degre attribut margin achiev runtim joglekar hand degre perform light transform relat size join split transform runtim runtim dart bound proof width bound proof theorem state prove general proposit proposit will corollari proposit comput relat time inma inma pia onr defin proof pia onr consid solut prog solut tight constraint form attr turn constraint constraint system relat lhs rhs constraint chain tight constraint lhs rhs produc sequenc relat inmai final equal produc relat induct set piai exist attr sai sai set piq oper involv relat origin join ris satisfi oai insai comput time insak inma satisfi set requir satisfi condit proposit complet proof proposit output size onr inma proof pia onr set proposit simpli output join onr subset size inma output size inma proof theorem theorem join queri answer time inmw width proof denot pia onr ghd width equal perform join three step bag ghd comput proposit comput time properti ensur ont definit width comput time size bound inmw bag comput semi join ensur ont inmw matter degre degre optim multiway join yannakaki algorithm join time inmw complet proof proof theorem theorem join queri degre configur dbp log cover dbp bound proof dbp solv linear program optim cover optim cover optim solut denot optim solut linear program prog attr defin cover will sbj log induct lhs equal rhs log equal dbp log prove theorem base case set linear program constraint log dpia prog constraint log dpia log base case prove induct suppos prove sbj log linear program log dpiaj prog sbj daj definit sbj sbj log dpiaj sbj log induct hypothesi sbj log sbj log prove sbj log consequ dbp log complet proof recov dart ghds theorem bound smaller agm bound result ghd smaller fhw recov proposit recov subquadrat join theorem ayz result recov ayz proposit cycl join length relat size width recov result ayz algorithm cycl join relat size choos will degre configur construct ghd suppos configur degre build ghd bag attr bag form chain ghd bag bound log mattr log log joglekar degre configur form ghd bag xdn xdn bag stilln time log log log degre configur find ghd impli width recov ayz result lemma lemma seri parallel graph direct edg path length width join graph proof will degre configur construct ghd suppos path exclud xsxt edg path edg xsxt form cycl cycl form ghd degre configur ayz recoveri call ghds edg xsxt bag creat bag connect ghd full join bag origin ghds recov ayz result xsxt edg ghd degre configur width join lemma lemma suppos seri parallel graph direct edg vertex edg path length graph delet vertex edg xsxu xuxt width join width join proof edg xsxu xuxt direct edg xsxt direct easi prove suppos width join join ghd degre configur configur consid correspond configur degre relat degre consid ghd configur ghd remov bag ghd impli width join suppos width join degre configur ghd consid degre configur configur keep degre valu suppos degre ghd bag ghd ghd assum degre relat previous proof will consid path construct ghd path bag creat bag stitch matter degre degre optim multiway join ghds ghd describ construct ghd path consid path relat path suppos degre relat choos smallest degre form ghd bag bag bag log log add log definit bag log log add log path ghd log hand degre singl bag log ghd path degre configur construct ghd impli width join comparison width theorem impli width larger fraction hypertreewidth con sequent larger treewidth general hypertreewidth width smaller submodular width ignor width tightest notion width general join exampl exampl consid cycl join relat relat size degre equal relat width join valu linear program hand submodular width join consid cliqu join attribut pair attribut singl relat tupl degre relat width join submodular width unbound larger exampl reli fact width take actual degre relat degre uniform account submodular width worst case degre addit wheneverma submodular function overa width guarante submodular width submodular exampl exampl consid join relat degre relat distinct valu degre valu distinct valu valu comput valu set valu relat valu relat log log well degre log well log final log log log impli submodular exampl heart degre uniform weaker uniform expens degre uniform relat joglekar final output exampl degre relat valu will output degre output rang uniform ensur degre uniform project output well start valu degre valu elimin relat number match valu degre reduc number valu degre valu left chang number valu account valu naiv remedi repeat perform degre uniform step join lead higher linear cost relat subquadrat solvabl width graph subquadrat solvabl width submodular width sum hard seri parallel graph theorem width submodular width equal graph edg edg domin submodular function ghd exist bag suppos valu degre relat valu attribut degre relat valu join happen submodular ghd put width occur path node ghd path graph xsai aibi bixt node path node path edg node ghd bis combin width submodular width sum hard graph join solv subquadrat submodular width case fact submodular width tight lower bound runtim expon counterexampl triangl join submodular width equal output size small triangl join comput time triangl comput algorithm matrix multipl subroutin fact matrix multipl expon matrix multipl expon defin smallest dens matric multipli time exampl graph edg submodular width comput join subquadrat time matrix multipl combin dart algorithm theorem consid graph edg join graph solv subquadrat time output size small proof sketch describ transform reduc join matter degre degre optim multiway join degre heavi transform reduc join acycl process join time assum small degre perform light transform singl relat size low degre split transform remov left edg size degre heavi transform reduc problem triangl join solv time fact degre heavi transform number triangl bound subquadrat time assum degre equal degre light transform attribut output size quadrupl neighbor assum degre equal degre perform light transform triangl tupl perform split transform articul set comput join attribut time valu valu size bound project comput join time valu neighbor solv join time final assum degre previous case perform split transform comput join project time remain join relat size valu valu convert singl attribut valu triangl join random divid valu set triangl join three relat size matrix multipl multipl multipl base algorithm triangl find solv triangl join time strict small combin solut triangl join total time strict prove join solv subquadrat time dbp bound parallel process intuit dbp bound intuit dbp bound clearer dual version linear program linear program dual linear program maxim log dpia linear program structur edg pack program edg pack assign negat weight edg total weight attribut joglekar maxim sum weight weight log relat size linear program dbp thought variant edg pack differ assign weight relat assign weight subrel pia well minimum cover join cover consist relat subrel pia biggest differ edg pack weight edg pia multipli log size size maximum number distinct valu pia extern pia connect degre dpia natur bound size pia smaller spars relat proof theorem theorem degre configur indbp agm bound proof relat attr denot maximum degre relat simpli equal note degre configur specifi degre bucket denot minimum degre bucket actual maximum degre strict valu bucket neighbor valu origin relat compat degre configur actual degre piattr defin effect size pair induct maxa dpia set definit tell dpia pia tell lower bound actual size pia divid induct prove upper bound maximum size divid easili true singleton simpli equal pia bigger prove current configur neighbor origin current configur neighbour origin current configur neighbor pia current configur dpia definit dpia pia dpia prove result sequenc linear program start dual fraction cover program optim object equal log agm bound matter degre degre optim multiway join dbp program optim object equal log dbp bound optim object step equal previous step start dual fraction cover linear program assign negat attribut relat join sum valu attribut assign relat log relat size object maxim sum vas optim object program agm bound modifi program includ constraint subrel attr add constraint valu attribut log program feasibl vas equal valid solut constrain previous maxim problem addit constraint reduc optim object reduc hand side constraint program strict constrain feasibl optim object equal previous program consid optim solut linear program constraint tight optim solut attribut exist tight constraint increas increas object violat constaint contradict optim solut set tight constraint form cover attribut call cover replac inequ constraint equal constraint program constrain previous optim solut feasibl program well exact optim object equal constraint log inequ constraint log constraint impli log equal constraint log replac log log equival linear pro gram optim object note replac rewrit constraint log constraint minim maxim object program feasibl smaller object log constraint earlier chang constraint belong cover subset turn constraint constraint origin dual program leftov constraint subset cover drop constraint problem constrain earlier minim problem object smaller induct definit tell dpia chang rhs constraint log log dpia loosen constraint current equal joglekar constraint log lower bound replac equal constraint log pia loosen constraint note dpia pia constraint special case constraint step loosen constraint decreas optim object linear program program defin dbp extra factor rhs constraint smaller optim object program dbp program dbp minimum cover program chose specif cover actual dbp solut linear program agm bound prove result requir size relat fraction cover join queri agm bound fact dbp agm replac hand side constraint program step reduc object origin program remain step exampl compar dbp agm bound exampl comparison dbp agm exampl consid triangl join degre valu will choos cover find object linear program cover note dbp bound minimum cover cover smaller linear program object purpos exampl dbp bound tighter agm bound suffic upper bound dbp bound tighter agm bound case choos cover cover solut linear program valu set object log log log dbp bound tell join output size upper bound case larg number distinct valu small advantag consid cover linear program solut trivial join size bound pix contrast agm bound loos upper bound irrespect degre comput agm bound individu degre configur help better exampl tupl singl degre configur exampl suggest exampl dbp bound tighter expon agm bound degre degre higher lower general exampl suppos join consist binari relat size degre join hypergraph connect agm bound join will equal dbp bound dbp bound will smaller agm bound factor matter degre degre optim multiway join consid travers join hypergraph relat join relat call join consid cover solut linear program bound ndn contrast attribut agm bound achiev attribut valu relat full cartesian product ratio agm bound dbp bound hand valu relat number valu attribut smaller degre valu proof lemma lemma share algorithm attribut share inva solut linear program load processor high probabl communic cost maxc indbp communic consid share algorithm tupl pia will processor hash match tupl number processor tupl ainva total communic pia ainva indbp total communic bound indbp multipli factor depend number relat schema size number tupl relat load analyz load processor will mth moment load processor load high probabl ignor factor depend consid processor hash remain attribut tupl pia will processor hash equal pia indic variabl true hash equal expect load processor load pia consid themth moment load considerm tupl pia tupl specifi attribut valu equal exampl tupl equal count number size set tupl pattern equal valu probabl tupl processor defin set attribut valu occur instanc schema tupl equal definit probabl tupl hash processor tlin number tupl set upper bound joglekar number way choos fix dpia mth moment load tlin tlin mth moment load load processor high probabl ignor term depend addit exampl parallel algorithm exampl general previous exampl degre requir number processor load level dbp dbp dbp invert analysi chang number processor chang load increas load long optim parallel increas load decreas doubl reduct load final load maximum parallel level exampl exampl demonstr parallel algorithm outperform exist optim sequenti algorithm consid triangl join suppos degre degre valu dbp bound join run worst case optim algorithm nprr lftj time process join attribut order hand simpl sequenti version parallel algorithm take time concaten three join attribut spars attribut time join nprr take time attribut order sequenti parallel algorithm take time note ghd base algorithm runtim infhw improv runtim three relat singl bag ghd 