finit open queri answer number restrict extend version antoin amarilli télécom paristech institut mine télécom cnrs ltci telecom michael benedikt univers oxford open queri answer problem decid set fact conjunc tion constraint queri fact constraint impli queri amount reason instanc includ fact satisfi constraint studi finit open queri answer fqa assum under finit consid finit complet instanc major decid case fqa deriv guard fragment order logic express referenti constraint data place point data express number restrict function depend guard fragment number restrict signatur ariti decid fqa combin referenti constraint number restrict arbitrari signatur unari inclus depen denci function depend finit assumpt fqa lift finit implic closur depend result reli techniqu construct finit univers model constraint bound maxim queri size introduct longstand goal comput logic design logic languag decid express approach distinguish integr constraint queri separ lan guag seek decid queri answer constraint problem queri conjunct constraint finit instanc determin answer hold instanc extend satisfi problem call open queri answer fundament decid queri contain constraint queri presenc ontolog reformul queri constraint subject intens studi communiti decad case databas instanc interest finit defin finit open queri answer denot fqa restrict quantif finit extens contrast unrestrict open queri answer uqa refer problem finit infinit general class queri conjunct queri cqs queri built relat atom existenti quantif conjunct will restrict cqs omit explicit mention queri languag focus constraint languag constraint class tractabl open queri answer problem inclus depend constraint form xyz fundament johnson klug rosati fqa uqa decid fact coincid constraint finit control general báráni richer class constraint guard fragment order logic cover second kind constraint number restric tion express uniqu repres class function depend fds form implic prob lem follow set decid fds coincid implic restrict finit instanc trivial fqa uqa problem decid fds coincid combin fds uqa fqa undecid general uqa decid fds conflict intuit condit guarante fds ignor long hold initi instanc solv queri answer problem consid conflict condit appli uqa fqa fact simpl class fds includ conflict class fqa uqa coincid rosati fqa undecid conflict fds key rich fds general question extent class fds combin retain decid fqa decid case impos sever requir exampl constraint class singl kds fks introduc decid fqa constraint model fds key contrast general case fds singl kds fks finit control limit express tool deal fqa finit control constraint relat arbitrari ariti second decid case relat symbol subformula constraint ariti context pratt hartmann impli decid fqa uqa rich finit control sublog order logic fragment ariti logic complex fqa isol ibáñez garcía appli arbitrari ariti signatur contribut paper provid result finit queri answer finit control fds relat arbitrari ariti problem undecid general natur restrict choic limit unari uid export variabl instanc xyz uid fds interest class studi finit control allow model singl attribut foreign key common case databas system decid uqa uid fds conflict paper finit queri answer decid uid fds tight bound complex idea reduc finit case unrestrict case complex finit control techniqu origin cosmadaki studi finit implic uid fds finit closur oper take conjunct uid fds determin exact addit uid fds impli finit instanc rosati ibáñez garcía closur oper studi constraint class schema ariti finit queri answer queri instanc constraint reduc unrestrict queri answer finit closur closur construct sound implic sound queri answer general approach appli arbitrari ariti signatur constraint uid fds main result reduc finit queri answer unrestrict queri answer uid fds arbitrari ariti theorem finit instanc conjunct queri constraint consist uid fds finit open queri answer problem answer unrestrict open queri answer problem finit closur complex uqa uid isol precis complex finit queri answer respect uid fds show match uqa corollari combin complex finit open queri answer problem uid fds complet ptime data complex constraint queri fix proof theorem involv deal arbitrari ariti model introduc difficulti ariti case case isol borrow adapt varieti techniqu prior work bound simul preserv small acycl cqs deal uid topolog sort perform chase reus element product group larg girth blow cycl develop infrastructur deal number restrict arbitrari ariti set distinguish call danger danger posit chase construct realiz relat piecewis manner fds reus element combinatori shuffl avoid violat higher ariti fds notion mix product blow cycl preserv fact overlap avoid violat higher ariti fds paper structur general scheme present iii construct model uid fds univers queri size call univers model start unari fds ufd acycl cqs acq assum uid ufd revers condit inspir finit closur construct warm prove weaken result weaker notion univers start binari signatur general arbitrari ariti extend result univers maintain bound simul chase perform thrifti chase step reus element violat ufd reli structur observ chase uid theorem elimin assumpt depend revers partit uid class revers trivial satisfi success class order general result higher ariti unari fds vii requir defin notion thrifti chase step appli instanc way reus element exist instanc reli combinatori construct model fds high number fact small domain theorem vii viii appli cycl blowup process result previous construct acycl arbitrari cqs product acycl group techniqu inspir otto adapt respect fds complet proof provid appendix background instanc assum infinit countabl set element valu variabl name schema consist relat name ariti assum unnam perspect set posit pos defin pos pos identifi confus result relat instanc model set ground fact form relat tupl valu size instanc number fact activ domain dom set element appear posit pos defin project piri set element dom occur posit pos project pil set tupl defin analog conveni depart unnam perspect tupl posit superinst finit instanc homomorph instanc instanc map dom dom fact fact constraint consid integr constraint depend special sentenc order logic usual relat set allow function symbol definit instanc satisfi constraint written standard inclus depend sentenc form variabl occur export variabl variabl occur ariti depend number variabl work studi unari inclus depend uid ariti uid write posit export variabl occur instanc uid xyr written assum loss general trivial uid form conjunct uid transit close close implic transit rule trivial transit closur clear comput ptime trivial uid impli finit unrestrict instanc uid revers relat revers function depend sentenc form pos pos breviti write call unari function depend ufd higher ariti instanc ufd write assum allow nonstandard degener fds call trivial case hold fact violat trivial pil pil key depend pos conjunct fds pos unari hold call key unari key queri atom consist relat tupl variabl constant conjunct queri existenti quantifi conjunct atom paper focus simplic boolean queri queri free variabl hold boolean queri well standard method enumer assign size number atom berg cycl boolean sequenc pairwis distinct atom pairwis distinct variabl occur addit modulo occur call acycl berg cycl variabl occur atom write acq class acycl cqs boolean hold instanc exact homomorph atom ident constant call homomorph imag call match problem defin unrestrict open queri answer problem uqa finit instanc conjunct constraint boolean decid superinst satisfi violat entail write unr work focus finit queri answer problem fqa variant open queri answer requir counterexampl superinst finit exist write fin cours unr impli fin conjunct constraint finit control fqa uqa coincid finit instanc boolean unr iff fin combin complex uqa fqa problem fix class constraint complex decid constraint class input data complex defin assum fix input chase superinst instanc univers constraint iff unr recal definit chase standard construct general infinit univers superinst assum fix infinit set null disjoint dom defin chase transit close uid call uid chase fact instanc activ fact uid write homomorph homomorph extend homomorph case occur posit written appli uid written note pirp pisq result chase step activ fact call appli superinst fact defin set call export element export posit fresh null instanti existenti quantifi variabl complet correspond element introduc ensur longer activ fact chase round conjunct uid result appli simultan chase step activ fact uid distinct fresh element uid chase chase general infinit fixpoint appli chase round univers superinst chase transit close uid perform core chase uid chase defin ensur uniqu wit properti element dom chase posit fact chase posit fact context core chase match uid chase defin round modulo round chase refer uid chase uniqu wit properti appendix detail finit closur rosati conjunct finit control conjunct uid fds cosmadaki decid ptime finit implic problem uid fds conjunct depend decid uid impli finit instanc finit closur set uid fds impli finit rosati finit closur reduc uqa fqa constraint relat ariti idea conjunct constraint finit control finit closur finit instanc boolean fin iff unr finit closur impli reduc fqa uqa finit control hold iii main result approach studi open queri answer fds uid unrestrict queri answer uqa bound uqa uid proposit iii uqa fds uid ptime data complex complet combin complex finit case decid fqa fds uid main result prove rest paper theorem iii main theorem conjunct fds uid finit control finit closur effici comput closur deduc complex fqa match uqa appendix corollari iii fqa fds uid ptime data complex complet combin complex iii rephras univers model prove main theorem notion sound univers instanc definit iii superinst instanc sound constraint constant free size unr univers convers hold unr assumpt constant free loss general assum constant dom fact fresh unari relat replac existenti quantifi variabl atom simplic assum queri constant free theorem iii impli appendix theorem iii univers model conjunct fds uid close finit implic finit instanc satisfi exist finit superinst sound satisfi univers fact univers superinst satisfi satisfi cqs unr definit unr conjunct fds uid assum close finit implic isol close implic impli transit close instanc maxim queri size goal rest paper construct finit sound superinst satisfi prove univers model theorem main theorem iii restrict acq ufd revers constraint prove univers model theorem restrict class queri depend defin will lift restrict defin unari fds write note assum close finit implic ufd uid character impli will construct sound superinst satisfi vii will adapt process satisfi second will construct superinst sound acycl boolean queri viii will superinst acycl sound cyclic queri well section prove weaken univers model theo rem restrict will lift section vii viii theorem iii acycl unari univers model exist finit superinst sati fie sound acq univers acq prove acycl unari univers model theorem section will assum condit structur depend revers hold uid revers rememb revers posit occur uid intuit assumpt revers connect finit closur character add revers uid ufd form cyclic pattern work assumpt revers prove weaker version acycl unari univers model theorem replac sound weak sound prove actual theorem assumpt revers lift conclud proof weak sound revers uid goal prove acycl unari univers model theorem theorem iii assumpt revers replac sound weak sound definit superinst instanc weak sound hold dom pos pirp pirp dom dom pos pirp pisq intuit superinst weak sound exist element posit want appear element occur posit connect proposit acycl unari weak sound model assumpt revers exist finit superinst satisfi weak sound proposit will reus sequel proof introduc concept prove actual acycl unari univers model theorem binari signatur balanc instanc simplic focus simplifi case binari signatur make sumption will lift binari relat ariti ufd relat approach construct weak sound superinst satisfi perform complet process add binari fact connect element ufd hold fact piri dom weak sound easi situat balanc relat construct biject element definit instanc balanc posit balanc acycl unari weak sound model proposit assump tion binari simpli pair element proposit assum binari revers balanc finit instanc satisfi finit weak sound superinst satisfi dom dom instanc balanc idea balanc helper element assign posit exampl exampl consid three binari relat uid revers fds prescrib assumpt binari consid balanc construct weak sound superinst satisfi constraint intuit helper element assign posit connect uid formal idea construct weak sound superinst domain aug ment helper element understand posit helper appear avoid violat weak sound definit posit write assumpt revers transit close equival relat idea construct weak sound superinst decid helper add class assign definit weak sound repres choic partial superinst pssinstanc definit pssinstanc instanc tripl whereh finit set helper map class defin allow talk balanc definit superinst realiz dom dom fact pos exampl exampl pssinstanc realiz balanc instanc helper lemma balanc finit instanc satisfi balanc pssin stanc construct realiz construct superinst lemma lemma binari realiz balanc pssinstanc instanc satisfi construct realiz satisfi observ realiz weak sound superinst lemma binari realiz complet realiz pssinstanc weak sound superinst prove acycl unari weak sound model proposit assumpt binari revers complet process form combin three lemma arbitrari ariti piecewis realiz lift assumpt binari retain assumpt revers general previous construct arbitrari ariti case contrari binari situat will complet process assum satur process appli definit balanc instanc definit general arbitrari ariti balanc lemma lemma hold definit pssinstanc defini tion chang notion realiz replac piecewis realiz defin subset posit connect definit posit write fun transit fun clear equival relat number fun class pos defin piecewis instanc project definit piecewis instanc tupl set tupl index conveni domain dom dom write pirp pirp defin piecewis realiz pssinstanc definit piecewis instanc piecewis realiz pssinstanc dom dom tupl order general binari realiz lemma lemma talk piecewis instanc satisfi requir respect ufd fun class defin direct project definit piecewis instanc compliant tupl compliant pirp pisq empti compliant compliant general binari realiz lemma lemma realiz balanc pssinstanc instanc satisfi construct compliant piecewis realiz exampl consid ari relat uid revers ufd revers consid balanc balanc pssinstanc empti function compliant piecewis realiz transform compliant piecewis realiz weak sound superinst general binari realiz complet lemma lemma complet descript complet process idea expand tupl entir fact correspond relat fill posit will reus exist element fact relat occur chase definit relat achiev fact chase superinst instanc relat satur achiev relat occur exampl consid binari relat unari relat uid revers ufd relat satur instanc trivial balanc empti function pssinstanc fun class compliant piecewis realiz easili complet superinst satisfi creat fact creat element fill posit introduc violat intuit relat satur consid instanc complet satisfi fact reus element fill posit clear initi chase ensur relat satur lemma relat satur solut result perform chase round instanc relat satur relat satur ensur reus exist element complet allow perform step complet process lemma realiz complet finit relat satur instanc satisfi compliant piecewis realiz pssinstanc construct finit weak sound superinst satisfi prove acycl unari weak sound model proposit consid initi finit instanc satisfi chase finit relat satur superinst relat satur solut lemma uniqu wit properti satisfi clear weak sound superinst perform complet process construct balanc pssinstanc balanc lemma lemma finit compliant piecewis realiz realiz lemma lemma realiz lemma construct finit weak sound superinst satisfi clear weak sound superinst result proven sound revers uid move weak sound sound prove acycl unari univers model theorem theorem iii make assumpt revers introduc notion align superinst maintain sound satur process general relat satur defin notion thrifti chase step complet process chase step repair uid violat instanc align superinst fact satur ensur sound maintain bound simul superinst chase chase chase univers model satisfi uniqu wit properti sound acycl queri size preserv bound simul superinst bound simul chase sound acq definit instanc dom dom write fact pos exist fact pos base case hold bound simul map sim dom sim write dom equival relat dom lemma instanc acq size bound simul superinst bound simul chase conveni requir finit satisfi technic reason requir simul ident map element element occur superinst posit sim imag introduc chase definit align superinst sim finit superinst satisfi bound simul sim chase sim ident sim map chase dom dom let posit sim introduc chase requir pirp perform complet process allow satisfi perform satur process relat satur previous achiev relat align superinst achiev fact class definit fact class pair posit pos tupl class element chase depend breviti fact class fact chase export element class chase pos fact class achiev fact class fact chase write afactcl set achiev fact class breviti depend notat align superinst sim fact satur achiev fact class afactcl fact sim pos achiev lemma initi instanc set uid afactcl finit defin satur process chase fact class achiev finit round lemma result easili fact satur align superinst lemma fact satur solut result perform chase round fact satur align superinst fact satur align superinst complet satisfi fact thrifti complet general method repair uid violat appli form chase step align superin stanc reus element thrifti chase step defin distinguish danger danger posit determin reus element chase definit posit pos danger posit write dng danger written ndng note dng ndng pos definit thrifti chase step sim align superinst uid activ fact sim bound simul sim pirp chase chase sat isfi fact chase sim call chase wit appli thrifti chase step yield align superinst sim defin fact element dom fresh element requir ndng pisr fresh dng pisr fresh fresh sim defin sim extend sim dom set sim fresh fact thrifti chase step thrifti chase step choos fact achiev fact class sim defin ndng chase step fresh fresh dng thrifti chase step general violat fact thrifti chase step reason will fact thrifti chase step point work fact satur align superinst ensur suitabl exist claim lemma fact thrifti chase step fact satur align superinst result fact thrifti chase step well defin align superinst activ fact longer activ claim expand fact satur superinst satisfi fact thrifti chase step proposit fact thrifti complet assumpt revers fact satur align superinst expand fact thrifti chase step fact satur align superin stanc satisfi proposit allow prove acycl unari univers model theorem theorem iii assumpt revers consid fact satur align superinst produc fact satur solut lemma lemma appli fact thrifti complet proposit yield fact satur align superinst finit sound superinst satisfi satisfi rest sketch proof proposit appendix full proof idea construct balanc pssinstanc input align superinst compliant piecewis realiz complet fact add direct add fact thrifti chase step ensur aligned preserv problemat point connect element dissimilar sim imag violat aligned chase round initi fresh fact thrifti chase step construct ensur call revers element posit sim imag class depend ensur essenti worri sim imag respect weak sound suffici reason chase round suffic ensur general structur observ uid chase uid appli element chase revers case assumpt revers class depend class posit introduc exact histori formal theorem chase local theorem instanc transit close set uid element introduc posit chase uid appli creat revers arbitrari uid lift assumpt revers conclud proof acycl unari univers model theorem theorem iii remov assumpt revers split subset satisfi sequenti definit write write ufd order partit partit notion order partit thrifti chase step uid viola tion danger posit fact impli lemma align superinst result appli thrifti chase step uid assum uid satisfi satisfi order partit satisfi uid class properti preserv thrifti chase satisfi individu thrifti chase step satisfi satisfi cours point partit control structur uid class definit call revers transit close satisfi sumption revers trivial order partit manag class revers trivial revers previous describ complet thrifti chase step fact satur align superinst satisfi trivial direct lemma satisfi corollari trivial class perform chase round align fact satur superinst fresh fact thrifti chase step yield align superinst satisfi claim construct manag partit build topolog sort connect compon sccs direct graph defin technic complic sccs close uid revers construct reli fact close finit implic character cosmadaki lemma conjunct uid close finit implic manag parti tion exampl consid uid ufd uid ufd finit impli manag partit third class revers second trivial conclud proof acycl unari univers model theorem theorem iii note fact satur solut lemma lemma assumpt revers appli align fact satur superinst satur process satisfi complet process build manag partit lemma fact thrifti chase step uid extend fact satur align superinst larger satisfi trivial corollari revers appli fact thrifti complet proposit proposit lemma result satisfi result complet process align superinst satisfi align superinst finit satisfi sound acq univers acq conclud proof acycl unari univers model theorem vii higher ariti fds bootstrap acycl unari univers model theorem theorem iii univers model theorem theorem iii step chang construct avoid violat higher ariti fds appli theorem vii acycl univers model finit superinst univers acq queri problem address complet process satisfi defin fact thrifti chase step reus element fact posit multipl time violat point construct goal defin version thrifti chase step preserv call envelop thrifti chase step describ satur process design second defin work redefin complet process previ ous complet process prove acycl univers model theorem vii envelop satur start defin notion satur instanc recal notion fact class defini tion thrifti chase step definit thrifti chase step creat fact chase wit fact class element reus posit ndng sim imag occur posit reus fact thrifti chase step reus tupl element fact appli fact satur stanc fact class notion envelop thrifti chase step will satur instanc multipl reusabl tupl set tupl call envelop definit vii consid afactcl write ndng envelop align superinst sim empti set tupl index domain dom satisfi tupl fact pirl pirl impli dom exact posit pirq pirq fact pirq achiev pio intuit tupl envelop satisfi ufd ndng overlap posit determin posit ndng element occur posit will reus sim imag fact class simplifi reason impos element posit occur posit fact achiev project ndng depend singleton tupl envelop fact thrifti chase step violat class safe focus envelop tupl appear instanc definit vii call afactcl safe fdrl ndng ndng let envelop align superinst remain tupl pindng unsaf safe introduc notion global envelop envelop class afactcl lead notion satur satur instanc global envelop main tupl unsaf class note impli fact satur definit vii global envelop align superinst sim map afactcl envelop envelop pairwis disjoint domain call envelop satur global envelop remain tupl unsaf afactcl envelop satur envelop satur envelop exhaust justifi arbitrarili satur superinst switch technic proposit vii envelop satur solut instanc build superinst sound align superinst sati fie envelop satur exampl vii simplic work instanc align superinst consid uid ari relat consid chase step violat perform fact thrifti chase step creat reus ndng consid sound tain chase step fact map fact class defin satisfi violat envelop thrifti chase step reus remain tupl crucial result need envelop satur proposit independ interest prove appendix combinatori construct fact unari key problemat reason handl safe class differ theorem vii dens interpret set fds relat unari key exist empti instanc satisfi dom fact defin notion envelop satur satur process achiev envelop satur solut proposit fact satur solut lemma fact class envelop satur superin stanc arbitrarili high satur relat instanc size vii envelop thrifti chase step introduc envelop thrifti chase step definit vii envelop thrifti chase step thrifti chase step definit applic envelop satur align superinst export posit fact chase wit afactcl fact class choos remain tupl defin ndng recal lemma fact thrifti chase step appli fact satur align superinst violat envelop thrifti chase step appli envelop satur align superinst violat lemma vii envelop satur align superinst satisfi result envelop thrifti chase step envelop satur superinst satisfi modifi fact thrifti complet proposit proposit general sumption revers previous envelop thrifti chase step fact thrifti chase step choic reus element danger posit differ term applic uid occur posit reus perform exact process danger reus lemma vii justifi preserv abort reach envelop exhaust instanc proposit vii envelop thrifti complet envelop satur align superinst satisfi envelop thrifti chase step align superinst envelop exhaust satisfi problem address exhaust fact satur envelop satur run remain tupl chase step creat align superin stanc start envelop satur superinst control chase step appli envelop thrifti compl tion process detail construct lemma vii envelop blowup exist depend align superinst sim global envelop let sim result envelop thrifti complet process conclud proof acycl univers model theorem theorem iii state start appli satur process envelop satur solut proposit align superinst sim sound satisfi envelop satur appli envelop thrifti complet proposit align superinst envelop blowup lemma fact lemma vii envelop satur satisfi conclud proof align superinst viii cyclic queri final complet proof univers model theorem theorem iii move acycl boolean cqs arbitrari boolean cqs generic process essenti independ previous construct intuit cyclic cqs hold chase acycl homomorph match impli acycl hold cycl match element sound instanc cyclic queri true ensur cycl blowup process take product group high girth otto adjust construct avoid creat violat sim align superinst acycl univers model orem theorem vii under instanc finit superinst satisfi bound simul sim guarante sound acq goal sound satisfi univers will conclud proof univers model theorem theorem iii viii simpl product introduc preliminari notion definit viii group finit set consist associ product law neutral element invers law generat element written product element group generat girth length shortest empti word element girth lemma viii finit empti set finit group generat girth call acycl group generat acycl group generat short product element invers evalu includ factor product finit group ensur cycl product instanc larg project cycl specif generat definit viii fact label superinst lfi defin product superinst group generat sure blow cycl result remain superinst definit viii finit superinst finit group generat product preserv finit instanc domain dom consist fact fact fact fact fact identifi dom superinst superinst instanc sound match involv element chase ensur instanc sound perform chase round initi state properti lemma viii simpl product finit superinst finit acycl group generat sound acq instanc sound sound exampl viii consid consist satisfi sound acq instanc cyclic hold unr identifi consid group addit modulo girth product write pair subscript breviti case sound conclud direct simpl product violat relat ufd fact pirp pirp imag overlap violat viii mix product refin notion product attempt blow cycl fact overlap defin consid quotient definit viii quotient instanc equival relat dom defin dom equival class dom fact fact class pos quotient homomorph homomorph defin quotient equival relat recal definit yield longer satisfi sound acq reason lemma viii bound simul instanc instanc defin bound simul consid homomorph blow cycl mix product distinguish fact imag point construct fact element posit class map fact will distinguish mix product formal definit viii superinst homomorph instanc cautious relat fact pirp pirp pos lemma viii cautious superinst construct acycl univers mod theorem theorem vii cautious reason cautious fact overlap fact occur reus envelop element danger posit case sim imag fact equival chase construct element equival defin notion mix product fact label fact imag definit viii finit superinst homomorph finit superinst ident map finit group generat mix product preserv written finit superinst domain dom consist fact fact fact fact fact mix product preserv uid fds cautious assum lemma viii mix product preserv uid cautious second lift homomorph mix product simpl product lemma viii mix product homomorph homomorph ident conclud proof univers model theorem theorem iii construct sim acycl univers model theorem theorem vii consid finit superinst univers acq distinguish element fresh predic perform initi chase ensur instanc sound homomorph satisfi hypothes mix product acycl group generat consid sound acq lemma viii instanc sound sound simpl product lemma lemma viii explain general construct mix product homomorph lemma homomorph sound cautious cautious lemma mix product preserv lemma mix product finit univers instanc conclud proof univers model theorem main theorem theorem iii conclus work develop techniqu arbitrari ariti schema build finit model satisfi referenti constraint number restrict control cqs satisfi prove finit open queri answer cqs uid fds finit control finit closur depend isol complex fqa uid fds present construct specif depend futur work will extend constraint languag disjunct goal general higher ariti rich ariti constraint languag maintain decid fqa acknowledg work support engin physic scienc council french anr normati project grate balder ten cate thoma gogacz andrea pieri pierr senellart comment earlier draft anonym review lic valuabl feedback refer abiteboul hull vianu foundat databas addison wesley armstrong depend structur data base relationship ifip congress báráni gottlob otto queri guard fragment lic calì gottlob pieri express ontolog languag queri answer problem artif intel calì lembo rosati decid complex queri answer inconsist incomplet databas pod calì lembo rosati queri rewrit answer constraint data integr system ijcai casanova fagin papadimitriou inclus depend interact function depend jcss cosmadaki kanellaki vardi polynomi time implic problem unari inclus depend jacm fagin kolaiti miller popa data exchang semant queri answer icdt ibáñez garcía lutz schneider finit model reason horn descript logic johnson klug test contain conjunct queri function inclus depend jcss marguli explicit construct graph short cycl low densiti code combinatorica onet chase procedur applic data exchang data exchang informa tion stream otto modal guard characteris theorem finit transit system lic pratt hartmann data complex variabl fragment count quantifi inf comput rosati decid finit control queri process databas incomplet pod rosati finit model reason lite eswc rosati finit control conjunct queri answer databas open assumpt jcss detail uid chase uniqu wit properti recal uniqu wit properti element dom chase posit fact chase con tain posit fact exemplifi guarante round uid chase consid instanc uid binari appli round uid chase creat instanc creat appli activ fact creat appli activ fact contrast core chase creat fact consid fact equival export element occur posit general core chase fact class equival fact chase round core chase longer distinct uid chase core chase properti hold result chase round core chase uid chase instanc element occur fact true transit close uid applic element dom element wit violat occur fact introduc claim impli uniqu wit properti assum contrari dom chase violat dom transit close chase round longer creat fact involv fact fact creat round chase chase round core chase wit fact creat chase round case creat chase round definit core chase fact dom chase dom assum occur posit fact dom fact contradict fact creat chase round second creat fact creat creat fact fact creat chase round chase round creat activ fact uid properti occur fact occur dom fact definit uid chase core chase easi occur posit impli proof iii main result approach proof proposit iii complex uqa fds uid proposit iii uqa fds uid ptime data complex complet combin complex uid isol uqa uid complet combin plexiti lower bound queri evalu upper bound johnson klug hold arbitrari fix ariti call width data plexiti calì ptime fact upper bound arbitrari observ answer express order queri upper bound appli uqa uid fds lower bound clear appli result implicit prior work prove complet argu uid fds separ conjunct fds uid instanc unr unr result upper bound follow bound uid case check ptime separ conflict condit simpler argument assum satisfi clear unr unr unr unr consid chase chase chase superinst satisfi unr chase univers chase impli unr suffic chase assum contrari exist chase violat exist posit pos pirp pirp uniqu wit properti impli fact imposs assumpt proof main theorem theorem iii univers model theorem theorem iii main theorem univers model theorem conjunct fds uid finit closur finit instanc finit control finit closur fin iff unr assum loss general satisfi fds superinst satisfi problem vacuous true clear fin iff fin includ convers finit superinst satisfi satisfi definit finit closur fact prove finit control finit closur suffic fin iff unr backward implic finit superinst satisfi unrestrict superinst prove contraposit forward implic assum unr univers model theorem finit superinst sound satisfi sound finit superinst satisfi wit fin prove desir equival establish finit control finit closur prove main theorem proof corollari iii complex fqa fds uid corollari iii fqa fds uid ptime data complex complet combin complex main theorem theorem iii instanc fqa problem form instanc conjunct fds reduc uqa instanc finit closur comput data independ ptime data complex result proposit iii clear appli clear hard combin complex bound proposit iii proven fqa held combin complex fqa naiv approach comput explicit solv uqa instanc materi exponenti time rememb studi uqa complex proof proposit iii uqa uid fds perform check fds initi instanc perform uqa uid isol uid uid fds materi aliz will decid ptime comput uid ptime suffic prove claim combin complex decid uid unr justifi comput uid ptime consid uid posit occur polynomi determin ptime implic procedur cosmadaki allow comput uid ptime justifi decid ptime reason uid comput ptime set ufd ufd decid implic ufd argu test suffic test ufd impli ufd usual axiomat unrestrict finit implic fds armstrong case ufd subset convers ufd satisfi impli ufd satisfi instanc satisfi ufd justifi impli ufd theorem sound complet axiomat finit closur fds uid consist usual implic rule standard uid axiomat casanova cycl rule consid justifi impli ufd ufd step deriv axiomat rule implic rule deduc higher ariti fds group implic rule appli consid set hypothes implic rule produc implic rule hypothesi produc cycl rule cycl rule deduc ufd uid ufd impli construct deriv ufd implic rule comput ptime ufd check ptime ufd equival check conclud proof proof weak sound revers uid prove acycl unari weak sound model proposit proposit weaken acycl unari model theorem theorem iii make assumpt revers replac sound weak sound definit proof proposit satisfi uid balanc instanc proposit assum binari revers balanc finit instanc satisfi finit weak sound superinst satisfi dom dom relat biject balanc consid superinst dom dom fact clear finit weak sound superinst dom occur posit fact fact pirp fact definit assum contrari fact wit violat ufd fact assum loss general consid pirp definit fact pirp violat pirp pirp pirp fact definit fact let pirq pirq depend well defin biject contradict fact violat assum contrari activ fact uid fact activ fact construct definit fact pit transit close uid case pit activ fact contradict second case contradict reason finit weak sound superinst satisfi dom dom desir claim proof balanc lemma lemma lemma balanc finit instanc satisfi balanc pssin stanc prove lemma assumpt binari will assumpt posit defin pirp intuit element appear appear claim pirp element pirp appear case likewis element occur posit uid transit symmetr maxrp pos finit write class posit defin class set fresh valu disjoint union class set map element defin pssinstanc balanc consid posit pirp simplifi pirp simi lar pirq pirp pirq conclus proof binari realiz lemma lemma lemma binari realiz balanc pssinstanc instanc satisfi construct realiz satisfi construct realiz construct biject relat proposit balanc construct fact prove realiz observ creat fact fact satisfi reason proposit satisfi assum contrari activ fact uid dom proof exact proposit clear construct pit iff pirp wit assumpt revers pisq contradict fact proof lemma binari realiz complet lemma lemma binari realiz complet realiz pssinstanc weak sound superinst clear superinst weak sound recal definit weak sound superinst definit superinst instanc weak sound hold dom pos pirp pirp dom dom pos pirp pisq consid dom pos pirp realiz ther pirp definit dom dom dom pirp dom dom dom pos establish pirp impli pirp dom dom pos impli condit weak sound hold proof realiz lemma lemma lemma realiz balanc pssinstanc instanc satisfi construct compliant piecewis realiz balanc pssinstanc recal fun class number definit balanc definit fun class posit ariti number posit defin biject construct piecewis realiz set tupl imi clear piecewis realiz creat tupl compliant assum contradict satisfi assum loss general pirl construct dom dom definit contradict write fact contradict fact inject compliant compliant uid pirp pisq fun class assum contrari exist tupl pisq dom case pisq pisq pirp construct let fun class let surject pisq pisq contradict second case clear construct pit iff wit pirp pisq contradict deduc compliant piecewis realiz complet proof proof relat satur solut lemma lemma lemma relat satur solut result perform chase round instanc relat satur recal definit instanc relat satur definit relat achiev fact chase superinst instanc relat satur achiev relat occur prove lemma relat achiev fact chase generat round chase maxr number relat finit finit let result appli chase round clear relat satur proof lemma realiz complet lemma lemma realiz complet finit relat satur instanc satisfi compliant piecewis realiz pssinstanc construct finit weak sound superinst satisfi recal number fun class pos defin notion definit inner fun class posit occur outer fun class intuit outer fun class uid appli creat fresh element posit class fear uid will applic fresh element will notion danger danger posit definit posit pos danger posit write dng danger written ndng note dng ndng pos observ fun dng iff dng likewis ndng ndng sens defin dng ndng fun class posit relat refer posit pos danger danger lemma posit violat introduc lemma relat fds pos ufd ndng ndng proof assum contradict ndng dng case imposs ufd dng ufd transit ufd contradict fact ndng finit relat satur instanc satisfi pssinstanc finit compliant piecewis realiz approach construct desir superinst fact construct explain call set fresh element dom will creat construct will dom dom consid relat posit belong relat achiev outer creat fact set relat satur choos fact creat fact defin pos tupl fill posit dng fresh element danger posit fill fresh element problem will class outer ndng danger reus fact guarante relat satur complet danger posit construct clear finit superinst claim lemma creat fact fact fact occur posit claim impli fact fact pairwis distinct recreat fact exist creat fact proof assum creat fact pirp assum contradict wit fact definit piecewis realiz compliant creat fact tupl contradict fact creat second fact pirp compliant clear fact occur posit fact disjoint fun class dng ndng pirp case imposs element occur fact second case imposs conclud requir properti weak sound recal definit definit superinst instanc weak sound hold dom pos pirp pirp dom dom pos pirp pisq check condit dom pos pirp fact wit fact pirp wit violat weak sound fact uniqu defin lemma dng contradict dom ndng pirp impli pirp exclud definit piecewis realiz pirp exclud pirp assum dom translat wit violat weak sound check second condit dom dom pos pirp pisq observ element occur posit impli wit violat weak sound fact wit pirp fact wit pisq fact fact clear occur posit dng dng element posit ndng ndng element dom piecewis realiz dom conclud dom impli wit violat weak sound weak sound assum contrari exist fact wit violat ufd assum loss general fact dng element occur singl fact lemma fact occur posit ndng lemma ndng well let fact fill posit ndng imposs deduc violat fact contradict fact process appli replac fact reach contradict prove assum contrari exist uid element dom pirp pisq fact wit pirp fact fact case fact definit realiz pirp compliant pisq let wit tupl fun class pisq pisq case second case suffic creat case wit inner wit achiev chase conclud case second case fact write exist impli inner achiev chase three possibl ndng dng case ndng pick wit pirp fact defin danger posit case second case pirp construct compliant pisq conclud remain case third case dng dng posit occur exist inner wit occur assumpt revers assum dng contradict conclud finit superinst weak sound satisfi conclud proof proof sound revers uid complet proof acycl unari model theorem theorem iii assump tion revers proof lemma acq preserv bound simul lemma instanc acq size bound simul instanc will prove induct stronger claim acq size variabl match map dom dom match map base case correspond queri atom trivial induct step queri variabl match map dom defin reachabl relat variabl reflex transit closur relat occur atom relat consist singl class connect rewrit conjunct strict smaller queri acq process queri separ induct hypothesi assum loss general connect atom occur set atom empti connect assumpt acq variabl occur occur atom variabl occur multipl time atom atom occur berg cycl set variabl occur includ acycl connect variabl partit depend variabl reachabl partit remain atom strict smaller acycl subqueri acq pairwis disjoint set variabl dom atom posit xpi consid fact imag exist fact bpi consid variabl occur let posit subqueri correspond match map restrict match subqueri induct hypothesi match match assembl match pairwis disjoint yield match match conclud induct step stronger claim proven induct remain observ impli desir claim bound simul sim choos variabl variabl result vacuous consid match match sim defin sim deduc exist match match claim induct proof lemma afactcl finit lemma initi instanc set uid afactcl finit finit number equival class chase element dom chase uniqu wit properti number fact occur bound constant depend constant depend element dom chase number element dom chase relev determin class element distanc gaifman graph chase bound clear impli afactcl finit number tupl equival class occur chase finit maxr pos finit proof fact satur solut lemma lemma lemma fact satur solut result perform chase round fact satur align superinst afactcl achiev fact chase creat round afactcl finit maxd afactcl finit class afactcl achiev chase round consid align superinst round uid chase clear afactcl achiev correspond fact achiev proof fact thrifti chase step lemma lemma prove lemma will justifi extend align instanc lemma instanc sim bound simul superinst defin fact sim map sim sim assum fact pos sim sim bound simul proof prove claim induct base case assum claim hold hold sim bound simul bound simul induct hypothesi sim bound simul bound simul dom element sim choos fact exist fact sim pos possibl fact case sim consid deduc exist fact sim construct sim fix fact sim bound simul deduc sim sim explain conclud transit fact fact element dom sim coincid sim element conclud sim bound simul prove main result lemma fact thrifti chase step fact satur align superinst result fact thrifti chase step well defin align superinst activ fact longer activ observ fact thrifti chase step well defin suitabl exist fact satur finit let sim result process superinst activ fact longer activ sim bound simul lemma fact sim ident sim sim satisfi fact violat includ fact contradict violat ufd violat fact clear contradict fact activ fact construct fact ndng violat impli ndng lemma ndng observ pindng pindng fact fill danger posit definit fact thrifti chase step disagre wit violat contradict assumpt check definit align superinst verifi fresh element fresh occur posit sim introduc chase suffic export element case sim will introduc posit chase condit respect separ lemma lemma align superinst consid applic thrifti chase step uid consid chase wit export element lemma clear sim map chase thing verifi fresh element dom dom clear fix sim lemma introduc element element chase conclud prove lemma proof activ fact fact uid export element chase step assum contradict export element introduc case sim sim definit align superinst pisq contradict fact prove contradict export element proof fact thrifti complet proposit proposit proposit fact thrifti complet assumpt revers fact satur align superinst expand fact thrifti chase step fact satur align superin stanc satisfi step proof appli initi chase fresh fact thrifti chase step ensur properti revers second fact thrifti chase step satisfi construct start step consid forest structur fact chase fact root parent fact fact activ fact creat share export element dom chase introduc posit fact creat appli uid parent fact call uid uid uid export element introduc defin uid element chase introduc round revers uid revers defin notion revers align superinst requir element uid violat map sim revers element chase recal posit write class definit align superinst revers posit sim revers element chase introduc posit chase step proof proposit perform fresh fact thrifti chase round input fact satur align superinst ensur result revers proposit ensur revers appli fresh fact thrifti chase round fact satur align superinst uid yield fact satur align superinst revers proposit prove appendix second step proof simpli appli lemma lemma guid chase fact satur revers align superinst sim build fact thrifti chase step align superinst sim sim sim satisfi lemma prove appendix construct reli independ result uid chase chase local theorem theorem prove pendix clear appli guid chase lemma conclud proof fact thrifti complet proposit proof proposit ensur revers proposit easi observ lemma align superinst result appli chase round fresh fact thrifti chase step uid dom dom occur singl fact activ fact proof claim assum contradict dom note definit chase round dom activ fact wit definit fact thrifti chase step dom possibl export element element reus danger posit case imposs transit close fact creat uid applic element second case imposs element reus danger posit occur posit uid applic prove claim second claim observ element creat occur singl fact definit chase round definit fresh fact thrifti chase step element fact dom fresh fact occur activ fact wit simpl lemma revers lemma revers align superinst fact appli thrifti chase step pos dom sim revers introduc posit chase proof activ fact chase wit uid chase step lemma export element pos revers introduc posit pos fresh set sim result prove main result proposit ensur revers appli fresh fact thrifti chase round fact satur align superinst uid yield fact satur align superinst revers align superinst sim prove result induct base case let result appli chase round posit sim introduc posit chase lemma occur singl fact posit assumpt revers dom dom creat applic thrifti chase step lemma conclud sim introduc posit chase impli desir claim induct assum result true sim result appli chase round induct hypothesi revers sim appli chase round revers exact base case appli lemma revers deduc revers element consider prove desir claim induct note reli implicit fact thrifti chase step lemma lemma justifi result chase round fact thrifti chase step align superinst fact satur preserv proof guid chase lemma lemma recal fun class pos number recal notion inner outer fun class definit notion piecewis realiz definit defin definit superinst instanc piecewis realiz inner fun class main claim lemma guid chase fact satur revers align superinst sim build fact thrifti chase step align superinst sim sim sim satisfi fact satur revers align superinst sim balanc pssinstanc balanc lemma lemma finit compliant piecewis realiz realiz lemma lemma will prove result satisfi uid violat fact thrifti chase step piecewis realiz yield finit align superinst simf restrict simf sim satisfi process variant lemma realiz complet lemma call sim current state superinst start will perform fact thrifti chase step call set fresh element dom will introduc outer class chase step construct will maintain fsat fact satur align superinst lemma sim sim dom sim will addit maintain invari krev revers element outer class dom describ formal appli fact thrifti chase step choos element uid applic activ fact uid wit fun class inner invari pirp compliant pisq tupl choos fact achiev fact class chase wit invari fsat creat fact fact thrifti chase step defin export posit set note dng set posit dng fresh element posit ndng set verifi satisfi condit thrifti chase step fact pisr ndng definit point pisr dng check fresh assum contrari pisr wit fact inner invari deduc compliant deduc wit pisq contradict applic claim proven second check reus element sim imag case definit fact thrifti chase step danger posit check element posit fresh start show pisr contradict applic invari definit piecewis realiz recal dom impli recal definit distinguish subcas dom subcas dom rememb point pisr claim subcas consid fact wit dom occur posit fun class invari inner invari tupl definit piecewis realiz uid pit point pisr wit pit pisr claim subcas invari krev impli sim revers element chase introduc posit lemma sim imag fresh element posit revers introduc posit chase local theorem theorem sim condit satisfi prove perform fact thrifti chase step describ check invari preserv observ dng fun class outer occur assumpt revers ufd danger ufd fun contradict fun class outer figur chase local exampl element revers introduc posit revers uid repres thick edg invari preserv observ fact defin inner class exist fact invari krev preserv lemma fresh element krev previous state exist element invari preserv element dom inner invari preserv fact thrifti chase step perform fact thrifti chase step violat remain invari guarante termin finit domain instanc bound inner class element creat outer class creat violat creation element definit class outer result process finit satisfi violat remain conclud proof proof chase local theorem theorem equival rephras chase local theorem theorem notion revers element definit theorem chase local theorem instanc transit close set uid element introduc posit chase revers note result arbitrari set uid fds reli finit closur proper tie assumpt revers assum depend creat revers assum transit close figur illustr result simpl situat intuit revers ele ment chase neighborhood distanc matter exact histori long introduc equival posit intuit fact neighborhood forest structur match fact neighborhood requir fact upward match distanc revers uid chain prove theorem instanc set uid easi lemma lemma posit element chase introduc posit fact let export element proof symmetri suffic proceed induct base case observ fact chase occur posit case pick repres fact uid pick correspond fact definit chase induct step proceed pick hypothesi induct hypothesi element justifi suitabl wit pick correspond fact exist definit chase appli induct hypothesi element fact conclud prove chase local theorem recal definit definit note longer assumpt revers equival relat longer case uid reflect uid prove induct main claim posit revers element introduc posit symmetri suffic chase chase base case induct step assum result hold revers element introduc fact note induct hypothesi chase chase hold observ revers element definit chase true fact chase element occur occur posit element occur fact chase occur posit fact prove claim suffic construct map set fact chase occur set fact occur hold fact let posit posit construct chase occur posit construct chase uniqu wit properti consist exact fact fact export element introduc introduc uid fact element introduc fact posit character hold analog notat construct map set set fact uid transit uid case set second case set satisfi requir condit verifi construct occur posit occur posit second write pos assum claim induct hypothesi distinguish case uid revers case construct revers revers introduc chase posit class prove symmetri conclud induct hypothesi claim hold distinguish subcas introduc export element subcas creat appli revers uid export element revers revers fact revers introduc posit second subcas export element creat revers revers depend appli creat revers introduc posit class prove desir claim case revers case introduc posit likewis lemma conclud conclud proof proof arbitrari uid lift assumpt revers appendix prove claim need complet proof theorem iii exist uni versal instanc uid ufd acycl cqs fix size main claim exist manag partit lemma rememb assum uniqu wit properti constraint close finit closur rule transit close finit closur comput algorithm conveni recal finit closur comput set fds uid path sequenc uid form path function rikk note definit relat ensur iff function path invert cycl function path uid occur invert cycl invert revers invert cycl jnn rin appli cycl closur rule invert cycl uid ufd need invert cycl rin jkk finit closur comput close rule implic uid fds isol fact result exact finit closur proof lemma violat follow lemma align superinst result appli thrifti chase step uid assum uid satisfi satisfi chase step add singl fact uid violat relat element newli creat fact transit close introduc violat export element thrifti chase step reus exist element danger posit ndng uid applic uid applic pos dng definit danger posit ufd trivial write proof corollari deal trivial class corollari trivial class perform chase round align fact satur superinst fresh fact thrifti chase step yield align superinst satisfi violat satisfi definit violat introduc lemma fresh fact thrifti chase step introduc violat violat proof lemma exist manag partit goal lemma conjunct uid close finit implic manag parti tion assum close finit closur rule appendix transit close start introduc definit relat recal defin function path let ufd trivial extend set uid expect exist definit graph direct graph loop defin relat defin connect compon usual scc maxim subset denot transit reflex closur relat scc graph direct acycl graph loop defin sccs sccs edg iff note definit sccs allow singleton sccs loop singleton scc trivial singleton loop scc singleton loop call trivial lemma understand structur sccs lemma prove appendix lemma scc structur sccs transit close set uid trivial scc let uid scc note sccs equal disjoint call invers scc trivial satisfi trivial sccs disjoint call invers structur sccs step construct manag partit construct topolog sort scc graph addit properti motiv lemma definit topolog sort invers sequenti invers scc sccs enumer consecut result proven appendix justifi construct invers sequenti topolog sort scc graph proposit invers sequenti topolog sort conjunct uid close finit implic invers sequenti topolog sort second step construct manag partit invers sequenti topolog sort defin order partit topolog sort definit invers sequenti topolog sort defin order partit class partit correspond scc trivial invers union scc invers scc enumer consecut topolog sort invers sequenti order partit construct topolog sort merg class enumer consecut second result order partit manag partit class partit trivial set uid transit close satisfi assumpt revers proposit manag partit sort conjunct uid close finit implic let order partit invers sequenti topolog sort manag partit second result proven appendix conclud proof origin claim proof scc structur lemma lemma lemma scc structur sccs transit close set uid trivial scc let uid scc general lemma lemma trivial scc invert cycl uid occur proof trivial scc desir invert cycl concaten function path scc uid path divid claim lemma lemma scc close transit rule proof scc consist singl uid transit respect assum uid trivial uid close transit trivial scc function path ufd function path path function path well definit scc lemma trivial scc scc proof prove direct consequ lemma invert cycl definit invert cycl turn second claim function path connect clear lemma exist invert cycl revers cycl invert cycl finit close cycl uid second uid consid uid wit function path previous paragraph connect consid empti function path wit fact concaten yield invert cycl finit close revers invert cycl wit fact scc desir claim connect maxim scc conclud proof note sccs equal disjoint observ case occur exampl consid uid ufd invert cycl finit closur rule uid revers ufd impli disjoint sccs consid uid ufd construct invert cycl impli finit closur rule case revers ufd true invers fact scc proof invers sequenti topolog sort proposit proposit prove invers sequenti topolog sort proposit invers sequenti topolog sort conjunct uid close finit implic invers sequenti topolog sort observ lemma invers scc consid hold scc trivial proof assum trivial lemma consid predecessor invert cycl second posit posit second posit note observ hold ufd invert cycl close transit prove claim scc assum trivial case lemma invert cycl contradict trivial posit posit contradict transit uid share second posit posit clear impli prove claim construct invers sequenti topolog sort enumer sccs respect relat maintain invari invers enumer consecut guarante result topolog sort invers sequenti trivial invers sccs enumer enumer second sccs enumer invers choos enumer invari enumer enumer enumer enumer doabl assum enumer trivial invers sccs enumer enumer parent scc enumer mean problem enumer assum disjoint appli lemma case enumer enumer second case trivial consid enumer enumer enumer trivial enumer case enumer ensur enumer consecut maintain invari construct invers sequenti topolog sort conclud proof proof manag partit sort proposit proposit proposit manag partit sort conjunct uid close finit implic let order partit invers sequenti topolog sort manag partit order partit prove manag trivial sccs trivial class partit justifi class transit close satisfi assumpt revers defin pos set uid set posit occur definit assumpt revers prove general lemma care second assumpt lemma trivial scc posit pos proof assum uid occur uid occur lemma exist invert cycl occur write definit invert cycl ufd rip rip riq riq close transit clear posit rip riq equal fun posit case conclud posit posit transit ufd iff ufd prove suffic construct cycl invert cycl rip rip assumpt invert cycl finit close revers rip impli lemma help justifi class transit close lemma trivial scc second posit posit proof observ trivial consid let uid transit impli transit close observ write trivial lemma consid function path function path lemma ufd path revers consid smallest exist consid posit second posit easili observ posit relat true preserv distinguish case case second case case uid second posit posit appli reason paragraph deduc case observ initi conclud desir claim corollari trivial scc transit close proof lemma transit close uid transit impli uid claim proven lemma conclud appli lemma conclud proof proposit class order partit trivial revers trivial three thing transit close posit pos claim trivial invers scc claim lemma union invers scc claim corollari second claim construct third claim lemma note scc pos pos conclud proof proposit proof vii higher ariti fds need adapt acycl unari univers model theorem theo rem iii produc align superinst satisfi full set constraint unari subset proof envelop satur solut proposit proposit vii prove result construct initi instanc appli complet process previous section proposit vii envelop satur solut instanc build superinst sound align superinst sati fie envelop satur defin notat maxr defin definit overlap ovl fact rela tion instanc subset pos iff overlap defin fds definit envelop definit vii definit set fds relat pos project fds key depend note consequ dens interpret theorem theo rem vii corollari assum dens interpret theorem theorem vii instanc element occur exact posit relat formal dom exist exact pos pirp proof creat instanc domain dom pos fact fact pos clear defin biject fact fact fact ovl ovl violat fds wit cours dom dom let target constant factor dom constant dens interpret theorem dom impli dom easi lemma lemma instanc conjunct fds fact assum posit pos write ndng ovl pio pio violat violat proof assum contradict violat impli ovl ovl pio pio violat contradict pos key depend pio pio satisfi ovl ovl contradict assum ovl lemma afactcl let ndng unsaf posit determin formal proof afactcl danger posit impli unari key safe assum exist unari key transit ufd lemma impli danger danger contradict assumpt unari key unari key suffic posit hold assum contrari consid deriv depend clear deriv key depend depend time depend deriv unari key depend fds consid creat stand deduc deriv contradict fact ndng unari key safe proven contraposit desir result prove proposit vii bulk work claim unsaf class afactcl construct global envelop individu envelop easi lemma unsaf class afactcl constant construct superinst sound align superinst sim satisfi envelop size proof unsaf achiev fact class choos fact chase achiev appli uid chase step finit truncat chase includ child fact consid align superinst ident ndng defin ari relat conveni posit unsaf lemma unari key appli dens interpret theorem theorem vii tor addit condit corollari constant instanc ofr satisfi let dom subinst size dom dom element dom occur fact clear ensur pick element dom fact occur remov duplic fact complet arbitrari fact distinct fact number fact creat disjoint copi number call sim disjoint union clear align superinst form disjoint copi clear sound superinst call fact correspond achiev chase sim aij aip element occur fact consid applic map aij pir applic well defin aij pairwis distinct extend dom call extens set domain call imag under instanc element posit fact identifi project isomorph aij occur identifi element occur build sim defin sim simi element domain map simi dom domain map simi preimag remain align superinst satisfi requir condit note superinst achiev fact dom domain clear fact fact identifi claim align superinst defin set tupl envelop fact fact sim bound simul chase induct case trivial induct case trivial fact aij occur fact assumpt children fact export posit consid fact imag choos exist fact chase sim chase induct hypothesi impli sim preimag defin sim condit corollari consid fact chase correspond definit sim sim defin sim sim pirq fact chase correspond copi achiev fact chase sim want prove sim bound simul chase satisfi satisfi violat relat includ fact fact overlap construct ovl lemma deduc ovl ovl definit impli contradict technic condit definit align superinst clear respect align superinst check envelop satisfi construct condit respect third condit respect condit corollari aij occur posit fact construct dom dom condit true envelop element sim imag copi chase achiev fact chase align superinst sound satisfi envelop size prove desir claim prove main result build align superinst sim global envelop afactcl finit build afactcl unsaf previous lemma safe singl copi truncat chase achiev class fact envelop project ndng fact correspond achiev chase afactcl finit size constant ensur unsaf afactcl larg appli lemma unsaf class disjoint union align superinst sound superinst align superinst union sound violat union disjoint disjoint domain envelop disjoint easi envelop satur unsaf afactcl number remain fact envelop unsaf class fact elimin fact envelop proposit proven proof dens interpret theorem theorem vii rememb theorem vii dens interpret set fds relat unari key exist empti instanc satisfi dom fact relat arbitrari set fds assum close implic ufd impli close implic recal definit ovl definit introduc notion safe overlap depend will suffici condit satisfi definit subset pos safe empti pos exist pos unari key depend impli ufd hold instanc safe overlap properti ovl safe claim lemma corollari lemma pos safe proof empti claim assum contrari exist safe pos hold hold hold transit hold ufd impli hold contradict corollari instanc safe overlap properti satisfi proof consid fact ovl safe violat suffic general dens interpret theorem theorem relat set ufd number posit smallest key formal pos hold pos minim cardin subset pos properti exist finit instanc dom safe overlap properti clear theorem impli dens interpret theorem unari key impli larg instanc element fact safe overlap properti lemma impli satisfi will prove theorem relat set ufd case vacuous elimin direct consid instanc assum claim specif relat set ufd will general construct arbitrari relat ufd consid biject ari relat note clear close implic ufd construct instanc element fact letf set partial function writef total strict partial function consist fact defin element posit map strict partial func tion defin element posit map strict partial function equal undefin dom imag dom remem bere constant impli dom definit claim consid fact impli fact conclud fact cardin domain suitabl safe overlap properti general observ lemma conjunct ufd instanc assum pair fact overlap exist ovl unari key ovl safe overlap properti proof consid ovl pos clear safe pos unari key hold safe suffic hold wit violat contradict fact satisfi satisfi empti overlap fact unari key satisfi observ hold fact defin pii pii let fact pii pii defin iff depend defin previous observ wit violat second consid fact ovl empti unari key defin will ovl pos impli ovl unari key ovl ovl hold consid definit ovl convers ovl definit impli finit instanc satisfi safe overlap properti element fact conclud proof theorem specif case claim actual key minim cardin biject label extend function pos pos iff hold creat instanc creat fact fact creat duplic fact argument consid project fact contradict minim suitabl number fact suitabl domain cardin dom dom overlap safe consid fact overlap ovl claim exist let ovl pos let fact creat exist ovl pos definit clear satisfi condit consid pos exist impli hold hold prove ovl safe safe overlap properti conclud proof proof lemma vii envelop thrifti chase step satisfi lemma vii envelop satur align superinst satisfi result envelop thrifti chase step envelop satur superinst satisfi consid applic envelop thrifti chase step uid ndng sim align superinst chase wit fact class fact creat remain tupl defin check envelop thrifti chase step well defin sens fact class achiev chase afactcl observ fact chase fact class lemma export element clear pos afactcl clear envelop thrifti chase step well defin sens thrifti chase step element reus envelop occur posit fact sim imag definit envelop prove align superinst exact lemma fact specif fact thrifti chase step assumpt recal definit ovl definit assum contradict exist violat violat exist fact element posit occur posit ovl pio defin element dom ovl pisr definit pio tupl ovl contradict appli lemma pio ovl unsaf contradict wit remain tupl defin safe violat contradict prove global envelop perform envelop thrifti chase step condit disjoint envelop domain concern unchang afactcl envelop condit definit envelop concern envelop unchang preserv fact creat condit check fact creat chase step element posit element occur posit occur definit thrifti chase step element dom occur posit occur envelop occur element envelop occur posit check condit envelop pairwis disjoint dom check condit wit pio global envelop envelop satur suffic observ fact wit unsaf class afactcl remain tupl minus tupl project conclud proof proof envelop thrifti complet proposit proposit vii proposit vii envelop thrifti complet envelop satur align superinst satisfi envelop thrifti chase step align superinst envelop exhaust satisfi complet process envelop thrifti chase step defin fact thrifti chase step element reus danger posit definit thrifti chase step choic element reus posit uid plicabl satisfi uid element reus requir occur posit fact envelop thrifti chase step introduc ufd violat fact introduc violat lemma vii defin complet process envelop thrifti chase step exact compl tion process fact thrifti chase step long instanc envelop satur envelop exhaust instanc point process abort set final instanc assum reach envelop exhaust instanc fact global envelop result envelop thrifti complet process satisfi addit lemma vii proof envelop blowup lemma lemma vii lemma vii envelop blowup exist depend align superinst sim global envelop let sim result envelop thrifti complet process observ appli chase round align superinst sim form thrifti chase step definit increas size multipl constant dom number fact creat element chase round pos rememb envelop complet process start construct order partit definit depend align superinst satisfi uid turn instanc size increas multipl constant class blow entir process multipl constant product constant trivial class appli chase round fresh envelop thrifti chase step corollari blowup multipl constant initi observ trivial class appli fact thrifti complet proposit proposit mod ifi envelop thrifti fact thrifti chase step exact step appli rememb proposit ensur revers appli envelop thrifti chase round proposit result satisfi guid chase lemma lemma ensur revers impli blowup multipl constant appli envelop thrifti chase round focus guid chase lemma lemma start construct balanc pssinstanc balanc lemma lemma compliant piecewis realiz realiz lemma lemma perform envelop thrifti chase step satisfi appli envelop thrifti chase step element guid chase occur chase step posit occur suffic dom constant factor final number fact guid chase will dom pos rememb dom dom helper set multipl constant factor proof balanc lemma disjoint union pos set size linear dom guid chase lemma rise blowup constant factor justifi impli entir complet process conclud proof proof viii cyclic queri extend construct superinst satisfi sound acq superinst sound satisfi proof simpl product lemma lemma viii lemma viii simpl product finit superinst finit acycl group generat sound acq instanc sound sound fix superinst sound acq instanc sound acycl group generat consid superinst identif dom neutral element sound start prove simpl lemma lemma instanc match map atom fact strict smaller entail match match subinst dom dom proof atom map fact atom relat fact pos dom set variabl occur consid applic dom dom defin occur observ ensur dom queri replac variabl remov duplic atom dom clear imag subset match observ atom homomorph map entail observ defin homomorph match instanc match assum match chase applic defin dom clear homomorph map dom dom involv element dom match involv element instanc sound chase assum involv element dom queri acq entail sound acq suffic conclud chase chase entail contradict assum queri match involv element dom acq entail counterexampl queri minim size assum acq evidenc consid berg cycl form pairwis distinct atom pairwis distinct variabl variabl occur posit atom posit addit modulo assum loss general assum berg cycl previous definit variabl occur atom posit correspond case multipl occurr variabl atom write imag definit involv element fact fact aij bij pos aiqi deduc project second compon collaps equat cycl girth product element second case imposs assum atom map fact conclud lemma strict smaller entail match submatch involv element dom minim counterexampl queri acq entail entail entail entail contradict fact counterexampl counterexampl queri sound conclud proof proof lemma viii lift bound simul quotient lemma viii bound simul instanc instanc defin bound simul instanc bound simul sim instanc consid bound simul sim sim sim bound simul desir claim defin sim member equival class sim defin bound simul will stronger result dom prove induct dom case trivial assum dom true choos dom consid fact pos fact preimag pos hold exist fact pos wit fact choos pos induct hypothesi transit induct conclud dom bound simul explain impli desir claim proof cautious lemma lemma viii lemma viii cautious superinst construct acycl univers mod theorem theorem vii cautious sim align superinst construct acycl univers model theorem theorem vii cautious observ definit cautious definit viii general appli function homomorph case write defin cautious requir homomorph chase quotient distinguish homomorph construct ensur lemma cautious sim fact overlap posit pos sim sim chase proof proof acycl univers model theorem theorem vii construct construct instanc envelop satur solut proposit propo sition vii complet envelop thrifti complet proposit proposi tion vii check claim hold check instanc construct lemma overlap fact instanc map equival sim imag disjoint union instanc construct lemma deduc claim hold second proof envelop thrifti complet proposit perform envelop thrifti chase step definit creat fact fact class element overlap exist fact envelop element appear posit appear condit definit envelop definit vii deduc overlap fact achiev fact class want element equival sim imag chase equival show fact dom chase sim revers chase sim intuit fact chase mirror defin ancestri fact chase fact path chase forest lead ancestri dom chase fact introduc claim lemma dom homomorph fromasim sim proof prove properti hold show true instanc construct envelop satur solut proposit proposit vii clear case instanc creat lemma truncat chase element identifi second properti maintain construct envelop thrifti pletion proposit stronger claim preserv thrifti chase step defi nition consid thrifti chase step state construct align superinst appli uid fact creat fact tain align superinst consid chase wit lemma export element parent chase properti hold fresh properti satisfi fact violat properti element held fresh choos fresh definit thrifti chase step set sim dom homomorph hbq asim extend hbq homomorph hbi hbi set hbi hbi definit chase share element fact definit coincid exist imag prove claim claim properti impli corollari dom homomorph chase sim proof choos dom construct homomorph asim sim exist prove lemma start set extend desir homomorph fact fact properti dom chase domain introduc fact export element current domain extend element consid parent fact match uid creat suitabl fact extend element set consist imag defin perform process allow defin desir homomorph clear result impli corollari dom chase sim proof consid restrict neighborhood distanc gaifman graph sim readi desir claim lemma dom sim sim chase proof dom chase sim sim bound simul chase sim chase sim sim sim chase sim corollari transit direct symmetr desir claim prove lemma viii lemma lemma proof mix product preserv lemma lemma viii lemma viii mix product preserv uid cautious write uid claim cautious hypothesi fact analog claim proven simpl product dom pos pirp pirp convers pirp pirp let uid dom pirp pisq pirp pisq violat impli exist violat conclud assum assum contradict fact violat write pos consid fact imag homomorph project compon violat cautious case definit mix product pos impli contradict fact second case ident map impli fact fact exclud possibl case assum definit mix product pos pick deduc simplifi conclud case proof mix product homomorph lemma lemma viii lemma viii mix product homomorph homomorph ident homomorph defin homomorph dom consid fact pos consid imag homomorph project compon imag homomorph ident map fact iff definit simpl product clear fact creat choic fact ident ensur ident 