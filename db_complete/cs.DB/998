shape express schema iovka boneva univ lill cristal lill franc univ jose labra gayo univers oviedo spain labra eric stata center mit eric org staworko univ lill cristal lill franc univers edinburgh abstract shape express shex express schema languag rdf design provid high level user friend syntax intuit semant shex allow describ vocabulari structur rdf graph constrain allow valu properti node includ algebra group oper choic oper cardinalitiy constraint number allow occurr properti negat defin mantic languag illustr exampl valid algorithm node rdf graph constraint defin shex schema allow check node satisfi constraint algorithm output proof trivial verifi associ node constraint sat isfi structur complex post process task transform rdf graph graph tree structur verifi complex constraint debug schema inher difficulti error identif shex introduct distribut graph model encourag adopt pub licat manipul social biolog data code error data store dbpedia handl piecem fashion formal mechan detect describ schema violat extend environ medicin busi bank requir structur valid analog relat xml schema owl ontolog limit valid general formal model reusabl class predic describ object domain appli cation typic consum produc graph compos precis composit ontolog man resourc record leverag term foaf dublin core term compos spe cific structur impos constraint singl human resourc applic suit foaf dublin core assert applic consum ontolog valid permut foaf dublin core entiti open constraint owl ontolog impo sibl convent owl tool detect miss properti shape express defin structur constraint arc label cardin datatyp provid schema languag easi mix term arbitrari tolog schema languag data format communic human machin shape output data enabl machin verif data product public consumpt drive queri input interfac static analysi queri shex pro vide role relat xml schema declar ativ switch shex schema close extra defin tight control environ ment intoler extra assert well link open data media promis core data structur pepper arbitrari extra tripl shex valid node graph schema construct call shape xml valid element xml schema type element relax product recurs test nest element constitu rule shex valid focus node graph shape recurs test node subjet object tripl constrain shape shex design provid sound coher languag variabl compact syntax json syn tax intend enabl trivial author pars peopl machin core balanc express complex supplement extens mechan enabl express semant action act schematron rule embed xml schema relax previous work contribut present version shape express con junction oper group recurs discuss studi complex valid shex absenc negat close shape defini tion general complex complet identifi tractabl fragment propos valid algorithm restrict call determinist singl occurr shape express current paper enhanc version shex schema includ ing close extra modifi negat well defin recurs set conjunct class constraint semant shex independ regular bag express liev easier understand larger communiti full valid algorithm well guid line effici implement final error identif shex hard problem basic construct languag shex open sourc discuss space constraint test onlin primer exampl illustr featur shape express namespac prefix issu track ontolog foaf xsd standard foaf xsd prefix namespac prefix exampl instanc data test exampl schema shex convent turtl relat absolut iri enclos prefix name shorthand notat iri convent primer will relat iri shape identifi applic schema run exampl exampl shex schema data manipul bug tracker describ node shape interest shape describ constraint graph edg touch node call focus node shape testershap describ constraint node repres tester tripl constraint associ properti requir tester node properti object liter string properti object iri tripl constraint group comma oper indic node tripl satisfi part group testershap iri shape programmershap requir node string properti programmershap http platform http http org shex fancyshexdemo user usershap singl string choic possibl express oper written vertic bar user properti satisfi issueshap repetit constraint express symbol clientshap requir integ usershap issueshap clientshap final describ issueshap shape issueshap specifi node prop erti object satisfi usershap client shape issu node tester programm written sign addit issu invers incom arc subject user incom prop erti requir express hat preced properti annot comment issueshap will tra modifi explain issueshap extra usershap clientshap testershap programmershap usershap portion rdf data conform shex schema subject node list shape satisfi node allow wit satisfi issueshap edgej notat will issueshap issueshap ren traor testershap noa salma programmershap noa shristi programmershap usershap clientshap fatima smith usershap clientshap emin petrov default properti mention shape definit allow appear conform cor respond constraint instanc programm properti default behaviour chang extra modifi take paramet list properti properti declar extra tripl addi tional satisfi tripl constraint allow number provid object satisfi constraint mention issueshap extra modifi allow proper tie tester programm extra modifi tripl prevent satisfi sueshap hand presenc extra issu shape tester properti mention shape def init default number constrain valu instanc programm properti issu default behaviour tune close modifi forbid properti mention shape definit modifi forbid invers properti mention modifi close tra combin order forbid mention properti argument extra shex schema includ negat oper stanc defin issu low impact issu reproduc report time client lowimpactissueshap clientshap clientshap run exampl test repeat properti design shex aris meet case multipl tripl constraint properti repeat properti issueshap requir arc tester programm common clinic informat generic proper tie relat observ specif way fact emerg time schema convent purpos generic predi cate rdf graph node volv valid multipl tripl node match multipl shape instanc consid small modif run exampl tripl satisfi programmershap tes tershap valid issueshap requir run exampl http ehlksq programm satisfi testershap nuanc interpret treat repeat properti shape conjunct con straint case match issu shape match program mershap testershap extens mechan json syntax shex sche mas addit featur space constraint extens mecha nism present allow decor schema execut code call semant express valid instanc semant tion check rang invok servic test membership extern set clientshap semant action produc output construct xml fit xml schema exampl present call compact syntax shexc intend process human shex schema easier program matic produc manipul json syntax round trip translat syntax semant shex abstract rdf graph shape express schema allow constraint come outgo edg node order handl incom outgo edg uniform consid straction rdf graph prop set properti practic correspond set iri set invers properti invers properti sim pli properti decor hat prop properti invers properti graph defin set node node set edg edg function val node graph abstract entiti function val associ node node iri liter special stand blank node final edg edg tripl form node node node node node properti invers properti node node node call sourc target node edg set tripl defin rdf graph abstract iri appear subject object sition tripl nodei node val nodei mechan http primer semact syntax http primer shexj schema json http tool shex json shexc http tool json shex blank node appear tripl nodeb node val nodeb tripl subj prop obj set edg forward edg nodesubj prop nodeobj vers edg nodeobj nodesubj node graph neighbourhood set jacent edg edg form node prop node node node belong edg denot set neigh node instanc run exam ple neighbourhood node compos edg correspond tripl invers set neighbourhood edg subset neighbourhood node syntax shex schema abstract syntax present omit cur brace enclos shape definit sign pre cede referenc shape name shape express schema shex schema defin set shape label asso ciat shape definit shapeexprschema shapelabel shapedefinit shapedefinit close extra extrapropset shapeexpr extrapropset set properti invers properti shape definit compos shape express shape expr preced option modifi close forward close invers close extra paramet set properti invers prop erti shape express specifi actual constraint neighbourhood defin syntax rule shapeexpr emptyshap tripleconstraint someofshap groupshap repetitionshap empti shape emptyshap impos constraint empti forward close shape satisfi node outgo edg empti shape forward close outgo edg basic compon shape express tripl con straint tripleconstraint properti invproperti valueclass properti iri invproperti tripl constraint forward constraint form prop invers constraint form tripl constraint satisfi singl edg adjac cus node node opposit focus node satisfi constraint defin label properti tripl constraint exampl tripl constraint usershap clientshap focus node node edg node node satisfi tripl constraint val node string form valueclass constraint describ shape express defin disjunct constraint someofshap shapeexpr shapeexpr compos express separ sign express satisfi set neighbourhood edg express satisfi exampl shape group shape express compos express separ comma sign groupshap shapeexpr shapeexpr satisfi set neighbourhood edg set split disjoint subset compon satisfi correspond express exampl group shape final repetit shape express compos ner express allow number repetit unbound interv natur val repetitionshap shapeexpr cardin cardin mincardin maxcardin mincardin natur number maxcardin natur number unbound satisfi group express set neighbourhood edg satisfi group express split disjoint subset satisfi express belong interv allow repetit exampl repetit shape programmershap short interv unbound hera constraint defin valueclass valueclass atomicconstr atomicconstr atomicconstr valueset shapeconstr valueset set element liter iri shapeconstr shapelabel shapelabel shapelabel identifi conjunct set valu valueset shape constraint shapeconstr valueset iri lit eral valu special constant blank node practic list valu xsd type node kind specif exampl iri blank liter liter regular express defin allow iri neighbour node focus node satisfi valueset constraint belong cor respond set shape constraint shapeconstr shape label negat shape label shape label preced bang symbol neighbour node focus node satisfi negat shapelabel neigh bourhood satisfi shape definit correspond shape label negat shapelabel satisfi node neighbourhood satisfi correspond ing shape definit well defin schema assum fix shex schema sch set label shape shape label denot definit shape definit sch expr shape express definit depend graph schema sch describ shape label refer shape definit formal depend graph sch orient graph node element shape edg shape label appear tripl constraint expr shape label appear negat definit appear definit tripl constraint expr extra properti definit shape label instanc ning exampl shape label testershap pro grammershap appear negat definit issu shape extra properti note negat shape set shape label pear negat definit negat shape sch union negat shape shape syntact restrict impos order guarante well defin semant shex schema pres enc recurs negat requir shape label appear negat lead cyclic depend tween shape assum schema well defin definit well defin schema shape express schema sch well defin shape label negat shape graph access depend graph sch direct acycl graph declar semant shex local satisfi shape definit shape definit refer occurr tripl constraint uniqu name tripl constraint appear shape definit shape definit long will clear context note tripl constraint appear properti class occurr distinguish cor respond differ correspond tripleconstraint posit abstract syntax tree shape definit shape definit identifi set tripl con sumer correspond tripl constraint extra properti unconstrain properti open close shape definit intuit node local satisfi shape definit edg neigh node consum tripl consum shape definit satisfi shape express formal shdef shape definit fix quel set tripl constraint set tripl consum shdef consist tconsci tripl constraint shdef tconsq extra extra properti shdef tconsopen special constant edg edg node node match tripl consum tcon tcon tconsq extra tcon tconsci andxk set hold val node definit local wit shdef shape defi nition consum set tripl consum node node wit neigh node consum total map map tripl consum edg neigh node map wit local wit fact neigh node satisfi shdef written wit neigh node shdef iff edg edg node node neigh node edg match wit edg wit edg form tconsq extra tconsci wit edg tconsq extra tconsci consum conjunct set edg match tconsci wit edg tconsopen consum tripl consum form tconsq extra tconsci form properti shdef forward close invers close forward edg invers edg map tconsopen wit neighexpr set edg edg neigh node wit edg tconsci tripl con straint shdef hold wit neighexpr expr shdef set neighbourhood edg neigh shape express expr map wit neigh consum wit local wit fact neigh satisfi expr written wit neigh expr iff expr empti shape neigh expr tripl constraint neigh edg singleton set wit edg expr exprk shape wit neigh expri expr exprk group shape denot neighi subset neigh edg iff wit edg tconscj tripl constraint expri hold neigh neighk wit neighi expri expr min max repetit shape exist belong interv min max partit neigh disjoint set neighm union neigh wit neighi expr exampl schema data run exampl short extra match match tconsopen invers match edgej match map wit defin local wit fact satisfi definit issueshap tconsopen global type wit shape label appear tripl constraint allow propag constraint neighbourhood node valid graph respect shex schema global properti graph captur notion global type wit defin short consid shex schema sch set shape label shape negatedshap set shape label form negat shape sch negatedshap shape appear negat sch decor lead sign type graph sch set type nodesg shape negatedshap coupl form node node node shape label node node belong type wit local wit propaga tion wit type propagationwit precis coupl node edg node node domain wit wit node node tconsci correspond tripl constraint shape label negat shape label appear con junct definit global type wit global type wit ness graph schema sch coupl type type type sch total map type node shape local wit node type hold node local wit fact node satisfi definit addit gtw sat constraint requir negat shape label propag node type hold propagationlw node type gtw neg negat shape label satisfi node type exist global type wit type node type gtw extra edg consum extra consum satisfi correspond tripl constraint shape label edg node node node edg tconsq extra tripl con sumer tconsci correspond tripl constraint definit gtw extra set set val node gtw extra shape constr shape constraint exist global type wit type node type shape label negat shape label exampl shape data run exampl wit exampl global type wit includ propagationwit programmershap propagationwit satisfi programmershap type type subject node run ampl associ shape label list comment node exampl data type con tain testershap usershap clientshap type correspond global type wit issueshap wit wit ident wit definit global type wit recurs gtw neg requir ensur type global type wit order ensur type global type wit fundament properti global type wit allow definit well found theorem graph shape express sche sch exist global type wit typingcertg sch cert sch node node shape label negat shape sch node node belong typingcertg sch proof sketch sketch proof exam ple typingcertg sch cert sch effect pute start empti type proof base well found criterion schema suppos negat shape sch depend appear definit start type node exist local wit wit fact node satisfi add node type cert sch set lwcertg sch node wit add node typingcertg sch step type cert sch cert sch global type wit satisfi gtw sat definit gtw neg suppos contradict node typingcertg sch global type wit type node type node local wit fact node satisfi contradict gtw extra proof contradict lwcertg sch node node node tconsq extra tconsci consum definit node val conjunct cert sch node satisfi definit local wit contradict associ shape node order depend illustr type prev lwprev typingcertg sch lwg sch previous step typingprev shape node exist local wit wit fact node satisfi propagationwit typingprev add node typingcertg sch add node type cert sch ing argument previous step typingprev lwprev global type wit typingcertg sch cert sch global type wit process repeat negat shape label process order induc acycl depend graph instanc corollari establish global type wit agre typingcertg sch cert sch shape label appear negat sch proof theorem definit allow equival recurs definit global type wit lemma corollari type global type wit graph schema sch negat shape sch node node node type node typingcertg sch node type node typingcertg sch lemma definit gtw neg gtw extra shape constr condit replac weaker condit gtw neg gtw extra shape constr leav under notion global typ ing wit unchang gtw neg node type node typingcertg sch gtw extra shape constr shape constraint node typingcertg sch shape label negat shape label valid algorithm fundament question valid satisfi satisfi issueshap follow ing valid algorithm initi type type requir issueshap construct global type wit type includ exist rais valid error consid fix graph node node edg edg function val fix shape express schema sch set shape label shape fix partial initi type sch start present high level version algorithm discuss implement optim aspect data structur flood algorithm produc global type wit proceed make type hypothes associ node shape label algorithm wit hypothesi satisfi remov global type wit satisfact type hypothesi requir type hypoth ses satisfi comput algorithm maintain structur call type wit construc tion denot tuc current hypothes addit data comput precis tuc typinghyp lwhyp requir tocheck typinghyp lwhyp global type wit construc tion requir typinghyp typinghyp binari relat hypothes tocheck subset typinghyp node shape verifi hypothes suppos typingcertg sch cert sch denot type cert lwcert short final algorithm global map unchlw node node shape label associ set cal wit prove node satisfi local wit wit remov unchlw node global type wit exist global type wit type node belong type propagationwit includ type flood algorithm flood algorithm present algorithm start check initi type compat type typingcert signal val idat error type construct initi initi hypothes initi hypothes involv negat shape label tocheck lwhyp requir compo nent empti line function checkcompat take paramet type return fals iff node node shape label type node node main loop iter hypothes tocheck process hypothesi node tocheck distinguish three case condit line hypothesi node check verifi type node correspond case hypothesi node recogn provabl set unchlw node uncheck hypothes empti backtrack explain nalli correspond case exist local wit wit ver ifi node satisfi shape boolean function checkgtwextra sure wit violat gtw extra condi tion checkcompat sure propag wit contradict type check pass set lwhyp node wit ing valid type compat wit propag requir pose wit neighbour node line wit remov unchlw node tocheck check function checkgtwextra take input schema sch shape label local wit wit typ ing typingcert return fals iff edg edg node node domain wit wit edg tconsq extra extra consum exist tripl consum tconsci definit sch node typingcert shape constraint conjunct hypothes process typinghyp lwhyp global type wit initi requir pothes disprov remov backtrack algorithm floodingvalid input sch shape express schema shape node edg val graph pre type sch unchlw map node shape set local wit typingcert lwcert global type wit output type global type wit checkcompat type cert return valid error tuc typinghyp lwhyp requir tocheck typinghyp hyp requir tocheck node shape tocheck node remov tocheck node typingcert continu unchlw node backtrack node tuc wit unchlw node checkgtwextra sch wit typingcert checkcompat propagationwit type cert lwhyp node wit foreach node propagationwit node typinghyp add node typinghyp shape add node tocheck shape add node node requir remov wit unchlw node add node tocheck typinghyp foreach node typinghyp typingcert copyproof node typingcert lwcert typinghyp lwhyp return type typinghyp lwhyp return valid error algorithm backtrack input node hypothesi tuc typinghyp lwhyp requir tocheck global type wit construct foreach node toremov node requir remov node typinghyp lwhyp tocheck ing case valid error rais wise copyproof procedur copi proof fact typingcert lwcert typinghyp lwhyp fact process fact node copyproof procedur add propagationlwcert node type hyp recurs copi proof newli fact termin schema well found backtrack backtrack algorithm describ algorithm remov hypothes rele vant find hypothesi node satisfi intuit hypothes node requir node hypothes requir indirect node formal captur set toremov node requir typinghyp recurs defin set effec tive comput standard reachabl algorithm graph node requir node node node toremov node requir node node requir node node impli node toremov node requir node toremov node requir addit loop backtrack invali date local wit hypothes node requir node add check comput set uncheck local wit node node shape label definit con tain tripl constraint correspond ing set consum tripl consum comput set unchlw node consid set candid map neigh node consum keep candi date actual local wit fact node satisfi definit map candid associ edg tripl consum edg match formal edg node node matchingtc edg tconsopen appear extra properti matchingtc edg tconsq extra tcon edg match tcon candid map choos tripl consum matchingtc edg edg neigh node instanc continu exampl candid map neigh tripl consum issueshap will associ tconsopen will asso ciat denot candidateulw node set candid map ping cartesian product set matchingtc edg edg neigh node set candidateulw node candid map construct determin local wit fact node satisfi def init algorithm propos neigh node bag alphabet consum replac eri edg wit edg bag unord collec tion repeat symbol instanc bag correspond map exampl tconsopen check bag belong languag regular bag express algorithm base deriv regular express slight modif interv algorithm present figur interv algorithm support unbound unbound repetit express tripl constraint unfold repetit form instanc expr replac group express expr tripl constraint expr expr expr expr unfold appli interv algorithm complex valid valid shex schema complet note valid remain construct defin paper high complex verifi ing neighbourhood node local satisfi shape definit algorithm present check candid map local wit polynomi modifi interv algorithm expo nential number candid consid note type trivial polynomi verifi global type wit implement optim guid line easili avoid sourc complex putat typingcert lwcert fed input flood ing algorithm comput algorithm sketch proof theorem optim impl mentat comput fli demand perform version flood ing algorithm guidelin test node typingcert node typingcert requir node node comput portion typingcert answer test comput call floodingvalid node call return node result type add typingcert unchlw node empti add node typingcert function recurs call test involv typingcert requir comput sourc complex comput unchlw uniqu reason tractabl valida tion size set candidateulw node exponenti number repetit properti shape definit extra properti consid repetit instanc run exampl set candidateulw issueshap candid map element check potenti element unchlw node fore decreas size candidateulw set crit ical optim decreas size matchingtc node set propos ahead techniqu continu exampl idea remov matchingtc target node satisfi programmershap quir ahead edg edg node node tripl consum tconsci consist inspect neighbourhood node prove node satisfi shape conjunct allow ing add tconsci matchingtc edg ahead extend ahead three ahead consult bit farther neighbourhood futur work plan develop static analysi method sche mas allow defin ahead criterion method identifi properti requir shape look ahead final unchlw set store access iter candidateulw node defin cartesian product easi iter algorithm retriev element candidateulw node iter local wit unchlw node post valid process global type wit comput flood algo rithm associ node shape label satisfi type edg neighbour hood node particip satisfi shape allow post process graph depend ing role play node edg instanc run exampl check addit constraint user report issu fect issu interest case export xml format confirm issu gether tester reproduc export xml json current perform ist implement semant action fire valid termin addit global typ ing wit export normal json make post process virtual program languag error identif error identif guid user render input graph valid repair graph exampl rdf graph schema run exampl emma ron leila node satisfi issueshap properti object client identifi number scenar explain invalid rdf graph miss properti tripl portedbi wrong properti http org http org primer shexj valid replac natur requir tedbi properti satisfi requir action replac satisfi user shape clientshap node satisfi usershap clientshap connect node schema sch graph initi type sch attempt find graph minim set tripl insert delet satisfi replac properti edg consist delet insert edg basic user minim set oper render input graph valid pinpoint rea son valid graph call repair sch number way repair graph exponenti larg ren der construct repair intract exampl instanc rdf var true fals true fals consid set verifi node satisfi type term schema term var var emptyshap emptyshap repair rdf instanc correspond set valuat boolean variabl extens arbitrari number variabl schema permit empti valuat instanc outgo edg remov instanc repair minim addit shape definit schema addi tional node rdf graph encod satisfi cnf formula theorem proof construct repair poli nomial conp theorem check graph repair graph schema initi type conp complet remark hard proof simpl schema oper oper encod disjunct group oper encod conjunct schema languag propos oper tractabl repair problem error identif approach simpler fashion repair problem point node respons problem user deal approach inher ambigu exampl necess develop suitabl heurist error identif work recurs valid languag cyclic valida tion shex shapedefinit shapeexpr compos tripleconstraint valueclass case valueclass shapelabel grammar cursiv shapelabel refer shapedefinit exampl issueshap prop erti refer issueshap instanc graph cycl edg appear shape valida tion arriv valid shape node schema languag descript set profil resourc shape describ consid problem detect termin cyclic valid global constraint shex focus type specif instanc node shape schema languag defin valid rdf graph involv variant iter node graph shape schema perform maxim type scription set profil includ global cardin constraint describ number permiss instanc shape global maxim type type node shape satisfi descript set profil dublin core metadata initi develop constraint languag call descrip tion set profil dsp dsp represent rdf vocabulari convent xml schema dsp addit constraint encod languag tag list specif rule subproperti dsp address repeat properti evalu dsp scholar work applic pro file identifi repeat properti current interpret repeat prop erti treat conjunct constraint studi profession model expect behavior shex constraint individu match tripl neighborhood resourc shape shex origin creat provid domain specif languag resourc shape sourc shape rdf vocabulari describ simpl conjunct shape constraint specif clear author verbal indic repeat properti permit resourc shape includ descript featur valid tool generat user input form owl base valid approach propos rdf valid owl express constraint open uniqu sumption limit valid possibl propos owl express close assump eprint eprint tion express integr constraint main critic approach associ alterna tive semant exist owl syntax mislead user note case owl infer engin check constraint approach requir dedic implement sparql base valid sparql express valid constraint sparql queri long difficult debug higher level languag sparql inferenc notat spin constraint associ rdf type node valid rule rule express sparql queri propos sparql combin technolog simist brickley propos binat sparql queri properti path ploy googl kontokosta propos funit test driven framework employ sparql queri templat fischer propos rdf data descript domain specif languag compil sparql queri sparql express ness shape express val idat numer statist comput hand sparql allow support recurs constraint addit semant group diffi cult express sparql reuter propos extens oper sparql includ cursion oper compil shex sparql shacl shacl languag develop work group open issu dif ferenc shex notabl issu interpret repeat properti repres consensus group public work ing draft includ core rdf vocabulari express resoruc shape describ shape constraint specif includ sparql templat convent algorithm iter graph constraint templat system implement core semant principl extens mechan extend vocabulari fea ture verifi atom sparql queri suppli subject recurs hope shacl will adopt definit well defin schema will enabl sound recurs extend defin construct analog group long tripl instanc data match repeat properti properti constraint attach direct shacl shape appear behavior insid construct schema shacl call shacl shacl publish publish work draft principl con strain schema accept input defin semant provid anchor mantic definit analog role typic perform abstract syntax conclus futur work org data shape track issu shex express schema languag rdf graph illustr featur languag exampl scribe semant present valid algorithm shex open sourc implement document resourc web descript valid link data portal shex current medic informat describ clinic model shex repres substanti improv contemporari schema lan guag featur sound semant futur develop shex work def init high level logic constraint top shex sche mas data exchang data transform solut base shex heurist help error report ing refer descript set profil constraint languag dublin core applic profil http document dsp relax http schematron http shape constraint languag shacl public work draft octob http org shacl xml schema http org xml schema beckett berner lee caroth rdf turtl ters rdf tripl languag kendal clark evren sirin rdf valid stardog icv assort remark rdf valid workshop practic assur qualiti rdf data cambridg boston septemb http org rdf val peter fischer georg lausen alexand scha tzle michael schmidt rdf constraint check proceed workshop edbt icdt joint confer edbt icdt volum ceur workshop proceed ceur holger knublauch spin model vocabulari http org submiss spin model dimitri kontokosta patrick westphal ren auer sebastian hellmann jen lehmann roland cornelissen amrapali zaveri test driven evalu link data qualiti proceed intern confer wide web intern wide web confer steer committe jose emilio labra gayo jose mar lvarez rodr valid statist data repres rdf sparql queri rdf valid workshop practic assur qualiti rdf data cambridg boston septemb http org rdf val jose emilio labra gayo eric iovka boneva slawek staworko harold solbrig samuel hym rdf valid languag base regular express deriv proceed workshop edbt icdt joint confer edbt icdt volum ceur workshop proceed ceur jose emilio labra gayo eric harold solbrig jose mar lvarez rodr valid describ link data portal rdf shape express proceed workshop link data qualiti locat intern confer semant system ldq semant volum ceur workshop proceed ceur bori motik ian horrock ulrik sattler integr constraint owl christin golbreich aditya kalyanpur bijan parsia editor owl experi direct owl innsbruck austria june eric jose emilio labra gayo harold solbrig shape express rdf valid transform languag proceed intern confer semant system semant acm juan reutter adria soto domagoj vrgoc recurs sparql intern semant web confer bethlehem pennsylvania usa octob iswc arthur ryman resourc shape http org submiss subm shape shawn simist dan brickley simpl applic specif constraint rdf model rdf valid workshop practic assur qualiti rdf data cambridg boston septemb http org rdf val slawek staworko iovka boneva jose emilio labra gayo samuel hym eric harold solbrig complex express shex rdf intern confer databas theori icdt volum lipic schloss dagstuhl leibniz zentrum fuer informatik jiao tao evren sirin jie bao deborah mcguin integr constraint owl proceed aaai confer artifici intellig aaai aaai 