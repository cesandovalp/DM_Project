gamboa davi workshop eptc doi eptc goel hunt kaufmann work licens creativ common attribut licens abstract stobj applic isa model shilpi goel warren hunt matt kaufmann depart comput scienc univers texa austin shigoel hunt kaufmann introduc featur abstract stobj appli model struction set architectur microprocessor benefit abstract stobj tradit concret stobj includ faster execut support symbol simul effici reason resili proof develop model optim introduct support model verif effort microprocessor introduc event support definit abstract stobj tradit singl thread object support concret stobj well support effici execut allow user datatyp restrict defin field permit restrict involv field restrict defin invari specifi allow state stobj cours defin predic specifi relationship field stobj purpos predic expens execut guard check difficult prove guard verif complic theorem clutter hypothes make theorem hard well abstract stobj solv problem provid altern logic interfac defin concret stobj introduc abstract stobj prove remain lockstep correspond associ concret stobj user defin simpler logic represent concret stobj order abstract complex reason goal paper introduc abstract stobj communiti user consid featur proof develop outlin abstract stobj work simpl exampl illustr advantag abstract stobj realist sort applic model microprocessor reason program run conclud discuss benefit provid abstract stobj abstract stobj work find consult documenta tion topic defabsstobj interest user level cours perus sourc code logic foundat sketch long comment abstract stobj develop guid desir program execut effici typic perform issu function languag list data structur read write oper linear length list tree structur help requir cons goel hunt kaufmann write expens long support singl thread object stobj mutabl object applic semant version introduc featur abstract stobj refer ordinari stobj concret stobj concret stobj introduc defstobj event abstract stobj introduc defabsstobj event explain abstract stobj high level illustr simpl pedagog exampl conclud discuss atom issu discuss deal abstract stobj abstract abstract stobj view altern represent correspond concret stobj abstract stobj recogn impos invari specifi addit requir abstract stobj access read write defin export function logic abstract function establish logic keyword reason execut concret function exec keyword execut appli stobj concret function earlier introduc oper concret stobj oper abstract stobj raw lisp structur produc call concret creator function raw lisp raw lisp abstract concret stobj instanc data structur distinct share structur concret stobj primit execut concret abstract stobj raw lisp defabsstobj event specifi correspond predic proof oblig ensur preserva tion predic updat abstract stobj spirit bisimul illustr commut diagram assum defabsstobj event introduc abstract stobj correspond concret stobj function associ logic exec function updat abstract concret stobj diagram state correspond provid hypothes hold map instanc map instanc correspond predic hold abstract concret logic exec correspond defabsstobj event specifi recogn creator export export function logic abstract function logic equal exec concret function oper correspond concret stobj function defin fore defabsstobj event evalu event generat proof oblig function proof oblig repres event admit defabsstobj abstract stobj isa model event admit generat event will automat case print remain prove user formul prove lemma advanc summari defabsstobj event will typic introduc introduc concret stobj defstobj defin logic exec function cours exec function primit intro duce step defin defin correspond predic prove requir event print evalu defabsstobj event admit defabsstobj event exampl illustr abstract stobj exampl highlight full detail support materi defin concret stobj field memori natur number valu initi zero miscellan misc field arbitrari defstobj mem type array initi misc step defin logic function abstract stobj recog nizer simpl exampl conveni field correspond concret stobj thing interest entir data structur abstract stobj concret stobj con car arbitrari misc cdr correspond memori recurs function recogn implement memori abstract stobj memori concret stobj memori base associ list fun add invari requir concret stobj memori valu natur number defun mem map declar xarg guard cond atom null atom car nil natp caar caar rang natp cdar evenp cdar natur number mem map cdr defin logic function abstract stobj recogn creator defun declar xarg guard consp mem map cdr defun creat declar xarg guard con nil nil con misc mem choos export function read write misc memori abstract stobj goel hunt kaufmann defun misc declar xarg guard car defun updat misc declar xarg guard con cdr defun lookup declar xarg guard natp mem map cdr pair assoc mem map pair cdr pair defun updat val declar xarg guard natp natp val evenp val con car assoc val cdr task defin correspond function corr relat concret abstract stobj instanc relat logic interest avoid guard guard verif defun corr mem auxiliari corr defin declar xarg stobj verifi guard nil cond equal mem lookup corr mem defun corr declar xarg stobj verifi guard nil equal misc misc corr mem readi evalu defabsstobj event admit print event termin past book develop defabsstobj export lookup exec mem updat exec updat mem misc updat misc event print partit natur three class three suffix correspond preserv guard thm consid turn breviti ignor event pertain misc field correspond theorem guarante initi concret abstract stobj correspond second export function lookup exec logic function appli correspond state produc third correspond commut diagram discuss export function updat exec logic function appli correspond state produc correspond state abstract stobj isa model defthm creat correspond corr creat creat rule class nil defthm lookup correspond impli corr natp equal mem lookup rule class nil defthm updat correspond impli corr natp natp evenp corr updat mem updat rule class nil preserv theorem guarante recogn hold abstract stobj hold initi preserv well guard applic updat preserv theorem lookup return abstract stobj preserv recogn justifi optim abstract stobj recogn defin execu tion raw lisp return appli stobj object array raw lisp recogn defin logic arbitrarili complex invari optim recogn evalu benefit execut defthm creat preserv creat rule class nil defthm updat preserv impli natp natp evenp updat rule class nil signific guard thm theorem consid ill guard call gument list function updat introduc defabsstobj guard violat occur guard check turn case error messag support compliant live stobj manipul check guard function appli stobj function introduc defabsstobj event correspond call updat argument list guard origin call updat satisfi guard thm updat state guard satisfi call updat ensur compliant live stobj manipul defthm lookup guard thm save space defthm updat guard thm impli corr natp goel hunt kaufmann natp evenp integerp mem length rule class nil readi submit defabsstobj event verbos form order illustr default name convent part retain short form capit letter rest simpli fill default defabsstobj concret correspond concret stobj recogn stp logic exec creator creat logic creat exec creat correspond creat correspond preserv creat preserv corr corr correspond function corr export lookup logic lookup exec mem correspond lookup correspond guard thm lookup guard thm updat logic updat exec updat mem correspond updat correspond preserv updat preserv guard thm updat guard thm misc logic misc exec misc correspond misc correspond updat misc logic updat misc exec updat misc correspond updat misc correspond preserv updat misc preserv defabsstobj event export signatur enforc singl threaded logic function retain origin signatur exampl function misc introduc take stobj argument function misc continu ordinari argument present problem subsequ stobj base code written misc misc atom issu conclud overview explain issu decid abstract stobj short correct abstract stobj reli preserv recogn risk atom updat export function note problem concret stobj defstobj event introduc function updat atom initi implement defabsstobj version sound bug illus trate event base bug report sol sword note abstract stobj updat export function logic call concret updat function sequenc call complet state violat abstract stobj recogn export function atom defstobj const stobj const fld initi defstub nil abstract stobj isa model defun chang fld const stobj logic set field declar xarg stobj const stobj const stobj updat const fld const stobj abort leav field updat const fld const stobj defun const stobj const stobj declar xarg guard equal const stobj defun const stobj declar xarg guard ignor const stobj defun creat const stobj declar xarg guard defun const stobj corr const stobj const stobj equal const stobj theori disabl const stobj corr chang fld event generat defabsstobj defabsstobj const stobj concret const stobj recogn const stobjp logic const stobj exec const stobj creator creat const stobj logic creat const stobj exec creat const stobj corr const stobj corr export fld logic exec const fld chang fld logic exec chang fld version violat logic definit fld chang fld const stobj error top level call undefin function argument list nil debug doc print doc trace doc wet fld const stobj version defabsstobj event fail error messag error defabsstobj const stobj exec field chang fld defabsstobj field chang fld appear capabl modifi concret stobj const stobj atom protect field doc defabsstobj goel hunt kaufmann suggest messag requir protect defabsstobj export function execut complet fortun appli syntact analysi detect export function atom invok updat call correspond concret stobj protect keyword keyword argument need export abstract stobj generat extra code export function mark protect support check atom violat check top level complet book certif check fail rare experi error occur book certif disabl remaind session order prevent unsound simpli elimin error general roll state abstract stobj recogn hold exec function arbitrari chang abstract stobj interrupt cours simpli reiniti abstract stobj suspect user prefer manag situat debug mode inform error messag indic updat oper incomplet debug mode terribl slow effici key goal stobj abstract stobj execut debug mode default reason processor model will abstract stobj benefit develop processor model state model stobj model employ interpret approach oper semant routin formal model start review approach interpret approach oper semant formal number isa model classic interpret proach oper semant main compon model formal approach describ context model simpl bit micro processor model isa state defin state processor regist memori address space sake execut effici case model state stobj instruct semant function semant instruct defin function take machin state return modifi state instruct semant function describ execut instruct modifi processor state step function defin step function execut singl instruct function fetch instruct memori decod dispatch control semant function correspond instruct function final defin function call step function repeat program run complet number instruct error occur function specifi processor model detail basic model communiti book directori model basic abstract stobj isa model isa model abstract stobj space effici memori model model real processor case contemporari processor memori byte terabyt order memori footprint model manag hunt kaufmann implement formal processor model space effici memori well high speed perform adapt model detail communiti book directori model level defstobj program counter eip type unsign byte initi memori model space effici implement mem tabl type array unsign byte mem tabl size mem tabl size initi resiz nil mem array type array unsign byte initi mem array length initi resiz mem array addr type integ initi renam pre defin state processor regist memori address space three memori field mem tabl mem array mem array addr note stobj recogn renam pre basic idea memori model simpl memori alloc demand memori implement flat array fix size consecut block block mem tabl store address block address byte block mem array addr store address block alloc mem array real memori byte store address byte memori mem array compos part address block offset block stobj definit requir maintain stronger invari processor state stobj recogn pre field well form stronger recog nizer assert relationship three memori field well form memori call recogn defun declar xarg stobj pre good memp complic predic memori write function mem note read field stobj mem tabl size field mem array base read earlier mem tabl final updat mem array appropri goel hunt kaufmann defun mem declar xarg stobj enforc syntact restrict stobj guard integerp mem size byte enforc good memp top ash addr mem tablei top addr cond eql addr add top potenti resiz addr mem arrayi logior addr logand xffffff reason program definit processor state long obtain execut effi cienci present problem reason focus problem impedi packag framework prove theorem involv finit object symbol execut proof procedur reason choos hope prove snippet code larg program correct fulli automat abil comput symbol object start point will attempt reason simpl program defconst simpl program sourc main program pos align byte address main irmovl eax halt main halt halt code label code pos assembl posit stack stack prove symbol execut regist eax instruct pointer point halt address program stobj creator function creat cgive symbol object correspond processor state direct function defin state initi execut function defun simpl program init eip declar xarg guard eip init state nil status eip initi program counter nil initi stack pointer nil initi flag nil zero simpl program binari initi memori creat creat processor state verifi guard simpl program init painless prudent prove defthm creat creat abstract stobj isa model prove theorem advantag abil reason evalu term free variabl avoid effort formul suitabl lemma prove theorem call creat prevent proof plete attempt creat mem array list length solut introduc singl lemma prove comput raw lisp stobj note logic local stobj generat call stobj creator function argument defun hack local stobj result result defthm creat creat hint goal hack theori union theori hack theori minim theori final prove correct def thmmacro provid packag def thm simpl program correct hyp equal esp concl start eip cdr assoc main simpl program symbol tabl halt eip cdr assoc halt main simpl program symbol tabl initi state simpl program init start eip count processor count step count equal rgfi eax equal eip halt eip bind esp number int complain clock run increas clock concl clk def thm stack overflow symbol execut logic definit function pro vide stobj perform logic represent stobj linear list field array linear list larg list creat order symbol execut function state input model mem array list larg creat stack overflow access updat linear travers avoid stack overflow approach chang packag handl function better exampl defin claus processor will allow list list creator function execut direct concret valu interpret will help situat list larg second idea chang implement function order effici memoiz tail recurs higher perform third idea proof simpl program local stobj techniqu proof goel hunt kaufmann creat defin function hack return post condit hold concret data arbitrari bit input cours reason code tool bit blast symbol execut bound hit limit model larg array challeng find path proceed abstract stobj provid path isa model abstract stobj small processor state amen proof symbol execut defin abstract stobj concret stobj state memori field abstract stobj defin spars data structur record finit normal structur associ default valu key initi represent abstract memori field nil oppos larg linear list zero concret memori field abstract memori valu written memori explicit describ approach detail communiti book directori model level abstract memori field correspond function provid three concret memori field definit suffic recogn abstract memori field defun memp foral impli record function logic definit memori write function mem defun mem declar xarg guard updat nth memi nth memi note consider simpler definit mem abstract stobj definit defabsstobj concret recogn logic exec pre creator creat logic creat exec creat corr corr export eip logic eip exec eip eip logic eip exec eip mem complic memori write function memi logic mem exec mem protect recogn pre three memori field recogn replac memp creator creat creat nil initi memori linear list three logi cal memori field correspond function state field apart memori field concret abstract stobj memori field correspond abstract stobj isa model defun corr mem mem field address memori concret stobj return memori abstract stobj foral impli natp mem size byte equal mem mem field mem field reason program prove theorem symbol execut viabl model abstract stobj abstract smaller represent processor state simpler logic definit memori read write function note prove creat execut local stobj techniqu longer pro hibit model smaller state represent support materi defin constant popcount sourc repr sent program count number bit input written assembl languag prove correct properti program model abstract stobj symbol execut note prove lemma defin addit claus processor time prove theorem ghz intel core appl macbook pro memori run version built clozur common lisp def thm popcount correct hyp equal esp bit unsign integ input concl start eip cdr assoc call popcount popcount symbol tabl halt eip cdr assoc halt main popcount symbol tabl initi state popcount init esp start eip count processor count time count eax regist will logcount input instruct pointer will halt instruct equal rgfi eax logcount equal eip halt eip bind number int esp number int rule class nil compar fail attempt subsect prove program simpl simpl program sourc correct model abstract stobj conclus incorpor abstract stobj model entail amount work logic version field accessor updat function stobj creator function recogn goel hunt kaufmann function defin correspond function provid final proof obli gation preserv correspond guard theorem met exampl suggest benefit abstract stobj outweigh requisit effort realist model benefit discuss benefit abstract stobj execut loop expens predic appear guard function input exampl function model abstract stobj declar statement declar xarg guard natp stobj function execut concret data loop execut slow guard check cost analog function take abstract stobj input execut concret data loop suffer expen sive guard check declar statement function model abstract stobj declar xarg guard natp stobj mention call abstract stobj recogn function trivial evalu advantag fact recogn hold observ explain memp safe defin execut function support logic definit recogn symbol execut previous abstract stobj symbol execut feasibl abstract stobj great benefit model complic model code proof real binari cours claim prove program correct symbol execut capabl reduc proof develop time prove part larg program correct tradit theorem prove techniqu compos proof proof correct entir program simplifi reason reason function input involv prove hypothes varianc theorem exampl memori read write theorem defthm read write impli integerp mem size byte integerp mem size byte equal memi mem equal mem well user remov hypothes rule speed rewrit proof proof fail requir pain bug hypothes silent fail prove read write theorem model abstract stobj abstract stobj isa model defthm read write equal memi memi equal memi record repres memori field elimin hypothes stronger cleaner theorem abstract stobj benefit reason avoid proof oblig guard verif advantag fact abstract stobj recogn preserv singl thread code consid definit abstract stobj defin defun foo declar xarg stobj updat misc misc accept definit generat proof oblig guard verif special treatment stobj recogn prove stp impli stp updat misc special treatment afford concret stobj recogn well afford invari defin concret stobj layer model strategi abstract stobj introduc layer model model manag robust exampl chang optim model execut effici concret layer affect abstract layer reason long correspond relat maintain layer model strategi effect elimin trade reason execut effici avoid abstract stobj defin function concret execut stobj abstract reason exampl stobj base interpret serv model execut auxiliari interpret stobj proof prove equival interpret lemma generat defabsstobj singl step lift function congruenc base reason tricki bit explain exact equival transfer properti prove properti abstract stobj avoid challeng provid singl logic object represent note optim guard check guard verif user defin pair model note defin abstract stobj singl concret stobj represent stobj defin purpos exploit fact will find interest learn applic advantag abstract set proof tradit strength abil provid effici execut effect reason ing explicit support combin includ mbe defexec util provid logic equal code execut reason well defattach port refin constrain function attach execut function singl thread mbe defabsstobj logic exec keyword mbe function logic equal defabsstobj export correspond sens singl threaded crucial maintain correspond explor extend idea abstract stobj relax equal correspond insist singl threaded goel hunt kaufmann object abstract stobj fit squar tradit featur contribut mak ing industri strength system task model proof real processor acknowledg materi base work support darpa contract number forresthunt moor convers suggest defabsstobj print miss event sol sword report bug earlier implement abstract stobj grate help discuss pertain congruent abstract stobj guard issu robert krug suggest generat event rule class nil final review thorough review refer support materi appear communiti book directori workshop david greve matt kaufmann panagioti manolio strother moor sandip ray josé lui ruiz reina sumner daron vroon matthew wild effici execut autom reason environ funct program http moor mechan oper semant url http user moor public talk marktoberdorf warren hunt matt kaufmann formal model larg memori support ficient execut fmcad http xpl arnumb kaufmann trust extens system code open architectur workshop trust extens interact theorem prover cambridg http user kaufmann itp trust extens aug kaufmann sumner effici rewrit data structur proceed inter nation workshop theorem prover applic kaufmann moor document topic defabsstobj url http user moor current kaufmann moor essay correct abstract stobj comment sourc file url http user moor bryant comput system perspect isbn boyer moor singl thread object practic aspect declar languag padl lncs springer verlag http ray moor proof style oper semant proceed intern confer formal method comput aid design fmcad lncs springer verlag austin http goel hunt autom code proof formal model appear vstte sword verifi framework symbol execut theorem prover sis depart comput scienc univers texa austin http hdl etd sword person communic 