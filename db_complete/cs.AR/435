system hyper pipelin shp improv perform coars grain reconfigur architectur cgra map fpga tobia strauch edaptix munich germani tobia abstract well method slow retim csr automat convert cpu multithread cpu independ thread cpus call stream barrel processor system hyper pipelin shp add flexibl top csr allow dynam number thread execut enabl thread stall bypass reorder shp appli program element coars grain reconfigur architectur cgra shp perform achiev fork join oper implement flexibl provid shp dynam adjust number thread multipl thread share data local great reduc data traffic load cgra rout structur paper cgra shp risc core pes implement fpga keyword system hyper pipelin symmetr multi process simultan multi thread coars grain reconfigur architectur fpga introduct take time execut cpu instruct pipelin improv execut speed program singl cpu instruct depend handl stall signal slow retim csr pipelin multipli function cpu automat generat multithread cpu fundament outcom compar design pipelin csr outlin leiserson system hyper pipelin shp improv csr enabl thread dynam scale multithread cpu fit perfect fpga technolog shp introduc strauch common problem multi processor system chip mpsoc network chip noc coars grain reconfigur architectur cgra identifi softwar partit challeng potenti data rout bottleneck galani challeng partit critic softwar part cgras speedup achiev method appli yongjoo propos memori awar applic map improv data throughput cgras memori bandwidth optim discuss peng perform problem critic system map fpgas applic execut speed paper hyper pipelin reconfigur architectur hpra propos demo improv aforement problem base cgra key technolog system hyper pipelin generat multithread program element improv perform area factor time enabl exampl higher local peak perform fork join oper simplifi softwar partit problem offer local data share reduc risk generat data rout bottleneck propos hpra system compar cgra rout pes hpra shp improv perform pes regular processor array benefit shp easi understand mpsoc noc benefit approach well shp outlin work paper discuss novel shp base architectur introduc csr shp technolog figur simplifi singl clock design appli csr techniqu system hyper pipelin shp introduc strauch paper introduct reader conveni shp base slow retim csr enhanc csr thread stall bypass reorder techniqu replac origin regist design memori thread control remaind paper word thread synonym execut program algorithm copyright held author owner internationalworkshop fpgas softwar programm fsp london unit kingdom septemb figur shp design thread control memori crs improv shp figur basic structur sequenti circuit input output combinatori logic origin design regist sequenti circuit handl thread figur csr techniqu origin logic slice section function independ design copi logic time slice fashion thread thread design copi take micro cycl achiev result cycl call macro cycl origin design implement regist call csr regist level crn figur modif csr design shp assum drs replac memori incom design state thread store relev address write pointer base thread number thread memori hold memori depth outgo thread freeli select thread read pointer thread pass design logic csr design shift regist drs seri regist shp version memori data output connect crs case shift regist output replac regist read address input memori figur memori slice individu section delay read thread output direct connect relev combinatori logic shift regist remov trick appli shift regist chain input memori fcsr forig forig fshp fcsr defin forig maxim clock rate origin design maxim speed csr design estim equat fcsr time origin speed forig reduc correct factor consid delay insert critic path crs technolog depend base empir data rough virtex fpga standard design shp design singl thread speed long period stall forig equat maxim speed shp design fshp sum activ thread equat fshp greater fcsr figur histogram scenario run csr shp figur advantag csr shp origin design axi scenario assum singl cpu run fpga figur csr improv system perform origin system implement figur csr system perform limit critic path origin design instanc switch limit fpga extern memori access key observ shp design execut multipl program multipl cpus symmetr multi process smp execut multipl thread cpu simultan multi thread smt shp allow effici usag system resourc add possibl distribut system perform minimum figur maximum figur set design copi solut realiz figur load balanc handl thread control second thread interact regist depend individu thread runtim thread determinist variabl latenc execut thread experi behavior branch instanc issu thread work independ iii basic introduct novel architectur work figur standard cgra program rout element high perform reconfigur structur res shp pes aspect publish work cgras noc discuss overview propos novel architectur figur overview propos hyper pipelin reconfigur architectur hpra cgra figur base dimension array logic cluster cluster program element rout element hpra figur shp improv perform area time dimens generat multipl independ thread origin time slice fashion system hyper pipelin generat multipl thread logic time slice fashion thread run virtual macro cycl origin speed well element rout element memori clock time faster micro cycl speed speed system domin complex datapath logic synchron clock take micro cycl execut origin macro cycl cycl thread function unit applic cgra call submodul individu program code map individu pes execut code sms multipl thread share code work discuss regard architectur rout concept topolog cgra rout concept propos metzner propos quattuor architectur capabl direct interconnect local task fast data exchang submodul global communic messag compon boundari find optim trade cgra noc concept cgras fpga overlay essenti dataflow machin fulfil high perform requir survey cgras tehr altern concept base bus system noc exchang messag core memori peripher connect network infrastructur chip noc provid dimension grid router intersect line column connect homogen pes survey real time noc architectur hesham shp time dimens logic time slice fashion programm logic devic develop tabula oper time expans increas perform area contrast shp number thread fix individu thread stall perform balanc addit logic continu reconfigur thread overhead requir specif synthesi algorithm classic stack chip problem inter layer via limit number increas power densiti lead high junction temperatur gayasan interconnect bottleneck impact noc tradeoff number node util third dimens reduc averag number hop travers packet number physic plane integr function block network decreas length communic channel evalu latenc power consumpt network pavlidi detail case studi ari mesh network qian transform noc noc improv worst case perform improv averag perform will demonstr paper shp posit impact rout concept cgra local share data shp time dimens benefit programm devic stack processor array introduct hyper pipelin reconfigur architectur figur hpra cluster base rout element gray background program element discuss hyper pipelin reconfigur architectur hpra base dimension array cluster base rout element program element figur data transfer system accomplish system part configur runtim risc base base risc instruct set architectur isa berkeley implement bit version simpl risc subset well multipli multi cycl divis instruct risc relat perform number estim equal thread execut thread speed origin design number activ thread greater maxim system perform origin design equal distribut system memori limit fpga trade off consid ram ram dynam share instruct data instruct basic list independ program section function execut program function ram access read write complet ram data written mechan stack handl stack rang generat immens memori overhead share singl extra stack memori stack dynam small regist base translat buffer tlb stack access well current thread thread control enabl access stack rang stack full stack overflow prevent stall relev thread thread releas stack memori thread control continu execut activ thread automat generat round robin mechan stack usag overflow mechan lead system stall extrem case care partit softwar individu pes stack pointer regist set thread start thread control thread control special function regist sfr control thread start simpli write start address specif address sfr call activ assign specif slot specif slot sid thread start thread overflow occur care partit softwar individu pes handshak mechan implement softwar layer task runtim vari thread activ multipl thread share program kill write data specif sfr call exit free relev kill stall design state remain memori pass design logic allow bypass stall set relev bit sid specif sfr call stall start bit clear thread sid assign dynam stall mechan implement softwar read sid enabl fork join program execut mechan implement set start singl main success write individu start address start sfr call activ count number call store regist option stall process save sid fork thread regist kill check decrement number stall bit clear default continu altern read regist continu execut data transfer propos architectur multipl thread individu run pes forward data complet hpra memori rang true dma engin defin data arriv rout element forward cluster memori limit number paper mechan elabor implement relev impact achiev paper dma engin increas system throughput direct memori access engin dmae dmae three sfr program dmasa regist hold start address sourc memori dmal regist transfer length transfer start write target address dma dmata regist dmae program activ mechan enabl continu datastream system pes connect system bus initi burst read system bus data read extern burst configur part reconfigur runtim system easili configur part reconfigur runtim instruct stream system target ram relev target address runtim part applic reprogram reconfigur thread start write start address relev sfr propos shp base hpra compar shp cgra fast rout element dma engin dmae program element base stage risc defin design map virtex perform area improv tabl compar data origin cgra shp hpra origin occupi slice occ run mhz perform area factor ppa mhz occ shp occupi slice achiev perform mhz ppa origin ppa architectur dmae program element size differ basic size rout element well system support logic sdram control system bridg implement cluster cluster remov replac support logic higher map effort design fit fpga maxim slice cgra system origin implement achiev ghz ppa mhz occ hpra perform higher ghz ppa higher mhz occ cgra hpra execut thread achiev time higher tabl virtex base implement altern concept modul size occ perf mhz ppa mhz occ modul size occ perf mhz ppa mhz occ dppa shp support support cgra hpra tabl local peak perform matrix multipl unit shp diff tabl applic partit consider implement thread system thread cluster data share cluster perform cluster perform penalti singl mhz shp min mhz shp max mhz system perform shp cgra version fpga local peak perform improv paper local peak perform lpp defin runtim algorithm base local data set lpp execut speed program access data memori rout data system simpl matrix multipl algorithm tabl lpp matrix multipl size run origin implement shp version shp fork join techniqu multipl thread parallel shp allow usag thread shp runtim outperform origin version small matrix multipl larger throughput perform assum rout structur cgra effici pipelin propos system hyper pipelin technolog program element risc rout structur system remain ident system cluster replac system logic sdram interfac system bridg cluster tabl overview kind aspect applic partit multipl thread standard cgra system singl implement thread thread share data cluster algorithm execut speed thread mhz propos hpra system shp rvs effici minimum min thread cluster thread cluster share data local case thread cluster impact runtim remain thread cluster thread maximum share mhz mhz cluster perform system complet local scale run thread fpga max thread execut singl cluster share data local perform thread mhz cluster number thread cluster adapt dynam conclus slow retim techniqu turn digit design multithread version system hyper pipelin shp add flexibl multithread approach paper shp appli program element coars grain reconfigur architectur cgra key advantag propos system higher perform area factor concentr approach run flexibl number thread singl improv system level aspect local peak perform throughput perform individu applic overlap pes share data ram move system propos architectur thread communic singl individu thread data throughput speed higher compar execut time singl instruct data rout dynam memori access mechan independ program execut aspect discuss paper easili appli mpsoc noc refer leiserson sax retim synchron circuitri algorithmica strauch effect system hyper pipelin three comput benchmark fpgas intern symposium appli reconfigur comput arc april bochum germani galani dimitroulako gouti speedup partit critic softwar part coars grain reconfigur hardwar ieee intern conf applic specif system architectur processor juli samo greec yongjoo jongeun avir jonghe doosan yunheung high trhoughput data map coars grain reconfigur architectur ieee tran cad issu nov peng huiyan weiwei memori bandwidth optim strategi coars grain reconfigur architectur intern conf cyber enabl distribut comput knowledg discoveri oct sanya china metzner lizarrag bobda architectur virtual time hardwar multithread field programm gate array intern symposium appli reconfigur comput arc april bochum germani tehr kshirsagar survey coars grain reconfigur architectur intern journal comput applic june hesham rettkowski göhringer abd ghani survey real time network chip architectur intern symposium appli reconfigur comput arc april bochum germani rohe teig schmit redgrav caldwel oper time expans patent https patent gayasen narayanan kandemir rahman design fpga switch box architectur thermal issu ieee tran vlsi juli pavlidi friedman topolog network chip ieee tran vlsi oct qian dou noc case studi wort case communic perform ieee acm intern conf coput aid design san jose nov waterman lee patterson risc instruct set manual volum user level isa version eec depart univers california berkeley usa 