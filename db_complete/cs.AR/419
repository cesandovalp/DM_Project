twin load build scalabl memori system scalabl interfac zehan tianyu haiyang salli mingyu comput technolog chines academi scienc beij chin chines academi scienc beij china univers technolog sweden cuizehan lutianyu panhaiyang mckee cmi abstract commod memori interfac difficulti scale memori capac meet modern multicor big data system dram devic densiti maximum devic count constrain technolog packag signal tegriti issu limit total memori capac synchron dram protocol requir data return fix latenc memori extens method commod ddrx interfac fail support scalabl topolog current extens approach slow pcie interfac quir expens chang memori interfac limit commerci adopt propos twin load lightweight asynchron memori access mechan synchron ddrx terfac twin load special load accomplish access request extend memori serv prefetch command dram system second asyn chronous requir data twin load requir hardwar chang processor side slight soft ware modif emul system prototyp demonstr feasibl approach twin load compar perform numa extend memori outperform swap pcie base system order magnitud twin load enabl instant capac iti increas commod platform import architectur open opportun design novel effici scalabl cost effect memori subsystem introduct commod memori interfac difficulti scale mem ori capac meet modern multicor big data system instanc number core chip mul tiprocessor cmps grow memori capac core drop year virtual environ run consolid virtual machin core increas memori requir suf ficient capac hold frequent hot data critic avoid slow disk access exampl total memori data cach facebook size imag data memori databas perform queri time faster tradit disk base approach googl yahoo bing store search indic entir dram capac wall num ber channel limit pin count timat increas year second dram channel connect multipl dual memori modul dimm multi drop bus signal integr requir higher frequenc bus support fewer dimm channel newest intel xeon support dual rank dimm channel third challeng scale dram featur size buffer chip mitig pin count lim itat maximum toler access latenc restrict current solut layer tension constraint avoid access memori packet base asynchron protocol instanc standard pcie access dram remot server disaggreg memori blade random access larg work set suffer slowdown asynchron protocol implement high speed serial link photon expens limit adopt industri standard asynchron interfac solut requir chang processor interfac slow commerci adopt seek practic solut capac wall scalabl requir chang commod processor memori modul deliv accept perform big memori applic memori extend chip mec build multi layer memori system extra propa gation delay violat dram latenc constraint address access extend memori replac special twin load prefetch data mec buffer second bring processor twin load address point locat manipul second load reach mec hit cach commod pro cessor trick serial memori interfac ensur time complet prefetch contribut implement asynchron protocol syn chronous ddrx interfac introduc twin load mech anism coordin softwar hardwar propos commod processor memori mod ule creat scalabl extend memori system base twin load studi mechan guarante command bus address bus data bus col col pre row tccd trtp trl tburst col trp trcd latenc constraint interv constraint figur dram access protocol map bank row map row bank rank bank address associ command readabl tabl ddrx time paramet time descript typic paramet trl fix latenc command data tburst fix durat data transfer cycl tccd minimum delay command cycl trt minimum delay pre command trp minimum delay pre command trcd minimum delay command delay command bank prefetch load order time prefetch enabl exploit memori concurr implement softwar prototyp reserv memori oper system emul extend mem ori mec implement lightweight extend memori manag prototyp evalu feasibl pro posal find best solut compar perfor manc numa extens better scalabl perform dollar applic larg work set irregular access twin load solut perform order magnitud better swap pcie connect remot memori compar ideal system local memori twin load incur accept slowdown abil easili inexpens increas mem ori capac deliv good return invest compel benefit memori architectur approach open opportun build inno vativ effici memori system integr remot memori pool heterogen dram nvm direct remot memori access acceler mec background work dram memori system consist multipl channel drive dimm compos multipl rank rank channel share command address data bus rank multipl storag array bank total memori capac determin number channel rank channel rank capac limit pin count signal integr chip densiti simpl synchron protocol jedec ddrx data bus command bus data bus command bus tpd tpd trl data data control side dram side figur dram access extend hardwar tpd propag delay command data mem ori control dram chip common access data array proto col data bus fix latenc request handshak occur pro ducer consum activ command open row load target data bank sens amplifi read write command access data column subsequ access open row row hit requir command resend row address data row need row miss memori control send precharg pre command close row write data storag array precharg sens amplifi issu command open row figur illustr basic oper tabl time paramet exampl figur row hit issu short tccd latenc row pre command trt time close row trp time finish precharg command row address command column address final issu trcd time memori extens standard ddrx interfac buffer chip allevi pin count con straint latenc requir ddrx protocol instanc unifi comput system extend tech nolog asic buffer expand dram channel distinct channel yield capac buffer chip ddrx interfac expens larg die area packag cost lrdimm memori buffer drive dram bus allevi issu enabl dimm channel scalabl limit higher frequenc newest intel xeon support lrdimm channel method limit scalabl support layer extens extend hardwar interpos memori control dram chip command data experi extra propag delay dram write command data propag rection remain synchron channel dram read requir longer round trip time data command move opposit direct figur differ read time simplest scenario extend hardwar forward command data pro cess extra delay direct dram read latenc memori control trl increas adjust rang commod processor complex sys tem layer extend hardwar minim logic process propag delay will approach difficult commod processor toler memori extens custom memori interfac propos replac synchron mem ori interfac break tight processor memori cou pling typic interfac buffer die introduc bridg processor memori fbdimm bob hmc research studi exot organ instanc chen studi messag base memori subsystem high speed serial link fang incor porat emerg technolog ddrx buse udipi stack photon creat scalabl memori system protocol buffer die memori synchron dram protocol protocol buffer die processor replac packet base access protocol method effect requir chang memori control processor memori interfac uncertain processor vendor will accept solut high cost increas access latenc limit adopt bob support high product line memori extens inter processor interfac coher network connect multipl server processor form numa uniform memori access node processor access memori node addit latenc extend total capac direct address memori numa system low dual socket system cpus memori capac numa expen sive memori modul necessit processor wast memori bound applic second maintain cach coher share memori incur overhead complex cost processor high pro cessor support numa processor third access latenc numa interconnect high intel quick path interconnect qpi add latenc hop memori extens network interfac pcie asynchron packet base protocol lack latenc constraint facilit design scalabl dram organ standard pcie interfac latenc access memori pcie microsecond lim rank mec memori control figur layer tree topolog assum channel drive dual rank high frequenc find swap local remot memori dma perform reason applic high local swap ineffici applic larg work set irregular access pattern data access pcie direct cacheabl propos memori remot server memori blade network interfac softwar approach vsmp memx access memori remot server commod infiniband ethernet interfac base scheme latenc difficult micro second memori extens emerg technolog emerg storag class memori scm technolog pcm reram provid higher storag densiti lower power consumpt dram compar access latenc make good candid capac iti extens scm time constraint dram exampl write tenci longer read latenc read slower dram access scm commod ddrx sdram terfac modifi processor integr memori control micron pcm chip special jedec interfac add preactiv command overlay window design nvm san ulltradimm connect nand flash cpu interfac support direct access intern buffer scm technolog evolv univers interfac will well defin adopt processor communiti overview ddrx pcie open standard interfac good candid memori extens choos memori interfac advantag latenc concurr extra propag delay access latenc extend memori ten nanosecond access cacheabl block cach help mask delay figur illustr potenti memori extens topol ogi allow popul rank chan nel memori extend chip implement slave shadow memori extend memori local memori virtual address space physic address space ext_mem_s object object shadow figur relationship virtual physic memori space shadow space map real dram master ddrx interfac slave top level mec connect commod memori terfac master connect dimm slave interfac mec mec interfac lrdimm intern logic associ softwar break layer constraint dram read extend memori experi intol round trip time access data break trl constraint note load store dram read store trigger read ownership rfo oper bring data cach updat data cach evict write memori discuss load work discuss store load oper break latenc constraint prefetch target data buffer insert fake data repetit pattern placehold cach second demand load fetch real data mec scheme present three challeng issu normal load target address softwar prefetch instruct demand load hit cach load placehold data demand load reach correct data second process prefetch modern processor typic employ order ooo execut instruct pipelin memori control queue order load reach mec unpredict third mec issu prefetch earli guarante data will load buffer demand load fetch data address challeng manipul data dress processor think prefetch load locat demand load mec correspond target locat instanc flag bit suffic distinguish address insid processor mec simpli ignor bit creat shadow address locat extend memori figur relationship local extend shadow memori space address second third challeng design twin load mechan investig treme guarante strong order make tend memori uncach omit poor perform mechan insert load fenc instruc tion load fenc guarante second load will execut receiv data mem ori space load round trip time memori load larg toler prop agat delay mechan retain benefit cach local block load fenc better exploit memori concurr allow order execut second solut ooo design prefetch demand load softwar level assign appropri ident dynam hardwar softwar load arriv trigger prefetch return fake data return true data softwar identifi data correct fli extend shadow address map dram bank second twin load artifici trigger dram row forc ooo delay mec arriv recal command bank row wait trt time issu pre close current row trp time complet pre issu row final trcd time complet issu minimum total delay toler propag delay mec layer store oper twin load bring data cach perform store oper memori consist requir ensur data written true cach event interrupt twin load store correct cach evict time store resum store trigger rfo oper load fake cach modif will error avoid atom pare_and_swap cas compar correct twin load cach swap store cach comparison succeed rfo interrupt bring fake data cach comparison will fail cach remain unmodifi store retri implement detail mec organ physic dimm rank bank logic dimm rank bank memori control see assert fake serial presens detect spd memori interfac mec maintain simpl map name cmpxchg instruct set type load_typ type type type void ext_mem_s fake_valu return fake_valu return return retry_load_typ void store_typ type type newval type type void ext_mem_s fake_valu type_ca newval retry_store_typ newval fake_valu type_ca newval retry_store_typ newval retry_store_typ newval origin code val replac val load_typ origin code val replac store_typ val figur semant twin load ooo tabl choos address bit differenti extend shadow memori ooo bit row address bit memori control general bit msb physic address row address choos simplic msb afford flexibl memori capac grow physic memori space consist local memori extend memori shadow memori figur local memori extend memori physic store data softwar modif programm identifi object place tend memori larg data object good candid code stack small object local memori programm special interfac allo cate object extend memori complic applic evalu modif day includ time understand code applic larg array access data half day figur load store identifi object program replac inlin function plement ooo load virtual address replac function load_typ load con current compar return valu identifi correct store virtual address replac function store_typ val function retry_load_typ retry_store_typ val handl case load return fake valu atom cas fail modif automaticlli compil user annot work will introduc futur paper extend memori manag modifi practic manag tend memori studi choos implement lightweight manag big memori applic alloc memori initi chang alloc execut open close open row row col valid data bank state tabl load cach bank figur bank state tabl load cach hardwar number entri respec tive equal number logic bank design paramet exampl memcach prealloc big chunk mem ori startup manag alloc item intern applic complex manag minim fragment frequent alloc dealloc extend shadow memori space reserv boot time alloc user space mmap simplifi memori manag allo cate dealloc extend shadow memori larg block alloc block vir tual memori region distanc ext_mem_s alloc well virtual block physic dress pass mmap call construct corr spond virtual physic map tabl virtual address object extend memori correspond virtual address shadow simpli ext_mem_s figur twin load process multi layer extend system identifi load forward request load temporarili buffer data return second load mec layer simpler execut receiv command forward layer maintain main structur requir lower mec bank state tabl bst load cach lvc illustr figur rout tabl requir implement tree topolog logic bank bst entri indic bank open store address row open lvc entri temporarili store prefetch valu load tag address valid bit indic entri lvc lru replac receiv command record row address bst arriv bank address mec access bst retriev issu row address load address recon struct row column bank ooo address tag lvc lookup lookup miss access load wise second load see load alloc lvc entri set tag load address set tabl twin load respect cach state state dram read result cach cach cach cach cach cach cach cach valid bit forward target mec trl time put fake valu data bus memori control target mec fetch data dram return lvc entri insert lvc general lvc size guarante correspond entri will evict data return tpd trl tccd tpd trl round trip time return data tccd defin minimum interv consecut rds ooo maximum toler propag delay suffic toler longer delay lvc larger identifi second load return data memori control trl time valid bit clear free entri second load arriv late data evict lvc second load return fake ooo mec will identifi intend second load realloc cach entri return fake valu prefetch data softwar retri ensur load correct data avoid case wast prefetch hurt perform monitor dram command bus find twin load separ averag load guid design choic middl mec forward command target leaf mec execut high bit row address physic dimm command forward rout tabl determin forward port command row address command bst pass command cach state correct extend shadow memori cacheabl twin load access reach correct fake tabl list state respect cach state initi state load trigger dram read mec take read prefetch return fake return correct data second read state mec involv load commit correct fake state load return correct direct cach mec identifi load prefetch return fake correspond lvc entri will eventu evict state load hit cach return fake dram read return fake prefetch reach mec fall softwar retri handl case load address invalid return state twin load correct data memori fenc instruct requir complet invalid twin load retri fake throw except invok safe path memori investig strategi better perform discuss scope paper except handl rare case retri fail lvc entri evict second load arriv correct data fake solut implement slow safe path load data add three uncach memori map regist address regist receiv physic load address flag regist indic load complet data regist hold load data except handler action read port evalu methodolog evalu twin load implement emul multi ple sytem comparison ooo twin load mechan local extend memori shadow memori numa system qpi connect processor attach memori pcie system pcie connect memori access swap ideal ideal system memori local attach host system processor dimm total tabl host memori emul extend memori system pcie ideal system attach dimm singl processor execut processor avoid perform vari ation run nondeterminist memori processor affin experi independ specif topolog long propag delay softwar behav system extend shadow memo rie emul reserv host memori shadow memori initi hold fake valu emul mec function twin address dram row miss host memori control implement requir tabl emul system system numa pcie ideal processor intel xeon processor core thread local memori extend memori shadow memori extend interfac ddrx qpi pcie access mechan ooo numa swap ideal processor program execut system vari cut point emul ratio tabl workload benchmark sourc type descript proport extend memori gup hpc challeng micro benchmark random access radix kernel integ sort scientif comput calcul conjug gradient fmm bodi simul bfs graph applic breadth search calcul connect central pagerank hous implement calcul websit rank scalparc minebench data mine parallel classif streamclust onlin cluster memcach memcach data serv key cach system softwar generat twin load extend shadow memori access numa system attach dimm processor emul local memori attach dimm processor emul extend memori program execut access extend memori qpi pcie system emul extend memori host memori ram disk configur swap partit emul remot swap default linux swap ram disk ideal system emul local memori host memori softwar chang requir note deviat real twin load system emul system emul system load extend shadow memori return correct fake valu correct return earlier advanc program prematur fourth case tabl miss load return correct memori return fake trigger retri avoid situat choos advanc program valu return check conserv choic third case tabl correct cach compar program proceed wait result load difficult avoid second situat softwar cach state record memori request memori bus tool protocol analyz find load extend memori twin easili explain address access synchron brought evict cach account conserv polici deviat emul reason approxim real extend system tabl list workload evalu varieti applic domain select benchmark footprint scale easili code size rea sonabl manual modif memcach client run memslap connect memcach server gigabit ethernet avoid network bandwidth becom ing bottleneck test small object thread server side benchmark evalu footprint medium larg numa system modifi sourc code alloc larg object extend memori tabl proport data extend memori pcie system linux swap mechan manag data placement perform counter gather architectur statist compar ooo numa ideal system describ figur experiment mechan emul prototyp normal perform relat ideal ooo numa achiev ideal perform medium footprint ideal perform larg footprint suggest footprint size affect perform restrict discuss larg footprint ideal discuss potenti penalti twin load compar local memori discuss ooo allevi penalti final discuss short come discuss futur optim potenti penalti twin load increas num ber instruct data access caus cach miss doubl address space tlb conflict will exacerb figur figur fig ure effect twin load instruct execut llc tlb behavior note llc mpki tlb mpki ooo relat number retir instruc tion ideal case absolut increas twin load replac load store instruct inlin function increa number instruct retir depend proport memori access rela tive proport target extend memori retir instruct count increas averag llc miss increas averag data extend memori number llc miss doubl case gup radix bfs pagerank scalparc small portion ooo numa medium footprint larg footprint figur normal perform mechan retir instruct ipc figur instruct count ipc ooo relat ideal ideal ooo figur llc mpki ideal ooo figur tlb mpki local data contribut portion access twin load modest increas llc miss figur workload tlb con flict classifi categori graph applic applic store data structur extend memori instanc doubl extend address space rough doubl tlb miss gup radix graph applic relat small frequent access vertex associ metadata larg graph contribut tlb miss ooo numa ideal figur averag number core outstand read ooo numa ideal figur averag read bandwidth metadata random access larg exceed tlb coverag entri tlb graph travers thrash tlb workload good local scalparc tlb conflict increas tlb mpki rang averag potenti benefit ooo twin load creas number execut instruct llc miss long latenc memori access compar ideal averag perform slowdown ooo medium larg footprint twin better processor util fig ure twin load increas number instruct deliv higher ipc workload remain gap reflect perform slowdown pipelin stall long latenc memori access twin load instruct exploit stall slot mask increas memori instruct achiev memori level parallel mlp appli cation limit satur memori access concurr defin proport data extend memori gup bfs scalparc memcach figur perform pcie swap mechan number mshrs ooo advantag remain capac concurr overlap execut extra load figur averag number stand core read increas workload increas llc miss gup concurr limit tlb miss satur hardwar support concurr increas memori concurr achiev memori bandwidth increas figur shortcom obvious shortcom limit memori concurr consecut access extend memori serial load fenc figur figur number outstand ing core read memori read bandwidth decreas incur slow down toler higher latenc ooo make adapt applic case optim insert fenc data access batch twin load instruct access insert fenc perform second twin load softwar check leav futur work numa figur ooo exhibit compar perform numa host system access latenc local memori remot memori qpi numa long latenc extend memori limit memori concurr memori throughput bandwidth decreas averag compar ideal averag perform slowdown ooo perform better numa graph applic irregular access behavior correspond limit intra thread memori concurr graph applic latenc sensit compar latenc increas numa ooo incur relat penalti recal row extra latenc pcie evalu perform slowdown pcie tend memori page experi chang ratio data extend memori rang origin replac procedur linux sign swap slower hard disk complic slow swap fast pcie remot memori take swap prototyp fastest pcie replac polici compens extra softwar head doubl measur perform emul pcie system comparison result choos rep resent benchmark gup bfs scaleparc memcach tabl figur normal swap data extend memori system place data extend memori slow perform workload perform degrad move data extend memori swap ping pcie extend memori yield slowdown order magnitud data resid extend memori scalparc best perform low llc tlb mpkis good local pres sure memori system extrem random access gup achiev perform memcach insensit memori system figur perform bfs sult perform ooo perform better data extend memori discuss recogn accur cost project difficult relat cost perspect examin impact extend dram trl time cost analysi compar three way extend memori capac ordin softwar mec numa add processor cluster add server pcie scheme experi tabl cost memori extens mechan cost baselin ooo numa cluster processor memori motherboard disk mec server power cost total cost potenti speedup correct factor vari vari assum lifetim three year processor requir larger motherboard processor memori contribut server power server processor space increas data center cost slowdown exclud cost model baselin system processor cost effect configur support dual rank rdimm channel current common situ ation higher frequenc continu trend choos mid xeon processor memori channel rdimm comparison baselin system memori total cost server compon intel amazon websit deriv cost barroso hölzle server cost three year amort cost server power tco total cost ownership datacent mid cost includ capit outlay oper expens note numa system expens processor support core xeon expect mec cost lrdimm buffer ddrx interfac die area chip determin pin count logic add tabl cach ten entri consum logic conser vativ assum mec cost perform model assum doubl mem ori capac perform improv factor factor larg case graef find extend memori capac cover memori dataset numa cluster doubl number processor ideal speedup method bring penalti sult numa achiev ideal perform twin load softwar long latenc memori access addit numa cluster face challeng effici parallel appli cation difficult distribut graph applic penalti cluster method larg perform dollar tabl potenti speedup slowdown cost doubl memori capac three system tabl relat perfor manc dollar mechan relat correct factor twin load softwar cross processor access latenc effici parallel impl mentat figur draw perform dollar relat parallel effici improv perform dol lar compar numa doubl memori capac better scalabl standard intel solut support processor limit system memori capac cluster ing better scalabl respect memori capac difficult scale perform outperform cluster distribut applic achiev ideal perform challeng applic server amort cost tco datacent low high server server power cost repres parallel effici ooo numa cluster figur normal perform dollar relat ooo extra latenc twin load increas trlideal ooo numa figur simul increas trl normal ize trl comparison increas trl support larger latenc extend memori increas maximum latenc constraint jedec stan dard trl determin data transmiss time memori chip memori control increas jedec ddrx standard adapt extend memori larger latenc scheme tini modi ficat memori control hardwar accept dram protocol memori bank will held longer time prevent access bank reduc memori bus concurr reduc benefit potenti approach compar extend memori sin gle load increas read latenc trace driven depend memori instruc tion simul system choos bench mark tabl system trl remain unchang insert second load read row support latenc greater second load delay time block load data compar extra latenc toler figur summar mechan correspond special point figur coincid expect toler laten cie greater emul prototyp wors simul simul mechan fenc load general increas trl perform better small assum mechan realiz manipul instruct order softwar latenc trl grow perform degrad faster high trl valu limit memori concurr contrast interv twin load execut memori request comparison lrdimm load reduc dimm maxmiz server memori capac exampl newest intel socket xeon server support memori lrdimm consid cost fact buffer base approach includ mec consid reduc electr load buffer typic capabl load reduct frequenc real limit lrdimm layer extens restrict synchron dram interfac access protocol specif propag layer violat time constraint best knowledg commod processor support cascad lrdimm buffer propos break limit layer larger memori capac softwar support lrdimm local memori extend memori mec lrdimm memori chip singl level highest lrdimm model ddp dual die packag qdp quad die packag vice suppris singl lrdimm expen sive server cpu multi level mec extens cost effect rdimm modul incorpor build larg memori system energi softwar overhead twin load increas energi consumpt compar ideal system exampl retir instruct ooo ideal system indic energi consumpt pare real commod system potenti perform improv twin load enabl memori process great reduc total energi consumpt energi power delay conclus propos twin load mechan build lightweight asynchron data access protocol requir hardwar chang processor side achiev coordi nate softwar memori extend chip standard ddrx interfac data access accomplish special load prefetch data top mec buffer second bring processor mechan easili attach multi layer mem ori system commod processor instant address capac wall problem creat emul base soft ware prototyp demonstr feasibl propos best mechan achiev perform ideal system local memori mechan perform numa extend memori deliv better scalabl perform dollar twinn load outperform pcie base system order magnitud addit facilit easi cost effect memori tionsion mechan open opportun build innova tive memori system commod platform low latenc high concurr standard ddrx interfac exampl includ remot memori pool heterogen dram nvm system direct remot memori access mec integr acceler reli open standard avoid chang processor interfac enabl system design includ academia build product qualiti system refer list http org hpc challeng benchmark http hpcc hpcs scalabl synthet compact applic graph analysi http benchmark kibra analyz http protocolanalyz seriesid memcach distribut memori object cach system http memslap load test benchmark server http doc bin nas parallel benchmark http public npb html minebench http project dms oracl unveil big memori machin support memori databas http server news oracl unveil big memori machin support memori databas html parsec benchmark suit http ulltradimm ssds http enterpris ulltradimm ssd versatil smp vsmp architectur http technolog versatil smp vsmp architectur vmware increas consolid ratio vms core http news vmware increas consolid barroso clidara hölzle datacent puter introduct design warehous scale machin synthesi lectur comput architectur basu gandhi chang hill swift effici virtual memori big memori server proceed annual intern symposium comput architectur brin anatomi larg scale hypertextu web search engin comput network isdn system chen chen ruan huang cui bao mim messag interfac base memori system journal comput scienc technolog cisco cisco unifi comput system extend memori technol ogi overview http product collater server unifi comput seri blade server white_paper_ html cooper bali rosenfeld jacob buffer board memori system proceed annual intern symposium comput architectur deshpand wang haqu hine gopalan memx virtual cluster wide memori proceed intern confer parallel process icpp fang chen zhang zhu memori architectur integr emerg memori technolog proceed intern confer parallel architectur compil techniqu pact graef volo kimura kuno tucek lillibridg veitch memori perform big data proceed vldb endow hou jiang zhang dong wang zhang cost effect data center server ieee intern symposium high perform comput architectur hpca hybrid memori cube consortium hybrid memori cube specifica tion inphi lrdimm isol memori buffer data sheet intel lrdimm system level valid intel xeon processor famili rdimm system level valid intel xeon processor famili intel architectur softwar manual itr itr report updat jedec fbdimm architectur protocol sdram specif sdram specif low power doubl data rate kozyraki kansal sankar vaid server engin insight larg scale onlin servic ieee micro lee ipek mutlu burger architect phase chang memori scalabl dram altern proceed annual intern symposium comput architec ture isca lim chang mudg ranganathan reinhardt wenisch disaggreg memori expans share blade server proceed annual intern symposium comput architectur lim meisner saidi ranganathan wenisch thin server smart pipe design soc acceler mem cach proceed annual intern symposium comput architectur isca lim turner santo auyoung chang ranganathan wenisch system level implic disaggreg mem ori ieee intern symposium high perform comput architectur hpca micron rack server perform load reduc dimm http product dram modul lrdimm memori modul serial presenc detect introduct mobil pcm phase chang memori molka hackenberg schone muller memori perform cach coher effect intel nehalem multipro cessor system proceed intern confer parallel architectur compil techniqu pact nair kim qureshi archshield architectur framework assist dram scale toler high error rate proceed annual intern symposium puter architectur ousterhout agraw erickson kozyraki leverich mazièr mitra narayanan ongaro parulkar case ramcloud communic acm reiss tumanov ganger katz kozuch heterogen dynam cloud scale googl trace anali sis proceed third acm symposium cloud comput rosenfeld cooper bali jacob cycl accur memori system simul comput architectur letter sanchez kozyraki zsim fast accur microarchitec tural simul core system proceed annual intern symposium comput architectur isca sgi white paper technic advanc sgi architectur udipi muralimanohar balasubramonian davi jouppi combin memori control photon stack enabl scalabl energi effici system acm sigarch comput architectur news 