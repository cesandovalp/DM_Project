automat latenc balanc vhdl implement complex pipelin system wojciech institut electron system warsaw univers technolog nowowiejska warszawa poland abstract balanc equal latenc parallel path pipelin data process system problem path delay data number clock cycl data arriv process block proper align time incorrect produc manual correct latenc tedious error prone work paper present automat method latenc equal system describ vhdl method base simul portabl simul synthesi tool method increas complex synthes design compar solut base manual latenc adjust exampl implement propos methodolog simpl design demonstr open sourc project bsd licens keyword fpga pipelin latenc balanc delay equal vhdl python introduct pipelin architectur long time increas throughput digit block concept earli adopt signal data process system implement fpga pipelin architectur allow increas clock frequenc complex oper result long critic path fpga divid multipl simpler oper oper perform singl clock cycl higher clock frequenc time need process set data will longer introduct addit regist throughput system will increas clock cycl system accept set data process previous data set produc output cours system will introduc latenc number clock cycl moment deliveri data set input moment process output implement algorithm pipelin architectur complic process consist oper perform parallel requir number elementari singl cycl oper latenc oper produc coher output add delay block typic consist shift regist output faster block figur problem oper process block case will incorrect operand final oper calcul input data origin dataset figur solut equal latenc introduc appropri delay block real applic system multipl path latenc equal ensur proper oper practic exampl system overlap muon track finder trigger cms detector cern multipl tel fax email address wzab wojciech preprint submit journal system architectur novemb data process system latenc oper latenc oper result result data process system latenc oper latenc oper result result lat delay figur exampl data process system perform pipelin oper parallel output data incoher oper produc clock period tclk oper assur output data coher add tclk delay oper block data process system latenc oper latenc oper bin data process system latenc oper latenc oper bin lat delay figur exampl data process system oper calcul latenc argument third oper addit delay output data incorrect argument oper calcul data set assur correct output data add tclk delay oper block argument oper deriv data set data process oper perform parallel pipelin block produc muon calcul latenc complex path tedious task work repeat latenc chang develop system laten cie vari modif algorithm chang enforc modif part core exampl occup fpga increas addit block rout signal complic achiev time closur increas number pipelin stage design manual hand craft latenc equal difficult maintain reus method provid automat delay balanc need propos method impair portabl design compat broad rang design tool method applic system implement entir vhdl solut cours problem latenc equal path pipelin design graphic tool allow build data signal process system predefin block implement basic oper address problem year ago version xilinx system generat fact problem proper synchron data path design inspir intensifi work methodolog describ paper simulink provid sync block oper describ xilinx sync block synchron channel data valid data sampl appear align time output input channel pass delay present output port channel length delay line embed block adapt chosen start simul valid input sampl align data appear channel valid sampl receiv channel sync block synthes hardwar shift regist slide modern block base tool provid function exampl altera dsp builder automat add delay path lower latenc ensur input data reach function unit cycl detail methodolog reveal implement detail disclos articl describ system level retim automat pipelin delay balanc includ multi rate pipelin implement mathwork hdl coder delay balanc algorithm author depend transform design parallel implement represen tation pir analysi pir graph tool convert generic hdl code pir form solut suitabl design implement pure vhdl final exist solut disadvantag system built graphic environ predefin block user add block need function close solut offer proprietari environ portabl close sourc natur clear latenc balanc implement reus design entir base hdl descript except xilinx sync block approach base simul main concept describ accompani document interest thing block remov newer version xilinx system generat algorithm implement mathwork hdl coder util special intermedi represent design represent creat simulink model arbitrari vhdl sourc review solut applic level vhdl sourc approach latenc analysi equal vhdl base design vhdl sourc fulli describ behavior system find data path latenc analysi sourc code calcul latenc introduc vhdl code extrem difficult exampl singl sequenti process introduc clock period tclk latenc figur latenc clock period figur structur descript latenc serial connect block introduc latenc block implement file find method propag introduc latenc file defin block block instanti situat complic consid signal sig_in sig_out std_logic process clk process clk rst_p sig_out sig_out sig_in process signal sig_in sig_out std_logic signal std_logic process clk process clk rst_p sig_out sig_in sig_out process figur simpl process introduc latenc sig_in sig_out signal process introduc latenc process introduc latenc generat generat statement final conclus imposs deriv data path latenc vhdl code duplic function vhdl compil add featur open sourc compil ghdl scope paper portabl solut simul base analysi equal latenc simplifi approach develop core fpga prepar testbench allow verifi correct oper design simul method allow check equal data path latenc simul dedic testbench accept solut approach employ xilinx sync block mention method base time arriv valid data fulli reliabl desir latenc path check verifi simul period general idea propos method supplement simul data set time marker describ moment clock period number data deliv analyz system simul system equip addit block generat current simplest implement integ signal start increas clock puls detail descript time marker implement process time marker travel system data process cours time marker logic associ process includ sim ulat increas complex synthes design fortun synthesi tool offer pragma translate_off pragma translate_on metacom low exclud fragment vhdl code synthesi ensur delay block need balanc latenc parallel path will synthes design exampl adder block implement describ method figur data data data equal test data adder input adder output data input system data data data time marker generat earlier stage pro cess pipelin erent length time marker output system figur adder exampl process block implement describ method data enter system simul label time marker preprocess data involv pipelin latenc final sum three valu preprocess calcul equal time marker adder input verifi time marker produc output gray object simul exclud synthesi pragma translate_off pragma translate_on metacom oper subset data perform time marker check case symptom unequ data path latenc case simul abort differ time marker written file correct design shorter data path data path data subset operand supplement addit delay block latenc equal detect differ figur process perform iter design work proper method requir multipl iter simul analysi correct cycl allow correct latenc input block prefer method provid equal latenc singl simul analysi correct cycl simul base latenc analysi correct improv approach approach simul stop inconsist time marker detect pipelin system work misalign data cours will incorrect system simul time marker differ input data block analyz problem input time marker equal time marker result simpli copi output time marker input time marker equal allow proper analysi latenc rest system imit appropri latenc equal latenc equal achiev introduc delay block decreas time marker imit proper equal output time marker set lowest input time marker cours situat report process will incorrect data proper align time addit valu input time marker report will find proper latenc delay block correct phase describ method test latenc path system calcul delay delay block singl simul analysi correct cycl data tma data tmc data tmb simul analysi smallest tmb tma tmb tmc tmb correct tclk tclk delay block figur idea simul base latenc correct simul place design three data set perform oper time marker associ data set compar data path highest valu delay block latenc delay equal differ minim path data data data equal test select smallest data adder input adder output figur adder exampl process block implement improv method sum three input valu calcul equal time marker input verifi equal time marker produc output case inequ pretend latenc proper equal increas delay delay block minim time marker produc output point view time marker imit oper system proper latenc balanc block cours data misalign incorrect testbench allow test proper latenc balanc design fore offer mode oper analysi mode time marker inequ simul failur block output time marker set smallest input time marker final test mode differ time marker simul error implement propos method vhdl allow inclus time marker process data data encapsul record type option simul time marker field exampl code implement record type adder type figur user modifi process block includ handl figur propos method inconveni simplifi adopt dedic latenc check equal block lceq introduc lceq block offer configur number signal path behav analysi mode check time marker input report detect inequ addit time marker valu record analysi pragma translate_off subtyp t_time_mark integ pragma translate_on user data time marker subtyp t_user_data unsign downto type t_user_data_mrk record data t_user_data pragma translate_off t_time_mark pragma translate_on record t_pos_int_mrk entiti adder_tm port t_user_data_mrk t_user_data_mrk t_user_data_mrk t_user_data_mrk entiti adder_tm architectur exampl adder_tm pragma translate_off check delay activ edg clock will lot fals alarm delta cycl process clk variabl out_tm t_time_mark assum special function report unequ time marker report_inequ out_tm out_tm out_tm out_tm out_tm out_tm process pragma translate_on architectur exampl figur exampl definit type encapsul user data time marker adder type verifi time marker output delay block case inequ copi smallest time marker output allow singl cycl analysi describ previ ousli final test mode check time marker output abort simul case inequ addit configur latenc introduc lceq path block diagram propos lceq block figur implement block vhdl figur present implement lceq block path carri data type accept applic assur maxim flexibl defin type data path independ vhdl languag support simul synthesi tool allow implement port array record type vhdl introduc generic type provid function consid fact vhdl fulli support simul synthesi tool general case type data solut provid fulli versatil block tool generat dedic lceq block number path type data detail provid practic implement propos method proof concept implement propos method implement open sourc bsd licens opencor websit project equal test select smallest input output data data data data data data valu equal test input output data data data data data data valu figur block diagram propos latenc check equal block block work analysi mode block work final test mode implement propos method type process data direc tori hdl_single_typ second type process data directori hdl_various_typ implement sampl data process system describ demon stration exampl generat time marker mention simplest implement integ num ber time marker exampl set initi time marker time marker input data generat start increas clock puls allow special handl uniniti block implement disadvantag clock puls time marker will achiev maximum attempt increas will generat simul error longer simul approach need reach maximum time marker will return cours solut mod ifi implement comparison subtract time marker valu handl wrap valu proper report time marker essenti propos methodolog report time marker input lceq block deliv program calcul latenc delay block test implement time marker simpli written file clock puls input lceq block written file uniqu identifi leq_id lceq block number input time marker marker input clock cycl report leq_id word written file solut allow analysi tool check latenc differ remain constant simul futur implement connect analysi tool direct vhdl simul name socket vhpi interfac will elimin write huge amount data disk addit parallel oper simul analysi tool reduc execut time simul analysi correct cycl multiprocessor machin librari ieee librari work entiti lateq generic leq_id string nchan integ port group input output din t_user_data_set nchan dout t_user_data_set nchan system port clk std_logic rst_p std_logic lateq architectur beh lateq type t_delay array integ rang t_user_data_mrk signal s_out t_user_data_set nchan nchan generat constant ndel integ lateq_read_delay leq_id signal delay t_delay ndel c_user_data_mrk_init s_out delay handl case latenc ndel generat process clk rst_p clk rst_p ndel loop delay c_user_data_mrk_init loop delay ndel din ndel loop delay delay loop process generat handl case latenc copi input output ndel generat delay din generat generat report delay alayzi mode c_lateq_mod generat pragma translat process clk rst_p clk rst_p null nchan loop lateq_report_delay leq_id din lateq_mrk loop lateq_report_end leq_id process pragma translat generat abort simul final verif mode c_lateq_mod generat pragma translat process clk rst_p variabl latm t_lateq_mrk clk rst_p null latm s_out lateq_mrk nchan loop lateq_mrk_cmp latm s_out lateq_mrk report error inequ latenc block leq_id chan lateq_mrk_to_str latm chan lateq_mrk_to_str s_out lateq_mrk sever failur loop process pragma translat generat process assign output process s_out pragma translat variabl dmin t_lateq_mrk pragma translat pragma translat dmin s_out lateq_mrk pragma translat dout s_out pragma translat nchan loop lateq_mrk_cmp dmin s_out lateq_mrk dmin s_out lateq_mrk loop dmin set output nchan loop dout lateq_mrk dmin loop pragma translat process beh figur sampl implement latenc check equal block number equal path configur nchan generic paramet valu input time marker clock cycl report lateq_report_delay function set mark lateq_report_end function latenc delay block path defin lateq_read_delay function comparison time marker perform lateq_mrk_cmp function librari ieee librari work packag lateq_read_pkg function lateq_read_delay constant leq_id string constant integ return integ packag lateq_read_pkg packag bodi lateq_read_pkg function lateq_read_delay constant leq_id string constant integ return integ function lateq_read_delay leq_id return elsif leq_id case return return return case elsif leq_id case return return return return case return function lateq_read_delay packag bodi lateq_read_pkg figur exampl generat function return calcul latenc delay block lceq block function generat tool record time marker report calcul latenc delay block latenc delay block elabor time analysi tool generat packag implement function accept paramet uniqu lceq block leq_id number path block function return requir latenc integ analysi tool written python call syntax file with_time_mark package_fil package_nam function_nam exampl call demonstr project makefil tmp lateq_read_pkg lateq_read_delay analysi tool read time marker report clock cycl check differ remain constant simul initi phase time marker initi calcul need addit delay differ lowest time marker time marker input path exampl generat latenc configur function figur approach addit advantag final sourc proper balanc latenc synthesi standard vhdl file uniqu identifi lceq block report time marker configur latenc delay block requir lceq block design uniqu identifi simul syn thesi theoret vhdl offer instance_nam attribut univoc identifi instanc compon design test simul synthesi tool format generat identifi addit simu lation system instanti testbench synthesi top entiti compon bigger system lead instance_nam valu simul synthesi work problem lceq block equip generic leq_id string type generic set uniqu lceq identifi instanti block block instanti insid block contain block equip uniqu case instanti intern lceq block leq_id set block instanti generat loop loop variabl convert string function concaten instanti block approach allow creat uniqu identifi portabl simul synthesi tool generat dedic lceq block type data mention path analyz equal lceq block type data generat sourc code special lceq block combin data type demonstr implement tool name call argument entiti generat block path file sourc block generat list type data consecut data path creat block length list defin number data path block exampl generat vhd file sourc entiti implement lceq block path handl data type t_voltag third data type t_width fourth t_posit user call tool vhd t_voltag t_voltag t_width t_posit code generat limit name data type handl generat lceq block type start addit type user defin constant provid initi signal type constant deriv type replac initi _init verifi propos methodolog exampl data process system includ sourc test data process system system receiv data adc convert connect readout channel particl detector voltag level channel proport amount charg receiv channel previous clock period particl pass detector generat charg distribut neighbour channel amount charg proport energi center graviti collect charg defin posit hit clock cycl system find number channel highest level signal nmax treat interpol posit hit nmax system select signal channel neighbour channel side nmax nmax system calcul sum charg base proport charg voltag nmax nmax maximum osit figur block diagram exampl system data type path ind posit maximum osit t_input_data_mrk t_pos_int_mrk t_calc_data_mrk t_calc_data_mrk figur block diagram exampl system type data path type name written figur path number input lceq block refer describ weight sum charg nmax nmax calcul valu transmit extern system simul testbench calcul center graviti charg final interpol posit particl hit nmax block diagram exampl system figur note block product qualiti incorrect handl situat maximum signal edg detector nmax nmax latenc path exampl system modifi adjust paramet file find maximum perform multi level tree base compar consist cer tain number basic compar number input basic compar chosen pend hardwar featur fpga devic requir speed oper level compar equip pipelin regist total latenc maximum finder block depend number input entir system paramet tabl latenc adjust valu paramet test system upper tabl paramet valu test case lower valu addit latenc calcul method path number defin sourc figur case correct oper system latenc balanc confirm implement data type number path block singl type implement high paramet test c_n_channel c_n_side_chan lceq block path calcul addit latenc c_n_channel number input singl basic compar paramet adder calcul sum charg weight sum charg multilevel tree base structur latenc depend number channel select calcula tion paramet c_n_side_chan number input basic adder paramet implement demonstr system locat hdl_single_typ directori type t_user_data_mrk path system allow avoid generat lceq block requir addit effort find common represent differ ent data input signal sum charg posit maximum second implement locat hdl_various_typ directori propos methodolog type individu suit kind process system lceq block generat t_input_data_mrk t_pos_int_mrk t_pos_int_mrk t_calc_data_mrk t_calc_data_mrk provid sampl implement licens bsd licens verifi investig propos methodolog start point adopt project test propos method describ parameter implement test system chang paramet result chang latenc correspond path describ method latenc manual balanc user propos method user perform automat equal latenc test paramet describ previous subsect chang addit latenc calcul propos method check correct oper system verifi simul hit data testbench present tabl case correct oper system latenc balanc confirm allow user verifi present allow perform experi modifi design dedic makefil prepar provid demonstr user instal comput python version ghdl simul gtkwave viewer test makefil defin target clean remov compil file simul initi generat initi version latenc configur function set latenc path lceq block final perform simul final test mode latenc proper balanc expect error messag unequ latenc inequ latenc synchro perform simul analysi correct cycl command latenc proper equal run final report error fact testbench report correct analyz particl hit hit charg hit charg reader allow start gtkwave viewer valu signal demonstr system simul target analyz intern system test synthesiz generat sourc sourc generat test makefil synchro target synthes xilinx vivado tool block time marker generat check correct remov synthes design addit delay block insert high number pin virtex chip select implement conclus method present paper solut problem equal latenc parallel path complex pipelin data process system implement fpga method extend concept simul base pipelin delay balanc method offer sync block earli version xilinx system generat simulink environ solut describ paper suitabl system implement entir vhdl compat simul synthesi tool simul design subsystem allow calcul latenc addit delay block singl simul analysi correct cycl method allow equal latenc path data type crucial complex system achiev dedic tool written python overcom limit vhdl languag generat sourc code block latenc equal implement standard vhdl packag function defin latenc delay block sourc proof concept implement propos methodolog pub lish open core websit bsd licens correct method verifi complet exampl data process system includ sourc improv propos method focus optim communic simul latenc analysi tool name socket vhpi interfac improv simul analysi speed current state propos method tool design mainten complex pipelin core implement vhdl refer thoma hallin michael flynn pipelin arithmet function ieee transact comput szwarc kwasniewski pipelin digit design sram fpgas electr comput engin engin innov voyag discoveri ieee canadian confer volum wojciech dominik bartkiewicz bluj karol bun kowski adrian byszuk krzysztof doroba maciej górski artur kalinowski krzysztof kierzkowski marcin konecki jan królikowski wojciech oklin ski olszewski krzysztof poz niak fpga implement overlap mtf trigger preliminari studi proc spie http org wojciech adrian byszuk algorithm implement muon trigger data transmiss system barrel endcap overlap region cms detec tor https event session contribut attach onlin access septemb xilinx ultrafast design methodolog guid vivado design suit http support document sw_manual vivado design june onlin access septemb xilinx time closur user guid http support document sw_ manual pdf octob onlin access septemb altera time closur methodolog advanc fpga design https content dam altera global en_us pdfs literatur pdf decemb onlin access septemb xilinx xilinx system generat simulink https wiki pub cicada webhom onlin access octob sean gallagh acceler dsp algorithm fpgas http present session_p june onlin access octob altera dsp builder advanc blockset https en_us pdfs literatur dspb onlin access septemb parker michael mark jervi rate fpga design tool http section_id doc_id septemb onlin access septemb venkataramani yongfeng system level retim pipelin field programm custom comput machin fccm ieee annual intern symposium mathwork delay balanc valid model workflow hdl coder http help hdlcoder exampl delay balanc valid model workflow hdl onlin access septemb xilinx xilinx system generat dsp version http support sw_ manual march onlin access octob ghdl vhdl meet gcc http onlin access septemb peter ashenden jim lewi vhdl stuff morgan kaufmann seri system silicon morgan kaufmann burlington automat latenc equal pipelin design implement vhdl http project lateq septemb onlin access septemb python https onlin access septemb gtkwave http onlin access septemb vivado design suit http product design tool onlin access septemb wojciech zabolotni born sucha beskidzka poland receiv msc electron warsaw univers technolog poland honor assist assist professor warsaw univers technolog interest distribut data acquisit system biomed high energi physic embed system programm logic involv develop electron system cern desi hamburg cbm darmstadt jet culham 