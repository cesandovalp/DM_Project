lin petrucci french singaporean workshop formal method applic eptc doi eptc kirankumar aarti bindumadhava work licens creativ common attribut licens formal equival boost design confid achutha kirankumar intel corpor aarti gupta intel corpor bindumadhava intel corpor increas design complex driven featur perform requir time mar ket ttm constraint forc faster design valid closur turn enforc novel way identifi debug behavior inconsist earli design cycl addit incr mental featur time fix alter legaci design behavior inadvert result undesir bug common method verifi correct chang design dynam regress test suit intend chang compar sult method exhaust modern formal verif techniqu involv method prove sequenti hardwar equival enabl set solut problem complet coverag guarante formal equival appli prove func tional integr design chang wide varieti reason rang simpl pipelin optim complex logic redistribut experi success fulli appli rtl rtl formal verif wide spectrum problem graphic design enabl check design saniti short time enabl faster safer design churn techniqu present paper applic complex hardwar design introduct graphic design increas find relev market segment smartphon tablet faster churn optim design desir meet market requir ver ifi design increment chang involv challeng time consum critic aspect design process tradit method mandat compromis breadth coverag resourc pioneer methodolog enabl formal verif design stage help faster churn rtl earli stabil formal verif prove ideal candid verifi tough soc design challeng abil exhaust verifi complex scenario test bench input stimulus formal design verif engin spend time stimul scenario formal engin carri task hood result increas confid elimin uncertainti verifi scenario difficult miss complex design formal equival field common applic method olog check correct netlist generat design synthesi rtl synthes abil formal determin function equival rtl model formal equival key enabl physic awar front design methodolog practic high perform design earlier combin equival check tool need state match design test equival function map advent methodolog sequen tial equival tool sequenti implement design verifi function equival lot problem tough check earlier gamut formal verif faster verif design chang retain legaci behavior possibl combin equival check cec play role eda applic verifi function equival combin circuit multi level logic synth sis typic scenario structur implement design problem prove function equival problem address numer search public cec solv problem logic move equival state select disabl check unequ state involv process cec limit design compar state match clever techniqu appli resolv individu problem comprehens solut need check cec increas sequenti optim logic synthesi sequenti equival check practic verif problem employ sym bolic algorithm base binari decis diagram bdd travers state space optim methodolog specif state space travers check equival circuit hand equival problem map model check problem set properti defin equival circuit set properti formal sequenti equival check adopt refer model descript higher level abstract function discuss check rtl high level refer model piec rtl scope discuss paper limit equival check rtl model organ paper detail explan experi area applic detail complex reduct techniqu equival check best practic deploy talk applic definit potenti appli paper conclud detail achiev employ area applic parameter parameter process decid defin paramet complet relev specif design legaci design start hard code paramet design requir press usag design configur design team resort parameter common paramet figur talk prolifer graphic design target wide varieti market mention common form prove correct design run exist dynam regress select set seed number guarante design compromis legaci behavior valid complet comprehen sive corner case expos run obvious kirankumar aarti bindumadhava verif kind problem design parameter code spec ific model spec parameter code default paramet implement model imp figur avatar parametr posit valid base paramet parameter code equival valid paramet set dynam formal valid techniqu need assess correct program interest scenario observ negat formal equival default paramet set kind equival check handl cec tool time fix logic redistribut fix critic time path common activ synchron design common solut fix critic path redistribut logic pipelin stage resort optim studi decent amount unintent function bug introduc fix time issu kind failur scenario easili avoid run formal verif make sure design retain saniti irrespect logic redistribut pipelin formal equival figur logic redistribut time violat figur huge combin path second flop redistribut violat kind case combin equival checker fail state match design sequenti equival checker appropri solut time fix critic path reduct time fix flexibl redistribut logic pipe stage design bifurc comput logic redirect comput logic parallel flop path figur figur critic path reduct time fix parallel pipelin path straight forward problem combina tional checker solv tool allow skip identifi stage check converg reason mandat check pipelin stage commerci tool tellig handl kind case user intervent converg reason ideal kind scenario compar cec proof converg kirankumar aarti bindumadhava perspect pipelin optim manufactur process algorithm implement methodolog matur time comput ing pipelin depth optim function comput reduc pipelin depth contrari time fix algorithm requir requir addi tion extra pipelin stage retain function figur pipelin optim afor mention case pipelin optim time fix addit state defin design equival check state match design depend case pipelin optim depict design portion consid spec specif golden refer imp implement chang design function remain unperturb formal verif ideal solut guarante function preserv methodolog choic state match design equival equival check necessit defin latenc specif implement model chicken bit valid chicken bit bit expos driver disabl featur silicon intend revert design chang confid high confid direct proport valid effort imposs hit state pre silicon design fix day implement chicken bit time chicken bit unintent affect real function typic critic featur account chicken bit earli design cycl small fraction number chicken bit design cycl flexibl disabl diffid featur negat valid kind chicken bit challeng featur disabl intrus code featur design implement chicken bit mode depict figur guarante correct design chang formal equival verif earlier design current design question chicken bit disabl sort verif sequenti logic checker good debug capabl tool eas life design issu report formal equival figur chicken bit design clock gate verif common low power techniqu design clock gate proper clock gate data integr clock shut proper piec logic improp state signal signal glitch propag lead data corrupt default verif strategi clock gate design set golden regress test suit pre clock gate design post clock gate design assumpt golden test suit exercis corner case clock gate assumpt true aggress clock gate scheme coverag corner case challeng exist suit expos scenario best strategi sequenti equival check tool rtl rtl comparison cec obvious prefer kind design check figur clock gate verif depict figur fev design clock gate enabl imp disabl spec sure design behav exact scenario case addit realist constraint input constraint assist verifi real kirankumar aarti bindumadhava intent assist converg power awar equival verif low power design continu garner increas attent design segment design techniqu develop reduc power judici applic techniqu system tune best power perform trade off design sign great qualiti essen tial avoid spin meet market pressur low power specif defin upf unifi power format introduc power logic insert isol cell retent map synthesi function intent separ power intent power awar logic equiv alenc check methodolog indispens formal equival design upf result check power intent upf syntact correct check incor rect miss inconsist isol rule figur power intent equival verif tool cec handl equival includ ing power intent judici select tool help faster debug converg advis low power tool industri kind check basic check uniniti flop design state element initi defin post reset reset uniniti state element state silicon repres simul valu simul bring element formal verif bring uniniti state element undefin state formal verif tool provid util defin behavior flop insid design connect reset methodolog check type initi element sure equival test pass remov constraint bring eman flop comparison output result counter exampl formal equival design spec imp figur check uniniti flop eman spec equal imp counter exampl point differ state assign deriv flop design elabor undriven net specif assign consid symbol altern mode check flop drive unwant valu propag output assign resett state element design spec imp method check complet comprehens critic combin state element mode check converg faster catch low hang fruit faster bug hunt mode basic check undriven net intern assign stopat design reason uniniti state element check methodolog describ direct assign driven net deriv design design elabor assum design elabor assumpt compar check propog prelud check undriven intern assign tool tune assum resett flop element equival definit design methodolog avoid check bound array interact tool capabl control capabl handl kind check mention subsect methodolog help bug hunt mode constraint absolut need thwart report function case lot case experienc bogus input constrain valid set input vector ignor kirankumar aarti bindumadhava figur check intern assign undriven net featur addit backward compat design critic product oper unit expos extern custom direct design stick standard function exampl execut unit design stick standard ieee ocl ogl oper handl execut unit will instruct set design figur confirm legaci behavior featur addit design revers compat previous generat design instruct implement earlier generat retain function featur instruct implement tamper featur instruct implement applic optim chang behavior previous instruct featur featur addit opcod addit revers compatibil iti analysi input constrain disabl featur opcod check legaci design help maintain legaci behavior spite formal equival optim featur opcod addit replac big data regress fev data path oper ste regress implement proof intel prove oper model day base net batch resourc avail machin configur figur oper divid bucket equival advent power equival tool optim time regress previous ste proven implement order assist faster converg oper subdivid bucket regress complet hour machin compar complet ste regress machin decent memori resourc figur depict percentag time set oper regress time regular fpv popular techniqu formal properti verif write abstract model design rtl write properti defin equival design output methodolog easili verifi equival specif abstract model implement real piec code rtl regular model check engin optim equival tool engin converg check challeng abstract model written match state real implement design cec ideal choic comparison complex reduct techniqu formal verif fev capac limit rang techniqu appli overcom capac issu discuss detail techniqu solv complex task kirankumar aarti bindumadhava divid conquer approach overcom capac issu typic handl divid conquer approach composit verif typic composit approach decompos problem number proof task prove independ rework top level block black box figur block level diagram design repres design discuss depict figur block associ logic repres complet function design independ block decent size complet conglomer block size cross typic limit tool handl capac fev total design size size design complex cumbersom resort prove largest independ block set block exampl block separ black box design top level equival select enabl care carv logic chang design limit set block nece sarili mandat complet block level equival select enabl block black box remain unwant logic input block box consid output output block consid input kind tool methodolog automat map black box respect signal care attent choos logic black box make sure dont accident turn block chang influenti time design chang limit block individu span formal equival block individu equival prefer solut proper care exercis carv logic equival appropri input constraint prune design definit function case set valid input constraint help appropri prune appli design input space constrain valid argument valid design behav case invalid input add valid question cost increas complex case split prune design complex complet control addit method converg design best method split probabl input subset exampl sort case split discuss helper assert techniqu control complex pick intermedi point design prove equal point point identifi proven helper assert prove downstream logic effect cone influenc coi subdivid simpler cone bigger portion cone converg faster pace helper assert equival point help faster converg figur helper assert faster converg figur explain case point hard converg equival point design reduc cone converg depict helper cone help prove faster kirankumar aarti bindumadhava state split case bit involv find exact equival point routin written select equat intermedi point state match prove intermedi point fail equival remov map point point proven design helper converg final output kind state split help case time fix logic redistribut pipelin stage design size huge converg issu figur automat state map faster converg figur depict case automat state split flop stage prove logic red structur allow proven checker converg faster cleaner case deploy script map flop design spec imp select remov fail state element map iter modus operandi kind logic enabl script check equival brute forc method prove cover point point definit convinc exercis logic design knowledg mandatori dilig equival check involv case abstract design applic common form converg bound model check bmc form fpv abstract complex structur fifo counter ram memori element tool provid methodolog easili abstract hard crack nut help faster con vergenc logic complet avoid black box prove equival formal equival potenti area applic hls model equival hls establish methodolog synthes rtl high level languag specif systemc design dont start regular high level model start base exist design recod high level languag hls continu code high level form usag equat generat rtl base high level code start work seamless smaller block work bigger block challeng solv current tool set conclus formal equival verif success implement var ious flavor intel beauti techniqu bigger valid envi ronment setup complex assert code regular fpv debug simpler spec standard code verifi earlier addit code chang exist status health model easili guarante deploy formal equival model releas design great amount net batch memori human resourc save dilig methodolog propos case regress time drastic cut equival verif depict sampl multipl unit fev saniti regress fev guarante confid verif fail repres number instanc pass catch kind corner case expos saniti check regress week regress thousand seed effort clear save deploy fev case discuss paper figur saniti regress fev figur time spent saniti regress effect save deploy formal equival flow design chang guarante coverag scenario figur talk specif case ste formal saniti regress replac formal equival base earlier proven model kirankumar aarti bindumadhava figur execut time comparison complet formal proof equival compar form formal verif equival verif easiest form lower barrier design valid expert expos formal method deploy script methodolog help design formal equival defens releas code model tool matur time strive enhanc converg featur enhanc adopt methodolog easier assist faster design converg acknowledg sincer archana vijaykumar support strong activ enabl design design team member constant support provid refer robert brayton gari hachtel alberto sangiovanni vincentelli multilevel logic synthesi proceed ieee doi cohen moran gordon michael lifshit alexand nadel vadim ryvchin design work qualiti formal equival check dvcon acm van eijk sequenti equival check state space travers ieee comput societi doi evgueni goldberg mukul prasad robert brayton sat combin equiva lenc check doi zurab khasidashvili marcelo skaba daher kaiss ziyad hanna theoret framework posit sequenti hardwar equival verif presenc design constraint iccad ieee comput societi acm doi achutha kirankumar aarti gupta rajnish ghughal symbol trajectori evalu primari valid vehicl generat intel processor graphic fpu fmcad ieee formal equival http xpl arnumb carlo ivan castro marquez marius strum wang jiang chau formal equival check tween high level rtl hardwar design latw ieee doi latw alan mishchenko satrajit chatterje robert brayton nikla improv combina tional equival check iccad acm doi mario papaefthymiou kumar lalgudi fix phase retim low power design islp ieee doi carl pixley theori implement sequenti hardwar equival ieee tran cad integr circuit system doi sherief reda salem combin equival check boolean satisfi binari decis diagram doi nikhil sharma gagan hasteer venkat krishnaswami sequenti equival check rtl model eetim http doc_id 