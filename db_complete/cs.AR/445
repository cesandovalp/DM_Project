perform monitor multicor embed comput system fpgas lesley shannon eric matthew nichola doyl alexandra fedorova school engin scienc simon fraser univers burnabi canada lshannon ematthew ndoyl depart electr comput engin univers british columbia vancouv canada sasha abstract design modern embed comput sys tem softwar programm choos multicor pro cessor combin general purpos graphic process unit gpgpus hardwar acceler embed linux multi applic workload multi thread modern fpgas larg combin multicor hard soft processor multipl hardwar acceler custom comput unit enabl entir embed comput system implement singl fpga larg fpga vendor support embed linux kernel soft embed processor combin high level synthesi generat hardwar acceler gate flow primit framework enabl softwar design fpgas custom comput platform exist order ensur comput resourc integr share effect softwar develop monitor debug runtim perform applic workload paper describ abacus perform monitor framework debug execut behaviour interact multi applic workload multicor system discuss framework extens hardwar acceler heterogen system introduct complex embed system increas dra matic ten year softwar programm common design embed platform multicor processor run oper system multi applic workload multi thread develop commerci field programm gate array fpga comput aid design cad flow devic architectur approach junctur softwar programm shift fpgas implement type embed system benefit inclus hardwar acceler modern field programm gate array fpgas larg implement hard soft multicor architec ture conjunct custom hardwar acceler fpga vendor support high level synthesi hls allow program written softwar languag synthes actual hardwar vice vendor provid graphic user interfac gui enabl softwar programm describ fig typic multi core system architectur basic platform architectur inclus hls generat hardwar acceler support embed linux kernel hard soft processor build block softwar programm fpgas build heterogen multicor comput system exist build block insuf ficient softwar programm fpgas implement comput platform level abstract comfort enabl seamless transfer tradit multicor comput system heterogen multicor comput system softwar programm requir complet design develop ecosystem virtual visual accustom paper concentr softwar develop visual applic behaviour programm debug function behaviour well ascertain current copyright held author owner internationalworkshop fpgas softwar programm fsp london unit kingdom septemb solut fail meet perform requir ongo provid softwar programm function debug support develop softwar execut complet custom hardwar processor hardwar acceler remaind paper focus perform debug runtim monitor previous paper present hardwar base analyz character user softwar abacus focus configur microarchitectur independ hardwar unit workload investig singl processor core processor archi tectur fpgas paper describ latest work abacus framework key visual izat compon softwar programm fpgas comput explain abacus provid runtim perform allow programm understand execut behav sourc failur meet perform requir discuss updat architectur interfac user outlin framework singl core processor easili extens multicor system heterogen system function debug remaind paper organ tion motiv type framework softwar programm heterogen system highlight requir framework access softwar develop iii talk challeng opportun perform visual softwar programm fpgas comput platform work summar discuss abacus framework describ architectur system softwar well exampl type monitor unit outlin abacus design extens multicor heterogen system function debug vii conclud paper recommend potenti futur work softwar programm requir perform debug system multi applic workload desir share singl coher memori architectur side effect obvious exampl singl processor core system time need context switch clear state execut applic restor state applic execut consid case coher multicor system figur case applic processor access memori time time side effect pronounc time predict delay negat impact execut time fetch process store display data time fashion softwar function correct perform correct oper will return meaning fail perform requir type problem period execut result softwar interact task execut system easier detect understand actual execu tion platform oppos simul occur softwar programm provid infrastructur monitor system runtim actual platform ideal infrastructur type monitor requir annot actual softwar execut annot addit execut overhead addit side effect case exacerb exist problem case problem exist actual system runtim wors observ system artifici correct perform bug make undetect akin bug program compil debug flag enabl correct bug make extrem hard find ideal type perform infrastructur will minim impact memori hierarchi data store offlin analysi depend natur volum data store applic store chip main memori result side effect program execut introduc content memori arbitr type perform monitor debug infra tructur usabl softwar develop fpga configur data softwar chip fpga configur hardwar system ideal system monitor unit reconfigur restart tune hardwar download hardwar system design assum monitor unit includ actual system design programm simpli alter updat softwar schedul assign alter system perform incur cost hardwar redesign synthesi time absolut need addit data runtim sort store process thread velop track specif applic thread penal current resourc schedul alloc correct type data crucial heterogen system softwar design hardwar acceler share famili applic discret cosin transform imag process applic softwar hardwar version acceler exist subset applic requir hardwar version meet time requir iii challeng opportun perform visual fpgas softwar programm choos implement design fpga base processor system face uniqu chal leng provid uniqu opportun high perform processor long port hardwar counter perform monitor provid well develop api counter soft fpga processor includ hardwar counter latest generat fpgas includ embed hard processor hardwar counter hardwar counter limit number bit width function access processor execut applic softwar fpga base system build independ perform monitor framework reconfigur logic opportun microarchitectur independ data depend natur soft hard processor monitor user limit signal monitor snoop combin debug interrupt memori access signal will provid softwar design accustom fact fpga reconfigur logic build monitor infrastructur complet build perform monitor unit approach softwar design monitor consider complex behaviour simpl counter entir block ram bram alloc store histogram memori access pattern complet data trace part program stall time memori latenc final fpga base system perform monitor framework integr processor architectur allow alter read program execut requir annot softwar monitor reduc chanc execut side effect work acceler level work visual debug hls generat acceler soft ware design write system descript hls generat circuit waveform debug gnu style debugg enabl programm visual solut term variabl function origin written oppos signal circuit waveform creat cad flow commerci vendor recogn support chip debug circuit hls design perform monitor multicor system activ area commerci vendor multicor system amd intel support profil frame work hardwar counter embed sys tem architectur addit previous research realiz fpgas reconfigur fabric creat addit instrument monitor circuitri profil system oper general aim singl core processor xilinx combin concept provid sdsoc environ embed hardwar counter arm processor conjunct perfor manc monitor instanti reconfigur fabric monitor perform bus closest work abacus framework sdsoc perform monitor framework requir soft ware collect data act complet ind pendent unit dma support write data fig abacus architectur main memori reduc impact actual system generat interrupt halt cpu specif situat detect sdsoc abacus softwar conjunct system execut fpga communic need reserv fpga base platform data upload abacus programm aggreg data appropri design schedul decis final featur system sdsoc extens design enabl user creat select perform monitor unit librari unit perform monitor infrastructur best suit current applic set workload extens key enabl support perform monitor heterogen system abacus framework figur illustr basic architectur improv abacus perform monitor unit origin design maintain three basic system modul extern interfac control logic perform mon itor unit current design support complex extern interfac complex perform monitor unit origin design abacus con nect system bus snoop desir signal cpu version capabl snoop signal multipl cpus associ record data specif process thread support dma correspond devic driver includ kernel enabl user communic direct devic abacus assign specif address rang system bus memori map enabl status configur regist read written pointer referenc dereferenc enabl configur set reset enabl disabl process physic address rang abacus devic driver allow access ioctl function read write singl regist well mmap access full address space abacus driver enabl alloc kernel memori enabl abacus dma copi collect data softwar space system run control level support abil record parallel data specif measur multithread program execut multipl processor core concurr enabl user time stamp specif data record memori access data memori trace allow user trigger abacus perform monitor start base condit includ specif number clock cycl specif memori address access exampl abacus trigger collect user data time specif instruct function applic execut send interrupt indic specif situat detect base user configur latest design abacus includ complex profil unit demonstr true power potenti independ perform monitor infrastructur reliant hardwar counter exampl creat data memori access histogram unit identifi region memori access frequent conjunct data memori access memori trace unit enabl programm data region frequent access pattern facilit reorgan data reduc cach miss creat memori latenc unit store histogram cycl take memori access complet complimentari perform monitor unit stall unit measur number clock cycl processor stall wait complet instruct subset potenti unit design includ abacus key point easi user select unit instanti platform configur paramet associ unit easi user includ unit develop boot abacus set configur start run system power programm free reconfigur abacus runtim desir reboot download system individu perform monitor unit configur independ activ desir subset processor core system extend abacus framework current extend abacus framework direct multicor schedul figur illustr abacus integr multicor polyblaz system note cpu debug signal illustr figur monitor signal process system intern processor actual connect processor dictat type monitor unit user choos instanti connect exclud figur understand abacus connect signal system deem appropri design includ process unit describ previous analyz multi thread workload execut processor core aggreg thread execut fig integr abacus polyblaz processor key extens complet homogen multicor system data guid schedul improv platform execut power effici abacus perform monitor data current access influenc schedul decis heterogen multicor system abacus hard ware framework softwar infrastructur suit incorpor heterogen multicor system figur compon current miss specif perform monitor unit design hardwar acceler abil provid abacus runtim data improv share hardwar acceler current plan feed data schedul fuse figur dash box front user api fuse abstract hardwar acceler multicor system api data share hardwar acceler effici better meet system hardwar perform requir vii conclus futur work current make fpgas access platform softwar programm focus hls bare metal program singl processor core system combin hardwar acceler current preval embed multicor comput system oper system consid step develop fpga devic increas size complex embed multicor processor support oper system obvious generat technolog choic embed comput system facilit heterogen provid softwar programm hardwar infrastructur design type comput system insuffici persuad adopt platform provid complet design ecosystem accustom includ support debug perform monitor paper focus discuss opportun softwar design creat multicor heterogen system highlight softwar programm abacus framework symmetr multicor heterogen multicor system fig integr abacus heterogen system better understand execut behaviour workload better schedul design decis futur will design experi test abacus heterogen comput environ will includ integr abacus support heterogen multicor platform virtual api fuse assess type perform monitor unit appropri base assess hope generat basic framework key perform monitor unit automat includ object minim number perform monitor unit softwar design generat individu system facilit design process heterogen multicor comput platform refer xilinx programm soc mpsoc http product silicon devic altera arria arm base soc reinvent midrang https product soc portfolio arria soc matthew shannon fedorova polyblaz bring microblaz multicor era linux smp support intern confer field programm logic applic august goeder wilton effect fpga debug high level synthesi generat circuit intern confer field programm logic applic sep dynam signal trace debug compil optim hls circuit fpgas intern symposium field programm custom comput machin calagar brown anderson sourc level debug fpga high level synthesi intern confer field programm logic applic sep monson hutch approach system debug behavior synthes fpga circuit intern confer field programm logic applic sep sourc level transform improv high level synthesi debug valid fpgas intern sympo sium field programm gate array acm matthew shannon fedorova configur frame work investig workload execut ieee intern confer field programm technolog decemb altera quartus handbook version volum verif design debug signaltap logic analyz nov xilinx chipscop pro softwar core user guid apr sdaccel develop environ user guid kaufmann platzner hardwar softwar infra tructur perform monitor multicor platform intern confer field programm logic appli cation fpl septemb gibert martinez madril codina profil support runtim manag code generat perform monitor unit ieee comput architectur letter januari aldham anderson brown cani low cost hardwar profil time energi fpga embed processor ieee intern confer applic specif system archi tectur processor asap septemb nair shankar lysecki effici hardwar base nonintrus dynam applic profil acm transact embed comput system april amd perform profil overhead http communiti blog perform profil overhead intel process trace https blog processor trace shannon chow reconfigur achiev real time profil hardwar softwar codesign intern confer field programm gate array feb xilinx sdsoc develop environ http product design tool sdx ismail shannon fuse front user framework abstract hardwar acceler ieee intern confer field programm custom comput machin 