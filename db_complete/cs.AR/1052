generat evalu applic specif hardwar extens nikolao kavvadia depart comput scienc technolog univers peloponnes terma karaiskaki tripoli greec email nkavv modern platform base design involv applic specif extens embed processor fit custom requir accomplish task possibl offer custom extens processor tune instruct set microarchitectur applic interest exploit factor determin success process utom applic analysi custom instruct generat paper yardstick design autom tool custom processor develop flow focus generat evalu applic specif hardwar extens yardstick build block asip develop integr applic analysi custom instruct generat select user defin compil intermedi represent yardstick enabl environ practic issu tradit asip design confront effici explor infrastructur liber compil simul idiosyncrasi asip design empow freedom target architectur choic implement analys custom instruct generat select method illustr capabl yardstick approach interest explor scenario quantifi machin depend compil optim select target architectur term oper set memori model custom instruct generat select input output constraint keyword embed system hardwar softwar design perform optim electron design autom applic specif processor receiv decemb revis month introduct asip applic specif instruct set processor play central role contemporari embed system chip soc replac hardwir solut offer programm enabl reus encompass late specif chang asip tune cost effect execut target applic set asip design flow involv profil architectur explor generat select instruct set extens ise synthesi correspond hardwar enabl user decis custom processor adher config urabl extens processor paradigm asip complet design scratch configurabil iti lie tune architectur paramet cach size enabl disabl featur exten sibil processor modifi instruc tion set architectur form custom func tional design custom processor scratch aggress approach requir vestment effort develop soft ware develop tool compil binari util bugger simul real time configur processor case rtos target base isa softwar toolchain increment updat exist basic theme architectur extens tight integr custom function unit storag loos cou pling hardwar acceler processor bus interfac work advoc favor approach prove techniqu consid simultan formal problem form level partit asip custom processor design comput journal kavvadia practic issu aris seem invari element design flow address assumpt intermedi represent applic code map direct affect solut qualiti case ise synthesi explor infrastructur tie convent softwar develop tool adapt compil simul support low level entri applic migra tion processor famili revers engin ing paper issu address integr custom instruct generat select techniqu flexibl infrastructur reflect design decis cumbersom appli approach substanti form yardstick prototyp tool exampl intrins support bit level oper yield ise case unaug yardstick direct measur machin depend compil transform regist alloc qualiti impact generat ise issu recogn quantifi work yardstick profil facil determin static dynam applic metric data type memori hierarchi statist execut frequenc applic entri high level ansi low level assembl code target architectur virtual machin number custom function identif select techniqu implement hardwar estim speedup area bind third parti tool hardwar synthesi cdfgs provid note interpret custom function depend context repres instruct set extens ise baselin isa requir account control path processor decod logic extend interrupt servic custom instruct asip enabl programm control hardwir function meant programm hardwar acceler loos connect processor access local bus work year number effort regard autom applic specif extens embed processor open instruct generat framework exist advantag work deliv format store manipul exchang instruct pattern order pattern librari pattlib potenti user adapt compil generat manipul pattern cumbersom gcc rtl regist transfer languag intermedi represent issu pattlib approach regard effort adapt gcc compil emit pattlib format select backend sparc architectur neutral easili alter applic specif instruct generat xtensa configur processor compris vliw long instruct word simd singl instruct multipl data fuse chain rtl oper induc architectur templat xtensa control transfer instruct cti consid includ complex instruct sophist framework design tight coupl custom coprocess datapath integr exist processor present provid complet solut programm acceler work drawback possibl direct communic fast local data memori exclud reason benefici address mode identifi multi output instruct generat algorithm present select maxim speedup convex subgraph basic block data depend graph ddg worst case exponenti complex path profil extend basic block scope conclus instruct identif scope extend consecut basic block memori oper regard format custom instruct pattern identif place post regist alloc yardstick main role yardstick facilit design space explor dse heterogen flow asip design develop tool compil binari util simul debugg case lack dse capabl design interfac mind develop effort requir featur afterthought deal interoper issu compil simul boundari yardstick kernel current yardstick infrastructur illustr fig compris three kernel compon libbyox libpatcut libmachin target architectur specif tool bxir frontend set backend export control flow graph basic block custom instruct visual simul rtl synthesi purpos libbyox libpatcut comput journal generat evalu applic specif hardwar extens figur yardstick infrastructur target independ libmachin retarget specif libbyox libbyox implement core yardstick api frontend manipul intern data structur byox bring compil simul librari iseqinfo parser iseq histor instruct sequenc entri iseq flat cdfg ssa format applic record data depend graph applic basic block cfginfo parser control flow graph cfg file attribut correspond iseq file type control flow edg simpl file interfac iseq cfg format well compil analys control data flow analys evalu regist live natur loop pass byox defin correspond bnfs manipul api write extern analys optim parameter templat machin context inher restrict isa iseq applic record global symbol tabl procedur list consist data depend entri local symbol tabl statement list procedur generat facet local symbol tabl singl refer direct input output variabl versus allow multipl definit point variabl libpatcut number custom instruct genera tion select method implement patcut pattern base custom unit explo ration librari generat involv identif mimo multipl input multipl output miso multipl input singl output iseq pattern user defin constraint generat method libpatcut maxmiso identifi maxim subgraph singl output node linear complex algorithm miso explor constraint maximum number input output operand type oper node constraint mimo generat case search maxim mimo pattern employ fast heurist assum perform gain provid pattern higher pattern subgraph user disabl heurist appli exponenti complex algorithm well generat invok list construct iseq pattern filter graph graph subgraph isomorph test process remov redund case subset librari select configur greedi selector support cycl gain cycl gain area prioriti metric knapsack base yardstick characterist cis express iseq applic cfgs subregion exist data structur analys reus manipul generat cis exampl pattern librari import yardstick libmachin libmachin librari core yardstick compon retarget user defin target architectur target architectur bxir byox format support semant defin global scope data type oper group oper level operand interpret semant oper area latenc cost correspond hardwar implement cycl time backend engin applic cfgs basic block bbs pattern process number backend export ansi subset code incorpor user tool simul valid gdl vcg dot graphviz file visual extend cdfg format schedul translat synthesiz vhdl applic bbs pattern ggx xml file algebra graph transfor mation comput journal kavvadia figur high level yardstick base framework structur yardstick environ yardstick kernel util infrastruc ture applic analysi explor custom function extens fig yardstick framework reus third parti compil simul tool compil frontend gcc exampl accept input high level languag interest applic program compil low level represent rep resent form assembl code frontend process convers intern applic machin independ optim set piler backend process code select obligatori assembl level code macro expand instrument profil convert iseq appropri salto pass flow sume work salto backend librari port target architectur assembl code assembl link target machin binari util binutil equival tool elf execut evalu instruct cycl accur simul altern iseq file generat compil dump direct compil target machin case modifi version machin suif basic block profil automat convert ing subset execut low level code nativ machin simul boundari yardstick expect dynam profil applic basic block execut frequenc program trace cach memori access statist target machin yardstick static dynam applic metric evalu visual applic analyz iseqtool generat igensel link libbyox libpatcut applic profil custom instruct void evaluate_bb_ci iseq setup operand list uioclist lopnd init_opnd_librari find uniqu regist constant find_input_opnd lopnd input_opnd find_output_opnd lopnd output_opnd instr_has_successor find_cnst_opnd lopnd cnst_opnd uniqu instanc operand constant collapse_to_unique_opnd clear_best_cut generat mimo method mimo_identif maxmiso constrain miso method maxmiso_identif figur updat intern data structur level generat usag yardstick api yardstick api method manipula tion iseq entiti extract intern data structur local operand list oper level analysi find predecessor successor instruct node applic backend process fig exampl api usag updat data structur basic block base generat detail basic block iseq cluster denot init opnd librari initi empti operand list contain name lopnd updat call find type opnd function type denot operand type input output cnst uniqu regist operand constant option enabl operand treat ssa form singl represent input output sublist appli collaps uniqu opnd clear temporari storag best cut identifi specif iter generat algorithm mimo miso base method select perform actual process case studi design space explor yardstick proof concept evalu yardstick scenario reflect realist problem evalu explor design space develop asip enhanc customiz architectur case studi three target architectur comput journal generat evalu applic specif hardwar extens tabl set generat oper suifvmenh suifvm type convers sxt zxt partial predic select bit manipul bitinsert bitextract concat suifrmenh suifvmenh finit regist set regist idlx dlx integ instruct set tabl summari examin benchmark benchmark descript cyclic redund check deraiden decod raiden cipher enraiden encod raiden cipher idea idea cryptograph kernel sha secur hash algorithm produc bit messag digest input adpcmdec adapt differenti puls code modul adpcm decod adpcmenc adapt differenti puls code modul adpcm encod fir fir filter fsme full search motion estim motion compens suifvm augment set increment extens call suifvmenh suifrmenh architectur suif real machin enhanc support hous backend written machin suif introduc finit regist set configur size suifvmenh suifrmenh resolv type cast convers oper map cvt suifvm instruct proper instruct accept suifrmenh backend sign extend truncat mov explicit denot sourc destin data type dlx integ subset idlx format assembl dump view kind human readabl machin level target architectur summar tabl experi subsect control transfer instruct beqz bnez jal jalr forbidden pattern format idlx suifvm base branch oper permit forbidden instruct constraint set chosen order highlight distinct potenti requir meant direct contrast dlx base choic object optim pre exist dlx legaci assembl binari suifvmenh implement repres risc restrict processor templat suitabl develop asip scratch experi applic set embed benchmark consist cryptograph deraiden enraiden idea sha media orient applic adpcm dec adpcm enc fir fsme tabl compil specif case studi media process kernel argu tradit compil transform trivial solut appli identif optim phase pipelin yield best perform target custom processor contrari sourc code level transform tune expos benefici applic specif hardwar extens subsect choic compila tion specif highlight popular case studi appli cation adpcm codec fir filter typic implement motion estim compens investig specif effect compil impos explor potenti custom struction regist alloc qualiti generat cis purpos target suifrmenh backend entri regist file assum procedur call convent suifrmenh hous gcc base dlx backend suitabl high optim aim general purpos processor compil gcc target dlx case well compil machsuif target suifvm extens explor transform space cis account true data depend oper remov fals depend achiev simpl level transform pass exampl pass implement machin suif compil suifvmenh target involv pseudocod fig algorithm fig order instruct schedul backward data depend edg exist basic block set depend edg instruct instruct rang consid destin operand machin instruct rang iter compar operand opnd remov fals depend data depend opnd written fals depend identifi mark true correspond data depend edg annul applic speedup prior post regist alloc indic suffix benchmark fig contrast common belief introduct finit regist set map instruct select temporari set negat impact evalu speedup clear measur overhead regist alloc singl output comput journal kavvadia boolean is_false_depend instrid mi_lpo mi_hpo lopnd opnd boolean false_dependency_f fals iter mi_lpo mi_hpo rang foreach machin instruct rang current rang destin operand dstop dstop base regist address symbol write memori dstop equal opnd fals depend false_dependency_f true return false_dependency_f figur remov fals data depend edg basic block extent overhead reduc larger number regist output correspond overhead calcul mean regist alloc enabl higher speedup compar obtain prior regist alloc constraint unlimit number regist output outcom infer overhead spill fill occur regist pressur effici hidden multi output mimo instruct estim addit cis side elimin temporari variabl pattern aliv pattern fig relat applic speedup number input output regist operand select compil target unlimit number input set correspond case differ averag speedup achiev number input applic rang partial fact stack argument alloc appli idlx add memori access oper save restor function argument includ cis mimo instruct identifi incorpor calle save sequenc seri instruct speedup sever limit data memori bandwidth assum estim port target architectur transform suitabl explicit state work select qualiti generat yardstick ggx maximum number regist input fir fir unlim maximum number regist input fir fir unlim figur regist alloc applic speedup number input output regist operand xml graph represent iseq pattern automat generat transform hand written agg rule oper implement equival function compil except commerci cosi account bit level manipul desir applic domain network process genet algorithm gas highlight issu defin three custom oper bitinsert bitextract concat semant tabl motiv exampl well singl crcsp doubl point crcdp crossov oper encount typic gas sga ansi implement crossov oper hand tune optim includ convers function call insid crcsp crcdp function macro inclus fig result appli rule base transform agg replac suifvmenh segment fig bitextract oper graph fig highlight comput journal generat evalu applic specif hardwar extens maximum number regist input fir fir unlim maximum number regist input fir fir unlim figur applic speedup number input output regist operand suifvmenh idlx tabl custom oper improv bit level compil support regist operand hpos lpos denot bit rang number argument variad oper oper semant bitinsert lpos hpos bitextract lpos hpos concat choic compil fig visual vcg represent custom instruct generat crcsp genet oper fig bit level oper fig perform gain generat hardwar depend heavili target map applic code clear tabl tabl three column explanatori column cycl cycl requir sequenti schedul correspond oper assum usag generat cis column indic number cycl area area requir calcul area multipli area unit mau bit singl cycl multipli produc bit result comput schedul unlimit resourc visual exampl host suifvmenh graph graph applic transform rule bitextract figur exampl graph rewrit agg transform rule tabl characterist hand optim ansi implement crcsp crcdp erat bit level opera tion gen con straint cycl seq schedul cles area mau crcsp crcsp crcsp crcsp crcsp crcsp crcdp crcdp crcdp crcdp crcdp crcdp generat iseq file custom instruct automat convert yardstick cdfgs compat extend version cdfg toolset process asap schedul bit level oper minimum number cycl requir crcsp oper sequenti schedul schedul unlimit resourc crcdp limit bit level oper sequenti schedul prior inclus custom instruct requir cycl crcsp crcdp asap schedul cycl case singl cycl mimo custom instruct identifi genet oper constraint impress area benefit well comput journal kavvadia crcsp induc bit level oper crcsp induc bit level oper figur visual crcsp genet oper compil data memori access model extent scope custom instruct constrain data bandwidth data memori unit local storag regist file defin number input output port resolut depend load store oper approach deal predefin architectur mip corextend arm optimod system limit impos definit factor explor purpos develop asip scratch consid storag consist model notat introduc state consist applic specif function unit afus local storag data memori consid model yardstick consist data memori afu direct access data chip data memori local afu storag conserv assumpt load store serial ideal consist afu memori load store main memori transform access local afu memori assum data memori status updat dma access occur ing parallel processor instruct investig memori model choic applic speedup cis generat cis allow memori inclus nomem allow local memori perform estim max number regist input output fir nomem cdm idealcam max number regist input output fir nomem cdm idealcam figur data memori access speedup induc cis access data memori assum requir singl clock cycl overhead consist data memori model cdm subsequ assum ideal consist afu memori idealcam correspond illustr fig indic combin singl issu processor collect inclus data memori access oper cis posit impact attain speedup input output constraint suifvmenh target speedup improv observ consist afu memori model limit improv averag suifvmenh applic larger cycl overhead access data storag speedup improv consider explor exampl estim cycl load store access data memori modul local bus address cycl word data access consecut byte data access cycl comput journal generat evalu applic specif hardwar extens result higher speedup specif cdm case perform better nomem cycl overhead compar model allow memori access cis correspond valu favor idealcam cycl overhead greedi select prioriti metric implement greedi selector key idea assign prioriti pattern profici instanc chosen start highest priorit prioriti function cycl gain prioriti forc best perform afu area requir cycl gain area prioriti denot candid instruct instanc entir program basic block execut frequenc metric associ specif instanc area cost candid prioriti function forc object equat maxim perform gain isomorph candid entir program area issu equat quantifi area budget well summari measur applic set tabl exampl ten candid instruct identifi achiev maximum speedup compar achiev total contribut execut time prioriti function number requir extens reach speedup level rang area requir multipl area bit singl cycl multipli applic except demand mau final fig compar pros con prioriti function custom instruct select process applic exampl sha applic select cycl gain prioriti function reach maximum speedup instruct slight area increas mau compar cycl gain area usag environ yardstick suif machin suif gcc coin number afu pattern ult nit speedup cycl gain speedup cycl gain area area cycl gain area cycl gain area figur custom instruct select prioriti metric sha tabl speedup afu area cycl gain cycl gain area input output constraint benchmark max speedup area mau max speedup area mau adpcmdec adpcmenc dlx deraiden enraiden fir compil archc simul frame work function cycl accur simul generat version archc yardstick modif yardstick function access cross platform gui compat tcl version newer support platform includ gnu linux redhat cygwin window compat processor conclus yardstick retarget applic analysi custom instruct generat select environ provid compil simul agnost infrastruc ture yardstick aim separ design space plorat compil simul idiosyncrasi dif ferent compil simul plug file base interfac high ansi low level assembl architectur virtual chine input analyz infrastructur comput journal kavvadia order prove applic yardstick asip develop evalu varieti explor scenario benchmark set consist well embed applic kernel context investig effect compil process select target impact regist alloc characterist identifi hardwar extens memori model involv local storag applic specif function unit examin quantifi entir set applic custom instruct generat input output constraint refer arc core http gonzalez xtensa configur extens processor ieee micro yiannacoura steffan rose applic specif custom soft processor croarchitectur proceed acm sigda intern symposium field programm gate array monterey california usa februari altera nio http product processor xilinx http sirowi lonardi vahid level microprocessor acceler partit ing proc design autom test rope conf nice franc april kavvadia nikolaidi yardstick autom tool custom processor develop present univers booth design tomat test europ confer april clark zhong tang mahlk automat design applic specif instruct set extens dataflow graph explor int parallel program castro borin azevedo araujo instruct pattern design extens processor proc wshp applic specif processor stockholm sweden septemb alippi fornaciari pozzi sami dag base design approach reconfigur vliw processor proc design autom test europ conf munich germani march mitra scalabl custom instruc tion identif instruct set extens pro cessor proc int conf compil architectur synthesi embed system washington usa septemb clark blome chu mahlk bile flautner architectur framework transpar instruct set custom embed processor proc int symp comput architectur madison wisconsin usa june goodwin petkov automat generat applic specif processor proc int conf compil architectur synthesi embed system san jose california usa octob pozzi atasu ienn exact approxim algorithm extens embed processor instruct set ieee tran comput aid design integr circuit syst biswa dutt pozzi ienn introduct architectur visibl storag instruct set extens ieee tran comput aid design integr circuit syst pothineni kumar paul appli cation specif datapath extens distribut function unit proceed intern confer vlsi design vlsi design sixth intern confer embed system ice bangalor india januari pattlib http pattlib gcc http atasu pozzi ienn automat applic specif instruct set extens microarchitectur constraint proc acm ieee design autom confer june kavvadia nikolaidi autom instruct set extens embed processor applic mpeg video encod proc int conf applic specif system architectur processor juli vflib graph match librari version http graph vcg http sander html html graphviz http cdfg toolset http cdfg agg http agg salto http cap project salto machin suif compil http hube softwar raiden altern tea block cipher http raiden bonzini pozzi code transform strategi extens embed processor proc int conf compil architectur synthesi embed system seoul korea octob ace cosi compil develop system http goldberg genet algorithm search optim machin learn addison wesley read usa leuper karuri kraemer pandey design flow configur embed processor base optim instruct set extens synthesi proc design autom test europ conf mess munich germani march coin project http archc resourc center http mitra character embed applic instruct set extens processor comput journal generat evalu applic specif hardwar extens proc acm ieee design autom confer san diego usa june guthaus ringenberg ernst austin mudg brown mibench free commerci repres embed benchmark suit proc annual ieee int wshp workload character austin texa usa decemb cong fan han zhang applic specif instruct generat configur processor architectur proc int symp field programm gate array monterey california usa februari sander graph layout vcg tool proc dimac int workshop graph draw berlin germani gansner koutsofio north techniqu draw direct graph ieee tran softw eng brigg harvey multipl integ constant technic report rice univers lee moyer arend instruct fetch energi reduct loop cach embed applic small tight loop proc int symp low power electron design san diego august hennessi patterson comput organ design hardwar softwar interfac morgan kaufmann publish comput journal 