analysi haswel microarchitectur ecm model microbenchmark comput architectur univers erlangen nuremberg erlangen region comput center rrze univers erlangen nuremberg abstract paper present depth analysi haswel microarchitectur stream loop kernel featur examin dual ring uncor design cluster die mode uncor frequenc scale core improv improv execut unit well improv memori hierarchi execut cach memori diagnost perform model generic set microbenchmark quantifi effici microarchitectur set microbenchmark chosen serv blueprint stream loop kernel keyword intel haswel architectur analysi ecm model perfor manc model introduct work accord tick tock model tick correspond shrink process technolog exist microarchitectur tock correspond microarchitectur haswel tock repres microar chitectur major chang preced ivi bridg releas justifi thorough analysi architectur paper demonstr execut cach memori ecm diagnost perform model tool evalu quantifi effici microarchitectur ecm model resourc centric model allow quantifi runtim loop kernel specif architectur requir detail architectur specif instruct throughput predict input assum perfect instruct level parallel instruct execut well bandwidth bound data transfer consequ model yield practic upper limit singl core perform empir deter mine input model sustain memori bandwidth benchmark model quantifi runtim contribu tion instruct execut data transfer complet memori hierarchi well potenti overlap contribut runtim contribu tion divid categori tnol cycl core execut instruct forbid simultan transfer data cach tol cycl overlap instruc tion allow simultan instruct execut data transfer tween cach note improv origin ecm model data cach bit complex decod simpl decod port bit bit alloc renam retir move elimin idiom instruct queue predecod instruct cach unifi cach uop cachemsrom simpl decod simpl decod order schedul memori control fill buffer bit port port port port port port port alu avx mul avx div avx blend avx fma branch alu fast lea avx add avx cvt avx fma avx mul alu fast lea avx shuf avx bool avx blend alu branch load data agu load data agu store data simpl agu fig core design haswel croarchitectur core llc segment core llc segment core llc segment core llc segment core llc segment core llc segment core llc segment core llc segment cbox cbox cbox cbox cbox cbox cbox cbox core llc segment core llc segment core llc segment core llc segment core llc segment core llc segment cbox cbox cbox cbox cbox cbox sbox sbox sbox sbox agent memori control imc channel channel intel qpi ring qpi qpi link agent memori control imc integr iio ring pcie fig chip layout haswel croarchitectur apart load instruct store instruct consid overlap instruct time well data transfer time time requir transfer data cach summar shorthand notat tol tnol core execu tion time tcore maximum overlap overlap instruc tion predict cach memori level max tol tnol tdata tdata sum individu contribut cach memori level consider cach tdata short hand notat exist predict tcore tmem detail ecm model refer provid refer work cover detail analysi architectur featur crobenchmark awar work analyt model quantifi effici microarchitectur present major improv intel haswel introduc comprehens set microbenchmark serv blueprint stream loop kernel evalu hardwar measur correl perform predict haswel microarchitectur core design fig simplifi core design haswel microarchitectur lect chang previous microarchitectur highlight blue lack space focus featur relev stream loop kernel width three data path cach processor regi ter doubl size advanc vector extens avx load store size retir singl clock cycl oppos clock cycl requir previous architec ture data path cach widen core limit retir Âµop cycl number issu port increas newli introduc port primari branch unit secondari unit port previous design singl branch unit locat port move dedic port port port perform avx oper freed secondari branch unit benefit branch intens code port port hous call simpl address generat unit agu unit increas regist bandwidth avx sandi bridg ivi bridg agus suffici load store requir cycl complet make comput three address cycl second cycl haswel chang maximum three load store oper retir singl cycl make third agu simpl agu perform address oper requir stream kernel detail apart addit port intel extend exist function instruct introduc fuse multipli add fma instruct set architectur isa extens handl avx capabl unit port haswel architectur featur isa extens introduc second avx multipl unit port low latenc add unit packag layout figur layout core haswel processor packag apart processor core packag consist intel refer uncor attach core privat cach level cach llc segment hold data physic proxim core cach segment impli data core store exclus prefer llc segment data llc segment proprietari hash function suppos provid uniform distribut data prevent hotspot wide rang data access pattern benefit design singl thread applic full accumul llc capac core llc segment connect bidirect ring intercon nect transfer cach size cycl direct order reduc latenc core arrang form ring connect queue ring belong agent respons cach snoop oper reorder memori request optim memori perform attach memori control featur byte wide memori channel access ring interconnect die pcie qpi facil power power dataset size bandw bandw fig impact bandwidth power usag number core snb ghz snb ghz ivb ghz ivb ghz hsw ghz hsw ghz fig stream triad bandwidth func tion frequenc haswel introduc die fulli integr voltag regul fivr fivr draw power previous microarchitectur enabl faster switch power save state allow fine grain control cpu state global set cpu frequenc core packag haswel set core frequenc sleep state individu uncor frequenc scale haswel microarchitectur intel revert sandi ivi bridg unifi clock domain core uncor nehalem design separ clock domain haswel introduc featur call uncor frequenc scale uncor frequenc dynam scale base number stall cycl cpu core despit reintroduc higher latenc separ clock domain uncor offer potenti power save serial code fig measur sustain bandwidth left axi scho nauer vector triad tabl singl core power consumpt axi vari dataset size expect perform influenc activ data resid privat cach power requir reduc observ differ perform llc involv perform impact limit bandwidth drop llc power usag reduc memori previous microarchitectur strong correl cpu fre quenci sustain memori bandwidth fig measur chip band width stream triad tabl adjust factor count write alloc store sandi bridg ivi bridg haswel microarchitectur system bandwidth measur lowest frequenc advertis nomin clock speed find differ maximum achiev sus tain memori bandwidth depend cpu frequenc sandi ivi bridg haswel observ frequenc independ sustain bandwidth haswel cpu frequenc lower decrea ing power consumpt memori bandwidth stay constant stream triad work set size haswel offer improv sandi ivi bridg architectur energi consumpt term energi delay product cluster die cluster die cod mode core equal separ ccnuma memori domain distribut request memori control core assign dedic memori control latenc low strategi core access main memori memori control attach ring memori domain equal size asymmetr core count physic ring excep tion design fig core divid memori domain core microbenchmark likwid perfctr access perform counter order measur number memori access individu memori channel find core access main memori memori channel associ memori control left ring core associ memori control ring core number detour ring access data main memori note cod activ llc divid domain llc segment total amount llc domain cod mode intend numa optim code serv purpos latenc decreas reduc number endpoint memori domain llc segment data will distribut segment insid memori domain decreas hop count requir pass buffer connect ring elimin llc segment bandwidth increas reduc probabl ring collis lower particip count microbenchmark set microbenchmark chosen provid good coverag relev data access pattern evalu haswel microarchitectur sum mariz tabl benchmark tabl list number load store stream divid explicit read owner ship rfo stream rfo refer implicit load occur store current cach trigger write alloc intel architectur cach level write alloc strategi store miss tabl includ predict ecm model measur runtim cycl tabl overview microbenchmark loop bodi memori stream ecm predict measur model error load stream write ecm predict measur model error benchmark descript explicit rfo stream mem mem mem ddot load store updat copi stream triad scho nauer triad quantif error discuss ecm model kernel arriv predict tabl sustain bandwidth deriv memori cycl input benchmark individu kernel sustain bandwidth determin benchmark exact data access pattern model note measur cod mode activ measur bandwidth correspond singl memori domain dot product load dot product benchmark ddot fma instruct intro duce isa extens implement haswel microarchitectur tnol clock cycl core load cls regist avx load process clock cles individu avx load retir singl clock cycl load port process data cls avx fma instruct take clock cycl issu port featur avx fma unit total cls transfer adjac cach level transfer cls transfer cls take empir termin sustain memori domain bandwidth correspond bandwidth cls ecm model input correspond predict load kernel avx load retir singl cycl yield tnol singl avx add unit port process data take tol singl transfer adjac cach level measur bandwidth correspond exact ddot kernel time requir exact half need ddot benchmark ecm model input benchmark yield predict store updat copi store kernel avx store requir singl store unit tnol instruct arithmet oper tnol examin transfer cach hierarchi bear mind store will trigger write alloc transfer updat write alloc data written evict modifi cach full transfer time move data cach transfer time sustain bandwidth correspond kernel involv evict wors previous load kernel ecm input predict updat kernel avx store avx load requir limit singl store port tnol multipl tol number transfer ident store kernel differ load caus explicit load write alloc memori bandwidth ident store kernel time transfer memori yield ecm input predict ident store kernel copi kernel perform avx load avx store copi singl store port bottleneck yield tnol absent arithmet instruct tnol three cls transfer adjac cach level load write alloc evict requir ment transfer transfer sustain memori bandwidth time transfer main memori llc three cls input ecm model turn yield predict stream triad scho nauer triad stream triad agus prove bottleneck impo sibl retir avx load avx store index address cycl full agus support address mode tnol issu avx load cls avx store fmas retir cycl avx fma unit avail yield tol traffic adjac cach level cls load cls write alloc evict measur sustain bandwidth correspond cls input paramet ecm model lead follow predict scho nauer triad agus bottleneck avx load cls avx store perform avx mul port tol fron tend retir Âµop fact store count Âµop multipl pair store full agus retir second store remain avx load instruct cycl dataset size load ecm load dot product ecm dot fig ecm predict measur load dot product kernel dataset size store updat ecm upd copi ecm copi fig ecm predict measur store updat copi kernel instruct share agus tnol avx fmas perform singl cycl yield tol data transfer adjac cach correspond cls requir load write alloc evict cach transfer time cach transfer time cycl measur sustain memori bandwidth correspond cls ecm input paramet predict present hand written assembl kernel benchmark likwid bench tool softwar prefetch code abil hardwar prefetch hide data access latenc machin bench mark standard socket server xeon chip featur core core privat privat cach share llc size chip featur memori channel theoret memori bandwidth socket full node benchmark clock fre quenci fix nomin frequenc cod activ disabl dot product load fig illustr ecm predict measur load ddot benchmark core execut time benchmark cycl predict model ddot perform lower predict data come cach wors expect cach perform general problem haswel contrast haswel sandi ivi bridg deliv advertis bandwidth haswel case measur bandwidth live advertis load kernel perform ident data resid cach theoret transfer singl cycl exact amount slack differ tol tnol practis observ small penalti observ bandwidth work set larg core local cach ecm predict kernel low number cycl empir determin penalti transfer data core locat cycl load stream cach level ddot benchmark data resid data memori likelihood attribut latenc introduc data pass clock domain core cbox mbox entir hidden kernel low core cycl count store updat copi fig ecm predict measur store updat copi kernel data cach measur three benchmark match predict cach measur perform cycl stream cycl store updat benchmark cycl copi benchmark take data exact long transfer case assum bandwidth measur store updat kernel fit predict suggest overlap transfer happen undocu optim place expect poor perform trickl memori measur case copi kernel suspicion overlap undocu improv ment substanti better expect memori perform stream triad scho nauer triad fig model predict measur stream scho nauer triad measur fit predict data cach observ penalti data cach time penalti propag measur predict data match measur predict memori case suggest overlap transfer unknown optim case store updat copi kernel addit fig measur naiv scho nauer triad current generat compil intel compil optim version newli introduc simpl agu port typic address calcul loop unrol stream kernel requir step scale offset comput agus port support address mode call base offset simpl agu perform offset comput agu fast lea unit perform index dataset size stream triad ecm stream schÃ¶nauer triad ecm schÃ¶nauer dataset size regular optim fig ecm predict measur stream scho nauer triad left comparison naiv opti mize scho nauer triad rbx rax rsi rax rsi rax rdx rax rdx rax rcx rax rcx rax rbx rbx list shorten unrol hand optim code scho nauer triad unrol real benchmark kernel offset address pre comput intermediari address pre comput address fed simpl agu perform outstand offset addit three agus complet address oper three cycl assembl code optim version list multi core scale cluster die mode ecm model estim multi core perform singl core perform scale bottleneck hit current intel cpus main memori bandwidth fig ecm predict actual measur ddot stream triad scho nauer triad kernel cod cod mode memori transfer time predict base sustain bandwidth cod cod mode measur fit predict cod mode find neglig discrep cod mode demonstr ecm model uncov sourc perform deviat cod mode kernel execut time longer core execut bandwidth limit data transfer predict model specul attribut penalti cycl encount cod mode higher latenc caus longer way memori control equal distribut memori request averag second request long ring case cod mode measur indic peak perform mode ident ddot perform satur cod mode cod satur mark plot indic bandwidth satur point reach earlier cod mode conclus deceiv take core satur memori bandwidth memori domain singl domain memori control satur chip bandwidth requir thread satur memori domain amount core take achiev sustain bandwidth cod mode dot product ecm dot product stream triad ecm stream triad schÃ¶nauer triad ecm schÃ¶nauer triad number core rfo rfo number core fig core scale cod mode left cod mode number core rfo stream triad reg ecm regular stream triad ecm tempor schÃ¶nauer triad reg ecm regular schÃ¶nauer triad ecm tempor number core fig perform regular tempor store stream left scho nauer triad tempor store stream kernel dataset size fit llc perat tempor store order achiev best perform total amount data transfer memori reduc rid rfo stream addit data travel cach hierarchi haswel tempor store cach core regular store updat entri cach relay core privat fill buffer data transfer direct main memori fig perform gain offer tempor store left stream triad regular store explicit load stream array store implicit rfo stream array transfer data volum expect perform increas factor tempor store rid rfo stream reduc stream count three measur speedup higher singl memori domain full chip explan higher anticip speedup observ effici memori subsystem degrad increas number stream vice vers conclud effici increas rid rfo stream behavior observ scho nauer triad data volum analysi suggest perform increas stream measur perform tempor store memori domain resp full chip conclus paper investig architectur featur intel haswel microar chitectur regard execut stream loop kernel demon strate employ ecm model microbenchmark quantifi effici architectur featur exampl compr hensiv set stream loop kernel deviat offici specif well effici evalu increment improv core thing haswel address main area energi effici provid low latenc data access chip increas core count sustain main memori bandwidth longer impair select low clock frequenc enabl power save spectiv previous sandi ivi bridg architectur uncor frequenc scale improv power save singl core workload cost data core privat cach small perform penalti data core cluster die mode fer perform improv singl thread parallel memori bound code major benefit regard latenc penalti refer cach coher protocol memori perform intel haswel chitectur ieee hager treibig habich wellein explor perform power properti modern multicor chip simpl machin model concurr computat pract exper doi cpe hofmann treibig fey execut cach memori perform model introduct valid intel corpor intel xeon processor product famili technic overview https articl intel xeon processor product famili technic intel corpor intel technolog journal issu mccalpin memori bandwidth machin balanc current high formanc comput ieee comput societi technic committe comput architectur tcca newslett dec molka hackenberg scho main memori cach perform intel sandi bridg amd bulldoz proceed workshop memori system perform correct mspc acm scho nauer scientif supercomput architectur share distribut memori parallel comput edit scho hackenberg molka memori perform reduc cpu clock speed analysi current processor proceed usenix confer power awar comput system hot power usenix associ stengel treibig hager wellein quantifi perfor manc bottleneck stencil comput execut cach memori model proceed acm intern confer enc supercomput acm york usa http treibig hager introduc perform model bandwidth limit loop kernel wyrzykowski dongarra karczewski wasniewski parallel process appli mathemat lectur note comput scienc springer berlin heidelberg treibig hager wellein likwid bench extens microbenchmark platform multicor comput node parallel tool workshop 