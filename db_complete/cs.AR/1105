fpsynt fix point datapath synthesi tool embed system ilya gregori institut bioinformat comput biolog ibest univers idaho moscow email electr engin univers idaho moscow email gdonoho abstract digit mobil system function low power small size weight low cost high perform desktop microprocessor built float point hardwar suitabl case embed system advantag implement calcul fix point arithmet autom fix point data path synthesi tool fpsynt design embed applic fix point domain suffici accuraci applic introduct real time applic embed system implement small lightweight low power low cost platform applic numer intens real time speech video process embed control primari attract float point eas design scale data explicit represent comput grow larg float point accommod reduc resolut embed applic advantag cost float point hardwar consum space power emul softwar float point time slower implement hardwar fix point reason embed system built microprocessor digit signal processor dsp field programm gate array fpga hybrid system chip soc platform hardwar float point support altern float point number implement algorithm fix point arithmet implement integ hardwar benefit high speed low hardwar complex low cost implement well fix point arithmet accur embed applic design fix point data path hand slow error prone softwar design tool help fix point tool nowaday simul synthesi autom fix point data path synthesi tool fpsynt offer short design time overflow control minim arithmet error fpsynt synthes vhdl code implement fpgas microprocessor system chip perform comput error estim design process high level optim order achiev minimum comput error engin communiti will benefit fpsynt method fix point design consider overview fpsynt synthesi pipelin present figur algorithm descript input variabl specif data pre process stage need prepar input data analysi stage datapath synthes optim perform final fix point datapath synthes requir autom fix point datapath design tool overflow control maximum numer accuraci short design time challeng chain calcul number bit requir repres number grow digit signal process base chain multipli add oper multipl doubl data width addit potenti generat carri bit fix width data path lead overflow produc catastroph failur prevent insert data path format oper numer oper number pre scale divid binari shift bit leav room left carri multipl discard truncat half product bit fit data path pre scale oper maxim number bear bit retain truncat pre scale chang semant scale data sacrific bit question format oper insert data path place minim data loss track scale mathemat intent calcul preserv origin scale restor satisfi requir introduc fix point notat data structur sif sign integ fraction notat sif notat develop late sandia nation laboratori adopt work sif notat number sign bit number integ bit number fraction bit sif notat allow repres real number accept rang resolut captur overflow track depend variabl scale factor fix point binari number complement represent bit divid bit field repres sign integ fraction exampl bit complement fix point number scan left sign bit indic posit number integ bit equival decim binari point analog decim point fraction bit equal decim exampl sif notat tabl repres exampl notat tabl exampl valid bit represent binari number two complement sif notat pattern bit sfff ffff ffff ffff ssii ifff ffff ssss siii data structur cover depend variabl pictur algorithm global perspect repres algorithm structur data flow graph fig chosen data structur fix point design tool fpsynt optim stage algorithm choic shift truncat prevent overflow assur correct data align algorithm captur data flow graph initi data format appli seri optim step minim arithmet error type optim implement fpsynt tool combinatori optim fig take account fix point partit data combinatori optim tree solut built fpsynt take solut minimum error topolog optim fig util topolog data flow graph topolog comput error goal kind optim find topolog minim error alloc chain consecut addit optim base concept grow data word size design process type optim implement fpsynt improv precis speed design process fig data flow graph tap fir filter fig fpsynt synthesi pipelin fig tap fir filter data flow graph represent combinatori search tree accompani fig topolog algorithm iii fpga implement tap fir filter fpsynt design fix point datapath slow error prone autom datapath design process tap fir filter present fig fpsynt implement algorithm fpga assum input signal bit wide properti bit sign bit integ fifteen bit fraction coeffici fpsynt optim split machin word part minim comput error construct fix point data path summari program output tabl tabl fpsynt summari output tap fir filter node error sif operand operand x_n repres shift oper verifi precis algorithm array input number creat fix point algorithm model fpga xilinx ise compar float point algorithm statist characterist error comput max min median tabl iii tabl iii differ fix point fpga implement float point algorithm implement type error differ min max median exampl code synthes fpsynt int int int int int vhdl code synthes fpsynt coeffici tosif tosif tosif tosif multipli tosif tosif tosif tosif adder tosif tosif tosif conclus futur work power cost weight size major paramet embed digit mobil system comput carri suffici accuraci protect overflow design optim fix point data path hand difficult consequ power techniqu util present autom approach generat numer optim fix point data path tap fir filter design fpsynt fix point synthesi tool implement fpga xilinx spartan experiment produc accuraci adequ applic comparison float point model futur work will optim data path synthesi explor pattern optim approach synthesi reconfigur time run system chip upload fpga softwar avail fpsynt gnu general public licens github repositori izhbannikov fpsynt refer jessani olson float point unit powerpc microprocessor ibm journal develop number buehler donoho softwar tool design fix point implement comput data path journal aerospac comput communic juli simpson block float point notat signal process sandia nation laboratori white paper richey saiedian class float point data format applic bit digit signal process system ieee communic magazin juli gregori donoho david buehler joseph hass william walker field programm processor array reconfigur comput space ieee aerospac confer march kernighan ritchi program languag englewood cliff prentic hall isbn zhbannikov donoho alloc chain consecut addit optim fix point data path synthesi ieee intern midwest symposium circuit system mwscas 