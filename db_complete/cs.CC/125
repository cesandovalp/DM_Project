percol hard daniel reichman igor shinkar august abstract consid robust comput hard problem input appli independ random delet worst case instanc classic hard problem graph color vertex cover hamilton examin complex problem edg vertic arbitrari graph delet ind pendent probabl prove vertex graph problem remain hard worst case long arbitrari bpp prove hard constraint satisfact problem random delet appli claus variabl well subset sum problem item instanc delet random depart comput scienc cornel univers ithaca usa email support nsf grant ccf afosr grant aro grant courant institut mathemat scienc york univers support nsf grant ccf simon collabor algorithm geometri grant introduct theori hard suggest find optim optim solut hard problem polynomi time theori appli worst case set consid worst run time worst input clear hard appli real life instanc address question examin extent hard stabl random perturb reason assum instanc problem subject nois origin multipl sourc work studi worst case instanc subject random perturb specif type random delet focus delet process edg percol graph consid random subgraph delet edg independ probabl depend size instanc model general familiar random graph model erdo nyi random graph focus delet edg random complet graph start graph chosen arbitrarili vertex graph edg delet independ probabl case vertex percol vertic graph delet independ random examin well studi random delet complet problem sat subset sum refer instanc subject random delet percol instanc main question percol instanc remain hard solv polynomi time algorithm reason assumpt complex theori exampl consid color problem graph decid color suppos sampl random subgraph delet edg independ probabl graph color prove edg delet probabl smaller focus case concret polynomi time algorithm decid high probabl color problem remain hard sens effici algorithm determin color impli problem admit effici algorithm demonstr polynomi time algorithm decid color consid polynomi time reduct color problem vertex graph reduct output graph blow log larg vertex replac cloud vertic form independ set edg replac complet bipartit graph correspond cloud clear color color fact forego reduct satisfi stronger robust properti random subgraph color color color probabl hand color color high probabl color edg cloud correspond fix arbitrari set size probabl edg connect vertex vertex logn union bound high probabl sampl cloud correspond edg size edg high probabl color decod color color vertex color appear largest number time color correspond cloud break tie arbitrarili suggest corp polynomi time algorithm color graph find legal color random subgraph subsampl edg probabl motiv larg bodi deal comput problem random graph formula studi algorithm proven effect random instanc suggest effici algorithm find exact approxim solut comput problem random object exist work demonstr assum problem random generat instanc hard impli hard approxim optim problem follow worst case assumpt rais question kind hard solv optim problem exact percol instanc deriv origin instanc select worst case fashion note prove hard model easier task prove hard random instanc aris exampl erdo nyi random graph freedom choos instanc subject random delet studi random discret structur wide rang mathemat tool proven instrument prove rigor structur hybrid model offer opportun appli method broader rang distribut instanc hard problem consid classic hard problem prove remain hard percol instanc state stand number vertic graph maximum independ set problem hard approxim result edg percol edg graph probabl hard approxim maxim independ set percol instanc factor better chromat number percol instanc hard approxim note fact log random percol graph maxim degre high probabl color effici color prove vertex delet problem remain hard approxim worst case long vertic remain graph independ probabl denot number remain vertic vertex percol subgraph hard approxim chromat number independ number factor resp arbitrari constant vertex cover problem prove constant algorithm approxim percol instanc impli approxim algorithm worst case instanc hold edg vertex percol edg vertic graph remain probabl assum uniqu game conjectur impli random polynomi time algorithm high probabl approxim vertex cover problem percol instanc hamilton problem prove hard percol instanc respect edg percol direct graph problem determin graph hamiltonian cycl hard percol graph edg graph graph probabl consid percol sat instanc claus delet random probabl prove corp claus sat surviv probabl approxim percol instanc hard case worst case instanc result tight algorithm random sat formula impli small claus surviv delet probabl formula admit satisfi assign effici high probabl work detail general prove bpp arbitrari ari boolean csp problem hard approxim percol instanc worst case long claus percol probabl key step proof establish hard approxim ari csp problem translat hard approxim instanc number constraint arbitrari small exampl reli result astad sat hard approxim ratio better instanc claus consid variabl percol variabl delet probabl variabl remov claus remov well idea appli claus percol case impli percol instanc essenti hard worst case studi percol instanc subset sum problem item set delet probabl problem remain hard long number item instanc techniqu prove hard percol instanc concept robust reduct explain will conveni consid promis problem recal promis problem general decis problem problem disjoint subset lno algorithm solv accept input reject input lno input belong lno requir output algorithm definit perc distribut samplabl time polynomi promis problem ano bno polynomi time reduc tion perc robust hold perc ano hold bno perc bno item perc perc robust corp reduct second item perc bno perc robust reduct elabor robust reduct appli graph percol concern languag graph graph perc vertex edg percol set reduct perc robust satisfi standard definit reduct addit contain bno robust random delet captur distribut perc concret exampl consid languag sat consist satisfi cnf formula languag hamcycl consist graph hamiltonian cycl consid reduct sat hamcycl cnf formula produc graph random subgraph includ edg independ probabl reduct robust respect edg percol assert hold satisfi hamiltonian cycl hamiltonian cycl high probabl satisfi hamiltonian high probabl hamiltonian remark exampl note hamiltonian cycl graph robust reduct exist robust reduct note reduct satisfi hamiltonian cycl hamiltonian cycl small constant number satisfi assign contain hamiltonian cycl constant hamiltonian typic edg number vertic cycl will remain percol edg reduct parsimoni reduct sens reduct preserv number wit exist reduct impli hamilton problem sens hard percol instanc explain hard precis start definit definit lno promis problem instanc perc distribut instanc samplabl time polynomi problem lno hard perc robust reduct exist perc robust reduct hard problem term perc robust avoid confus notion robust reduct appear literatur order eas readabl will write robust reduct refer perc robust reduct defin proposit lno promis problem instanc perc distribut instanc samplabl time polynomi hard perc robust reduct polynomi time algorithm input decid high probabl perc bpp forego hard hold perc robust reduct corp reduct conclus hold resp corp corp reduct search decis version forego proposit proposit lno promis problem instanc perc distribut instanc samplabl time polynomi hard perc robust reduct polynomi time algorithm input high probabl find wit assert perc corp exampl applic proposit consid sat problem recal result astad satisfi sat instanc hard find assign satisfi fraction constraint stronger conclus theorem satisfi sat instanc hard find assign satisfi fraction constraint random subformula delet claus probabl assign satisfi satisfi subformula construct robust reduct method appli hard approxim impli pcp theorem intuit gap case case hard prove percol instanc remain hard random delet will affect optimum keep high probabl distinct case case hard suffic case vertex cover problem hard approxim case subset sum problem admit ptas blowup instanc prove blowup preserv combinatori properti edg vertic delet high probabl standard blowup techniqu replac graph vertex larg independ set connect independ set correspond adjac vertic complet bipartit graph method prove hard feedback arc set tournament variant blowup hamiltonian cycl problem subset sum work random subsampl subgraph includ edg independ sampl prob abil studi extens work concern cut flow sampl subgraph find independ set main sampl tech niqu layer model independ introduc depend sampl vertic subsampl variabl mathemat relax constraint satisfact problem relax studi edg percol graph construct hard instanc specif algorithm exampl prove well greedi color algorithm perform complet partit graph edg remov independ probabl graph vertic consid random order greedi algorithm high probabl nlogn color color percol graph work examin problem find maximum independ set regular graph weight vertic exponenti random variabl work author prove regular graph case problem admit approxim time nkg independ depend prove larg constant degre problem approxim expect size maximum independ set random weight graph essenti hard solv mis graph maxim degre hard base idea field stochast optim concern solv comput problem element instanc weight exist edg random variabl typic main focus work design algorithm decis input random variabl instanti good expect guarante work exclus concern fulli instanti problem addit focus specif type uncertainti random variabl result sampl object admit straightforward combinatori interpret random sampl subgraph formula lack consid random variabl exponenti distribut addit deal restrict famili random variabl challeng prove hard instanc edg vertic weight distribut random variabl small algorithm random graph random formula proven find optim solut high probabl percol instanc exampl graph color posit constant high probabl degener color polynomi time properti degener monoton color decid polynomi time vertex graph find polynomi time high probabl color edg percol graph minimum number color reason appli sat formula well exist random sat formula claus independ probabl solv high probabl pure liter heurist observ heurist fail find satisfi assign formula will fail find satisfi assign claus impli variabl sat formula claus percol formula satisfi satisfi assign polynomi time pure liter heurist preliminari work will consid simpl graph multipl edg loop direct graph concern allow direct edg coexist situat consid multipl edg graph direct undirect denot probabl space graph set vertic edg contain independ probabl will edg percol defin probabl space graph vertex contain independ probabl subgraph induc vertic will vertex percol deal run time percol instanc will measur run time term size percol instanc edg percol differ polynomi time algorithm concern percol origin graph number vertic vertex percol case tini valu size percol graph will typic smaller size origin graph work will deal case high probabl size percol origin graph polynomi well graph properti sequenc probabl distribut vertex graph will hold high probabl limn prg algorithm approxim maxim problem ratio depend size instanc return feasibl solut opt opt optim solut algorithm approxim minim problem ratio return feasibl solut opt opt optim solut reli version chernoff bound theorem multipl chernoff bound independ random vari abl absolut constant corollari independ random variabl absolut constant hold cpn log proof multipl chernoff bound hold cpn log log absolut constant cpn log cpn log requir graph color independ set percol independ set graph set vertic span edg independ number graph size independ set maximum size graph denot independ number legal color graph assign color vertic adjac vertic color chromat number denot minimum number color allow legal color clear demonstr hard approxim percol graph edg vertex percol start edg percol edg percol crucial observ graph larg independ set larg set span small number edg lemma turan lemma graph vertic edg independ set size corollari vertex graph satisfi set vertic size span edg proof subgraph induc vertic suppos span edg lemma hand requir lemma vertex graph high probabl log proof larg constant corollari set size log span edg union bound subset size probabl exist set size span edg exp inequ choic impli exp exp log observ general upper bound improv well independ number log high probabl readi prove hard approxim independ number chromat number edg percol graph consid gap problem call gap color instanc graph instanc graph assum vertex graph paramet problem instanc instanc disjoint set theorem fix constant denot number vertic graph gap color problem hard robust reduct respect edg percol paramet bpp polynomi time algorithm approxim factor resp proof result feig kilian hard decid vertex graph satisfi edg percol subgraph claim case case case clear remov edg decreas chromat number case suppos corollari high probabl log requir theorem fact vertex graph hold remark note constant theorem establish inapproxim independ number match inapproxim worst case remark note fact log random percol graph maxim degre high probabl graph color effici color high probabl independ set size approxim factor percol instanc vertex percol move deal vertex percol approxi mate percol instanc essenti hard worst case instanc vertic remain probabl number vertic graph prove hard gap problem gap color percol instanc note case vertex percol approximabl guarante depend number vertic percol graph origin graph theorem fix constant gap color problem hard robust reduct respect vertex percol paramet denot number vertic vertex percol graph bpp polynomi time algorithm approxim factor constant proof log log result feig kilian hard decid vertex graph satisfi vertex percol subgraph number vertic concentr bound high probabl assum case choic paramet impli hand proof vertex cover vertex cover graph set vertic edg incid vertex span edg minimum vertex cover problem graph goal find vertex cover minim size note vertex graph hold vertex cover size independ set size simpl factor approxim algorithm minimum vertex cover problem hard side problem hard approxim factor assum uniqu game conjectur hard approxim factor constant prove hard result hold worst case instanc consid will definit definit graph blowup graph vertex replac independ set size call cloud correspond connect complet bipartit graph edg percol simpl lemma independ set edg colat subgraph lemma consid complet bipartit graph bipartit edg percol probabl probabl independ set log larg constant independ proof fix set size log probabl span edg log union bound probabl independ set log log log log log larg consid gap vertex cover problem instanc graph vertex cover size instanc graph minim vertex cover larger number vertic note equival instanc graph independ set size instanc graph maxim independ set size remark result khot regev prove assum uniqu game conjectur problem gap vertex cover hard constant fact order hard approxim problem percol instanc theorem fix constant assum uniqu game conjectur gap vertex cover hard robust reduct respect edg percol paramet denot number vertic graph assum uniqu game conjectur approxim vertex cover problem hard edg percol instanc proof assum uniqu game conjectur problem gap vertex cover hard equival vertex graph hard distinguish tween case case reduct problem larger paramet robust edg percol consid reduct graph output blowup denot chosen graph graph vertic clear reduct gap vertex cover fact reduct robust edg percol order prove high probabl log denot edg percol paramet left inequ clear subgraph inequ lemma probabl hold edg correspond cloud independ set log log independ set intersect cloud log vertic correspond cloud form independ set probabl log choos paramet reduct robust reduct edg percol paramet paramet log log number vertic origin graph vertex cover size hand claim high probabl choic log inequ log vertex cover size complet proof theorem vertex percol proceed vertex percol note consid vertex percol percol paramet depend number vertic worst case instanc graph perform algorithm measur respect number vertic percol graph close high probabl theorem fix constant assum uniqu game conjectur gap vertex cover hard robust reduct respect vertex colat paramet number vertic graph assum uniqu game conjectur approxim vertex cover problem hard vertex percol instanc proof reduct proof theorem paramet log log graph reduct produc blowup denot graph graph vertic denot vertex percol paramet corollari high probabl number vertic denot pnr pnr log pnr pnr log number vertic cloud logn logn absolut constant independ clear independ set rise independ set vertic intersect correspond cloud impli high probabl hold larg log log choic denot number vertic vertex cover size hand high probabl vertex cover size hamilton percol recal hamiltonian cycl graph cycl visit vertex exact decid graph direct undirect hamiltonian cycl classic hard problem denot hamcycl hamiltonian path simpl path travers vertic graph prove corp polynomi time algorithm vertex direct graph decid high probabl hamiltonian cycl natur approach prove decid hamilton percol instanc hard blow edg replac edg cliqu size connect endpoint edg vertic cliqu idea larg hamiltonian path high probabl pair distinct vertic cliqu high probabl connect percol edg path travers vertic percol cliqu problem idea graph blowup oper hamiltonian set vertic edg origin graph travers hamiltonian cycl direct graph overcom problem vertex larg cliqu direct edg direct edg set vertic direct edg theorem fix constant polynomi time algorithm direct graph vertic decid high probabl hamiltonian cycl will claim claim direct graph sourc sink vertic edg edg percol direct edg probabl log probabl hamiltonian path proof consid random graph note probabl distinct vertic condit specif high probabl hamiltonian path subgraph induc result theorem edg percol complet direct graph vertic high probabl edg contain hamiltonian cycl note probabl hamiltonian path equal probabl hamiltonian cycl edg condit event distribut subgraph induc distribut high probabl subgraph induc hamiltonian path hamiltonian path probabl log claim graph hamiltonian path probabl observ independ copi probabl hamiltonian path edg contain independ probabl hamiltonian path probabl requir proof theorem order prove theorem reduct direct graph produc direct graph hamiltonian cycl hamiltonian cycl high probabl hamiltonian cycl hamiltonian cycl hamiltonian cycl reduct work vertic paramet chosen vertic will uir graph edg direct insid direct edg add direct edg turn graph cliqu vertex let edg outgo cliqu complet descript reduct hamiltonian cycl hamiltonian cycl suppos hamiltonian cycl hamiltonian cycl direct suppos hamiltonian cycl easi appear permut vertic restrict vertic hamiltonian cycl reduct robust edg percol edg percol clear hamiltonian cycl left hamiltonian cycl high probabl hamiltonian cycl explain hamiltonian cycl permut arbitrari order vertic note vertic induc subgraph isomorph graph claim claim log probabl path visit vertic union bound probabl path exist concaten conclud hamiltonian cycl high probabl final choic paramet graph vertic constraint log order prove theorem log log constraint satisfact problem percol deal percol constraint satisfact problem csp instanc boolean csp formula consist collect claus boolean variabl claus associ ari predic variabl xik instanc simpl claus distinct assign constraint variabl xik satisfi xik predic correspond formula assign variabl respect assign denot fraction constraint satisfi defin val val satisfi typic interest csp constraint belong fix famili predic exampl sat problem constraint form assum ariti constraint fix constant depend number variabl definit rise optim problem csp instanc find assign maxim refer maxim problem max csp denot famili predic constraint gap csp promis problem instanc formula val instanc formula val assum constraint csp instanc restrict famili studi model percol instanc csp claus percol instanc csp claus percol random formula set variabl keep claus independ probabl variabl percol instanc csp variabl percol random formula set variabl subset variabl variabl independ probabl claus claus induc claus surviv variabl percol process claus percol constraint satisfact problem ari constraint problem approxim optim percol instanc essenti hard approxim worst case instanc long constant theorem fix constant polynomi time reduct simpl unweight instanc output simpl unweight instanc variabl constraint val val hold val val probabl val high probabl val val theorem impli corollari corollari collect boolean constraint ariti suppos problem gap csp hard gap csp hard robust reduct respect claus percol paramet denot number variabl formula arbitrari constant applic result hard approxim sat claus percol instanc theorem fix constant corp polyno mial time algorithm satisfi instanc sat find assign proof result astad constant weight sat instanc hard distinguish case satisfi case val combin result result problem hard unweight simpl instanc proof appli theorem return proof theorem proof theorem start lemma lemma simpl unweight csp instanc variabl claus absolut constant val val val high probabl val val proof item clear assign satisfi will satisfi second item denot number claus concentr bound hide absolut constant assign variabl number claus satisfi denot number claus satisfi pick claus probabl independ spm spm hide absolut constant suppos val optim assign argument high probabl hand assign hold larg union bound assign val absolut constant note assum proof constant independ assumpt justifi assum independ polynomi time reduct max csp instanc output max csp instanc variabl claus val val idea prove unweight instanc csp problem hard approxim weight case lemma polynomi time reduct simpl weight max csp instanc output simpl max csp instanc constraint variabl claus val val proof reduct work paramet chosen instanc csp withm claus variabl reduct creat instanc variabl instanc will set correspond variabl variabl copi claus add cloud correspond claus combin variabl correspond call set claus correspond cloud variabl claus claim val val clear val val assign extend assign let direct assign variabl fraction assign fraction assign construct assign variabl random set probabl set probabl independ equival choos copi uniform random assign assign variabl chosen moment thought reveal claus probabl satisfi equal fraction claus cloud correspond satisfi denot number claus assign variabl natur induc correspond assign case general satisfi cloud correspond claus correspond number claus expect assign satisfi exist assign variabl val val requir theorem lemma observ lemma general max csp instanc ariti constraint exampl sat formula claus admit approxim polynomi time variabl percol max csp hard variabl percol prove small high probabl max csp hard approxim percol instanc factor worst case set theorem fix constant polynomi time reduct simpl unweight instanc output simpl unweight instanc variabl constraint val val hold val val probabl val high probabl val val corollari analogu corollari variabl percol corollari collect boolean constraint ariti suppos problem gap csp hard gap csp hard robust reduct respect vertex percol paramet denot number variabl formula arbitrari constant proof theorem reduct reduct proof theorem simpl unweight instanc variabl claus reduct replac variabl set correspond variabl replac claus cloud correspond claus combin variabl output reduct variabl claus choos log log log variabl remain variabl percol concentr high probabl log assum case constraint xik variabl particip number claus cloud correspond equal total number claus lemma val val satisfi assign satisfi satisfi subformula impli satisfi probabl suppos val claim high probabl val val prove val val optim assign extend assign let note constraint satisfi claus correspond cloud satisfi claus correspond cloud satisfi denot number claus satisfi cloud correspond val log log val log choic larg val val prove val val assign variabl decod assign decod proof lemma choos random assign variabl set probabl probabl independ set claus belong number claus satisfi expect assign satisfi hand assumpt hold log log log simpl comput reveal differ quantiti log log complet proof theorem subset sum problem percol consid subset sum problem percol version subset sum problem set item posit integ target integ goal decid subset sum instanc subset sum problem defin percol probabl random instanc item includ probabl independ target target subset sum hard prove hard percol version subset sum problem theorem rhe subset sum problem hard robust reduct respect colat paramet number item instanc fix constant proof order prove theorem reduct instanc subset sum problem produc instanc variabl properti satisfi subset sum subset sum high probabl subset sum subset sum subset sum subset sum probabl assum number item odd add item equal paramet chosen larg constant defin set consid instanc clear polynomi reduct output subset sum instanc item subset sum subset sum suppos subset hold consid subset item item correspond item correspond item direct suppos subset note choic larger uniqu uniqu defin subset sum claim reduct fact robust consid percol instanc note subset sum subset sum probabl remain subset sum high probabl subset sum proof reli claim claim random set chosen let probabl independ probabl proof note odd probabl fix element hold union bound pair odd valu probabl odd suppos subset sum subset hold note percol instanc random subset independ defin percol subset defin percol subset note log conclus claim hold probabl percol instanc item correspond claim high probabl subset sum requir final note reduct work long log equival logn easi verifi log log forego reduct robust reduct respect percol paramet constant number item subset sum instanc conclus examin complex percol instanc well hard problem establish hard solv exact problem instanc interest studi percol instanc hard problem consid question aris work hamcycl problem interest determin vertex percol instanc hard direct undirect graph current unabl establish problem hard vertex remain probabl constant depend size graph case reduct hamcycl robust vertex percol prove inexist reduct true interest prove worthwhil determin percol instanc sat remain hard solv variabl formula work find satisfi assign random sat instanc variabl claus hard close satisfi threshold work certifi unsatisfi random sat instanc claus larg difficult well work serv evid sat hard solv algorithm solv independ set random graph karp sipser algorithm algorithm work choos iter degre vertex random independ set remov select vertex sole neighbor graph vertic degre algorithm termin proven base natur logarithm algorithm find high probabl optim independ set karp sipser algorithm fail high probabl find maximum independ set graph despit extens algorithm find optim independ set clear karp sipser algorithm work random subgraph worst case graph oppos random subgraph complet graph lead problem problem polynomi time algorithm vertex graph find maxim independ set high probabl true algorithm find maxim independ set worst case instanc bpp acknowledg itai benjamini huck bennett uri feig sam hopkin discuss refer achliopta coja oghlan algorithm barrier phase transit annual ieee symposium foundat comput scienc foc philadelphia usa ailon charikar newman aggreg inconsist rank cluster acm alon spencer probabilist method aronson friez pittel maximum match spars random graph karp sipser revisit random struct algorithm arora karger karpinski polynomi time approxim scheme dens instanc hard problem comput syst sci arora lund motwani sudan szegedi proof verif hard approxim problem journal acm arora safra probabilist check proof character journal acm barak hardt holenstein steurer subsampl mathemat relax averag case complex proceed twenti second annual acm siam symposium discret algorithm soda san francisco california usa bolloba random graph springer broder friez upfal satisfi maximum satisfi random cnf formula proceed fourth annual acm sigact siam symposium discret algorithm austin texa coja oghlan efthymiou independ set random graph proceed twenti second annual acm siam symposium discret algorithm soda san francisco california usa crescenzi silvestri trevisan weight unweight version combinatori optim problem inf comput dean goeman vondra adapt approxim stochast pack problem proceed sixteenth annual acm siam symposium discret algorithm soda vancouv british columbia canada dinur safra hard approxim minimum vertex cover annal mathemat feig relat averag case complex approxim complex pro ceed annual acm symposium theori comput montr bec canada feig kilian knowledg chromat number journal comput system scienc feig daniel reichman recover valu independ set random struct algorithm ferber kronenberg long pack count cover hamilton cycl random direct graph arxiv friez mcdiarmid algorithm theori random graph random struct algorithm gamarnik goldberg ptas maximum weight independ set problem random weight bound degre graph proceed twenti annual acm siam symposium discret algorithm soda austin texa usa grimmett percol springer astad optim inapproxim acm juli karger random sampl cut flow network design problem proceed twenti sixth annual acm symposium theori comput montr bec canada karp sipser maximum match spars random graph annual symposium foundat comput scienc nashvill tennesse usa khot regev vertex cover hard approxim epsilon comput syst sci kleinberg rabani tardo alloc bandwidth bursti connect siam comput kucera greedi color bad probabilist algorithm algorithm luczak size connect core random graph discret mathemat mezard montanari physic comput oxford univers press mitchel selman levesqu hard easi distribut sat problem proceed nation confer artifici intellig san jose rossman monoton complex cliqu random graph siam comput vazirani approxim algorithm springer verlag york york usa 