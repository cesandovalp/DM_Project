lower bound parameter complex minimum fill complet problem ivan bliznet marek cygan paw komosa luka mach micha pilipczuk abstract work focus complet problem subclass chordal graph minimum fill interv complet proper interv complet threshold complet trivial perfect complet problem task add edg graph order chordal interv proper interv threshold trivial perfect graph prove lower bound problem well chain complet problem assum exponenti time hypothesi problem solv time logc logc integ assum exist subexponenti time approxim scheme formin bisect regular graph constant problem solv time aforement complet problem apart proper interv complet fpt algorithm run time form log second result prove improv algorithm lead surpris breakthrough design approxim algorithm min bisect prove reduct methodolog base combin classic approach start spars instanc sat prepar sparsif lemma exist linear size probabilist checkabl proof pcps apart main lower bound exclud exist subexponenti algorithm optimum linear arrang problem well improv tight lower bound feedback arc set tournament petersburg depart steklov institut mathemat mail iabliznet partial support govern russian feder grant grant presid russian feder well warsaw center mathemat comput scienc institut informat univers warsaw poland mail cygan partial support polish nation scienc centr grant dec institut informat univers warsaw poland mail dimap depart comput scienc univers warwick unit kingdom mail receiv fund european council european seventh framework programm erc grant agreement institut informat univers warsaw poland mail support polish nation scienc centr grant dec foundat polish scienc start stipend programm work micha pilipczuk hold post doc posit warsaw center mathemat comput scienc introduct theminimum fill problem aschord complet input undirect graph integ question edg order turn chordal graph graph induc cycl length hole interest problem origin studi strategi gaussian elimin spars matric optimum number addit entri matrix elimin tight connect minimum fill graph adjac matrix applic ofminimum fill theori spars matric problem edg chordal graph graph belong natur subclass chordal graph interv proper interv trivial perfect threshold graph numer applic rang databas manag bioinformat artifici intellig social network refer introductori section broader discuss pointer relev literatur minimum fill hard yannakaki reduct show obvious complex status problem open problem edit garey book studi minimum fill point view parameter complex obvious paramet interest start pioneer work kaplan propos fix paramet fpt algorithm run time base locat hole graph branch way edg rid strategi work proper interv complet problem edg proper interv graph interv complet fix paramet tractabl resolv villang year complet turn point year ago fomin villang present algorithm forminimum fill subexponenti parameter complex precis run time log immens surpris parameter complex communiti subexponenti parameter algorithm run time essenti restrict set topolog constrain graph techniqu bidimension tournament exampl feedback arc set tournament natur parameter problem exist algorithm exclud exponenti time hypothesi combin lemma essenti state algorithm sat run time work fomin villang present conceptu breakthrough approach complet problem subclass chordal graph main idea focus break individu obstacl hole singl edg addit propos previous work build structur decomposit complet graph dynam program algorithm minim number edg miss decomposit crux dynam program restrict space state size log enumer effici case minimum fill consid decomposit cliqu tree generic approach principl appli subclass chordal graph graph well defin global structur subexponenti parameter algorithm design threshold complet trivial perfect complet proper interv complet interv complet apart proper interv complet problem algorithm run time log current stuck expon log conjectur artifact techniqu remark case idea fomin villang basic outlin strategi actual implement class specif requir involv technic insight drang complement number lower bound suggest slight deviat set edg subclass chordal graph lead exist subexponenti parameter algorithm assumpt eth aforement problem algorithm exist fact intrigu singular point complex landscap interest singular point correspond problem practic applic studi phenomenon direct natur belong optim programm trend parameter complex focus systemat studi parameter problem provid tight upper lower bound complex point view natur question exact deep aforement singular point precis run time form log optim eth subexponenti algorithm deriv bidimension exist time algorithm eth hard reduct consid complet problem case fomin villang observ classic hard reduct minimum fill lower bound situat hold feedback arc set tournament fastest algorithm work time reason question establish tight upper lower bound minimum fill ask explicit fomin villang repeat marx survey optim programm reiter respect subclass work goal paper remedi situat provid complex foundat prove squar root expon run time hard improv investig strong lower bound complet problem assum eth theorem eth fail integ logc consequ logc algorithm problem minimum fill interv complet proper interv complet trivial perfect complet threshold complet chain complet graph chain graph bipartit graph fix bipartit vertic order linear order chain complet problem bipartit graph fix bipartit add edg chain graph chain complet admit algorithm run time log theorem provid tight result complet problem interest gap fact prove higher lower bound ground stronger complex assumpt precis consid approxim min bisect problem regular graph regular graph number vertic find partit equal size part minim number edg part problem gap min bisect defin gap problem decid optimum solut hypothesi exist integ time algorithm gap min bisect theorem hypothesi fail time algorithm chain complet time algorithm minimum fill interv complet proper interv complet trivial perfect complet threshold complet consequ problem solv time theorem assert exist faster algorithm consid complet problem lead breakthrough design approxim algorithm min bisect intend stanc hypothesi true fals exist algorithm refut theorem current knowledg best polynomi time approxim algorithm min bisect achiev approxim factor logopt refut hypothesi approxim factor arbitrarili close assumpt regular constant well access subexponenti time comput awar approxim algorithm min bisect assumpt fact berman karpinski approxim min bisect graph maximum degre hard general graph point view polynomi time approxim final methodolog theorem improv lower bound feedback arc set tournament problem subexponenti fpt algorithm run time log alon improv independ feig karpinski schudi theorem eth fail integ logc consequ log time algorithm feedback arc set tournament direct inspect classic hard proof consequ lower bound theorem tight gap theorem despit effort unabl close gap hypothesi assumpt techniqu main idea work care combin standard approach start spars instanc sat prepar sparsif lemma exist linear pcps precis applic sparsif lemma reduc solv instanc sat solv number instanc sat variabl set number claus linear number variabl appli result dinur exist linear size pcps transform instanc sat number reduct proof theorem random assum random version eth variabl claus logc instanc satisfi fraction claus satisfi instanc hand proceed chain reduct propos garey yannakaki simpl manipul equival instanc max cut gap reduc optimum linear arrang ola problem graph vertic find linear order minim cost defin call cost precis moment exploit work instanc max cut gap construct introduc huge cliqu complement max cut instanc cliqu suppos separ order side optimum max cut solut garey size larg cost edg jump cliqu dwarf nois contribut intern order part left cliqu chosen size explod size instanc observ start instanc gap accommod nois gap cliqu linear size theorem independ interest theorem eth fail algorithm solv optimum linear arrang time log note ola solv simpl held karp dynam program subset time theorem tight result theorem appli modifi eleg reduct decis variant ola minimum fill propos yannakaki reduct first reduc ola chain complet fact specif minimum fill output instanc reduct proper interv complet interv complet problem slight chang result threshold complet trivial perfect complet theorem deriv appli methodolog random hard reduct feedbackarc set tournament ailon moment lose tight chain reduct precis reduct ola minimum fill construct introduc vertex edg origin graph blow vertex set quadrat reduct tight lower bound start spars instanc optimum linear arrang precis idea proof theorem observ start hard gap min bisect max cut altern hard reduct optimum linear arrang graph bound degre constant ola short reduct intric essenti replac usag huge cliqu blow degre care construct layer expand graph mimic behaviour prove result theorem hypothesi fail exist integ time algorithm solv ola multigraph theorem theorem theorem work combin eth sparsif lemma pcp tool work develop theori hard fpt approxim main goal provid lower bound access fpt time comput help design approxim algorithm fundament inapproxim problem cliqu set cover exist linear pcps combin eth marx tight lower bound run time polynomi time approxim scheme ptase fundament problem planar graph euclidean plane basic principl approach marx observ eth pcp tool prepar spars instanc maxim variant sat hard distinguish fulli satisfi instanc instanc fraction claus satisfi time logc constant theorem work observ base reduct refut exist approxim algorithm geometr planar problem work exampl combin appear time prove improv lower bound complex fpt algorithm solv graph modif problem exact idea work gap properti consid instanc exclud exist approxim algorithm limit instanc size explos chain hard reduct thrifti construct hypothesi link hypothesi forward feig essenti feig conjectur hard distinguish typic sat instanc satisfi polynomi time deriv corollari variant hypothesi assumpt regular constant subexponenti time replac polynomi conceiv hypothesi impli stronger variant conjectur refrain formal link technic problem attempt outlin paper need definit list tool reduct exponenti time hypothesi pcp theorem prove theorem main technic contribut paper proof theorem contain theorem main ingredi proof theorem present devot proof theorem preliminari parameter complex parameter problem subset fix finit alphabet instanc problem element integ call paramet parameter problem paramet tractabl exist algorithm decid work time poli instanc comput function denot time algorithm will notat suppress factor polynomi size input denot polynomi determinist linear reduct problem linp linp polynomi time determinist algorithm instanc problem produc instanc problem size instanc instanc graph notat standard graph theoret notat paper graph tupl set vertic set edg clear context graph refer will denot set vertic edg graph subgraph graph induc subgraph induc subgraph vertex set denot complement graph vertic edg denot denot set edg exact endpoint defin cut set edg partit denot size cut denot size vertex degg denot degre number incid edg vertex graph regular degre vertex equal denot maximum degre set neighbourhood extend notat subset vertic will omit subscript deg clear context graph refer disjoint set edg denot induc bipartit subgraph part graph vertex set precis edg denot set edg exact endpoint defin cut set edg partit denot size cut expand cheeger number graph defin min graph expand regular cheeger number discuss expand conveni allow parallel edg loop natur appear expand construct note loop contribut degre vertex effici construct expand literatur theorem produc graph provabl optim cheeger number theorem prime prime congruent mod assum exist expand vertic expand construct polynomi time paper expand size theorem appear set despit provid weaker bound cheeger number theorem theorem real exist posit integ posit integ exist regular multigraph vertic graph construct time polynomi linear arrang linear arrang graph function vertex order cost linear arrang defin call optimum linear arrang cost minim vertex order denot cost ola satisfi employ standard notat sat problem symbol variabl instanc claus cnf formula cnf exact liter assign nae satisfi cnf formula claus satisfi unsatisfi liter conjunct claus claus conjunct liter exponenti time hypothesi exponenti time hypothesi eth introduc impagliazzo paturi zane establish tool prove condit lower bound parameter complex area survey eth base lower bound intuit eth state sat solv time subexponenti number variabl hypothesi exponenti time hypothesi eth time random algorithm sat lemma lemma algorithm take cnf formula return cnf formula variabl variabl appear claus constant iii run time algorithm consequ base eth subexponenti hard sat term number variabl claus theorem eth fail time algorithm sat gap problem pcps gap version problem input instanc promis belong languag allow input goal decid case languag instanc belong gap problem associ paramet exampl gap max cut distinguish case graph admit cut size case graph admit cut size larger satisfi problem gap distinguish formula claus satisfi case imposs satisfi claus introduc gap reduct will fundament result dinur theorem linear size pcp sat log log log combin reduct ola pcps eth discuss proof theorem explain eth fail logc time algorithm optimum linear arrang constant combin well concept complex theori eth hypothesi pcp theorem sparsif lemma gap reduct gap amplif combin eth hypothesi linear size pcp theorem sparsif lemma subexponenti hard gap sat fact observ marx theorem lemma eth fail exist logc time algorithm gap sat proof theorem log log log verifi sat constant assum input cnf formula appli lemma obtain instanc size bound constant depend log log log input verifi random binari string length read bit proof will assum loss general read exact bit access bit proof total loga creat variabl correspond bit boolean string length defin boolean function argument correspond relev variabl xib read proof defin evalu true accept bit proof written equival cnf formula constant number variabl upper bound depend number claus formula formula combin number claus bound hold satisfi proof accept correspond valu proof set satisfi assign proof direct satisfi proof half binari string verifi reject consid arbitrari proof set variabl correspond valu proof observ binari string reject claus claus fals consequ claus fals fraction total number claus final suppos loga time algorithm gap sat algorithm check satisfi time check initi formula satisfi timeo arbitrari posit number contradict eth inspect chain three textbook hard reduct start gap sat end gap max cut produc output instanc linear size term size input instanc time preserv gap combin previous theorem will establish subexponenti hard gap max cut theorem gap sat linp gap nae sat linp gap nae sat linp gap max cut proof simplic proof theorem split separ lemma lemma gap sat linp gap nae sat proof cnf formula creat cnf formula variabl claus set assign satisfi claus addit set correspond claus nae satisfi direct assign nae satisfi claus negat nae satisfi claus assum set fals restrict variabl satisfi claus consequ gap preserv reduct theorem lemma gap nae sat linp gap nae sat proof cnf formula add variabl replac claus claus obtain cnf formula nae satisfi claus nae satisfi claus suffic prove theorem observ assign nae satisfi set appropri nae satisfi hand assign nae satisfi set arbitrari nae satisfi exact claus consequ assign nae satisfi claus extend assign variabl nae satisfi variabl assum assign nae satisfi claus note set indic nae satisfi consid fix assum set fals nae satisfi infer set liter true liter fals consequ restrict variabl nae satisfi claus finish proof theorem lemma gap nae sat linp gap multigraph max cut proof cnf formula number occurr posit negat form construct multigraph vertic edg variabl creat vertic correspond liter add exact edg final claus add triangl connect vertic correspond liter will prove assign nae satisfi claus admit cut size assum assign nae satisfi claus vertic correspond liter evalu true side cut remain liter side cut edg connect clear cut contribut cut triangl correspond nae satisfi claus exact edg cut contribut cut cut size assum cut size suppos side cut variabl contribut edg cut move vertic side cut decreas number edg cut assum variabl separ negat edg connect contribut exact cut claus triangl cut time correspond nae satisfi claus claus nae satisfi liter deduc consid cut correspond assign nae satisfi claus lemma gap multigraph max cut linp gap max cut proof multigraph edg creat auxiliari vertic add three edg uwe weze zev remov edg obtain graph claim cut size cut size cut size side cut opposit edg uwe zev cut put opposit side three edg cut cut size cut size clear edg origin graph three edg uwe weze zev cut note edg vertex side opposit side opposit side opposit side cut opposit consequ restrict vertic cut size lemma prove theorem infer theorem eth fail exist logc time algorithm gap max cut final modifi reduct garey frommax cut toola construct introduc huge cliqu complement max cut instanc cliqu suppos separ order side optimum max cut solut cliqu larg cost edg cliqu eclips nois contribut intern order part left reason cliqu chosen size impos blow instanc size prevent obtain desir subexponenti hard result precis moment exploit work instanc ofmax cut gap start gap instanc accommod nois gap cliqu linear size note theorem number vertic produc linear produc instanc dens notat linp formul reduct properti explicit theorem polynomi time algorithm instanc ofgap max cut vertic produc instanc ola vertic admit cut edg instanc cut edg instanc proof input graph creat correspond instanc ola complement add disjoint cliqu size fulli connect will cut size linear arrang cost will prove equival instanc cut size defin linear arrang list vertic list vertic cliqu vertic order vertic insid arbitrari count cost edg cliqu vertic cost edg cliqu edg impli desir inequ direct linear arrang cost will prove exist optimum linear arrang vertic consecut block will introduc notat linear arrang proof assum vertic order left linear arrang speak vertex left vertex map number set vertic consecut set vertic left vertex set call vertic left denot defin vertic denot block inclus wise maxim empti subset consecut left block block vertic map smallest valu second left block block left block inner block set vertic locat simultan left block left second left block case form singl block inner block exist claim exist optimum linear arrang vertic consecut proof choos optimum linear arrang minim number vertic lie vertic smallest claim vertic consecut assum case inner block consid case will creat linear arrang will contradict assumpt figur situat proof claim case occur left block swap place consid cost note optim equival restat maxim sum cost edg optim largest claim sum decreas clear cost edg endpoint chang inspect edg exact endpoint edg edg decreas length edg increas length contribut edg decreas number vertic drop lead contradict second case occur second left block swap place edg exact endpoint inequ impl increas contradict optim prove consecut optimum linear arrang claim defin cut promis gap problem admit cut greater admit cut size proof theorem theorem spars reduct introduc polynomi time ture reduct gap version min bisect problem regular graph optimum linear arrang key properti instanc problem result instanc optimum linear arrang linear number vertic bound degre creat instanc optimum linear arrang multigraph addit difficulti reduct describ reduct allow distinguish instanc min bisect edg edg optimum cut fix choic solv instanc optimum linear arrang relat optimum linear arrang hypothesi hypothesi exist integ time algorithm gap min bisect main result theorem hypothesi fail exist integ time algorithm solv ola multigraph describ transform instanc min bisect instanc optimum linear arrang form key compon reduct introduc technic claim properti final prove theorem show decid instanc gap min bisect base cost optimum arrang fact reduct exhibit linear increas size instanc crucial achiev bound result transform influenc paramet choic valu defer proof theorem consid instanc min bisect problem regular graph assum transform produc graph vertex set constant chosen note vertic construct edg set induc subgraph conveni introduc notat induc subgraph subgraph vertex set denot graph arbitrarili divid disjoint induc subgraph size constant result transform illustr figur edg set construct dhi figur instanc appli reduct origin graph induc subgraph edg green edg bipartit graph blue induc subgraph construct regular expand theorem satisfi add edg vertic will determin construct dhi regular expand dhi theorem satisfi dhi phi add edg vertic phi will determin add bipartit graph part vertic degre bipartit graph degre vertic differ denot maximum degre bipartit graph note construct multigraph edg time construct process copi proof correct transform well determin paramet drive reduct proof vertic consecut optimum linear arrang vertic small expand consecut order crucial analyz chang cost order move vertex side turn prove optimum order part left size interest reduct hypothet oracl solv decis version optimum linear arrang find cost optimum order auxiliari graph binari search construct influenc apart input graph choic paramet phi turn influenc dhi theorem lemma impos structur optimum linear arrang provid inequ paramet satisfi eventu lemma employ proof main theorem technic swap lemma establish condit degre consecut set swap set decreas cost order lemma swap lemma consid order graph assum set consecut preced assum upper bound degre vertic induc bipartit subgraph upper bound maximum degre upper bound degre vertex final lower bound averag degre vertex inequ impli swap vertic vertic order decreas cost order pypx figur vertex set partit set lemma bound upper bound lower bound degre induc bipartit subgraph proof situat illustr figur length edg connect pair vertic set remain unchang swap order hold edg connect length edg connect increas cost edg connect increas cost edg connect increas hand edg connect shorten upper bound maximum degre lower bound averag degre statement lemma allow lower bound decreas cost order swap perform exampl decreas total cost edg connect decreas cost swap max equal assum inequ lemma strict larger claim optimum order regular graph recal phi dhi paramet transform determin lemma optimum linear arrang consecut proof suppos consecut consid left block denot element assum block proceed mirror version argument denot inner block set choic valu satisfi assumpt degre upper bound lemma expand remain inequ statement swap lemma swap decreas cost order contradict optim lemma phi dhi optimum linear arrang vertic consecut vertic consecut purpos lemma set dhz proof assum consecut denot left block situat proof lemma assum consid block proceed mirror version argument move decreas cost arrang denot vertex posit lemma distinguish case suppos note consecut set andr employ swap lemma degre upper bound satisfi assumpt sincehi expand set averag degre lower bound phi inequ statement lemma phi inequ swap lemma hold decreas cost order contradict optim suppos lemma move block posit effect swap set time set dhi previous case set phi inequ swap lemma satisfi phi dhi contradict optim lemma optimum linear arrang place vertic consecut assum inequ statement satisfi iter lemma vertic group arrang precis optimum order subgraph order permut vertic left lemma divid graph rough equal part lemma assum construct transform paramet satisfi inequ statement lemma well assum consid optimum linear arrang set proof assum imbal strict bigger loss general assum consid vertex left side arrang move posit chang cost arrang cost associ edg increas note larg assumpt lemma cost assosi edg increas addit vertex connect precis vertex move edg cost uvi contribut edg chang note inequ assumpt hold suffient larg constant combin cost chang cost increas edg move posit decreas cost lead contradict equip requir tool readi prove theorem proof theorem prove theorem introduc ture reduct gap min bisect ola constant depend reduct proceed instanc gap min bisect creat equival instanc ola base transform appli will depend paramet cost optim arrang expand recal induc subgraph mention reduct ture reduct equip oracl solv decis version ola turn find cost optim order binari search will comput ola start establish paramet transform order set note satisfi condit lemma set integ satisfi condit lemma inequ hold construct defin turn determin theorem addit term sure inequ lemma strict replac posit constant final set valu phi phi dhi decreas order simplic denot dhz note phi determin dhi theorem observ definit constant satisfi requir lemma result transform choic paramet set ola note comput oracl solv decis version binari search routin remain bisect size optimum linear arrang size assum bisect edg claim upper bound cost optimum linear arrang account cost associ order construct optimum bisect denot partit correspond optimum bisect creat order list vertic vertic order optimum linear arrang final vertic term cost edg insid second term upper bound cost edg upper bound cost edg third term account cost edg edg cost term upper bound cost edg connect vertex edg exact vertex bound cost length order vertex count contribut term express choic sum situat analog term sum remain edg cost prove claim upper bound direct start assum graph optimum arrang cost aim prove bisect size lemma lemma lemma impos structur vertic fact construct bisect set replac note partit set size imbal bound lemma bound number edg lower bound cost term ola term account cost edg lower bound ola second term lower bound cost edg partit edg contribut cost recal vertic ofh permut third term lower bound cost edg connect vertex edg exact vertex analysi lower bound cost edg contribut express choic equal remain sum compar infer creat bisect set arbitrari vertic move vertic addit edg cut problem consid gap problem admit bisect size bisect size conclud instanc admit bisect size lower bound minimum fill complet problem prove theorem prove condit lower bound eth hypothesi parameter complet problem minimum fill chain complet proper interv complet interv complet threshold complet trivial perfect complet start point theorem goal transform instanc ola instanc graph complet problem main reduct transform instanc ola chain complet slight modif reduct yannakaki differ bound degre instanc ola linear number vertic final instanc chain complet fact crucial prove theorem proof theorem origin version yannakaki reduct definit bipartit graph vertic edg chain graph set vertic call left side order call left order chain complet problem bipartit graph ask add minimum number edg chain graph lemma polynomi time algorithm instanc optimum linear arrang creat equival instanc chain complet number vertic bound maximum degre reduct work multigraph proof left side vertex creat set vertic deg defin union set exact vertic set edg construct add edg addit add edg uve vertex degre exact describ transform depict fig finish construct defin ola instanc chain complet instanc figur transform optimum linear arrang chain complet order vertic graph denot cost arrang induc order order left side bipartit graph denot number edg add minim chain graph left order coincid will prove claim claim order equival proof inspect number edg minim chain bipartit graph left order subgraph svi connect vertic set vertex svi connect vertic set minim vertex connect exact number vertic correspond edg degre exact vertex svi correspond edg endpoint note edg equal endpoint work multigraph vertex connect vertic graph minim chain graph degre depend note second vertex svj correspond edg degre equal depend case sum degre written edg endpoint addit cost sum infer number edg equal vivj number edg equal number edg minus number edg add exact edg graph class forbidden induc subgraph chordal proper interv claw net tent interv bipartit claw umbrella net tent threshold trivial perfect tabl character graph class forbidden induc subgraph equival instanc claim prove lemma instanc chain complet transform instanc complet problem simpli make cliqu make cliqu inspect forbidden subgraph definit graph class infer equival instanc prove theorem claw bipartit claw umbrella net tent figur forbidden induc subgraph graph class class chordal interv proper interv threshold trivial perfect graph character purpos conveni set forbidden induc subgraph character present tabl lemma polynomi time reduct chain complet problem tominimum fill interv complet proper interv complet threshold complet trivial perfect complet problem reduct chang vertex set proof bipartit graph consid graph bipartit graph chain graph chordal graph order reduc instanc chain complet minimum fill construct cliqu set vertic construct graph union cliqu edg cliqu arbitrarili complet graph claw bipartit claw umbrella net tent graph independ set size union cliqu solut minimum fill proper interv complet interv complet problem instanc coincid reduct minimum fill reduct proper interv complet interv complet problem left reduct chain complet instanc threshold complet trivial perfect complet instanc chain complet instanc bipartit graph consid trivial perfect complet threshold complet problem graph add edg cliqu minimum chain complet graph correspond complet trivial perfect threshold graph solut chain complet graph consid graph union independ set cliqu edg independ set cliqu induc induc belong cliqu independ set contradict fact edg cliqu independ set form chain complet induc trivial perfect threshold graph denot solut trivial perfect complet threshold complet instanc finish proof correct reduct chain graph graph chain graph independ edg case graph vertic will induc graph contradict fact threshold trivial perfect graph sum reduct fromchain complet tominimum fill proper interv complet interv complet thresholdcomplet trivial perfect complet add edg graph chain complet instanc chang vertex set graph point prove theorem theorem theorem eth fail integ logc consequ log algorithm problem minimum fill interv complet proper interv complet trivial perfect complet threshold complet chain complet proof statement true problem algorithm run time logc instanc optimum linear arrang vertic reduc problem consider vertic lemma logc logcn time algorithm contradict theorem logc lower bound run time theorem hypothesi fail time algorithm chain complet time algorithm minimum fill interv complet proper interv complet trivial perfect complet threshold complet consequ problem solv time proof transform regular min bisect instanc optimum linear arrang instanc bound degre pipelin lemma reduct regular min bisect chain complet instanc vertic edg time algorithm chain complet contradict hypothesi lemma reduc chain complet minimum fill interv complet proper interv complet trivial perfect complet andthreshold complet instanc chang vertex set combin three reduct reduct min bisect tominimum fill proper interv complet interv complet threshold complet trivial perfect complet problem transform instanc vertic instanc vertic lead lower bound discuss complet problem well lower bound hard feedback arc set tournament prove theorem lower bound complex feedback arc set tournament start prepar appropri hard instanc feedback arc set general digraph appli reduct ailon prepar hard instanc fas sat denot version sat variabl exact posit occurr claus size exact negat occurr claus size exact posit occurr claus size exact negat occurr claus size claus size gap sat problem distinguish maximum number claus satisfi instanc sat total number claus hard result gap sat lemma exist posit integ gap nae sat linp gap sat proof input cnf formula variabl number occurr letgx regular expand vertic theorem suppos vertic number creat replac variabl correspond occurr introduc claus unbroken forc evalu equal introduc trivial claus perform construct variabl claus introduc claus claus construct replac occurr variabl variabl correspond occurr polar liter claus construct revers polar liter exampl indic occurr easi variabl formula appear exact claus posit negat exact occurr claus posit negat origin formula claus size formula exact variabl claus variabl evalu nae satisfi claus construct variabl evalu assign variabl origin variabl easi satisfi claus suppos variabl evalu nae satisfi claus sake contradict suppos variabl evalu satisfi claus variabl modifi assign variabl major variabl origin evalu break tie arbitrarili observ step decreas number satisfi claus number variabl minor replac valu major unsatisfi claus satisfi claus unsatisfi perform oper variabl assum loss general variabl origin variabl assign natur defin variabl evalu provid satisfi claus infer nae satisfi claus contradict turn attent feedback vertex set general direct multigraph direct multigraph find smallest subset vertic acycl fvs bal denot variant fvs input direct multigraph loop regular balanc indegre outdegre vertex equal gap fvs bal gap problem distinguish case optimum size number vertic multigraph lemma gap sat linp gap fvs bal proof input instanc sat number variabl number claus equal construct direct multigraph variabl creat vertic correspond set true fals add edg edg set variabl claus add cycl vertic correspond liter claus rise edg claus add cycl vertic correspond liter orient arbitrarili note manner trivial claus form rise addit copi cycl conclud construct easi verifi assum properti vertex indegre outdegre equal construct introduc loop number vertic suppos exist variabl evalu satisfi claus defin set vertic variabl note satisfi claus variabl particip exact claus posit exact claus negat easi weak connect compon isol vertic singl edg acycl assum variabl evalu satisfi claus sake contradict suppos exist set acycl observ pair vertex belong defin variabl evalu chosen arbitrarili observ altern hold set variabl denot acycl cycl construct claus vertex variabl belong easili impli satisfi claus unsatisfi variabl variabl occur claus variabl unsatisfi claus fraction unsatisfi claus contradict final well reduct reduc feedback vertex set feedback arc set direct set reduct appear preserv gap bygap fas denot problem determin direct multigraph loop under undirect multigraph regular minimum number edg remov acycl number edg lemma gap fvs bal linp gap fas proof input direct multigraph denot number edg vertic assumpt regular thatm construct graph creat vertic edg edg creat edg conclud construct set edg construct second bullet point regular balanc infer vertex outdegre indegre vertex outdegre indegre vertic edg suppos subset vertic size acycl easili acycl assum subset acycl size sake contradict suppos set acycl observ edg modifi remov contain case add edg oper decreas number edg preserv properti acycl remov sink loss general assum set vertic acycl easili acycl contradict final observ instanc fas loop subdivid edg doubl number edg chang size optimum solut applic reduct gap problem shrink gap direct graph hand simpl loop parallel edg edg combin observ theorem lemma result theorem eth fail exist logc algorithm gap fas direct simpl graph maximum total degre reduc fas fast theorem eth fail integ logc consequ log algorithm feedback arc set tournament proof provid random reduct essenti reiter argument ailon analysi fact direct graph fas equal minimum number edg orient backward call feedback edg order vertic fas optimum size feedback arc set equival fas problem find order minim number feedback edg order fas denot number feedback edg order constant theorem instanc gap fas simpl direct graph vertic edg maximum total degre note assum vertex outgo edg safe remov integ determin consid blow defin creat vertic vertic twin ailon base communic alon argu optimum order optimum order replac vertex block consist vertic order fas fas order order construct manner descib construct tournament edg pair vertic connect edg orient edg chosen independ uniform random observ direct graph consist edg pick random larg cours prove high probabl feedback arc set close feedback arc set number feedback edg chosen edg pick random concentr expect order fas fas fas indic random variabl feedback edg independ chernoff bound exp exp suppos exist order feedback edg probabl exp fas set larg constant conclus hold probabl suppos fas fix order probabl exp hold fas fas infer high probabl conclus hold order will union bound observ number order exp log probabl failur exp posit constant simpl comput set log exp conclus hold simultan order probabl suppos feedback arc set tournament admit algorithm run time logc theorem appli algorithm construct tournament comput fas case fas probabl fas case fas probabl fas altern disjoint algorithm doubl side error resolv input instanc gap fas log procedur run time logc contradict theorem conclus work evid k·polylog final answer run time parameter algorithm minimum fill interv complet proper interv complet trivial perfect complet threshold complet chain complet evid base complex hypothesi connect hard approxim min bisect problem answer complet satisfactori lower bound assumpt eth weaker uncov surpris link parameter algorithm minimum fill problem approxim min bisect question optim deeper fundament natur work motiv investig hypothesi conjectur link eth strong conjectur seth exist linear pcps conjectur propos feig simpli disprov improv lower bound feedback arc set tournament gap closer inspect proof uncov fundament obstacl achiev tight chernoff concentr bound proof theorem essenti tight tournament vertic feedback arc set size error term magnitud approach tight result fast problem circumv high anticoncentr number feedback edg random order tournament exploit algorithm faster algorithm final assum hypothesi tight bound poli logarithm factor expon describ run time exist algorithm complet problem bridg gap forthcom goal acknowledg austrin valuabl discuss version pcp theorem anonym review help comment refer ailon charikar newman aggreg inconsist rank cluster acm alon rank tournament siam discret math alon lokshtanov saurabh fast fast alber marchetti spaccamela matia nikoletsea thoma editor automata languag program intern colloquium icalp rhode greec juli proceed volum lectur note comput scienc springer arora barak comput complex modern approach cambridg univers press berman karpinski approxim hard bound degre min csp min bisect widmay ruiz bueno hennessi eidenbenz conejo editor automata languag program intern colloquium icalp malaga spain juli proceed volum lectur note comput scienc springer bliznet fomin pilipczuk pilipczuk subexponenti parameter algorithm interv complet corr accept soda confer bliznet fomin pilipczuk pilipczuk subexponenti parameter algorithm proper interv complet schulz wagner editor algorithm esa annual european symposium wroc law poland septemb proceed volum lectur note comput scienc springer bonnet escoffi kim pascho subexponenti fpt time inapproxim algorithmica bonnet lampi pascho time approxim trade off inapproxim problem corr bonnet pascho parameter approxim subset problem oper res lett bonnet pascho sparsif subexponenti approxim corr brandsta spinrad graph class survey volum siam charbit thomass yeo minimum feedback arc set problem hard tournament combinator probabl comput cygan fomin kowalik loksthanov marx pilipczuk pilipczuk saurabh parameter algorithm springer davi fill reduc order siam demain hajiaghayi bidimension theori algorithm applic comput dinur pcp theorem gap amplif acm drang dregi lokshtanov sullivan threshold intract bansal finocchi editor algorithm esa volum lectur note comput scienc springer berlin heidelberg drang fomin pilipczuk villang explor subexponenti parameter complex complet problem mayr portier editor intern symposium theoret aspect comput scienc stac volum leibniz intern proceed informat lipic schloss dagstuhl leibniz zentrum fuer informatik drang fomin pilipczuk villang explor subexponenti parameter complex complet problem mayr portier editor intern symposium theoret aspect comput scienc stac stac march lyon franc volum lipic schloss dagstuhl leibniz zentrum fuer informatik journal version accept acm transact comput theori toct drang pilipczuk polynomi kernel trivial perfect edit bansal finocchi editor algorithm esa volum lectur note comput scienc springer berlin heidelberg feig relat averag case complex approxim complex reif editor proceed annual acm symposium theori comput montr bec canada acm feig faster fast feedback arc set tournament corr flum grohe parameter complex theori text theoret comput scienc springer fomin villang subexponenti parameter algorithm minimum fill siam comput garey johnson comput intract volum freeman york garey johnson stockmey simplifi complet graph problem theor comput sci hajiaghayi khandekar kortsarz foundat fix paramet inapproxim corr hassin rubinstein approxim maximum acycl subgraph problem process letter impagliazzo paturi complex sat comput syst sci impagliazzo paturi zane problem exponenti complex comput syst sci kaplan shamir tarjan tractabl parameter complet problem chordal chordal proper interv graph siam comput karpinski schudi faster algorithm feedback arc set tournament kemeni rank aggreg between tournament cheong chwa park editor algorithm comput intern symposium isaac jeju island korea decemb proceed volum lectur note comput scienc springer khot shinkar hard approxim parameter cliqu problem electron colloquium comput complex eccc lokshtanov marx saurabh lower bound base exponenti time hypothesi bulletin eatc lubotzki phillip sarnak ramanujan graph combinatorica marx optim planar geometr approxim scheme annual ieee symposium foundat comput scienc foc octob provid usa proceed ieee comput societi marx futur direct parameter complex bodlaend downey fomin marx editor multivari algorithm revolut essay dedic michael fellow occas birthday volum lectur note comput scienc springer morgenstern exist explicit construct regular ramanujan graph prime power journal combinatori theori seri cke optim hierarch decomposit congest minim network dwork editor proceed annual acm symposium theori comput victoria british columbia canada acm rose graph theoret studi numer solut spars posit system linear equat graph theori comput academ press york schaefer complex satisfi problem proceed tenth annual acm symposium theori comput acm villang heggern paul tell interv complet fix paramet tractabl siam comput yannakaki comput minimum fill complet siam journal algebra discret method problem definit optimum linear arrang ola input graph integ question exist linear arrang cost optimum linear arrang ola input graph degre integ question exist linear arrang cost max cut input graph integ question exist cut size gap max cut input graph case admit cut size case admit cut size larger min bisect input graph number vertic integ question exist cut size gap min bisect input regular graph number vertic case admit cut size case admit cut size larger satisfi problem consid variant satisfi problem general defin sat input sat formula question exist assign variabl satisfi sat input sat formula case admit assign satisfi claus case admit assign assign satisfi claus sat formula formula sat problem precis cnf formula sat nae sat formula sat defin problem sat differ variabl input formula occur claus sat complet problem problem generic version complet problem graph class complet input undirect graph integ question add edg graph belong graph class consid list complet problem minimum fill chain complet proper interv complet interv complet threshold complet trivial perfect complet minimum fill complet chordal graph problem descript name 