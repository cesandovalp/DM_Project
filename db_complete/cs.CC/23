effici index necklac irreduc polynomi finit field swastik kopparti mrinal kumar michael sak april abstract studi problem index irreduc polynomi finit field effici algorithm problem exist poli log size circuit comput biject set irreduc monic univari polynomi degre finit field applic pseudoran dom answer open question alon goldreich astad peralta approach connect irreduc polynomi necklac equival class string cyclic rotat effici algorithm index necklac length alphabet independ interest introduct finit field integ set irreduc polynomi variabl degre exact well formula con sider problem effici comput index irreduduc polynomi find ing biject comput time poli log poli log main result index irreduc polynomi effici log advic answer problem pose alon goldreich astad peralta polynomi analogu well problem formula bit prime note today general produc singl irreduc polynomi degre time poli log aid advic random main technic result rout effici index algorithm necklac neck lace equival class string modulo cyclic rotat poli log time comput biject set necklac length alphabet depart comput scienc depart mathemat rutger univers support sloan fellowship nsf grant ccf email depart comput scienc rutger univers support nsf grant ccf email depart mathemat rutger univers support nsf grant ccf ccf email index problem defin index finit set biject set formal index comput problem suppos arbitrari languag alphabet set string length construct index function set formal algorithm take input size paramet output properti hold map set biject return larg index algorithm consid effici run time poli close problem revers index revers index biject effici comput time poli formal languag formul index revers index problem combinatori structur permut graph partit standard effici encod structur string index enumer count rank index close well studi count enumer rank problem count problem algorithm input output size enumer problem algorithm input output list element count enumer algorithm effici run time poli poli algorithm problem associ combinatori object includ rank unrank problem rank problem order lexicograph order goal comput rank order element unrank problem comput invers rank map easi unrank algorithm order automat index algorithm rank algorithm order automat revers index well develop complex theori count problem start fundament work valiant combinatori structur count problem cours heart combinator basic ident combinator recurr relat express number structur size term number structur smaller size view effici count algorithm structur enumer rank problem combinatori structur receiv larg amount attent book overview work topic term index revers index term unrank rank distinct index revers index actual biject whatsoev rank unrank actual biject problem feel differ worth highlight introduc term index revers index purpos note prior work rank unrank distinguish notion count enumer easili reduc index index algorithm comput call increas power answer larg binari search determin largest larg enumer run index algorithm integ answer larg convers case subset permut set partit integ partit tree span tree count algorithm modifi effici index enumer algorithm exampl count problem solv recurr relat prove biject proof combinatori count argument lead effici index algo rithm prime exampl situat finit group act finit set set count set orbit action associ count problem solv burnsid count lemma general effici index algorithm lead index problem studi alphabet consid string equival rotat find string denot concaten string equival class string precis orbit natur action cyclic group equival class call necklac view symbol string arrang circl equival string rise arrang interest problem effici index necklac appli index algorithm necklac problem index irreduc polynomi finit field main main result effici algorithm index irreduc polynomi theorem prime power integ set monic irreduc polynomi degre index algorithm take log bit advic run poli log time remark today determinist produc aid advic random singl irreduc polynomi degre time poli log choic result bit advic produc irreduc polynomi constant determinist construct singl irreduc polynomi poli time advic index algorithm poli log bit advic correspond necklac irreduc polynomi finit field index irreduc polynomi reduc problem index necklac main technic result independ interest effici algorithm problem theorem algorithm index necklac length alphabet run time poli log method effici revers index algorithm necklac lead effici revers index algorithm irreduc polynomi open problem effici comput discret logarithm theorem algorithm revers index necklac length alphabet run time poli log index algorithm irreduc polynomi classic bias set construct base linear feedback shift regist sequenc construct logarithm advic par construct paper explicit subspac design explicit small advic agraw biswa construct famili coprim polynomi random effici black box polynomi ident test abil effici irreduc polynomi enabl random effici small amount advic string fingerprint algorithm rabin base choos random irreduc polynomi random effici choos random irreduc polynomi choos random index correspond irreduc polynomi index algorithm applic requir small amount advic applic index algorithm necklac poli time algorithm comput entri generat matrix matrix pariti check matrix bch code valu design distanc standard notion strong explicit error correct code earlier comput entri explicit small valu design distanc set bch code work extens literatur enumer algorithm combinatori object book refer discuss necklac depth discuss rank unrank problem combinatori object lexicograph smallest element rotat class call lyndon word algorithm problem enumer index necklac essenti equival problem enumer index lyndon long work crs linear time enumer algorithm lyndon necklac problem effici rank unrank lexico graphic order lyndon open problem index algorithm fact solut problem effici rank unrank algorithm lexicograph order lyndon work andoni goldberg mcgregor porat studi problem view approxim version revers index necklac random algorithm produc short fingerprint string fingerprint rotat string determin fingerprint string fingerprint detect proxim string misalign independ work preliminari version paper appear time publish kociumaka radoszewski rytter work paper independ paper polynomi time algorithm index necklac author exercis care design algorithm better polynomi run time approach alphabet size cleaner hand broader context addit applic index irreduc polynomi explicit construct organ paper rest paper organ algorithm necklac tion index algorithm necklac index algorithm irreduc polynomi finit field applic explicit construct generat pariti check matric bch code conclud open problem appendix altern algorithm index binari necklac prime length appendix prelimari observ complex theori index general index necklac strategi algorithm consid basic index algorithm will inspir algorithm direct acycl graph vertex set distinguish subset node straightforward index algorithm set path start arbitrari order node consid induc lexicograph order path path path integ index function will map jth path lexicograph order simpl dynam program comput node number path vertex node list order input find sourc number path start node sourc larger number path index node desir path proceed induct replac set set children approach adapt situat suppos set set string fix length alphabet read branch program length alphabet acycl direct graph vertex layer number layer singl start node design subset accept node level sink node outgo arc correspond alphabet symbol arc connect node node level node alphabet symbol write arc label branch program take start start node path correspond word accept reject node read branch program correspond string path start node accept node index algorithm path suggest approach index necklac equival class string necklac identifi canon repres string class lexicograph smallest repres build branch program string determin canon repres class preced paragraph canon repres equival index equival class fact implement approach provid prime appendix work general approach branch program involv notat string write string cyclic rotat rightward posit roti defin orbit set distinct rotat orbit will refer equival class string period period written string fundament period period period period period smaller will denot fundament period string note string orbit orbit string string lexicograph notic definit string orbit orbit total number orbit set orbit main goal will design effici algorithm string return solv index revers index problem index problem function map string imag string orbit map will easili computabil subroutin defin minim repres orbit lexicograph string orbit denot minim repres lex order map will map clear map repres orbit suffic comput note equal number preced nondecreas function equal lexicograph largest string nondecreas function find binari search set string simiar solv revers index problem string find orbit belong find lexicograph minim repres orbit comput cyi lemma effici revers necklac length alphabet suffic effici algorithm take input string output algorithm determin fpr input string comput defin divid reduc problem comput problem comput main compon index algorithm subroutin comput string integ subroutin work build branch program node string accept orbit size divid orbit quantiti comput simpli number accept branch program comput polynomi time simpl dynam program notat preliminari preliminari state basic fact period string proof fact string length posit integ divid orbit fundament period written aperiod string fact fundament period string divisor period string fundament period string uniqu denot fundament period reduct comput simpl transform reduc comput comput lemma orbit proof rot posit integ note exact orbit distinct string form roti orbit orbit orbit orbit sum hand side split basi period lemma fact lemma lemma count effici suffic comput effici definit lemma lemma bius invers formula chapter detail equal lemma lemma impli suffic comput effici divisor section will focus problem design effici algorithm problem will describ algorithm alphabet binari general larger alphabet comput effici binari alphabet will design effici algorithm string comput input algorithm will construct branch program properti number accept path branch program number accept path comput simpl dynam program describ lemma input branch program length alphabet comput size set accept string time poli log proof number accept string number path start node accept node path length exact number accept string entri nth power adjac matrix graph comput time polynomi size graph log repeat squar describ construct fix string branch program size polynomi string accept exact lemma impli comput time polynomi string lexx exist case binari string length definit set wit denot defin prefix summar discuss paragraph observ lexx prefix lie will general observ string rotat string orbit recal orbit orbit lexx observ orbit prefix rotat situat contigu substr appear split substr wrap case prefix suffix recal set orbit contigu substr wit wit wrap separ case definit string gcx string contigu substr gwx prefix suffix discuss paragraph observ observ branch program will combin branch program accept string gcx second accept string layer branch program product layer layer arc accept node level node accept node bcx accept node bwx branch program clear accept set string accept bcx note branch program produc algorithm input algorithm lemma order determin set string will prefix denot set prefix string includ empti string suffix denot set suffix string includ empti string will substr set contigu substr string string set suffix belong prefix construct branch program bcx algorithm input run time polynomi output branch program bcx recogn definit branch program bcx node level tripl prefix string longest suffix belong prefix iff substr belong start node empti string accept node arc node label alphabet symbol longest string suffix clear branch program construct direct graph time polynomi remain accept substr belong string jth vertex visit branch program input note suffix zhj empti set zij belong prefix string note belong prefix branch program design true claim substr belong claim impli branch program accept desir set string proof claim easili induct basi trivial assum induct definit note string zij consid choic claim substr remain induct substr substr minimum claim suffix continu construct branch program bwx algorithm input run time polynomi output branch program bwx accept set string nonempti suffix nonemtpi prefix belong definit branch program bwx node level tripl prefix string will longest suffix belong prefix longest prefix belong prefix start node empti string accept state state nonempti prefix nonempti suffix arc state label alphabet symbol longest string prefix clear branch program construct direct graph time polynomi remain accept lwx string jth node visit branch program input notic calcul longest suffix belong prefix easi induct longest prefix belong prefix length longest prefix belong prefix final branch program accept nonempti suffix nonempti prefix program accept accept condit fact suffix prefix impli requir suffix prefix convers prefix suffix belong prefix longest prefix belong prefix prefix longest suffix belong prefix suffix branch program will accept put thing construct clear size branch program bwx polynomi size polynomi product construct effici construct determinist finit branch program accept string accept observ lemma impli lemma lemma algorithm take input string output size time polynomi comput effici will comput quantiti effici algorithm will small variat algorithm comput previous divisor string form string orbit form roti write string length exact will character string definit rotat roti prefix turn happen true roti lexicograph order roti rot lexicograph order string rotat lexicograph order exact string form algorithm previous subsect polynomi time algorithm output branch program recogn string satisfi second condit form rotat lexicograph order orbit string count direct algorithm comput comput input integ string algorithm write construct branch program axi number string length accept lexicograph order output orbit output construct lemma construct count time polynomi lemma lemma divisor string comput size set time poli ingredi proof theorem special case theorem alphabet consider theorem algorithm index necklac length alphabet run time poli proof proof simpli plug conclus lemma lemma lemma lemma lemma difficult index algorithm revers index algorithm well special case theorem binari alphabet index necklac larg alphabet subsect handl case general alphabet direct general algorithm case binari alphabet set appropri defin will time polynomi goal improv run time polynomi log basic idea repres element binari string length def log bin inject map imag set lexicograph smallest string extend map bin natur map bin convert index count problem larg alphabet problem small alphabet bin roti rotti bin orbit element satisfi bin lexx set orbit defin divid ident allow count rotit lexx easi effici produc branch program will describ method previous easili adapt effici produc branch program rotit lexx lemma will crucial design branch program lemma exist rotit lexx event occur exist appear contigu substr start coordin mod coordin exist string prefix suffix mod lemma construct easili techniqu previous subsec tion main addit rememb current coordin mod blow number state branch program factor intersect accept set desir branch program allow count easili adapt count conclud idea comput lemma lemma lemma comput effici main index theorem necklac lemma theorem poli log time index revers index algorithm neck lace length poli log time index revers index algorithm necklac length fundament period exact index irreduc polynomi previous algorithm index necklac length alphabet size run time polynomi log will algorithm effici irreduc polynomi finit field precis will index algorithm necklac fundament period exact equal method previous section prime power denot finit field element integ denot set monic irreduc polynomi degre theorem algorithm run poli log time take log bit advic index proof prove theorem start describ connect task index necklac index irreduc polynomi note root field fqn fqn root distinct convers fqn distinct polynomi defin action fqn defin action partit orbit discuss correspond orbit action size exact suffic orbit generat multipl group fqn defin map zqn biject biject action zqn zqn repres element zqn integ defin zqn consid base expans biject zqn biject action action precis standard rotat action motiv algorithm index algorithm input prime power advic descript irreduc polynomi degre root generat fqn primit polynomi necklac fundament period exact theorem view base expans integ construct finit field fqn element set fqn class element quotient element set set output constant algorithm work poli log advic construct finit field fqn poli time wonder result shoup construct set qpoli logn element fqn guarante generat advic element set generat explicit generat matric pariti check matric bch code will appli index algorithm necklac explicit con struction generat pariti check matric bch code precis fact index algorithm fact unrank algorithm lexicgraph order lexicograph repres necklac bch code classic algebra error correct code base polynomi finit extens field play central role earli day code theori remark properti famili code better rate distanc tradeoff random code regim studi motiv advanc algebra algorithm index algorithm necklac answer basic question bch code construct explicit explicit generat matric pariti check matric bch code tradit set paramet constant design distanc trivial construct generat matric pariti check matric bch code larg valu design distanc awar problem unsolv prime power bch code associ paramet will length field coordin identifi big field fqn fqn fqn deg fqn linear space fqn evalu fqn polynomi low degre properti evalu lie code theori terminolog subfield subcod reed solomon code condit fqn express mod aix condit equival aqix aix mod simplifi aiq mod smallest integ mod fqn automat determin aiq mod mod motiv choic basi bch code mod basi note fqn linear subspac fqn dimens defin mini defin msq mod easi descript form basi bch code remain set write element base realiz precis correspond rotat orbit element orbit lexicograph fix string case fix string turn base represent integ index algorithm orbit index effici comput entri generat matrix bch code pariti check matric construct design distanc start matrix entri equal note column matrix form van der mond matrix linear independ fqn defin equival relat iff mod row equival class row row delet row remark dimens distanc tradeoff bch code base fact oper reduc dimens ambient space column matrix lie preserv properti column matrix linear independ small field reduc matrix pariti check matrix bch code direct construct pariti check matrix mini row index entri equal write integ base element orbit action precis orbit element lexicograph fix element case base represent index algorithm row index effici entri comput time poli desir open problem conclud open problem orbit group action index general formul problem finit group act set size poli suppos action input explicit finit alphabet consid action permut coordin action orbit action index revers index symmetr group consid action act permut ing coordin orbit action correspond isomorph class vertex graph orbit index ambiti orbit revers index impli graph isomor phism interest explor complex theori index revers index languag index effici character term complex class nice disprov conjectur pair languag count problem solv effici effici index acknowledg joe sawada make awar work kociumaka refer manindra agraw somenath biswa primal ident test chines remaind acm noga alon ode goldreich johan astad rene peralta simpl construct wise independ random variabl random struct algorithm alexandr andoni assaf goldberg andrew mcgregor eli porat homomor phic fingerprint misalign sketch edit shift distanc stoc arndt matter comput springer jean berstel michel pocchiola averag cost algorithm generat lyndon theoret comput scienc crs kevin cattel frank ruskey joe sawada micaela serra mier fast algorithm generat necklac unlabel necklac irreduc polynomi journal algorithm dvoretzki motzkin problem arrang duke mathemat journal jean pierr duval ration des class conjugaison arbr des mot lyndon longueur born theoret comput scienc harold fredricksen irv kessler algorithm generat necklac bead color discret mathemat harold fredricksen jame maiorana necklac bead color ari bruijn sequenc discret mathemat venkatesan guruswami swastik kopparti explicit subspac design electron colloquium comput complex eccc solomon golomb irreduc polynomi synchron code primit neck lace cyclotom algebra confer combinatori math appli cation swastik kopparti mrinal kumar michael sak effici index necklac irreduc polynomi finit field automata languag program ming intern colloquium icalp copenhagen denmark juli proceed donald knuth art comput program volum fascicl gener ate tree histori combinatori generat addison wesley profession tomasz kociumaka jakub radoszewski wojciech rytter comput lyn don word decod lexicograph minim bruijn sequenc combinato rial pattern match annual symposium cpm moscow russia june proceed donald kreher dougla robert stinson combinatori algorithm genera tion enumer search volum crc press conrado mart xavier molinero effici generic algorithm gener ation unlabel cycl mathemat comput scienc iii springer wendi myrvold frank ruskey rank unrank permut linear time process letter macwilliam sloan theori error correct code north holland publish compani edit albert nijenhui herbert wilf combinatori algorithm comput calcul comput scienc appli mathemat york academ press rabin fingerprint random polynomi center comput ing technolog center comput technolog center comput techn aiken comput laboratori univ frank ruskey joe sawada effici algorithm generat necklac fix densiti siam journal comput frank ruskey carla savag terri wang generat necklac journal algorithm frank ruskey combinatori generat draft book http victor shoup algorithm find irreduc polynomi finit field mathemat comput victor shoup search primit root finit field stoc richard stanley enum combinator volum seinosuk toda hard polynomi time hierarchi siam journal comput octob lesli valiant complex comput perman theor comput sci altern index algorithm binari necklac prime length algorithm index necklac special case prime conveni will denot coordin identifi element definit top heavi prefix normal ham weight larg normal ham weight lemma dvoretzki motzkin string uniqu top heavi rotat lemma prime exist uniqu roti top heavi proof defin mod top heavi equival observ mod fact nonneg integ rotj put fact rotj mod defin minim equat roti nonneg integ prove exist uniqu observ rotj rotj top heavi mod note assum mod mod term integ divis hypothesi mod roti top heavi uniqu lemma impli orbit uniqu top heavi string defin canon element element branch program precis equal set top heavi string discuss introduct index algorithm orbit branch program verifi top heavi parallel branch program check condit hold time comput weight final state check cwt true top heavi true complet descript index algorithm extens approach handl prime factor key addit ingredi extens encod string enabl verif properti top heavi automata complex index explor basic question complex theori index revers index understand set index revers index effici outlin deal index revers index nonuni form set base simpl observ index revers index naiv optimist conjectur character effici index revers index proceed disprov conjectur natur definit index revers index uniform set conclud analog naiv optimist conjectur index revers index nonuniform set simpl count set index revers index circuit size poli naiv optimist conjectur poli size circuit recogn poli size circuit index poli size circuit recogn poli size circuit revers index note simpl observ index introduct consist conjectur conjectur fals polynomi hierarchi collaps assum conjectur will algorithm count number satisfi assign boolean formula theorem impli polynomi hierarchi collaps set satisfi assign boolean formula size recogn circuit size conjectur circuit size poli index revers index will algorithm hand circuit circuit count number element index consid algorithm input guess circuit larg size poli integ verifi properti larg larg exist uniqu properti hold easi properti hold index circuit algorithm comput revers index consid algorithm input guess circuit fals size poli integ verifi properti fals exist uniqu properti hold easi properti hold revers index circuit algorithm comput index revers index uniform set introduc natur framework talk index uniform set pair languag defin algorithm index algorithm function index set algorithm revers index algorithm function revers index set index revers index algorithm effici time poli preliminari observ limit effici index revers index effici index count problem solv effici recal count problem problem determin input count problem solv binari search index algorithm effici revers index revers index algorithm tell absenc easi observ gleefulli optimist conjectur pair languag count problem solv effici effici index pair languag effici revers index idea nonuniform case conjectur true polynomi hierarchi collaps unabl interest conjectur leav conjectur fals open problem 