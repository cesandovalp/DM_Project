space complex list color revisit case orient tree szlo egri simon fraser univers octob abstract digraph list homomorph problem templat lhom logspac character egri soda lhom circular undirect graph lhom character term forbidden induc subgraph simpl induct construct egri stac consequ logspac algorithm undirect case simpl easi understand forbidden subgraph induct character simpl easi understand algorithm case digraph paper case orient tree refin strengthen egri soda character orient tree lhom term forbidden induc subgraph simpl induct construct character simpl easi analyz logspac algorithm lhom orient tree recogn time straightforward implement algorithm soda run time orient tree algebra character tree provid introduct digraph homomorph map impli denot arc set correspond algorithm problem digraph homomorph ask homomorph exampl easi homomorph cliqu color digraph consid homomorph problem general context relat structur feder vardi observ standard framework constraint satisfact problem csp formul homomorph problem relat structur fact problem equival digraph homomorph problem digraph homomorph express csp general express power digraph homomorph increas introduc list digraph list list homomorph homomorph list homomorph problem templat lhom algorithm problem support nserc digraph list decid list homomorph list homomorph problem introduc feder hell studi extens paper studi list homomorph problem logarithm space complex problem graph digraph templat studi undirect graph lhom set graph induc subgraph equival induct construct simpl oper detail call graph skew decompos reli induct construct logspac algorithm lhom remark simpl digraph lhom call circular note circular forbidden induc subgraph character lack circular unifi reason lhom exist logspac algorithm lhom complic second algorithm symmetr datalog program requir involv technic analysi subject stark contrast simpl easi analyz logspac algorithm lhom skew decompos undirect graph digraph lhom character term forbidden induc subgraph enjoy induct construct construct build simpl logspac algorithm lhom intrigu open problem paper answer question orient tree posit remark prove dichotomi lhom orient tree graph digraph lhom form natur class induct character orient tree independ interest fact fpt algorithm induct character skew decompos graph essenti detail structur paper introduc basic concept defin orient path call class orient path call fuzzi describ construct orient tree induct definit proceed prove main combinatori result paper orient tree fuzzi induc subgraph construct induct construct definit theorem argu tree fuzzi induc subgraph lhom hard orient tree induc subgraph provid simpl logspac algorithm reli aforement induct character uncondit proof orient tree circular fuzzi induc subgraph note assum simpler argument fuzzi induc subgraph admit hagemann mitschk chain conserv polymorph length note character undirect graph exampl digraph admit hagemann mitschk chain conserv polymorph length length theorem conclud respect general digraph behav differ orient tree algorithm recogn orient tree fuzzi induc subgraph faster time implement recognit algorithm restrict orient remark lhom ident csp relat structur binari relat arc set digraph unari relat assum tree input sake complet appendix induct construct explicit character orient path fuzzi induc subgraph summar main paper theorem note part theorem explain theorem orient tree condit equival induc subgraph fuzzi construct induct definit circular admit chain conserv hagemann mitschk polymorph length admit chain conserv hagemann mitschk polymorph length condit hold lhom lhom hard outlin proof theorem content lemma content lemma trivial content lemma circular lhom lhom hard discuss merit logspac algorithm paper simpl induct natur preliminari digraph concept digraph digraph paper finit arc vertex vertex denot call endpoint specif call tail head call inneighbour outneighbour indegre outdegre vertex number inneighbour outneighbour digraph connect undirect graph replac arc undirect edg under undirect graph connect disconnect digraph compon maxim subgraph connect run time straightforward implement recognit algorithm input assum orient tree note algorithm run faster tree general digraph attempt improv run time algorithm appendix appendix direct proof direct short proof partit empti set call vertex level arc call level observ connect digraph level partit uniqu call bottom vertex level top vertex level vertex bottom top level vertex denot denot set arc endpoint call arc level defin bottom top arc level natur explicit write lgi lgi vertex arc level digraph note digraph will explicit mention note vertex endpoint arc belong digraph arc denot note vertex arc level will confus digraph denot digraph replac arc orient walk sequenc vertic precis aiai arc arc aiai call forward arc backward arc orient walk orient path simpl orient walk vertex walk appear suppos arc endpoint arc endpoint note backward forward walk vertex walk arc vertex walk vertex arc walk arc arc denot subwalk ajaj orient path natur total order vertic order help refer part vertic vertex denot path isomorph order associ path revers amam orient path concaten orient path identifi vertex vertex arc vertic arc arc height orient walk denot height number vertex level vertex minus upward walk downward walk walk upward downward net length orient path number forward arc minus number backward arc walk denot net orient tree digraph under undirect graph tree observ orient tree level vertex arc vertex arc observ tree orient path uniqu digraph form digraph isomorph digraph isomorph definit zsi denot orient path form zsi form ajaj forward backward arc backward forward arc arc observ case height zsi vertex level bottom level top level superscript stand vertex superscript stand vertex stand observ singl vertex stand figur definit posit integ digraph fuzzi path form form fuzzi path minim vertex lheight orient path fuzzi form minim fuzzi path height height form form fuzzi illustr figur figur fuzzi singl vertex top left bottom left join homomorph polymorph list homomorph problem lhom defin introduct level connect digraph notic list homomorph level preserv vertex level vertex level lgi lgi lgi lgi vertex level height level preserv properti homomorph will implicit definit digraph oper polymorph oper ation conserv sequenc ternari oper call hagemann mitschk chain length satisfi ident admit chain polymorph structur character defin induct construct orient tree orient tree construct precis orient tree fuzzi induc subgraph theorem definit induct construct orient tree vertex bottom vertex level vertex top bottom vertex level vertex degre degre greater join join orient tree disjoint union arc exampl construct figur call central tree central vertex join vertic list tree join join tree list meant central tree orient tree singl vertex construct induct construct join join central join vertic satisfi condit construct main structur result theorem theorem orient tree construct fuzzi induc subgraph lemma number time prove exist fuzzi lemma orient path vertic properti travers vertex vertex encount order vertex level level fuzzi proof suppos vertic properti suppos path vertic properti work repeat argument time assum loss general arc level subpath compon subpath addit induc graph satisfi condit definit subpath fuzzi throw unnecessari vertic assum vertic easi fuzzi vertex vertex vertex vertex fuzzi convers straightforward lemma orient path fuzzi induc subgraph vertex bottom level vertex top level fuzzi path proof vertic assum contradict vertex vertex vertex maxim vertex minim find satisfi condit lemma fuzzi induc subgraph contradict induc subgraph conclud fuzzi lemma main technic result proof theorem lemma orient tree assum fuzzi induc subgraph arc level compon proof proof refer vertex arc level function vertex level arc level vertex arc choos arbitrari vertic lheight denot uniqu path path fix rest proof lemma fuzzi fuzzi path compon digraph height arc belong compon arc separ belong assum separ arc height desir properti state lemma exist separ arc contradict will induct sequenc path will denot set arc separ defin find separ arc uniqu orient path recal vertex common vertex separ arc subpath assum defin defin induct height arc level separ arc arc level set construct path complet minimum separ arc separ arc uniqu orient path common vertex separ arc defin subpath claim fuzzi path proof fuzzi separ arc vertex assum contradict vertex suppos arc inneighbour arc separ separ arc separ arc start vertex compon fuzzi lemma subpath fuzzi path recal separ arc top bottom arc level suppos arc arc clear separ contradict arc suppos bottom arc level recal separ arc assum arc vertex vertex bottom vertex level recal common vertex fuzzi bottom vertex level vertic bottom vertex level vertex bottom vertex level vertex top level lemma fuzzi subpath fuzzi assum arc separ arc arc arc endpoint head fuzzi vertic subpath vertex level bottom vertex level fuzzi fuzzi fuzzi arc level separ separ exist tail vertex arc vertic forward arc cid separ fuzzi vertic vertex level proceed top level argument work claim downward upward fuzzi path proof assum note suppos contradict impli arc fuzzi height height height arc wnwn case arc separ second arc contradict definit arc separ arc arc level height arc wnwn argu fuzzi downward upward path separ arc arc type separ type separ backward forward arc type separ forward backward arc claim integ downward upward type fuzzi proof arc forward arc separ outneighbour outneighbor compon contradict separ downward arc arc outneighbor neighbor vertex easi check satisfi condit lemma fuzzi argument analog upward path claim arc arc separ arc separ arc separ proof assum separ separ path definit compon arc arc compon separ contradict arc separ assum separ arc fuzzi claim separ path connect arc insid arc level claim assum type prove claim claim downward fuzzi path proof proof claim vertex claim downward upward path downward path rest downward suppos contradict upward path smallest upward path separ arc subclaim exist proof suffici separ arc suppos upward fuzzi path arc separ arc separ claim arc backward arc upward path arc arc separ claim separ type lead contradict claim subclaim separ arc proof claim upward fuzzi path separ arc separ arc arc arc level chosen definit sequenc separ arc downward path subclaim separ arc separ arc proof easili definit claim subclaim arc exist separ arc separ proof assum separ subclaim separ arc defin separ arc arc level separ downward separ arc proceed previous case subclaim type fuzzi proof arc separ separ arc assumpt height vertex vertex top level vertex level exist type vertex exist subclaim type fuzzi path vertex level satisfi condit lemma fuzzi subclaim type fuzzi proof proof illustr figur vertex type inneighbour outneighbour vertex type outneighbour inneighbour vertex subclaim easi check satisfi condit lemma fuzzi case type type handl previous claim claim downward path definit separ arc lheight path height downward fuzzi height separ arc separ includ arc note forward arc backward arc inneighbour impli separ type contradict claim lemma prove proceed simpl character orient tree height induc subgraph definit star star orient tree vertex set arc set note star vertex vertex call root vertic call leav star star leav star star root vertic orient tree disjoint union figur illustr proof subclaim identifi leaf vertex root vertex call spider spider call bodi call leg lemma orient tree height suppos induc subgraph spider spider proof vertex level assum induc vertex set arc set assum cui arc connect induc orient path vertex exampl path arc induc easi check induc remain case star root leaf set star root leav inneighbour clear spider bodi leg analog argument spider suppos induc vertex set arc set degre degre vertex inneighbour vertex outneighbour spider spider remain case easi analyz star star readi prove direct theorem definit will definit level digraph vertex compon subgraph induc set vertic walk vertex vertex level set compon level set digraph compon vertex compon set compon level defin analog lemma orient tree fuzzi induc subgraph construct proof state lemma lemma find integ arc level exact compon singl vertex lemma spider spider assum spider case spider handl assum bodi root leav defin compon bottom vertex level compon join will follow claim common vertex vertex indegre respect precis vertex definit vertex assum belong vertex degre establish join vertex bottom vertex level tree vertex degre disjoint union arc prove claim suppos contradict vertex outneighbour spider arc vjw path form cycl contradict vertex indegre compon contradict choic prove second claim connect path vertex happen vertic convers suppos contradict indic belong arc orient path form cycl contradict orient tree assum contradict vertex degre arc leav arc contradict proof theorem direct theorem lemma direct chain implic outlin introduct direct proof appendix lemma simpl induct algorithm lhom note orient tree fuzzi induc subgraph lhom hard fact fuzzi induc subgraph circular will theorem circular lhom hard rest induct construct logspac algorithm lhom high level descript algorithm suppos join central vertex join vertic case join tree analyz assum induct logspac algorithm lhom algorithm high level algorithm join input digraph compon output list homomorph compon check level output height larger height output find height find vertex level list homomorph map level level mark good list homomorph mark good compon mark good output output argu correct algorithm implement lemma join correspond logspac algorithm lhom describ digraph list homomorph algorithm input output proof clear algorithm output list homomorph suppos algorithm output algorithm output clear homomorph assum algorithm output compon mark good assum contradict list homomorph vertex level map vertex level map algorithm mark good map vertex map vertex map arc arc connect hard direct prove orient tree fuzzi fuzzi induc subgraph lhom hard note primit posit defin defin relat fuzzi exampl definit undirect path vertic definit fuzzi definit circular defin well straightforward logspac reduct complet direct graph unreach problem lhom impli map happen mark good contradict implement algorithm logspac lemma digraph lemma connect acycl digraph arbitrari vertic level walk net net proof suppos walk net length vertex arbitrari walk arbitrari walk net net walk qww walk net qww net contradict net net assign vertex integ net arbitrari arc net net qxxi qxxi denot walk make step vertex vertex net net arc integ assign larger integ assign minimum net note net assign vertex level lnet level lemma connect acycl digraph level walk bound net length proof level orient walk vertex vertex net length walk bound net length convers suppos level vertic lemma walk net net assum loss general net net posit integ net definit digraph integ undirect graph construct short write vertex set defin edg set defin forward arc denot emphas defin respect clear logspac algorithm take input output lemma simpl observ lemma digraph consid walk vertex vertex igk walk net bottom level lemma connect digraph level height vertex igd walk proof assum level height suppos contradict vertic igd walk walk net length height convers assum level height case case lemma walk net bottom level lemma walk lemma level digraph height constant logspac algorithm output compon compon proof produc output vertex undirect path algorithm vertic form output arc compon produc readi main subroutin algorithm algorithm denot disjoint union tree induct assum logspac algo rithm lhom easili combin algorithm lhom logspac algorithm lhom logspac algorithm undirect reachabl output compon test list homomorph algorithm check list homomorph input level digraph integ height output list homomorph uall set compon level check list homomorph inneighbour consid vertex enforc set list set uall list homomorph exist subgraph induc vertic vertex belong vertex compon check list homomorph vertic level map vertic list homomorph exist output output lemma prove correct algorithm lemma suppos join central vertex join vertex level digraph height integ list homomorph level map level algorithm output input proof assum algorithm output proof aid figur list homomorph list homomorph compon arc map defin list homomorph convers assum list homomorph list momorph compon assum map compon remov list homomorph algorithm accept figur illustr correct proof algorithm routin implement algorithm logarithm space basic trick logspac algorithm algorithm run input feed output output output assum logspac algorithm reachabl test algorithm implement logspac algorithm undirect reachabl circular fuzzi prove digraph fuzzi induc subgraph circular note assum simpler proof prove prove assumpt state theorem theorem orient tree fuzzi induc subgraph circular recal definit digraph defin walk congruent follow pattern forward backward arc xixi forward arc yiyi forward arc suppos congruent walk xiyi faith arc arc direct forward backward xixi avoid faith arc observ walk length avoid contradict circular circular fuzzi induc subgraph fuzzi logspac algorithm lhom previous paper circular lhom hard logspac algorithm work hard problem contradict protect exist faith arc xizi zjyj impli protect exist subscript avoid avoid definit vertic digraph extend consist congruent walk avoid protect circular extend lemma orient tree fuzzi induc subgraph circular proof defin induc vertex set arc set trivial check avoid protect assum induc subgraph fuzzi express suppos vertic vertic height defin orient path defin denot denot vertex notic minim fuzzi path exist three homomorph map map recal homomorph map suppos set vertic vertic arc vertex vertex avoid straightforward verifi protect proof theorem direct theorem lemma direct chain implic outlin introduct direct proof appendix lemma algebra character prove orient tree fuzzi induc subgraph admit chain hagemann mitschk polymorph length theorem easi case general digraph sake complet explicit digraph enjoy hagemann mitschk chain conserv polymorph length length content theorem hagemann mitschk chain theorem orient tree conserv polymorph form chain fuzzi induc subgraph lemma prove direct theorem basic idea proof lemma inspir proof lemma lemma orient tree construct definit conserv polymorph form chain proof exist claim conserv polymorph induct construct definit defin oper will trivial conserv mention explicit will work join oper note proof work join oper break construct definit step assum join central vertex join vertic join thought disjoint union unionsq unionsq disjoint union unionsq arc admit chain polymorph length unionsq unionsq desir polymorph easi check form chain conserv polymorph suppos desir polymorph unionsq arc height argu suffici defin polymorph vertic vertex level ltj suppos oper edg preserv conserv satisfi requir ident extend full oper properti ltj ltj ltj ltj claim properti easi check defin oper arc preserv note arc level level case definit appli assum arc unionsq induct hypothesi argument disjoint union assum admit desir oper admit desir oper defin leftmost leftmost notic well defin three case appli case precis argu observ case induct hypothesi third definit set case occur check verifi arc preserv note analyz assum arc observ hold recal partit case definit appli induct hypothesi arc assum note vertex vertex vertex inneighbour note arc definit assum definit arc recal definit recal disjoint union unionsq unionsq compon assum compon arc induct hypothesi definit set defin leftmost note well defin appli complet proof form chain focus note definit appli definit note appli appli appli second equal induct hypothesi equal definit appli remain arc preserv suppos case definit appli arc suppos fact definit appli consid definit consid case definit definit appli analysi appli conserv appli appli induct hypothesi appli proof theorem direct lemma direct chain implic outlin introduct lemma appendix digraph chain length definit ladder height digraph arc theorem ladder height admit chain conserv polymorph length length proof proof lemma lemma ladder height admit chain conser vativ polymorph length proof ladder notat definit suppos contradict chain conserv polymorph induct will contradict definit chain length requir arc arc definit base case hold assum induct hypothesi hold arc arc aiai lemma ladder height admit chain conserv polymorph length proof ladder notat definit notic level argu suffici defin polymorph vertic vertex level suppos oper edg preserv conserv satisfi requir ident extend full oper properti claim properti extens easi check defin oper definit inspir definit chain lemma recal conserv requir note discuss case proof involv case trivial analyz claim form chain line definit line sum remain arc preserv column tabl arc assum arc bjbj bjaj arc straightforward check tabl cover case faster recognit algorithm algorithm recogn digraph circular algorithm run polynomi time appendix direct impl mentat algorithm input restrict orient tree guarante time run time algorithm paper theorem orient tree algorithm decid fuzzi induc subgraph equival circular proof find uniqu orient path exampl breadth search path test test paragraph clear check take constant time output test suppos travers initi counter increas decreas time move aiai forward arc increas backward arc decreas negat step abandon comput move analyz pair travers track maximum counter assum tabl case proof lemma assumpt note violat maximum abandon comput move path set travers start increas decreas step set vertex attain set vertex attain set vertex attain set exist move path output finish test path output output complet descript algorithm output vertic defin satisfi condit lemma fuzzi convers suppos fuzzi vertex vertex cycl pair vertic induc vertex vertex algorithm detect induc fuzzi vertex vertex algorithm find satisfi condit lemma cycl pair pair bfs find take time recal orient tree travers track constant amount data travers run time conclus open problem sharpen lhom special case orient tree natur question push induct construct forbidden subgraph character digraph lhom induct character exist provid simpler logspac algorithm lhom refer rajesh hemant chitni szlo egri niel marx list color graph remov vertic algorithm esa annual european symposium sophia antipoli franc septemb proceed ctor dalmau szlo egri pavol hell benoit laros arash rafiey descript complex iti list color problem logspac refin dichotomi annual acm ieee symposium logic comput scienc lic kyoto japan juli szlo egri fine grain complex constraint satisfact problem phd thesi mcgill univers decemb szlo egri pavol hell benoit laros arash rafiey space complex list colour dichotomi proceed twenti annual acm siam symposium discret algorithm soda portland oregon usa januari szlo egri andrei krokhin benoit laros pascal tesson complex list homomorph problem graph theori comput system feder hell huang list homomorph graph bound degre discret mathemat feder vardi monoton monad snp constraint satisfact proceed acm symposium theori comput stoc toma feder pavol hell list homomorph reflex graph journal combina torial theori seri toma feder pavol hell jing huang list homomorph circular arc graph combinatorica toma feder pavol hell jing huang arc graph complex list homomor phism journal graph theori gutin rafiey yeo minimum cost list homomorph semicomplet digraph discret appli mathemat pavol hell arash rafiey dichotomi list homomorph digraph twenti second annual acm siam symposium discret algorithm soda san francisco california usa januari omer reingold undirect connect log space journal acm appendix sake complet character orient path fuzzi induc subgraph class orient path denot character special case induct character orient tree character explicit templat orient path obey templat rough templat specifi fuzzi path concaten path orient path definit empti digraph orient path singl vertex top vertex level outdegre oper disjoint union singl vertex arc empti empti digraph call top join empti digraph orient path singl vertex bottom vertex level indegre oper disjoint union singl vertex arc empti empti digraph call bottom join defin top join bottom join orient path orient path singl vertex construct induct construct orient path empti top join bottom join top join bottom join allow construct clear definit special case definit construct produc orient path induc fuzzi induc subgraph convers difficult prove proof terminolog theorem orient path induc fuzzi construct templat character definit orient path wave form qnan defin minim fuzzi path height height odd form form odd form theorem orient path fuzzi induc subgraph form form wave form proof assum simplifi notat write denot subpath start proof decompos qmam notat definit level assum clear minim fuzzi subpath maximum height observ path choos three arbitrari subpath height height height edg disjoint assum travers vertex travers arc arc final arc three path find vertic vertic assum path set vertic vertic clear satisfi condit lemma contradict fuzzi induc subgraph assum minim fuzzi subpath maximum height subpath defin assum upward path case form downward path work proceed form form set find maxim height set find maxim minim fuzzi path set notic chosen minim chosen chosen minim contradict find defin condit appli defin rest height set complet construct height height clear condit will eventu occur definit valid notic vertic arc form form prove wave remain height height choic height height assum induct height height assum contradict height height easi lemma presenc fuzzi contradict subpath height choos subpath subpath atat wave assum minim fuzzi subpath maximum height suppos arc appear arc assum downward path upward path work upward path subpath subpath correspond statement lemma defin subpath start subpath start proof wave proof case run time analysi run time analysi recognit algorithm theorem orient tree call algorithm algorithm note attempt optim implement algorithm run time improv work algorithm produc digraph vertex set tree cycl definit forest arc algorithm find set vertic reachabl ignor arc find set vertic reachabl ignor arc bfs search time size algorithm check empti time appendix altern proof lemma orient tree construct fuzzi induc subgraph proof assum join fuzzi induc subgraph clear note definit compon star vertex degre level spider induc subgraph suppos fuzzi denot subpath defin definit vertex vertex central join vertic fuzzi arc form assum loss general vertic vertex contradict height assum vertex definit fuzzi vertex consid vertex suppos vertex vertex vertex outneighbour cycl contradict tree vertex inneighbour cycl imposs assum vertex find vertex vertex indic cycl contradict analysi analog join oper proof lemma easi extract lemma digraph circular congruent walk implic properti orient path congruent list list homomorph list homomorph map lemma orient tree circular fuzzi induc subgraph proof induc fuzzi implic properti impli lemma circular assum induc fuzzi join join tree suppos central vertex join vertic assum join note analysi join induct assum circular induc fuzzi fuzzi arc vertex vertex congruent walk make circular path congruent list homomorph associ implic properti lemma inform argument will fact bottleneck vertex suppos tjx tji assum vertic minimum forward arc minimum backward arc set difficult exist path imag path path enter leav observ definit imag entir modifi vertex vertex claim list homomorph clear check arc map arc indegre minim map vertex level map recal vertic level outdegre greater map arc analog argument map arc addit construct agre take vertic construct list homomorph map show implic properti function list homomorph contradict assum map vertex argument map vertex map vertex circular entir tjx contradict induct hypothesi argument construct list homomorph map exist contradict remain case analyz argument assum list homomorph associ implic properti minimum backward arc note exist circular entir maximum forward arc note list homomorph associ implic properti map function vertic vertic list homomorph desir contradict assum case analyz defin previous case function vertic vertic check list homomorph desir contradict lemma orient tree fuzzi induc subgraph conserv polymorph form hagemann mitschk chain proof fuzzi induc subgraph circular theorem circular conserv polymorph form hagemann mitschk chain length 