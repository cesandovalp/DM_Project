polynomi time algorithm isomorph graph cliqu width three bireswar das murali krishna enduri vinod reddi iit gandhinagar india bireswar endurimuralikrishna reddi vinod abstract cliqu width measur complex decompos graph tree structur class graph bound cliqu width bound tree width graph polynomi time graph isomorph algorithm graph cliqu width three work independ work grohe show isomorph problem graph bound cliqu width polynomi time introduct graph isomorph bijec tion pair graph input problem decid graph isomor phic graph isomorph problem despit decad complex status problem remain unknown graph isomorph problem complet problem hard babai design quasi polynomi time algorithm solv problem improv best logn time algorithm complex general graph isomorph problem remain elu sive polynomi time algorithm restrict class graph bound degre bound genus bound tree width graph paramet cliqu width introduc courcell studi extens class bound cliqu width graph fair larg sens distanc hereditari graph bound tree width graph bound rank width graph fellow comput cliqu width graph hard oum seymour eleg algorithm comput express graph cliqu width decid cliqu width paramet tree width cliqu width share similar ampl complet problem admit polynomi time algorithm tree width cliqu width input graph bound polynomi time author dimac postdoctor fellow support tata consult servic tcs fellowship isomorph algorithm bound tree width graph long time lokhstanov fpt algorithm param teriz tree width scenario bound cliqu width graph complex bound cliqu width graph polynomi time algorithm graph cliqu width coincid class graph folklor complex recogn graph cliqu width three unknown corneil polynomi time algorithm algorithm henceforth call chlrr algorithm work extens studi structur graph split modular decomposit apart recognit chlrr algorithm produc express graph cliqu width three fix algorithm recogn graph cliqu width comput express open independ work grohe design iso morphism algorithm graph bound cliqu width subsum result algorithm group theori techniqu wors runtim algorithm better runtim simpler intuit techniqu paper isomorph algorithm graph cliqu width three runtim algorithm work defin notion equival express design algorithm test input express equival notion modifi chlrr algorithm output linear size set parseg express input graph cliqu width three run time note modifi chlrr algorithm will output canon express isomorph graph cliqu width three parseg equival express express parseh vice versa isomorph pair parseg parseh equival preliminari paper graph consid multipl edg loop complement graph denot coconnect compon connect compon vertex univers vertex set adjac vertic bicliqu bipartit graph vertex connect vertex label graph graph label assign vertic vertex exact label label graph lab label vertex lab set label graph bilabel trilabel label exact three label set edg vertic label label denot eab eab complet correspond bicliqu subgraph induc denot set vertic adjac denot close neighborhood write isomorph graph label graph write pif lab lab biject lab lab set isomorph denot iso definit cliqu width graph defin minimum num ber label need construct oper creat vertex label disjoint union label graph iii join vertex label vertex label renam vertic label label graph construct oper repr sent algebra express express number label express cliqu width graph denot cwd minimum exist express defin graph express graph construct tree pars tree leav pars tree vertic initi label intern node correspond oper construct exampl cycl length construct express graph uniqu cliqu width induc subgraph cliqu width graph describ notion modular split decomposit set call modul vertic set neighbor trivial modul label graph modul modul vertic modul label prime prime graph graph label graph modul modul trivial modular decomposit graph decomposit techniqu introduc gallai modular decomposit graph root tree tgm properti leav tgm vertic intern node tgm set vertic leav subtre tgm root form modul intern node tgm graph repres graph children tgm adjac iff vertic adjac cliqu independ set prime graph bele seri cliqu parallel independ set prime jame polynomi time algorithm find modular decomposit run time linear time algorithm find modular decomposit propos vertex partit graph split form bicliqu split trivial split decomposit introduc cunningham loos result recurs process decompos graph compon base split cunningham graph decompos uniqu compon star cliqu prime proper split decomposit skeleton detail polynomi time algorithm comput skeleton graph theorem connect graph skeleton uniqu proper split correspond special edg skeleton proper split complet star compon organ paper discuss complet prime graph isomorph defin notion equival pars tree call structur isomorph algorithm test pars tree structur isomorph overview chlrr algorithm isomorph algorithm prime graph cliqu width three appendix chlrr algorithm modifi suitabl output structur isomorph pars tree isomorph graph complet prime graph isomorph isomorph problem prime graph complet easi polynomi time reduct prime graph isomor describ lemma appendix reduct preserv cliqu width cliqu width preserv tur ing reduct prime graph isomorph main algorithm reduct hing lemma lemma graph cliqu width iff prime graph associ modular decomposit cliqu width oracl color prime graph cliqu width algorithm graph cliqu width theorem algorithm color prime graph cliqu width decid color preserv isomorph exist algorithm input color graph cliqu width decid color preserv isomorph proof color graph cliqu width algorithm proceed bottom approach stage fact reduct start leav root modular decomposit tree stage correspond level modular decomposit level algorithm maintain tabl store pair node subgraph induc leav subtre root isomorph leav trivial store intern node modular decomposit tree level decid isomorph seri node check children isomorph match case parallel node prime node vertic repres graph color isomorph type intern vertic repres graph will color iff subgraph induc leav subtre root isomorph test call color copi level find pairwis isomorph match intern node level manner call algorithm level total runtim algorithm time note lemma cliqu width uunionsq test isomorph pars tree defin notion equival pars tree call structur isomorph algorithm test pars tree equiv alent notion will graph generat equival pars tree isomorph equival pars tree input graph isomorph problem admit polynomi time algorithm prove chlrr algorithm tweak produc structur isomorph pars tree isomorph graph cliqu width three polynomi time algorithm graph color graph biject map color consist vertic color color iff color color color consist map ping defin color color color color color color color hard map color well defin recal intern node pars tree oper level pars tree correspond node pars tree root node descend descend node path descend construct color quotient graph correspond graph oper appear path perform graph graph generat pars tree vertic label color edg determin oper path start color vertex color edg oper perform add edg vertic color color oper recolor vertic color color care oper move oper path reach node notic total number label pars tree size color quotient graph definit pars tree root node structur isomorph label map denot singl node induct root descend biject pii iso qgi tgi pii pii color color qgi tgr thr subtre root structur isomorph structur isomorph equival relat reflex symmetr properti definit lemma transit lemma pars tree proof proof induct height pars tree base case trivial satisfi transit properti assum node height descend descend iso color color will match descend iso color color node height induct hypothesi transit isomorph iso complet proof color color infer fact color color color color color color uunionsq case trivial structur isomorph notic definit impli ggi isomorph label map pii ggi graph generat pars tree tgi algorithm test structur isomorph describ algo rithm pars tree test structur isomor phic definit conclud isomorph design dynam program algorithm basic check local condit definit algorithm start leav pars tree proceed level level correspond oper pars tree denot node level level pair node algorithm comput set biject lab lab pif store tabl index graph generat pars tree root comput algorithm comput descend base case correspond find pair leav case singl vertic easi find induct step descend comput pair level help comput level lab lab pick find iso color color process pair unmatch continu descend match lemma greedi match satisfi condit definit descend match add easi subgraph pif definit structur isomorph pars tree clear algorithm polynomi time number choic constant lab note color graph ensur match vertic color base case algorithm work color graph lemma prove structur isomorph satisfi transit fact structur isomorph satisfi stronger notion transit state lemma lemma pars tree graph descend descend suppos tgi pii thi pii iso qgi qhi pii color color qgi assum iso color color iso color color proof lemma rest proof proof induct case lemma uunionsq overview chlrr algorithm corneil polynomi time algorithm chlrr algo rithm recogn graph cliqu width three scription algorithm mention descript fair involv algorithm complet reader encour age detail lemma assum input graph prime test cliqu width prime graph three algorithm start construct set bilabel trilabel general number bilabel trilabel exponenti lemma consid linear size subset denot labg vertex generat bilabel add labg generat bilabel add labg comput skeleton search skeleton special edg cliqu star compon special edg correspond proper split generat trilabel split defin add labg cliqu compon generat bilabel add labg star compon generat bilabel special center add labg lemma prime graph cliqu width three bilabel trilabel labg cliqu width three lemma problem test cliqu width three reduc check label graph labg cliqu width three test label graph labg cliqu width three algorithm top approach iter oper pars tree represent exampl vertex algorithm check oper join neighborhood case problem test construct three label reduc test construct three labl oper fix origin graph decompos smaller compon decompos recurs labg depend bilabel trilabel algorithm test determin cliqu width bilabel set indic vertic label label label label three base test algorithm conclud cliqu width three return top oper pars tree connect compon decompos recurs labg connect trilabel label prime construct labg correspond split trivial proper split exist will disconnect remov edg eab decomposit top oper node children connect compon eab univers vertex trivial split label remov edg eab eac decomposit top oper oper children connect compon eab eac describ bilabel case denot set vertic label labg connect bilabel label prime oper will modul connect oper decomposit relabel join oper introduc third label set edg three label set introduc third label join undo uniqu decompos graph smaller compon join remov consid proceed way introduc third label decompos graph correspond overlap case overcom algorithm check belong three simpler case describ univers vertex label case relabel vertex remov edg decompos decomposit oper children vertex label univers vertic label adjac vertic label case relabel vertex remov edg decomposit oper children vertic label univers univers vertic label adjac vertic label case algorithm relabel vertic remov edg disconnect graph connect compon graph remov edg decompos graph part belong three simpler case way introduc third label set decompos graph describ set connect bilabel prime graph cliqu width three belong three simpler case defin subset remov edg disconnect graph connect remov edg coconnect compon disconnect graph case algorithm introduc label remov edg disconnect decomposit oper children connect compon detail decomposit process reader encourag lemma decompo ing cliqu width three graph apart case describ lemma union disjoint summari label graph labg chlrr algorithm test belong describ case output suitabl top oper connect compon algorithm continu process repeat connect compon turn pars tree conclud cliqu width three isomorph algorithm prime graph cliqu width three describ algorithm test structur isomporph pars tree isomorph prime graph cliqu width three chlrr algorithm modifi structur isomorph pars tree label order preserv structur isomorph modifi algorithm modifi algorithm present appendix recal step chlrr algorithm construct set labg bilabel trilabel describ definit labg equival labh denot labg labh biject labg labh labg isomorph biject lab lab pif lemma labg labh iff proof proof construct set labg labh input prime graph present appendix uunionsq lemma labg labh pif pars tree generat decompos function algorithm input graph structur isomorph decompos pif decompos proof lemma lemma describ appendix major modif case label order preserv structur isomorph pars tree uunionsq isomorph algorithm input prime graph algorithm work modifi chlrr algorithm pars tree cliqu width three comput pars tree canon lemma exist pars tree structur isomorph comput pars tree cliqu width three label graph labh pars tree algorithm structur isomorph algorithm describ test structur isomorph pars tree conclud pars tree structur isomorph isomorph comput pars tree take time label graph labh comput pars tree label graph labh take time test structur isomorph pars tree time run time check isomorph prime graph cliqu width three uunionsq correct algorithm lemma theorem lemma find structur isomor phic pars tree modifi chlrr algorithm lemma prime graph cliqu width three parseg parseh structur isomorph parseg parseh set pars tree generat algorithm input labg labh proof lemma labg labh labg labh pif input lemma pars tree structur isomorph uunionsq theorem graph cliqu width three exist polynomi time algorithm check proof proof prime graph isomorph graph cliqu width three describ lemma theorem uunionsq refer babai moder exponenti bound graph isomorph fundament comput theori springer babai graph isomorph quasipolynomi time arxiv preprint arxiv bodlaend polynomi algorithm graph isomorph chromat partial tree journal algorithm bonami small report graph tree isomorph http boppana hastad zacho short interact proof process letter corneil habib lanlignel reed rotic polynomi time recognit cliqu width graph discret appli mathemat courcell engelfriet rozenberg handl rewrit hypergraph gram mar journal comput system scienc courcell makowski rotic linear time solvabl optim prob lem graph bound cliqu width theori comput system courcell olariu upper bound cliqu width graph discret appli mathemat cournier habib linear algorithm modular decomposit tree algebra program caap springer cunningham combinatori decomposit theori canadian journal mathemat cunningham decomposit direct graph siam journal algebra discret method das enduri reddi logspac fpt algorithm graph iso morphism subclass bound tree width graph walcom algorithm comput springer fellow rosamond rotic szeider cliqu width complet siam journal discret mathemat gallai transitiv orientierbar graphen acta mathematica hungarica grohe schweitzer isomorph test graph bound rank width foundat comput scienc foc ieee annual symposium ieee jame stanton cowan graph decomposit undirect graph proceed southeastern confer combinator graph theori comput kamin ski lozin develop graph bound cliqu width discret appli mathemat lokshtanov pilipczuk pilipczuk saurabh fix paramet tractabl canon isomorph test graph bound treewidth foc ieee annual symposium luk isomorph graph bound valenc test polynomi time journal comput system scienc spinrad algorithm undirect split decomposit journal algorithm miller isomorph test graph bound genus proceed annual acm symposium theori comput acm oum seymour approxim cliqu width branch width journal combinatori theori seri tedder corneil habib paul simpler linear time modular composit recurs factor permut automata languag program springer zemlyachenko konieko tyshkevich graph isomorph problem rus sian theori comput note sci sem lomi appendix graph isomorph complet prime graph vertex polynomi time reduct add vertex add edg graph addit vertic edg graph easi vertex graph adjac exact vertex degre hard trivial modul graph vertex adjac vertex degre conclud prime graph lemma connect graph iff proof graph vertic find isomorph extend newli vertic vertex neighbor map newli neighbor direct vertic degre isomorph map vertic vertic restrict vertic isomorph uunionsq lemma labg labh iff proof easi labg labh definit direct graph isomorph prove biject labg labh labg isomorph biject lab lab pif proof divid case base bilabel trilabel generat chlrr algorithm describ labg generat chlrr algorithm bilabel graph labh bilabel ing defin biject lab lab lab lab pif labg generat bilabel graph labh bil abel defin biject lab lab lab lab pif labg generat special edg skeleton trilabel skeleton graph uniqu theorem find labh generat special edg skeleton correspond trilabel defin biject lab lab lab lab lab lab lab lab pif labg generat cliqu compon bilabel ing labh generat cliqu compon bilabel defin biject lab lab lab lab pif labg generat star compon bilabel special center graph labh generat star compon bilabel special center defin biject lab lab lab lab pif uunionsq generat structur isomorph pars tree prove modifi chlrr algorithm generat struc tural isomorph pars tree isomorph input graph prove support subroutin algorithm find pars tree label graph cliqu width three labg input labg set bilabel trilabel output parseg pars tree graph labg cliqu width three parseg labg tree null tree decompos tree null add tree parseg return parseg function decompos algorithm find pars tree cwd describ appendix decompos trilabel graph function decompos leaf algorithm decompos trilabel graph labg check function call input come labg call level recurs lemma labg labh trilabel prime connect graph pif algorithm generat top oper pars tree iso pif graph describ algorithm proof trilabel trivial split figur univers vertex label algorithm function decompos input trilabl prime connect graph output pars tree null pars tree cwd pars tree trivial pars tree uniqu leaf pars tree connect compon leaf algorithm proceed compon will decompos final pars tree leav leav pointer leav flag true tree null extract leav three vertic find canon pars tree tree replac tree pars tree trilabl flag tree decompos leaf add leaf tree leav replac tree pars tree flag tree decompos leaf add leaf tree leav replac tree pars tree flag fals pars tree null return pars tree return pars tree algorithm remov edg decomposit top oper oper children connect compon aak aak pif univers vertex label decompos algorithm remov edg decomposit top oper oper children connect compon bbk bbk fact bbk imag aak order quotient graph three vertic correspond top consecut oper pif quotient graph isomorph pif correspond nontrivi split figur label complet decomposit oper oper children connect compon aak aak edg remov pif exist nontrivi split label complet decompos algorithm remov edg decomposit top oper oper children connect compon bbk edg remov quotient graph build top oper isomorph pif uunionsq algorithm function decompos leaf input trilabel prime connect graph output true top oper pars tree fals cwd tree null univers vertex label ggi ggi connect compon label tree ggi return true tree label complet ggi connect compon tree return true tree return fals tree cwd algorithm function decompos leaf input bilabel prime connect graph output true top oper pars tree fals cwd tree null univers vertex ggi ggi connect compon label tree ggi return true tree comput set number vertic univers label class adjac label class equal ggi ggi connect compon tree ggi return true tree equal ggi ggi connect compon tree ggi return true tree ggi ggi connect compon tree ggi return true tree comput coconnect compon test membership return decompos leaf return decompos leaf return decompos leaf return decompos leaf return fals tree cwd fig trivial split univers vertex label trilabel graph bold edg set vertic indic edg vertex set aak aaj aaj aaj aak fig nontrivi split repres set vertic label decompos bilabel graph modif chlrr algorithm decompos leaf algo rithm label three find structur isomorph pars tree bilabel prime connect graph cliqu width three pci proposit ward assum bilabel lemma bilabel prime connect graph pif algorithm generat top oper pars tree pii iso piif pii color color graph describ algorithm proof three simpl case handl easili simpl case denot case describ algorithm appendix univers vertex label figur note case univers vertic label univers vertic form modul decompos algorithm relabel vertex remov edg decomposit oper children connect compon ggk ggk pif algorithm find uniqu univers vertex label decompos algorithm relabel vertex remov edg decomposit oper children connect compon hhk imag ggk order quotient graph build top oper isomorph pii pii pii clear piif pii color color fig decomposit bilabel graph univers vertex suppos univers vertic label case appli procedur consecut time univers vertex graph second univers vertex graph note order consid structur pars tree vertic label univers vertic label class label class label case algorithm find decomposit describ case suppos singl vertex label figur univers vertic label adjac vertic label decompos algorithm relabel label remov edg decomposit top oper oper children connect compon ggk ggk pif algorithm find vertex label univers vertic label adjac vertic label decompos algorithm relabel label remov edg decomposit top oper oper children connect compon hhk imag ggk order quotient graph build top oper isomorph pii pii pii piif pii color color case case fig decompos bilabel graph vertic label univers vertic label class label class zigzag edg indic presenc edg set vertic case suppos vertic label fig ure univers vertic label adjac vertic label algo rithm relabel vertic remov edg decomposit oper children connect compon ggk ggk pif algorithm find vertic label univers vertic label adjac vertic label algorithm relabel vertic remov edg decompo sition top oper oper children connect compon hhk imag ggk order quotient graph build top oper isomorph pii pii pii pii pii clear piif pii color color vertic label univers univers vertic label adjac vertic label figur decompos algorithm relabel vertic remov edg decomposit top oper connect compon children algorithm remov edg decomposit top oper connect compon children pif algorithm find vertic label univers univers vertic label adjac vertic label relabel vertic remov edg decomposit top oper connect compon children algorithm remov edg decomposit top oper connect compon children case generat pars tree level level quotient graph build top oper isomorph clear color color second level quotient graph build top oper isomorph color color remain proof lemma uunionsq function decompos describ case case vertex label vertex set consist vertic label partit set vertic adjac vertic denot set vertic adjac vertic denot set vertic adjac vertic denot defin set remov edg disconnect lemma bilabel prime connect graph pif algorithm generat top oper pars tree fig decompos bilabel graph vertic label univers univers vertic label adjac vertic label pii iso piif pii color color graph describ algorithm proof remov edg disconnect proof divid case base connect compon partial connect compon vertex call partial algorithm function decompos leaf input bilabel prime connect graph output true top oper pars tree fals cwd tree null good partial connect compon ggi connect compon tree return true tree partial connect compon ggi connect compon tree return true tree return fals tree cwd good connect algorithm relabel vertic good connect ponent remov edg decomposit top oper oper connect compon ggk children ggk pif permut label structur decomposit case set edg delet algorithm find good connect compon relabel vertic good connect compon remov edg decomposit top oper oper connect compon hhk children imag ggk order quotient graph build top oper isomorph pii pii pii clear piif pii color color partial graph algorithm relabel vertic remov edg decomposit top oper oper connect compon ggk children ggk pif algorithm relabel vertic remov edg decomposit top oper oper connect compon hhk children imag ggk order quotient graph build top oper isomorph pii pii pii piif pii color color lemma apart way continu find decomposit graph cliqu width three uunionsq function decompos set vertic label connect remov edg coconnect compon disconnect lemma bilabel prime connect graph pif algorithm generat top oper pars tree pii iso piif pii color color graph describ algorithm proof proof divid three case depend structur graph partial connect compon good bad cliqu width three impli bilabel graph relabel vertic three cliqu width three cliqu width three algorithm function decompos leaf input bilabel prime connect graph output true top oper pars tree fals cwd tree null coconnect compon ggi connect compon tree return true tree proper partit connect compon tree return true tree elig ggi ggi connect compon connect compon tree ggi return true tree return fals tree cwd coconnect compon algorithm relabel random width remov edg decomposit top oper oper connect compon ggk children ggk pif permut label loss general assum algorithm relabel coconnect compon random remov edg decomposit top oper oper connect compon hhk children imag ggk order quotient graph build top oper isomorph pii pii pii pii piif pii color color proper algorithm relabel side remov edg decomposit top oper oper connect compon children pif algorithm relabel side remov edg decomposit top oper oper connect compon children quotient graph build top oper isomorph pii pii pii pii piif pii color color elig definit decompos algorithm relabel vertic coconnect compon cccd partit coconnect compon side vertic partit side connect compon vertic side remov edg decomposit top oper connect compon ggk children ggk algorithm remov edg decomposit top oper connect compon children pif algorithm relabel coconnect compon ccc remov edg decomposit top oper connect compon hhk imag ggk order children algorithm remov edg decomposit top oper connect compon children case generat pars tree level level quotient graph built top oper isomorph color color second level quotient graph built top oper isomorph color color lemma apart three way continu find decomposit graph cliqu width three uunionsq 