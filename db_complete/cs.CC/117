dual normal logic program forgotten class johann ficht wien austria univers potsdam germani mail ficht truszczyn ski univers kentucki lexington usa mail mirek stefan woltran wien austria mail woltran juli abstract disjunct answer set program power declar program paradigm complex identifi class program consist problem interest theoret standpoint lead improv design answer set program solver class consist dual normal program number posit bodi atom proper rule class program dual normal program receiv attent paper studi class relat dual normal program proposit theori normal program present inter translat translat dual normal normal program hand introduc novel class bodi cycl free program respect dual head cycl free program establish express power dual normal program term model compar normal program discuss complex decid dual normal program uniform equival introduct disjunct answer set program asp brewka vibrant area provid declar formal solv hard comput problem power modern asp technolog gebser asp applic area includ product configur soininen niemela decis support space shuttl flight control nogueira balduccini team schedul ricca bio informat guziolowski main decis problem locat second level polynomi hierarchi full disjunct asp comput involv fragment asp lower complex promin exampl class normal program class head cycl free hcf program ben eliyahu dechter case problem exist answer set complet identifi understand fragment theoret help asp solver effici solver detect program easier class normal head cycl free dedic lightweight machineri process hcf program defin global condit account rule program hand interest class program impos condit individu rule exampl includ class horn normal negat free pure negat program instanc horn program archiv copi includ detail proof appear theori practic logic program tplp proceed intern confer logic program iclp work fund austrian scienc fund fwf project consist rule atom head negat atom bodi pure negat program consist rule atom posit bodi general schema defin class program term number atom head posit negat bodi rule propos truszczyn ski space class program complex consist problem problem exist answer set rang complet complet three main class program space fall complet categori class normal negat free program constraint mention class program constraint rule posit atom bodi truszczyn ski class thorough investig third class receiv attent paper truszczyn ski identifi class establish complex main reason task decid consist skeptic credul reason paper studi forgotten class detail call program dual normal reduct constraint dual horn fact reason dual normal program consist problem lower complex reason dual normal program interest consid slight modif celebr translat qbf disjunct program devis eiter gottlob translat assum dnf formula liter defin introduc mutual distinct fresh atom set answer set true consid subclass qbfs term univers quantifi atom restrict complet problem valid qbf complet easi check restrict dual normal program consist problem dual normal program complet truszczyn ski well dual normal program allow straightforward complex sensit reduct respect subclass qbf problem mention janhunen propos translat qbfs program slight modif complex sensit main contribut group concern connect dual normal program proposi tional theori normal program motiv practic consider process dual normal program effici translat dual normal program sat model formula encod answer set origin program spirit translat sat develop class program translat requir addit techniqu correct deal dual natur program consider second order stay asp framework novel translat capabl express dual normal program normal vice versa case produc polynomi size encod addit translat allow proper extend class dual normal program novel class bodi cycl free program class consist problem locat group investig dual normal program angl abil express concept model class model turner eiter express program notion equival defin term model eiter class normal dual normal program incompar respect model dual normal program strict express normal respect model concern complex decid strong uniform equival dual normal program preliminari rule express negat integ proposit atom omit brace set singleton occasion write tradit represent rule express call head bodi rule normal horn normal dual horn integr constraint posit definit simpli write disjunct logic program simpli program finit set rule denot set atom occur program lift terminolog rule program instanc program normal rule normal identifi part program consist proper rule constraint paper interest class definit program call dual normal rule constraint program normal dual normal call singular note dual horn program posit constraint singl bodi atom arbitrari constraint forbidden contrast dual normal program program fresh atom defin transform ensur empti posit bodi rule turn analyz semant dual normal program interpret set atom interpret model program written satisfi rule written set maxim minim refer inclus maxim inclus minim horn program model uniqu model dual horn program dual properti proposit dual horn model uniqu maxim model will describ construct impli result argument paper defin intuit set consist atom model elimin construct dual horn program precis set altern defin recurs appli step provabl oper definit horn program result summar properti program set proposit dual horn maxim model set atom model model program consid janhunen model belong maxim model equival properti impli proposit construct implement linear time algorithm dowl gallier comput model horn program gelfond lifschitz reduct program relat interpret defin observ dual normal program reduct dual horn interpret answer set program minim model gelfond lifschitz przymusinski set answer set program denot well character answer set invok consid complex decid exist answer set proposit statement equival program set atom model minim model pmr model result identifi test interpret minim model pmr key task decid answer set normal program check minim model pmr easi comput model horn program pmr check match general case requir work approach reduc task decid program deriv pmr model defin program atom notat restat condit proposit proposit interpret answer set program model program model clear program dual normal program dual horn combin proposit yield corollari well effici algorithm check answer set corollari dual normal program interpret answer set model set comput base translat sat encod dual normal program proposit formula model formula encod answer set origin program main idea determinist check interpret answer set encod formula guess interpret effici algorithm describ check model corollari note dual horn encod ficht szeider program proposit variabl encod atom fresh variabl fresh variabl aim variabl aim tim simul comput base program test minim interpret exclud corollari superscript generat copi atom repres set write shorthand write indic set consid respect auxiliari formula simul corollari induct top comput maxim model interpret dual horn main auxiliari formula encod set proposit properti initi level formula encod ensur belong model variabl belong model current interpret formula encod set ensur atom belong model rule atom head belong model previous step analog tim aim tim cim note cim head evalu respect previous level negat bodi evalu respect current model candid simul concept reduct inher final auxiliari formula encod condit interpret satisfi rule fmod formula formula express interpret model atom atom belong maxim model fmod easi formula size stand size construct polynomi time correct translat formal state result theorem dual normal program mod mod denot set model encod improv explicit encod induct level counter janhunen allow reduc size encod log translat normal program provid polynomi time translat program program allow swap head posit bodi serv purpos translat deliv normal program input program dual normal deliv dual normal program input normal complex truszczyn ski exist translat surpris fact exist singl bidirect translat tailor specif program class interest appli head cycl free program ben eliyahu dechter translat program call bodi cycl free bodi cycl free program respect dual head cycl free proceed technic result character answer set program close corollari conveni analyz translat program fresh atom pair atom introduc fresh atom auxiliari atom repres copi respect clarifi role atom proof proposit set notat hand defin write pmx pmr proposit program interpret answer set model belong minim model pmx proof model model model pmr proposit suffic minim model pmr assum pmr final set will model pmx consid rule pmx assum rule belong pmr consid rule pmx rule pmr pmr consequ pmx minim model pmx contradict minim model pmx contain properti sincem model ofp assum minim modeln pmx defin subset reason model pmr contradict minim model pmr assert proposit proposit check answer set requir verifi condit condit formul term atom drop subscript atom program condit singl normal program repres condit combin program avoid unwant interact standard program apart reason introduc atom defin copi custom individu program custom program describ promis translat atom introduc fresh atom set pxor paux pdiag pxor paux pmod ptrue ptran pdiag pmod ptrue observ central dual normal program ptran normal normal program ptran dual normal result establish connect answer set ptran prove transform encod dual normal normal program desir time encod normal program dual normal transform implement polynomi time produc polynomi size program theorem program andmp thenm minim modeln ptran answer set ptran form minim model proof answer set minim model model proposit satisfi constraint pmod proposit impli satisfi constraint ptrue prove ptran remain pdiag proposit observ pmp pmx pmp ndiag rule nonempti bodi disjoint model pmx model pmp ndiag minim model minim model diag minim model answer set ptran clear satisfi constraint pmod model satisfi constraint ptrue proposit answer set prove second assert consid answer set ptran defin rule xxor set proposit answer set pdiag minim model padiag padiag conclud minim model translat allow extend class dual normal program problem decid exist answer set remain level polynomi hierarchi recal program head cycl free hcf ben eliyahu dechter posit depend digraph direct cycl atom belong head rule posit depend digraph vertic atom direct edg atom rule well complet decid head cycl free program answer set class hcf program arguabl natur class program normal program decid exist answer set complet defin program bodi cycl free bcf posit depend graph direct cycl atom belong posit bodi rule analog hcf pro gram bcf program trivial class dual normal program inspect translat yield observ hcf program ptran bcf bcf program ptran hcf ptran effici result direct consequ theorem fact consist problem hcf program complet theorem problem decid bcf program answer set complet translat ptran preserv cycl freeness posit depend graph posit depend graph cycl free posit depend graph ptran cycl free essenti deriv theorem general correspond answer set answer set ptran final result provid slight adapt translat ptran answer set program ptran correspond defin ptran note turn dual normal program normal program vice versa lose properti cycl freeness preserv rule introduc addit cycl posit depend graph theorem theorem interest theorem program theorem answer set form express dual normal program model origin work turner model propos eiter fink character strong uniform equival program turn compar program class respect express work eiter recal main literatur focus disjunct normal program complement character collect model dual normal program final strengthen exist complex model model interpret pair set atom thatx denot class interpret interpret model program written model program informa tion need identifi answer set answer set model model program model model hold write interpret model model program program equival denot answer set equival denot program uniform equival denot set normal fact main concern notion lifschitz eiter fink recal definit properti set interpret eiter definit set interpret complet impli impli close intersect final complet impli impli impli eiter program complet convers complet set program normal program complet close intersect convers set interpret complet close intersect normal programp program complet convers complet set interpret normal program disjunct program exist normal program exponenti larger eiter final technic result lemma interpret condit hold properti dual normal program reli class set interpret introduc set interpret close union dual concept set close intersect will character model dual normal program character model dual normal program addit involv concept splittabl set definit set interpret call close union splittabl properti impli general complet set interpret splitta biliti impli closur union proposit complet collect interpret splittabl close union proof complet splittabl condit complet consequ case convers hold complet set splittabl strict stronger concept clo sure union exampl consid set abcd abcd abcd abcd complet close union set splittabl abcd abcd abcd abcd announc closur union essenti properti set model dual normal program theorem dual normal program complet close union proof complet program rule assum condit lemma hold condit hold condit hold argument appli impli dual normal condit lemma hold consequ condit theorem suffici theorem set interpret complet close union exist dual normal program proof set atom set interpret complet close union consid complet defin clear select element select element set defin note condit lemma hold condit lemma hold hand condit condit hold condit condit hold constraint consid defin set close union proper subset select arbitrari element defin defin select defin select element defin note construct defin select set final defin rule easi construct second condit impli condit lemma hold will assum condit assum consequ condit consequ condit condit consist rule rule clear theorem provid complet character collect interpret collect model dual normal program turn correspond set model dual normal program key role play notion splittabl theorem dual normal program complet splittabl proof set complet program splittabl second condit complet close union definit model finit condit suffici theorem set interpret complet splittabl dual normal program proof defin denot closur union final defin closur set note defin consequ assum set consid set definit set consequ complet construct close union dual normal program will consequ assum equival splittabl consequ contradict convers definit defin assert case reason set splittabl discuss implic abc abc abc abc close union intersect equival program class normal dual normal program close union splittabl proposit dual normal program normal exist consid normal program abc close union dual normal program equival final consid dual normal program abc close intersect normal program equival complex complement eiter check strong equival program conp complet tractabl case program horn check uniform equival program complet program normal problem conp complet theorem check strong equival singular program remain conp hard proof standard reduct unsat pearc defin singular program posit liter negat posit instanc unsat reduct work polynomi time conp hard theorem check uniform equival dual normal program conp complet hard hold case program singular proof membership consid algorithm complementari problem guess check check effici check reduc classic model check test fail comput maxim model dual horn theori polynomi time maxim model equal return true fals hard employ reduct proof theorem eiter conclus studi properti dual normal program forgotten class disjunct program decid ing exist answer set remain complet provid translat dual normal program proposit theori normal program character set interpret set model dual normal program establish conp complet decid strong uniform equival dual normal program show hard addit syntac tic restrict paper rais interest issu futur work bcf program introduc general dual normal program deserv studi dualiti hcf program good comput properti complet decid exist answer set bcf program provid promis class encod problem allow conjunct posit bodi recal oper shift transform hcf program normal preserv answer set ben eliyahu dechter analog shift bcf program introduc negat head rule plan explor shift broader set lifschitz woo program lifschitz woo hand singular program class program introduc deserv attent simplic normal dual normal concern dual normal program key question establish concis translat sat normal program translat lead effect way comput answer set refer balduccini marcello balduccini michael gelfond monica nogueira answer set base design knowledg system ann math artif intel ben eliyahu dechter rachel ben eliyahu rina dechter proposit semant disjunct logic program ann math artif intel brewka gerd brewka thoma eiter miroslaw truszczyn ski answer set program glanc communic acm dowl gallier william dowl jean gallier linear time algorithm test satisfi proposit horn formula logic program eiter fink thoma eiter michael fink uniform equival logic program stabl model semant proceed intern confer logic program iclp volum lncs springer eiter gottlob thoma eiter georg gottlob comput cost disjunct logic pro gram proposit case ann math artif intel eiter thoma eiter michael fink han tompit stefan woltran elimin disjunct stabl logic program proceed intern confer principl knowledg represent reason aaai press eiter thoma eiter michael fink stefan woltran semant character plexiti equival answer set program acm tran comput logic eiter thoma eiter michael fink hrer han tompit stefan woltran model base recast answer set program appli classic logic ficht szeider johann klaus ficht stefan szeider backdoor normal disjunct logic program proceed aaai confer artifici intellig aaai aaai press gebser martin gebser roland kaminski benjamin kaufmann torsten schaub answer set solv practic synthesi lectur artifici intellig machin learn morgan claypool publish gelfond lifschitz michael gelfond vladimir lifschitz classic negat logic program disjunct databas generat comput guziolowski carito guziolowski santiago videla federica eduati sven thiel thoma coke laer ann siegel julio saez rodriguez exhaust character feasibl logic model signal network answer set program bioinformat erratum bioinformat janhunen tomi janhunen ilkka niemela dietmar seipel patrik simon jia huai fold partial disjunct stabl model semant acm tran comput log janhunen tomi janhunen translat normal logic program proposit theori appli classic logic lifschitz woo vladimir lifschitz thoma woo answer set general nonmonoton reason proceed intern confer principl knowledg represent reason morgan kaufmann lifschitz vladimir lifschitz david pearc valverd equival logic pro gram acm tran comput logic nogueira monica nogueira marcello balduccini michael gelfond richard watson matthew barri prolog decis support system space shuttl proceed intern symposium practic aspect declar languag padl volum lncs springer pearc david pearc han tompit stefan woltran characteris equilibrium logic nest logic program reduct complex theori pract log program przymusinski teodor przymusinski stabl semant disjunct program generat ricca francesco ricca grasso mario alviano marco manna lio iiritano nicola leon team build answer set program gioia tauro seaport theori pract log program soininen niemela timo soininen ilkka niemela develop declar rule languag applic product configur proceed intern workshop practic aspect declar languag padl volum lncs springer truszczyn ski truszczyn ski trichotomi dichotomi complex reason disjunct logic program theori pract log program turner hudson turner strong equival logic program default theori easi thoma eiter wolfgang faber miroslaw truszczyn ski editor proceed intern confer logic program nonmoton reason lpnmr volum lncs vienna austria septemb springer 