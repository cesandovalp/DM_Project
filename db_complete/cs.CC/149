sparsif upper lower bound graph problem equal sat bart jansen astrid pieters eindhoven univers technolog box eindhoven netherland abstract sparsif lower upper bound classic problem graph theori logic problem color direct hamiltonian cycl connect domin set prove polynomi time algorithm reduc vertex input equival instanc arbitrari problem bitsiz conp poli polynomi time hierarchi collaps impli exist linear vertex kernel nonblock max leaf span tree para metric dual connect domin set improv edg conp poli posit result exhibit trivial sparsif algorithm equal sat algorithm reduc variabl input claus size equival input claus fix algorithm base linear algebra proof lovász bound number hyperedg critic chromat uniform vertex hypergraph kernel tight assumpt conp poli acm subject classif nonnumer algorithm problem graph theori keyword phrase sparsif graph color hamiltonian cycl satisfi introduct background sparsif refer method reduc object graph cnf formula equival object dens object ratio edg vertic claus variabl smaller notion fruit theoret practic set work hyper graph formula theori kernel origin field parameter complex theori analyz limit polynomi time sparsif tool develop year address question polynomi time algorithm reduc vertex instanc favorit graph problem equival instanc subquadrat number edg impetus analysi influenti paper dell van melkebeek confer version main state polynomi time algorithm reduc vertex instanc vertex cover equival instanc arbitrari problem encod bit conp poli polynomi time hierarchi collaps nontrivi input vertex cover result impli number work support nwo veni grant frontier parameter preprocess nwo graviti grant network sparsif upper lower bound graph problem equal sat edg vertex kernel vertex cover improv conp poli techniqu dell van melkebeek prove lower bound cnf sat problem test satisfi proposit formula cnf form claus liter prove fix integ exist polynomi time algorithm reduc variabl instanc cnf sat equival instanc arbitrari problem bit impli conp poli lower bound tight claus size variabl allow instanc repres vector bit specifi claus continu investig analyz sparsif classic problem graph theori logic sparsif lower bound impli quadrat number edg exist linear vertex kernel unavoid problem logic best knowledg exampl problem admit nontrivi sparsif equal sat provid match lower bound problem consid color ask input graph proper vertex color color gadget cross composit problem compress size conp poli lower bound polynomi time construct emb logic seri size input hard problem graph vertic proper color instanc input main structur reduct approach dell marx creat tabl row column vertic cell pick cell row aim emb instanc edg set correspond group vertic hard start problem chosen input decompos induc subgraph simpl structur creat vertex group connect pair cell subgraph induc repres input instanc input lead pair cell proper color structur challeng reduct ensur edg graph correspond input conflict extend partial color entir graph problem attack hamiltonian cycl rule compress sizeo direct undirect variant problem assum conp poli construct inspir kernel lower bound direct hamiltonian cycl parameter vertex delet distanc direct graph under undirect graph path combin gadget kernel lower bound parameter red blue domin set prove compress size domin set conp poli construct rule subquadrat compress connect domin set lower bound implic kernel complex parametr dual nonblock max leaf span tree connect domin set nonblock max leaf kernel vertic edg lower bound impli number edg kernel improv conp poli final famili problem consid equal sat fix jansen pieters input consist formula cnf form liter claus question assign variabl claus variabl evalu true evalu fals simpl linear paramet transform cnf sat nae sat consist variabl occur posit liter claus dell van melkebeek discuss impli nae sat admit compress size conp poli prove surpris result lower bound tight linear algebra result lovász concern size critic chromat uniform hypergraph kernel nae sat claus fix kernel comput basi associ matrix remov claus express linear combin basi claus work dell marx introduc tabl structur compress lower bound studi compress pack problem hermelin analyz problem paper polynomi kernel sparsif lower bound includ preliminari parameter problem subset finit alphabet parameter problem comput function general kernel size algorithm input take time polynomi output instanc bound algorithm kernel polynomi general kernel polynomi polynomi time reduct equival spars instanc yield general kernel will concept general kernel remaind paper prove exist sparsif algorithm employ cross composit framework bodlaend build earlier work author definit polynomi equival relat equival relat call polynomi equival relat condit hold algorithm string decid belong equival class time polynomi finit set equival relat partit element number class polynomi bound size largest element definit cross composit languag polynomi equival relat parameter problem function cross composit respect cost algorithm instanc belong equival class take time polynomi output instanc paramet bound maxi constant independ sparsif upper lower bound graph problem equal sat leav root treegadget red leaf root leav treegadget leav red inner vertic corner triangular gadget figur gadget exampl color theorem languag parameter problem posit real hard karp reduct cross composit cost denot number instanc polynomi general kernel size bound conp poli will refer cross composit cost log degre cross composit theorem degre cross composit rule general kernel size frequent fact polynomi time linear paramet transform problem impli general ize kernel lower bound hold defin color analyz color problem ask assign vertex input graph color edg endpoint share color color general kernel size degre cross composit tailor problem will introduc construct analyz gadget will need definit treegadget graph complet binari tree replac vertex triangl vertic connect parent connect left subtre exampl treegadget leav figur vertex root tree name root treegadget left subtre leaf gadget subtre refer leaf gadget height treegadget equal height correspond binari tree easi treegadget color properti gadget color appear leaf proper color color root figur illustr lemma treegadget root proper color leaf proof will proven induct structur treegadget singl triangl result obvious suppos treegadget height jansen pieters statement hold treegadget smaller height consid top triangl root induct hypothesi root left subtre color color triangl color color lemma will correct proof cross composit argu exist singl input suffici color entir graph lemma treegadget leav root color proper extend proper color leaf extens exist proof will prove induct height treegadget singl triangl result obvious suppos lemma true treegadget height treegadget height root triangl color leav leav color loss general assum leaf left subtre connect induct hypothesi extend color restrict leav left subtre proper color left subtre assign color restrict leav subtre proper color leav subtre induct extend color proper color subtre suppos root subtre color color color exist final choos definit vertic assign color color root correspond subtre proper color defin color proper color extend definit triangular gadget graph vertic depict figur vertic corner gadget vertic refer inner vertic easi triangular gadget color corner color observ observ triangular gadget corner proper color partial color assign distinct color three corner triangular gadget extend proper color entir gadget present gadget construct defin sourc problem cross composit variant problem prove kernel lower bound chromat number parameter vertex cover color triangl split decomposit input graph partit vertex set edgeless graph disjoint union triangl question proper color will refer color color lemma color triangl split decomposit complet proof easi verifi problem will hard reduct nae sat complet suppos formula set variabl construct graph sparsif upper lower bound graph problem equal sat gadget variabl gadget claus figur gadget construct claus variabl variabl construct gadget depict figur claus construct gadget depict figur connect vertex vertex gadget easi verifi triangl split decomposit figur triangl white vertic independ set black suppos color color function independ set note pair vertic distinct color proper color satisfi true satisfi assign consid claus note color color suppos impli liter set true impli liter fals impli liter fals case claus nae satisfi argument color swap fals true impli nae satisfi suppos instanc satisfi truth assign defin color function set fals defin color remaind variabl gadget consist color claus gadget consid claus liter true set fals symmetri consid case correspond color depict figur red correspond green correspond blue correspond color easi verifi lead proper color color vertic independ set theorem color parameter number vertic general kernel size conp poli proof theorem lemma suffic degre cross composit color problem defin color parameter number jansen pieters figur valid color claus gadget depend color liter note role exact revers exchang color parent proper color situat vertic eas present will cross composit list color problem input consist graph list function assign vertex list allow color question proper color graph vertex assign color list list color reduc ordinari color simpl transform add cliqu enforc color list will prove theorem focus cross composit list color start defin polynomi equival relat input color triangl split decomposit instanc color triangl split decomposit equival equival relat number triangl independ set size easi polynomi equival relat duplic input ensur number input cross composit power chang increas total input size factor will assum input consist instanc color triangl split decomposit integ impli log integ enumer instanc input consist graph partit vertex set set independ set size consist vertex disjoint triangl enumer vertic vertic form triangl will creat instanc list color problem consist graph list function assign vertex subset color palett refer figur sketch initi graph set vertic call label vertic set add set triangular gadget label label corner vertic vertic corner vertic gadget inner vertex triangular gadget connect vertex sik vertex graph vertex connect construct subgraph induc isomorph graph replac triangl triangular gadget sparsif upper lower bound graph problem equal sat rtgs figur graph edg vertic left simplic add treegadget leav enumer leav recal power connect leaf vertex root defin vertex add treegadget leav enumer leav connect inner vertex triangular gadget group leaf number leaf root list vertex gadget claim graph list color input instanc color proof suppos list color definit lemma leaf leaf connect vertic impli vertic color vertic color gadget leaf note leaf odd exist vertic color three color color color observ fact isomorph graph replac triangl triangular gadget conclud proper color suppos proper color forxi will construct list color instanc triangular gadget color defin corner distinct color observ color inner vertic consist corner triangular gadget color consist color inner vertic leaf gadget connect color leaf proper color leav leaf color lemma consist color root jansen pieters receiv color requir triangular gadget inner vertic color leaf color color leaf color leaf leaf leav proper color color observ color root color complet list color claim construct serv cross composit list color prove theorem add vertic simul list function add cliqu vertic vertex color contain connect vertex correspond color proper color graph correspond proper list color graph color instanc input remain bound paramet problem number vertic observ treegadget leav correspond binari tree graph tmax vertic theorem theorem lemma hamiltonian cycl prove sparsif lower bound hamiltonian cycl direct variant degre cross composit start problem hamiltonian path bipartit graph hamiltonian path bipartit graph input undirect bipartit graph partit set distinguish vertic degre question hamiltonian path hamiltonian path complet bipartit graph easi remain complet fix degre start endpoint theorem direct hamiltonian cycl parameter number vertic general kernel size conp poli proof suitabl choic polynomi equival relat pad number input suffic cross composit problem bipartit graph input consist instanc integ instanc encod bipartit graph partit set instanc label element element degre construct extens path gadget depict figur observ path gadget induc subgraph remaind graph connect termin hamiltonian cycl travers path gadget way depict figur creat instanc direct hamiltonian cycl act logic input construct group path gadget refer group label gadget group aim union creat set name construct group path gadget refer group label gadget group bjn union sparsif upper lower bound graph problem equal sat path path path gadget general structur creat graph input figur illustr lower bound hamiltonian cycl input instanc edg add arc aik arc aik hamiltonian path mimick combin vertex travers path gadget path construct step need extend path hamiltonian cycl add arc termin termin add arc termin add vertex start vertex arc start add tupl vertic connect start add arc add arc termin gadget add arc ajm add arc termin connect bjn add vertex arc arc termin gadget add arc gadget bjn exact vertex outgo arc incom arc complet construct sketch figur order prove creat graph act logic input instanc establish number auxiliari lemma lemma hamiltonian cycl travers path gadget direct path path figur proof hamiltonian cycl visit center vertex path gadget neighbor option visit consecut path path option jansen pieters lemma hamiltonian cycl enter path gadget cycl visit gadget aim order visit vertic hamiltonian cycl enter path gadget cycl visit gadget order visit vertic proof consid hamiltonian cycl enter path gadget lemma cycl path continu termin path gadget termin neighbor gadget lead termin cycl continu path gadget adjac structur path gadget lemma repeat argument proof enter group vertex equival lemma direct hamiltonian cycl arc start indic subpath cycl exact vertic vertic gadget vertic gadget proof will cycl reach travers exact group continu visit vertic cycl reach travers exact group continu cycl continu cycl reach vertex subpath step construct outgo arc lead gadget cycl uniqu arc termin lemma cycl visit vertic vertic reach gadget travers path gadget neighbor gadget lie gadget type cycl visit outgo arc proof visit visit vertic exact group continu visit vertic visit visit vertic exact group return subpath vertex visit remain visit subpath suppos exist visit subpath visit visit vertic group continu visit note vertic visit subpath impli vertex cycl subpath find vertex subpath note creat loop visit vertex earlier yield hamiltonian cycl exampl vertex start visit contradict finit vertic subpath exact group visit exact group visit vertic leav exact group group unvisit sparsif upper lower bound graph problem equal sat step creat select mechan leav group unvisit lemma formal idea lemma hamiltonian cycl arc start satisfi condit lemma cycl visit subpath cycl termin inclus vertic gadget proof vertex visit direct neighbor arc gadget cycl outgo arc type lemma gadget visit path visit vertex arc gadget cycl impli visit easi start arc consid incom arc arc termin cycl vertic gadget visit lemma lemma termin gadget visit subpath equival subpath cstart hamiltonian cycl vertic visit cnext start equival cbj vertic easi subpath vertic vertic cstart cend start lemma prove hamiltonian cycl instanc hamiltonian path lemma graph direct hamiltonian cycl instanc hamiltonian path proof suppos hamiltonian cycl lemma exist subpath gadget visit exact gadget gadget enter termin easi gadget travers path construct hamiltonian path instanc arc arc gadget visit exact path hamiltonian path suppos hamiltonian path creat hamiltonian cycl vertex instanc add path path gadget vertex add path path gadget order vertex arc termin vertex arc termin will subpath cbj termin gadget cycl start visit group cycl continu gadget aim path continu continu jansen pieters gadget bin continu gadget continu add arc continu arc close cycl definit vertex visit remain check vertex cycl vertic start vertic obvious vertic cycl vertic visit hamiltonian path vertic number vertic max lemma construct degre cross composit hamiltonian path bipartit graph direct hamiltonian cycl parameter number vertic prove general kernel lower bound direct problem karp polynomi time reduct vertex direct graph produc undirect graph vertic direct hamiltonian cycl hamiltonian cycl linear paramet transform direct hamiltonian cycl hamiltonian cycl linear paramet transform transfer lower bound conclud direct hamiltonian cycl general kernel size domin set discuss domin set problem variant dom prove kernel lower bound variant red blue domin set variant bipartit red blue color graph goal domin blue vertic select small subset red vertic idea kernel lower bound parameter number red number blue vertic prove sparsif lower bound connect domin set parameter number vertic lower bound appli dual problem nonblock max leaf span tree will prove sparsif lower bound degre cross composit start variat color red blue domin set problem col rbds describ dom equal size color red blue domin set col rbds input bipartit graph partit subset question set set exact vertex vertex adjac vertex will vertic set color question set exact vertex color vertex adjac vertex lemma col rbds complet proof dom prove complet color rbds constraint color set equal size complet equal size version fact repeat add isol vertic class small chang answer sparsif upper lower bound graph problem equal sat result degre cross composit prove theorem connect domin set nonblock max leaf span ning tree parameter number vertic general kernel size conp poli proof graph nonblock size domin set size maximum leaf span tree problem connect domin set intern vertic span tree form connect domin set convers connect domin set subtre span domin set domin properti greedili extend span tree entir graph remain vertic leav graph connect domin set size span tree leav will result connect domin set defin polynomi equival relat instanc col rbds let instanc vertex degre class note instanc instanc col rbds equival easi polynomi equival relat suppos instanc col rbds log instanc equival class instanc class vertex degre output constant size instanc label instanc instanc graph bipartit vertex set partit color class label vertic vertex vertex color instanc label vertic arbitrarili creat instanc domin set step sketch figur add vertic rip domin set problem color instanc will rememb color vertic simplic vertex rip color defin rip set uniqu identifi subset log number rang add vertic defin add edg vertic rip connect instanc ensur graph induc exact gij color vertic match color add vertic edg add edg vertic degre vertex ensur minimum domin set cover vertic free dom pair color add vertex set connect vertic color connect vertic color construct choos solvabl input instanc xij idea formal lemma jansen pieters figur sketch vertic exampl construct graph choos simplic color correspond white black figur edg left simplic add log triangl vertic log connect vertic bit equal connect vertic bit equal defin union triangl choos exact vertic domin set group domin automat domin solvabl input instanc final add edg log step ensur vertex contain domin set neighbor domin set impli minimum domin set connect observ lemma domin set domin set size vertic proof suppos minimum domin set vertex domin set replac vertex valid domin set size vertic domin vertic log domin neighbor three vertic log vertex neighbor independ set vertex domin vertic polynomi equival relat ensur isol vertic vertex neighbor safe replac valid domin set size vertic lemma domin set size log log vertic log vertic proof domin set log vertic need neighbor vertic log sparsif upper lower bound graph problem equal sat vertic log vertic set lemma domin set size log exact vertex color proof suppos domin set size log color color color set impli vertic domin vertic set contradict maximum size domin set log left possibl color consid color color exact color exist lemma suppos vertex color domin set set connect vertex domin set domin set number vertic domin contradict maximum size domin set lemma domin set size log exist vertic contain set proof suppos exist vertic lemma color suppos color color exist step construct neighbor vertex contain domin set vertex domin set contradict previous lemma lemma input col rbds size connect domin set size log connect domin set size log input col rbds size proof color rbds size construct domin set vertex add vertex rip add vertex add vertex bit add vertex domin vertic neighbor vertic cover vertic domin set col rbds vertic neighbor log bit represent differ posit step construct vertic connect vertex domin set remain verifi vertic neighbor consid vertex connect vertic color exact contain vertex connect vertic color vertex color contain domin set easi verifi log construct connect prove vertex neighbor chose vertic neighbor step construct jansen pieters vertex vertic contain connect domin set domin set size log lemma modifi choos vertic increas size lemma exact vertic color size log contain combin fact log vertex neighbor exact three vertic contain vertic log defin log log consid binari represent xlog bit represent vertic connect vertic vertic adjac vertic vertic vertex neighbor impli vertex neighbor isomorph graph instanc col rbds size exact vertic instanc graph construct n·t m·t log tmax vertic straightforward construct polynomi time lemma domin set size log input instanc col rbds size connect domin set size logn input instanc col rbds size degre cross composit connect domin set theorem domin set connect domin set general kernel size conp poli sparsif lower bound vertex cover present dell van melkebeek implic parameter solut size theorem implic kernel complex nonblock max leaf solut size exceed number vertic problem kernel edg nontrivi sparsif contradict theorem exist linear vertex kernel nonblock max leaf improv edg conp poli hypergraph color nae sat goal nontrivi sparsif algorithm nae sat prove match lower bound eas present start analyz close hypergraph color problem recal hypergraph consist vertex set set hyperedg hyperedg subset color hypergraph function color proper hyperedg vertic color will hypergraph color refer set hyperedg size correspond decis problem ask hypergraph color theorem hypergraph color parameter number vertic kernel hyperedg encod logn bit sparsif upper lower bound graph problem equal sat proof suppos hypergraph vertex set hyperedg hyperedg vertic reduc number hyperedg chang color status denot set edg exact vertic construct set repres hyperedg enumer edg erk construct matrix row column consid subset size set vertic defin element erj gaussian elimin comput basi column matrix subset column span column space edg eri column contain defin form kernel lemma lovász prove preserv color status lemma uniform hypergraph edg real number element subset partit hold prove correct present kernel lemma proper color proper color proof clear proper color color proper subhypergraph suppos proper color will edg monochromat color hyperedg contain color definit suppos exist monochromat hyperedg erk hyperedg vertic receiv color reorder matrix assum basi column denot column contain basi exist coeffici defin definit jansen pieters size subset exact lemma partit vertic consid partit color vertic edg vertex color fulli contain edg contribut side equat edg remain edg coeffici assumpt contain entir color class loss general contradict bound size kernel consid matrix rank bound minimum number row column rank note hyperedg hyperedg consist vertic kernel encod logn bit folklor reduct theorem sparsif nae sat consid instanc nae sat conjunct claus size vari abl formula rise hypergraph vertex set hyperedg claus vertic correspond liter claus addit hyperedg easi hypergraph color nae satisfi assign formula maximum size hyperedg match maximum size claus number creat vertic number variabl sparsifi variabl instanc nae sat reduc hypergraph vertic appli kernel algorithm theorem easi verifi restrict formula repres hyperedg kernel equisatisfi formula claus sparsif nae sat mention introduct exist linear paramet transform cnf sat nae sat impli sparsif lower bound nae sat dell van melkebeek theorem theorem fix nae sat problem parameter number variabl kernel claus encod logn bit admit general kernel size conp poli conclus classic graph problem grow list problem trivial polynomi time sparsif provabl imposs assumpt conp poli connect domin set prove linear vertex kernel edg nonblock max leaf span tree improv edg conp poli sparsif upper lower bound graph problem equal sat graph problem prove sparsif lower bound defin term vertic color problem ask partit vertex set independ set domin set ask domin subset vertic hamiltonian cycl ask permut vertic form cycl contrast concern sparsif lower bound problem solut edg subset quadrat size exampl sparsif lower bound well studi problem max cut cluster edit feedback arc set tournament difficulti attempt mimic lower bound construct edg base problem construct emb instanc tabl combin cell top row bottom row emb input problem defin term edg subset difficult turn contribut edg incid vertic belong cell correspond instanc input construct interpret evid edg base problem max cut admit trivial polynomi sparsif answer question direct leav open problem complet point reduct vertex cover feedback arc set doubl number vertic impli exist bound vertex cover feedback arc set compress size conp poli problem compress remain elus color set optim kernel size match size minim obstruct problem specif partial order case nae sat kernel claus match fact critic chromat uniform hypergraph hyperedg reason tempt conjectur color admit subquadrat compress critic chromat graph edg kernel nae sat exampl trivial polynomi time sparsif general structur planar guaran teed spars obtain trivial sparsif algorithm problem interest challeng futur work natur problem defin general graph admit subquadrat sparsif refer han bodlaend rodney downey michael fellow danni hermelin problem polynomi kernel comput syst sci han bodlaend bart jansen stefan kratsch kernel bound path cycl problem theor comput sci han bodlaend bart jansen stefan kratsch kernel lower bound cross composit siam discret math han bodlaend stéphan thomassé ander yeo kernel bound disjoint cycl disjoint path theor comput sci marek cygan fabrizio grandoni danni hermelin tight kernel bound problem graph small degeneraci proc esa frank dehn michael fellow hen fernau elena prieto franc rosamond nonblock parameter algorithm minimum domin set proc sofsem holger dell dániel marx kernel pack problem proc soda jansen pieters holger dell dieter van melkebeek satisfi allow nontrivi sparsif polynomi time hierarchi collaps acm michael dom daniel lokshtanov saket saurabh kernel lower bound color acm tran algorithm david eppstein zvi galil giusepp italiano amnon nissenzweig sparsif techniqu speed dynam graph algorithm acm vladimir estivil castro michael fellow michael langston franc rosamond fpt time extrem structur proc acid michael fellow bart jansen fpt character obstruct set connect algorithm kernel quasi order toct lanc fortnow rahul santhanam infeas instanc compress succinct pcps comput syst sci michael garey david johnson comput intract freeman danni hermelin weak composit applic polynomi lower bound kernel proc soda russel impagliazzo ramamohan paturi franci zane problem exponenti complex comput syst sci bart jansen sparsif comput treewidth algorithmica bart jansen stefan kratsch data reduct graph color problem infor mation comput richard karp reduc combinatori problem complex puter comput plenum press lásló lovász chromat number hypergraph linear algebra studia scientiarum mathematicarum hungarica georg nemhaus lesli trotter vertex pack structur properti algorithm math program bjarn toft maxim number edg critic chromat graph studia scientiarum mathematicarum hungarica 