type branch program bound repetit effici comput monoton cnfs igor razgon depart comput scienc system birkbeck univers london igor abstract class cnfs requir exponenti size determinist read branch program comput best knowledg superpolynomi lower bound branch program higher repetit comput class cnfs work attempt progress direct consid class monoton cnfs cnfs sens claus liter occur claus prove exponenti lower bound class determinist branch program class general monoton read time nbps second class general oblivi read time branch program lower bound remain exponenti logn larg constant introduct statement class cnfs requir nondeterminist read branch program nrobp expo nential size represent exampl essenti nrobp comput monoton cnf bound number occurr variabl size exponenti pathwidth primal graph cnf exponenti lower bound easi cnf correspond expand graph natur direct understand complex branch program higher repetit monoton cnfs best knowledg cnfs superpolynomi lower bound determinist branch program repetit higher restrict case branch program allow monoton oblivi determinist work attempt progress direct monoton cnfs consid pad monoton cnfs cnfs claus pad monoton cnf pad liter liter appear claus number occurr rest liter larger hard correspond pad monoton cnfs graph isol vertic vertic degre cnf correspond graph set variabl claus correspond edg liter claus cor respond variabl correspond variabl correspond vertic denot cnf correspond cnf paper consid class cnfs cnf complet graph vertic estalish exponenti lower bound determinist read time monoton branch program determinisitc read time obliv branch program logm number variabl consid cnf larg constant fact order push exponenti lower bound determinist read time branch program establish ponenti lower bound general determinist monoton oblivi read time branch program parit variabl cnf vertex variabl correspond vertic edg variabl correspond edg general determinist read time monoton branch program call vertex edg monoton branch program vembp model vertex variabl allow appear time monoton requir edg variabl requir monoton number occurr limit general determinist oblivi read time branch program requir vertex variabl oblivi occur consist path restrict semant vembp restrict syntact appli path edg variabl constrain refer model vertex oblivi branch program vobp overview proof mention consid class cnfs associ undirect simpl graph graph cnf cnf variabl vertex variabl edg variabl claus class consist cnf complet graph vertic lower bound state theorem order prove theorem introduc graph paramet call fold match width general match width prove lower bound match width fold match width put theorem theorem fold match width cliqu resp theorem graph fold match width vembp vobp exponenti size comput cnf theorem combin theorem order prove theorem associ match essenti disjunct cnf call decis tree main proof theorem state set decis tree match size satisfi assign cnf satisfi element exponenti prove probabilist argument defin probabl space satisfi assign cnf show probabl satisfi individu decis tree match size exponenti small theorem union bound theorem prove show defin function subset length sequenc node vembp comput cnf decis tree match size satisfi assign cnf satisfi decis tree rang function will follow theorem size rang exponenti size domain upper bound number sequenc node function will conclud number node exponenti prove theorem set satisfi assign cnf consist root leaf path vobp conput cnf label set liter subset superposit path standard fool techniqu prove lower bound oblivi branch program identifi node respect vector node coincid appli count argument mention previous paragraph work exponenti lower bound branch program bound repetit well occurr individu variabl restrict total length root leaf path restrict author consid monoton pad cnfs determinist semant obdd special case nondeterminist semant oblivi read time branch program sequenc variabl compu tation path subsequ copi fix permut awar separ branch program bound repetit monoton cnfs monoton pad cnfs awar separ branch program repetit higher cnfs constant length claus nondeterminist read time branch program log log log constant random read time branch program repetit log constant probabl error exponenti small consid cnfs liter negat respect lower bound clear hold monoton cnfs switch sign liter definit monoton nbps awar previous consid monoton nbps bound repetit preliminari paper set liter occurr variabl negat set liter denot set variabl liter occur notat natur general cnfs boolean function set liter repr sent truth assign variabl occur posit liter posit assign true variabl occur negat assign fals exampl assign true true fals variabl repres cnf set liter satisfi claus liter belong claus satisfi satisfi addit satisfi assign notion satisfi assign natur extend boolean function mean truth assign true general terminolog determinist branch program nbps nbp comput boolean function direct acycl graph dag root leaf edg label liter variabl multipl edg allow direct path consist opposit liter variabl occur label edg consist path denot set liter label edg consist root leaf path call comput path connect set liter satisfi assign comput path size denot number vertic well special class nbps impos constraint root leaf path number occurr variabl restrict impos comput path restrict call semant restrict impos root leaf path call syntact remark note comput cnf comput path satisfi extend assign variabl falsifi claus lower bound graph cnf denot monoton cnf set variabl set claus call variabl vertex variabl edg variabl cnf defin type nbps comput cnf type constraint root leaf path vertex variabl occur time occurr edg variabl root leaf path posit branch program monoton edg variabl repetit unbound note constraint syntact appli root leaf path consid branch program call branch program obey constraint vertex edg mono tone branch program vembp note vembp general monoton read time nbps second consid class nbps obey constraint comput path vertex variabl occur time sequenc xsv variabl occur exact time sequenc vertex variabl comput path subsequ xsv note constraint semant appli comput path constraint edg variabl comput path call nbp obey constraint vertex oblivi branch program vobp note vobp general semant oblivi read time nbps readi state lower bound branch pro gram purpos recal cliqu variabl theorem size vembp comput cnf size vobp comput note number variabl cnf larg term number variabl lower bound restat larg clear lower bound remain exponenti log larg constant order prove theorem introduc graph paramet paramet larg cliqu vembp vobp exponenti size cnf paramet larg theorem will follow combin statement paramet general match width prove lower bound read branch program interv sequenc subsequ definit separ sequenc element univers set partit interv suppos disjoint set true emptyset odd iii separ wit interv separ exampl interv wit separ definit graph fold match width sequenc element element appear exact time match separ equival intuit definit sequenc element element occur time partit interv match interv element theorem fold match width proof sequenc vertic vertex appear exact time disjoint subset interv link intermedi element belong element belong element belong element belong element belong claim disjoint set size link proof assum claim true element arbitrarili enumer assumpt link theorem alon maass contradict definit state claim link note match remain separ respect element hard distinct element assum occur order list svc partit interv defin prefix element svi interv element successor element final svc suffix start successor observ svc well defin notic svc empti element notic construct svi vertex link tween intersect svi intersect svi link svi construct svj svj intersect svj svj vice versa conclud svj odd svj svj odd svj svc wit interv separ theorem graph vertic integ fold match vembp implement cnf node theorem theorem vobp impl ment cnf node theorem prove section prove theorem proof theorem pothes theorem satisfi theorem theorem theorem substitut proof theorem vembp uniform root leaf path vertex variabl occur exact time lemma prove appendix lemma vembp comput cnf graph uniform vembp size comput cnf number edg prove theorem uniform vembp lemma assumpt restrict general lemma uniform vembp implement cnf path initi final vertic differ vertex variabl occur occur proof start vertic denot root leaf vertic path path acycl concaten root leaf path suppos occur occur time uniform requir occurr occur time contradict definit vembp definit mcnf xir graph match match cnf consist claus xui xui xui xvi denot set match cnfs mcnf denot set xir stand irrelev definit decis tree definit decis tree direct tree edg orient root leaf leaf node associ element mcnf denot leaf node associ variabl xir denot root leaf path variabl xir occur label leaf node leaf node outgo edg call posit negat edg associ respect liter root leaf path denot set liter associ edg set liter satisfi root leaf path satisfi vertex exampl graph vertic suppos match match cnfs consid decis tree figur label denot posit negat edg tail xui leaf label observ set satisfi liter label root leaf path satisfi hand set satisfi root leaf path liter contain lead falsifi figur illustr desis tree direct path partit subpath subpath prefix suffix vertex vertex vertic partit subpath path vembp comput cnf denot sequenc vertic list order respect vertex vari abl occur exampl sequenc liter occur simpli remov edg variabl replac xui quenc lemma prove respect subsect lemma uniform vembp comput cnf comput path recal comput path consist root leaf path match suppos partit subpath interv wit separ respect vertic decis tree comput path pass satisfi lemma famili decsion tree match size satisfi assign cnf satisfi element proof theorem comput path sequenc distinct intermedi vertic occur order partit subpath suppos match interv wit ness separ separ vector set sequenc vertic length separ vector comput path lemma associ decis tree match size comput path pass satisfi set observ satisfi assign cnf satisfi element comput path definit fold match width match separ svc partit interv wit separ hard partit subpath svi sequenc respect vertic separ vector bound length previous paragraph satisfi satisfi well lemma hand number sequenc distinct vertic length combin previous paragraph theorem proof lemma comput path pass respect partit subpath root leaf path pass respect partit subpath odd denot mix superposit path mix standard fool ing techniqu prove lower bound branch program case vembp techniqu applic direct mix label opposit liter variabl comput path lemma approach condit impos lemma suppos xir variabl xir assign valu mix comput path proof assum contradict variabl cnf occur label edg variabl monoton edg variabl occur negat xir assumpt lemma remain assum assum opposit occurr happen odd pariti subpath contradict comput path occur lemma occur occur contradict assumpt wit separ recal element occur interv wit reason case symmetr lemma prove restrict version lemma will induct basi lemma set liter variabl xir match cnf comput path pass satisfi proof claus xui xui xui xvi path statement lemma satisfi will imm diat impli satisfi match cnf consist claus assum contradict comput path satisfi xui xui satisfi xui xvi mix lemma comput path satisfi xui xui xvi definit deriv contradict show three liter occur definit xui xui clear xui reason proof lemma liter xui occur odd subpath xui occur posit reason xvi symmetr proof lemma prove general statement set liter xir set computa tional path decis tree occur label satisfi lemma will follow special case proof induct xir assum xir xir match cnf satisfi lemma satisfi decis tree singl node assum xir xir previous paragraph appli wise variabl xir recal uniform vertex variabl variabl xir occur compu tation path induct assumpt decis tree paragraph proof respect root decis tree introduct vertex root children posit negat edg remain observ satisfi assum path wit satisfi satisfi path append wit satisfi reason symmetr proof lemma defin probabl space set sat satisfi assign cnf probabl decis tree match size satisfi element sat exponenti small will follow number decis tree match larg ensur element sat satisfi defin probabl space assign observ assign probabl pre cise belong sat space fact sat random assign space chosen procedur vertex variabl choos probabl edg variabl choos probabl chosen choos probabl probabl chosen assign product probabl assign individu variabl choos assign edg variabl hard sat relev reason sat number variabl cnf number edg event probabl space defin subset sat subset variabl cnf prefix set variabl exampl set vertic set prefix set set prefix set set liter prefix set variabl denot event assign prove basic fact event proof fact provid appendix observ set liter prefix set variabl prefix set suppos occur negat lemma observ arbitrari event sat suppos occur negat rest proof essenti probabl satisfi match cnf exponenti small induct extend statement decis tree induct defin general match cnf call match cnf tail cnf set claus partit subset refer match claus tail claus match cnf match claus singleton liter variabl xir denot event consist element sat satisfi bound probabl assign prefix set variabl extend notat claus satisfi liter falsifi negat liter satisfi falsifi retain retain claus resolv denot det set consist retain tail claus retain resolv match claus retain unresolv claus binari claus half claus free claus constrain claus denot rtl rbc rbf rhc rhf respect set retain tail binari constrain binari free half con strain half free claus clear empti set form partit det exampl graph vertic suppos consid cnf clear match cnf tail match cnf claus satisfi falsifi claus resolv det final rtl rhf rbf rbc rhc defin weight weight rbc rbf rhc rhf rtl lemma assign prefix set variabl weight proof induct number variabl cnf number variabl assign suppos number variabl claus retain weight claus satisfi lemma hold con sider case assum number variabl assign greater variabl prefix set variabl clear exist relev claus true tail claus occur claus clear relev claus case analysi demonstr lemma hold type relev case organ three level hierarchi easier reader rest proof enumer case clear case subcas exampl case subcas case case assum relev determin claus weight weight weight induct assumpt lemma weight weight weight clear inequ exceed weight case assum relev claus rtl rtl rtl rtl weight weight weight assum falsifi lemma induct assumpt weight weight reason symmet ric case remain assum relev claus case assum prefix set occur retain resolv rhf clear rhf rhf rhf weight weight weight falsifi lemma induct assumpt weight weight confirm lemma consid case case assum turn binari claus rbc rbf case assum rbc satisfi rbc rbc weight weight note falsifi occur prefix set impli contrad tion assumpt rhc impli rbc rbc rhc rhc consequ weight weight weight combin lemma induct assumpt weight weight weight weight weight quir case assum rbf appli reason previous paragraph observ rbf rbf weight weight observ rbf rbf rhf rhf consequ weight weight weight combin lemma induct assumpt weight weight weight weight weight requir case remain consid case constrain case assum rbc binari free rbc rbc rbf rbf weight wegith resolv rbc rbc weight wegith combin lemma induct assumpt weight weight weight weight weight requir case final assum rhc appli reason previous paragraph observ rhc rhc rhf rhf weight wegith resolv rhc rhc weight wegith combin lemma induct assumpt weight weight weight weight weight requir observ case analysi complet point variabl irrelev claus det relev tail claus det relev match claus det case provid exhaust classif subcas lemma hold proof complet match decis tree tail pair decis tree cnf set claus consist tail claus form variabl occur occur variabl occur label leaf node occur cnfs label leav dst denot event consist assign satisfi lemma proof induct number node assum node associ match cnf match cnf tail clear hard rtl rbc treat set claus role statement lemma lemma account assum node root posit negat children respect subtre root variabl associ definit occur decis tree tail note satisfi assign cnf satisfi assum assign posit edg path wit satisfi prefix start wit satisfi satisfi notic definit label appli union bound induct assumpt account requir proof lemma decis tree match size event consist satisfi assign cnf satisfi clear lemma event consist satisfi assign cnf satisfi element union bound lemma suppos satisfi assign cnf satisfi element contradict definit proof theorem definit vobp sequenc xsv vertex variabl cnf variabl occur exact time sequenc vertex variabl occur comput path subsequ xsv sequenc variabl xsv replac definit fold match width match separ svc partit interv wit separ set assign variabl cnf satisfi condit xui occurr xui xvi distinct sign occur posit occur negat iii variabl xui xui xvi assign posit hard satisfi assign cnf claus belong assign opposit pick comput path hard partit psc subpath psi subsequ svi note equal vobp obey uniform condit sequenc respect end lemma distinct element proof assum opposit distinct element note opposit occurr xui occurr xvi determin xui assum xui occur negat posit respect partit root leaf path pass partit subpath odd observ comput path variabl outsid occurr assum opposit occurr occurr happen odd occurr happen contradict consist notic subsequ svj occur definit occur contradict reason symmetr comput path satisfi claus cnf deriv contradict show satisfi xui xui xvi xui xui clear xui xui belong odd case xui xui simpli verifi previous paragraph xui occur xui verifi symmetr xvi proof theorem lemma observ distinct assign ment variabl xut hard assign ment extend assign assign distinct restrict xut distinct rest reason analog paragraph proof theorem refer miklo ajtai linear time lower bound boolean branch pro gram foc noga alon wolfgang maass meander applic lower bound argument comput syst sci allan borodin alexand razborov roman smolenski lower bound read time branch program comput complex michelangelo grigni michael sipser monoton complex poce ing london mathemat societi symposium boolean function complex stasi jukna georg schnitger triangl freeness hard detect combinator probabl comput alexand razborov lower bound determinist nondetermin istic branch program fundament comput theori intern symposium fct igor razgon read properti branch program cnfs bound treewidth algorithmica appear igor razgon small nondeterminist read branch program cnfs bound treewidth ipec igor razgon obdd cnfs bound treewidth principl knowledg represent reason igor razgon oblivi branch program bound repeti tion effici comput cnfs bound treewidth corr martin sauerhoff random versus nondetermin read read branch program stac annual symposium theoret aspect comput scienc berlin germani februari march proceed proof lemma vembp degre node number neighbour essenti point possibl multipl edg call clean condit true incom edg node unlabel pair node edg unlabel label liter variabl assum clean assumpt restrict general vembp transform clean edg origin vembp comput function node degre greater edg label liter subdivid path replac label clear result vembp implement function origin notic degre number edg violat assumpt decreas induct argu case violat edg transform vembp satisfi assumpt creat addit edg multipl edg suppos multipl edg violat second condit clean subdivid edg label liter result clean vembp edg subdivid suppos comput cnf vertex variabl cnf node denot frz largest number occurr path root call edg relev denot set relev edg rlz relev edg irregular frz frz edg frz frz transform remov edg introduc vertic will refer sake conveni introduc edg label introduc unlabel edg graph result transform properti observ direct inspect observ frz frz edg regular clean set node degre greater vertex variabl node frz frz frz frz rlz rlz lemma vembp comput function proof clear transform preserv monoton edg variabl cnf light statement observ suffici establish occurr root leaf path path construct path includ subpath start defin prefix suffix definit function number occurr frz number occurr frz root path wit frz append root leaf path occurr contradict number occurr frz occurr frz occurr clear occurr total satisfi assign function comput comput path includ comput path previous paragraph path intermedi vertic edg label liter belong construct select result account conclud case comput path set liter subset satisfi assign function comput convers satisfi assign function comput comput path path construct includ path replac subpath edg clear set liter path subset satisfi assign function comput denot rgz irz respect set regular irregular edg vertex variabl lemma irz irz irz irz proof statement observ defin biject relev edg relev edg correspond edg correspond observ regular edg correspond regular edg assum regular statement observ frz frz frz frz correspond edg regular regular edg argument rgz rgz rlz rlz irz rlz rgz rlz rgz irz prove second statement statement addit claim claim node frz frz proof statement observ claim hold hard frz frz establish frz frz root path largest number occurr path frz frz pass prefix root path wit frz frz number occurr smaller irregular edg path transform replac root path number occurr frz path frz frz biject rlz rlz map regular edg regular edg regular edg assumpt biject map claim frz frz frz frz regular addit observ irregular edg correspond regular edg rgz rgz statement calcul second statement proof lemma suppos clean denot var irz irz prove induct irz irz vertic transform vembp relev edg regular variabl irz transform need pick edg irregular variabl appli transform graph lemma irz irz observ clean lemma vembp comput cnf induct assumpt transform irz vertic transform requir irz irz vertic requir observ node vertex variabl root path carri frz occurr assum shortest path violat statement variabl node number occurr smaller frz assum degre neighbour second condit clean vembp number occurr prefix smaller frz contradict minim assum degre larger root path wit frz penultim vertex contradict minim previous case conclud edg irregular contradict irz leaf variabl frz subdivid come edg describ transform add requir number occurr variabl frz clear transform edg subdivid time total number node vembp mnk number edg upper bound term number multipl edg vertic assum multipl edg unlabel label liter safe remov vembp uniform vembp node requir proof proof observ auxiliari claim claim set liter prefix set liter variabl defin individu probabl prs vertex variabl belong negat belong definit prefix set denot prs proof induct number variabl assign number variabl assign variabl cnf case claim definit probabl space assum assign variabl cnf cnf prefix set hard variabl exist clear disjoint union induct assumpt definit prs prs notic prs prsi true liter vertex variabl individu probabl liter edg variabl prefix set liter belong liter belong confirm observ write prsi prs analog prsi prs definit individu probabl clear prs prs requir observ def init condit probabl claim analog observ definit dividu probabl claim proof lemma hard disjoint union law full probabl term condit probabl notic write likewis substitut hand side divid side lemma observ choos appropri consid case 