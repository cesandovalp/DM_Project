find median oblivi bound space paul beam vincent liew mihai abstract prove oblivi algorithm space find median list integ requir time log log bound appli problem determin median odd optim chan munro raman random select algorithm regist store input oro log bit counter onlyo log log pass input bound impli size lower bound read branch program comput low order bit median impli analog conp length log log oblivi branch program introduct problem select find median list valu basic comput problem classic determinist linear time median find algorithm well practic expect linear time random algorithm quickselect taught algorithm algorithm asymptot optim respect time requir substanti nipul order input execut requir abil write linear number memori cell algorithm implement memori locat addit input allow overwrit input memori situat input store separ overwritten brought work memori number bit work memori algorithm read input space natur lead question tradeoff time space requir find median select general munro paterson multipass algorithm yield determinist time space tradeoff bound select small space algorithm number pass log build work frederickson extend rang space bound linear space deriv multipass algorithm achiev time space tradeoff form log log case random order input munro raman averag better upper bound log log pass log log chakrabarti jayram asymptot optim multipass univers washington support nsf grant ccf ccf univers washington support nsf grant ccf work mihai lower bound oblivi algorithm paper dedic memori comput random order input stream analysi appli algorithm perform arbitrari oper execut chan extend idea munro raman yield random median find algorithm achiev time space tradeoff upper bound averag case analyz algorithm discuss access input comparison chan coupl algorithm correspond time space tradeoff lower bound log log random comparison branch program impli lower bound random comparison ram model lower bound select allow multipass access input input access input depend algorithm base decis input order small gap remain main question left open find time space tradeoff lower bound median find algorithm restrict comparison comparison base versus general algorithm comparison base algorithm select natur input consist array log bit integ assum natur altern comparison hash yield effici algorithm comparison base algorithm match time space tradeoff lower bound effici sort time log powerless regim log consid close problem element distinct determin input duplic time space tradeoff lower bound random comparison branch program beaten algorithm hash achiev restrict comparison base algorithm limita tion effici prove tight log log lower bound median find arbitrari oblivi algorithm oblivi algorithm access data order fix number sweep input order data depend lower bound appli decis problem comput medianbit low order bit median input consist integ chosen bound general lower bound mul tipass median find algorithm lower bound appli input depend access input allow hash input data valu work storag organ manipul work storag arbitrari way median comput simpl nondeterminist oblivi read branch program polynomi size guess verifi input integ median express term size time bound oblivi branch program lower bound time bound log logn medianbit complement nondeterminist oblivi branch ing program polynomi size medianbit requir super polynomi size determinist oblivi branch program separ analog conp deriv lower bound reduct communic complex lower bound player find low order bit median joint set input integ bound number round communic complex lower bound best partit model deriv lower bound oblivi algorithm necess bound round deriv bound round preserv reduct oblivi comput best partit communic complex reduct asymptot effici reduct preserv number round essenti effici log bit communic notat hide logarithm factor protocol unbound number round loss effici prevent achiev asymptot optim lower bound fact median function symmetr input impli oblivi branch program lower bound appli case oblivi read branch program ideal extend oblivi larger time bound extend lower bound read branch program oblivi case requir fundament lower bound techniqu hard median problem essenti decis problem median problem log bit output high order bit median easi comput low order bit medianbit hardest produc encapsul difficulti problem current method time space tradeoff lower bound decis problem general branch program read branch program appli nondeterminist algorithm comput function complement appli median easi algorithm preliminari finit set defin branch program comput function branch program connect direct acycl multigraph special node sourc node sink node sequenc input valu output sink node label input edg label symbol correspond input index origin node precis edg sink node label element assum sink node label element time requir branch program length longest path sourc sink space number node branch program branch program level iff path sourc node program length branch program level space branch programb comput function start sourc proceed node graph queri input locat associ node correspond edg reach sink node label sink node output function branch program oblivi iff path sourc node sink node sequenc input indic precis syntact read iff input appear time path sourc sink branch program easili simul sequenti model comput time space bound branch program time space simul random access machin ram algorithm time measur number input locat queri space measur number bit read write storag requir appli simul random ram algorithm random branch program find discuss nondeterminist branch program boolean function simul nondeterminist ram algorithm function comput properti multipl outedg singl node label outedg label input path lead sink path input vector lead sink lead label output program usual version decis problem consid accept path infer output accept consid boolean function will typic assum usual version base accept path consid bound round version determinist random parti communic plexiti player alic bob receiv cooper comput function round protocol maxim segment communic player speak chang distribut parti determinist communic protocol comput error iff probabl output protocol input equal usual lemma distribut minimum number bit communic determinist protocol comput error lower bound number bit communic public coin random protocol comput error parti determinist communic protocol paramet distribut player speak error input distribut player altern turn send messag bit probabl distribut domain statist distanc maxa distanc log denot binari entropi random variabl mutual random variabl con dition random variabl round elimin consid distribut defin player communic problem alic receiv bob receiv find defin input distribut choos pair independ independ choos uniform lemma variant standard techniqu suggest anup rao proof appendix complet lemma assum exist parti determinist protocol paramet exist parti determinist pro tocol paramet intuit lemma independ copi function messag length small fraction copi whichb learn bit thatb forego comput lose probabl correct quadrat differ number bit copi probabl differ inequ relat statist distanc bound round communic complex bit median consid complex communic game set element partit equal alic bob determin bit median figur recurs construct pair hard instanc order partit even median largest element consid number round communic requir length messag log hard distribut median instanc hard instanc defin pair element depend set will includ precis element pair input communic problem random partit pair equal player will automat equal partit set random choos element pair includ construct defin pair recurs paramet recurs pair will depend initi element simpli pair consecut pair consist core pair shell pair shell pair core pair embed recurs instanc valu pair consecut set element place rang figur size problem level recurs decreas determin median relev shell element number median entir array will order statist core integ median will exact median embed subproblem distribut hard instanc will ensur nice form formal distribut dnm hard instanc size generat recurs instanc place shift version insid core choos uniform random choos uniform random shell element includ will ensur median precis median recurs instanc insid core initi recurs continu log base case log element case element chosen random uniform pair element bit median uniform chosen size problem level recurs remain log definit level provid size log log will messag level recurs answer determin general idea lower bound round communic consist bit smaller branch factor will typic recurs subproblem core round elimin lemma precis deriv theorem theorem chosen dnm partit random alic bob determin bit median bound error messag log bit impli log logm constant partit player ensur player skip level recurs insist shell subproblem nice partit player shell set shell pair player receiv random pair inequ probabl pair player high probabl shell element level player level recurs easili level recurs pair total shell associ subproblem fail probabl partit satisfi requir recurs node will prove lower bound partit satisfi properti discard partit error protocol increas neglig induct proof theorem will work induct messag elimin lemma lemma assum protocol median instanc size error dnm log messag size start alic protocol subproblem size error messag size start bob lemma prove theorem induct elimin messag applic remov messag error increas number round number level recurs medianbit subproblem will uniform random bit remain input protocol will communic error will increas tlogn log logm contradict prove lemma appli lemma subproblem core assumpt lemma requir alic subproblem chosen bob subproblem chosen uniform random choic subproblem determin shell element level denot shell element shell element core subproblem note choic relev subproblem function median array median proof lemma proceed stage fix choic subproblem depend input probabl valu input will middl binomi coeffici nice partit pair number shell pair number element error increas log matter chosen input distribut shell element chosen consist random subset fix size fraction size inequ probabl actual number element land deviat probabl deviat log discard valu lead rang minim condit error make uniform fix function close setup lemma alic receiv bob receiv comput function problem lemma requir uniform distribut distribut longer uniform fix will argu uniform fix shell element bob shell element proport precis binomi coeffici divid sum coeffici understand close uniform understand depend binomi coeffici satisfi log assum wlog ratio binomi coeffici ratio valu statist distanc induc distribut uniform distribut iso consid altern distribut problem pick uniform random manufactur condit error distribut increas appli round elimin lemma lemma lemma will increas error oblivi branch program median result essenti param eter read branch program independ deriv ajtai context general branch program proposit sequenc element divid segment length assign segment set main segment number element appear segment satisfi proof subset element occur time appear segment choos set includ uniform random will contribut segment occurr chosen occur probabl expect number element occur segment select fix assign number total length segment element occur segment lemma suppos oblivi branch program size run time comput medianbit distinct input determinist parti communica tion protocol messag bit final bit messag comput medianbit distinct input divid even player proof length sequenc indic input queri oblivi branch program assign segment proposit arbitrarili select subset indic appear input player select subset indic appear input player remain set input indic input assign indic assign distinct valu half element number distinct valu half element fix partial assign restrict remain input valu segment length communic protocol deriv alic resp bob interpret input assign element resp alic will simul branch program execut segment bob will simul branch program execut segment player will continu simul segment held player point player communic node branch program reach layer segment altern player well final output bit total communic construct median problem median element final answer medianbit comput xor ing result low order bit theorem oblivi branch program comput medianbit input time requir size space oblivi branch program requir time log log constant proof appli lemma deriv parti communic protocol send messag log bit comput medianbit input theorem log size branch program space logarithm base base log log constant analog conp time bound oblivi bps corollari oblivi branch program length comput low order bit median requir size size super polynomi log logn hand median comput nondeterminist oblivi read branch program log space lemma nondeterminist oblivi read branch program sizeo comput median integ proof branch program guess median track number element median equal median order check correct sourc sink node node branch program min sourc node queri node multipl outedg label outedg correspond median guess node valu inconsist median outedg contrast corollari lemma impli medianbit comput poli nomial size length nondeterminist nondeterminist oblivi branch program analog conp oblivi branch program length log log oblivi branch program observ lower bound median problem extend case read branch program fact program median assum oblivi loss general oblivi read branch program order binari decis diagram obdd lemma symmetr function input read branch comput oblivi read branch program precis size comput proof node read branch program associ set input indic read path sourc node oblivi branch program replac node yield oblivi read branch program level read input order path skip input path symmetr function path length queri input locat function partial input function symmetr valu input locat corollari corollari read branch program comput medianbit integ requir size medianbit exampl problem show analogu conp read branch program prove analog prop erti read branch program remain open will requir fundament techniqu deriv branch program lower bound approach lower bound general branch program read branch pro gram comput decis problem appli equal well nondeterminist putat exampl fact techniqu work nondeterminist comput explicit techniqu separ nondeterminist determinist putat comput boolean function achiev prove nondeterminist lower bound comput nondeterminist oblivi read branch program comput median log core hard medianbit complement trivial lower bound current time space tradeoff lower bound techniqu powerless comput median conjectur lower bound log log hold find median general oblivi algorithm well oblivi comparison algorithm acknowledg anup rao suggest improv form lemma includ refer ajtai linear time lower bound boolean branch program proceed annual symposium foundat comput scienc york octob ieee ajtai determin versus determin linear time ram memori restrict jour nal comput system scienc august noga alon wolfgang maass meander applic lower bound argument journal comput system scienc beam general sequenti time space tradeoff find uniqu element siam journal comput beam clifford machmouchi element distinct frequenc moment slide window proceed annual symposium foundat comput scienc berkeley octob ieee beam sak sun vee time space trade lower bound random computa tion decis problem journal acm paul beam jayram michael sak time space tradeoff branch program journal comput system scienc decemb paul beam erik vee time space tradeoff multiparti communic complex nearest neighbor problem proceed thirti fourth annual acm symposium theori pute montreal quebec canada manuel blum robert floyd vaughan pratt rivest robert tarjan time bound select journal comput system scienc allan borodin stephen cook time space tradeoff sort general sequenti model comput siam journal comput allan borodin razborov roman smolenski lower bound read time branch program comput complex octob chakrabarti jayram patrascu tight lower bound select random order stream proceed nineteenth annual acm siam symposium discret algorithm san francisco januari societi industri appli mathemat chan comparison base time space lower bound select acm transact algo rithm greg frederickson upper bound time space trade off sort select journal comput system scienc holenstein parallel repetit simplif signal case theori comput jukna razborov savicki wegen versus decis tree read branch program comput complex kushilevitz nisan communic complex cambridg univers press cambridg england york ian munro michael paterson select sort limit storag theoret puter scienc ian munro venkatesh raman select read memori sort minimum data movement theoret comput scienc lower bound branch program siberian advanc mathemat pagter rauh optim time space trade off sort proceed annual sym posium foundat comput scienc palo alto novemb ieee yao optim time space tradeoff element distinct siam journal comput proof lemma proof inspir parallel repetit theorem chosen design public coin protocol player random choos small probabl error joint choos random vector valu consist exact random messag alic consist input distribut close messag player independ public coin random complet input consist coordin case consist messag agre protocol will expect error public coin input creat claim determinist protocol letxi denot random variabl associ compon distribut denot random variabl messag defin random variabl probabl probabl denot random variabl denot variabl remov xkyk definit xiyi xiyi condit independ xiyi wiw xiyi xiw xiyi yiw definit xiw yiw chain rule independ xiyi deriv expect random choic chosen fromd distribut statist close distribut proposit inequ proposit probabl distribut exey exi proposit definit analog bound expect squar statist distanc distribut expect choic sum squar statist dis tanc distribut write dei dei dei appli lemma failur probabl alic bob communic share random string agre sampl expect failur probabl alic bob select alic privat random sampl remaind input bob independ privat random sampl remaind input depend alic bob simul remaind protocol start second messag messag differ distribut result expect error 