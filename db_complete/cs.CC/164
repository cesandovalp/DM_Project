oblivi branch program bound repetit effici comput cnfs bound treewidth igor razgon depart comput scienc system birkbeck univers london igor abstract paper studi complex extens order binari decis diagram obdd call obdd cnfs bound primal graph treewidth class cnfs treewidth equival obdd size lower bound hold obdd determinist semant second result lower bound separ model sententi decis diagram sdds order lower bound structur graph paramet call match width third result match width pathwidth linear introduct order binari decis diagram obdd famous represent boolean function activ investig appli theoret perspec tive theoret thing upper lower bound obdd size realiz class function upper bound establish state cnf treewidth primal graph repres obdd size term parameter complex upper bound degre polynomi depend natur open question upper bound improv fpt upper bound form univers constant question interest area knowledg compil introduct sententi decis diagram sdds fpt upper bound hold sdds share obdd number nice properti good potenti replac obdd applic obdd machineri develop reason obdd investig longer time interest gap upper bound tighten find better upper bound obdd answer question negat demonstr class cnfs primal graph treewidth size equival obdd paper consid follow version motiv obdd extend lower bound hold extend model lower bound follow special case result extend obdd arbitrari fix constant obdd obdd allow variabl occur time comput path occurr order concaten copi fix permut set obdd simpli obdd second allow model determinist rough speak appli restrict branch program restrict appli switch rectifi network third allow restrict semant hold consist path opposit occurr variabl consist path constrain call model nondeterminist semant obdd abbrevi nsobdd fix class cnfs fact class smallest nsobdd size clear lower bound obdd substitut lower bound nsobdd inher sdd respect represent cnf bound treewidth second sult differ fact turn parameter separ essenti set log class cnf repres polynomi size sdds requir nsobdd quasipolynomi size third result main lower bound cnfs consid sake obtain lower bound corr spond undirect graph introduc graph paramet call match width size nsobdd equival consid cnf exponenti match width correspond graph graph match width log time larger treewidth lower bound combin relationship match width treewidth suggest pathwdith third result true pathwidth match width linear result bit scope reason provid paper match width time lower bound interest connect well graph paramet best knowledg paper match width lower bound follow version natur place show match width connect pathwidth overview work obdd consid exponenti lower bound provid function obdd model power ordinari obdd theorem class function polynomi obdd exponenti free binari decis diagram fbdd read branch program incres add comput power demonstr class function comput poli size obdd requir exponenti size obdd interest refin hierarchi involv width branch program propos determin add power obdd theorem demonstr class function comput poli size determinist obdd requir exponenti size fbdds awar exist determinist obdd special case determinist read time branch program exponenti lower bound appli well semant syntact restrict add lot power oblivi requir drop demonstr class function comput poli size semant determinist read branch program requir exponenti size semant replac syntact fact super polynomi lower bound awar semant restrict add power determinist obdd lower bound general direct consid oblivi drop fpt lower bound hold determinist read branch program match width special case maximum match width introduc under tree caterpillar maximum match width linear treewidth linear relationship match width pathwdith establish paper natur context rest paper structur introduc background state lower bound nsobdd separ sdd lower prove proof linear relationship match width pathwidth provid preliminari paper set liter occurr variabl negat set liter denot set variabl liter occur boolean function represent cnf obdd denot set variabl truth assign true call satisfi assign set liter repres truth assign variabl occur posit liter posit assign true variabl occur negat assign fals determinist branch program direct acycl graph dag root leaf edg label liter variabl path consist edg label opposit occurr variabl possibl defin set liter label edg consist path consist root leaf path call comput path function comput defin assign variabl satisfi assign comput path special class determinist branch program defin put restrict properti root leaf path restrict mantic appli comput path syntact appli root leaf path order defin restrict paper addit notat permut variabl sequenc liter variabl occur order variabl occur occurr order occurr order instanc order path direct graph append exampl suppos path repres sequenc vertic definit natur extend decomposit arbitrari number path consid class determinist branch program permut variabl constant putat restrict semant path repres variabl occur sequenc liter label edg order call class branch program nondeterminist semant obdd abbrevi nsobdd notic order impos comput path restrict impos read time oblivi branch ing program case variabl occur path arbitrari path order case order occurr determin concaten copi permut variabl cnf primal graph set vertic correspond variabl vertic adjac claus correspond variabl occur graph tree decomposit pair tree set bag correspond vertic subset bag obey rule union contain connected set induc subtre width size largest bag minus treewidth smallest width tree decomposit path path decomposit pathwidth graph smallest width path decomposit figur graph tree decomposit figur graph tree decomposit width tree decomposit size largest bag lower bound parameter treewidth integ defin class cnfs rough speak base complet binari tree height node asso ciat cliqu size prove treewidth primal graph cnfs class linear bound state main technic theorem proven claim small est nsobdd size cnfs class exponenti depend final interpret lower bound term number variabl treewidth lower bound announc introduct graph graph base cnf denot cnf defin set variabl consist variabl variabl set claus consist claus variabl cnf correspond vertic edg claus correspond edg denot complet binari tree height ctr graph associ vertex cliqu size edg make vertic cliqu associ mutual adjac denot cnf ctr figur figur avoid shade pictur edg cliqu correspond vertic mark circl bold edg circl edg pair vertic correspond cliqu lemma treewidth primal graph proof primal graph ctr vertex edg ctr make vertex adjac end tree decomposit ctr size vertex add vertex adjac vertex bag end associ bag end hard result tree decomposit primal graph size bag width tree decomposit remain remain treewidth ctr consid tree decomposit ctr root tree centr root bag node cliqu ctr correspond addit root vertex cliqu correspond parent observ satisfi connect properti vertex appear bag correspond cliqu cliqu children clear set node correspond bag induc connect subgraph rest tree decomposit properti verifi straightforward conclud tree decomposit ctr size bag width main technic result proof theorem size obdd comput lemma reformul statement theorem term number variabl lemma number variabl size nsobdd comput proof recal node node variabl correspond vertic cliqu variabl correspond edg cliqu addit root node associ variabl connect cliqu cliqu parent node associ variabl total number variabl theorem size nsobdd comput requir lower bound parameter treewdith easili theorem infinit sequenc cnfs treewidth primal graph size obdd comput number variabl fix earlier obdd lower bound special case proof odd consid cnfs consid cnfs lemma treewidth primal graph treewidth requir satisfi class account lemma perform simpl algebra calcul observ nsobdd size lower bound theorem allow separ nsobdd sententi cision diagram sdd fix theorem infinit famili function comput sdds size smallest nsobdd size logn fix proof consid function comput number variabl calcul lemma observ denot log log log log log larg substitut log lower bound provid theorem lower bound log nlogn fix hand larg log log log lemma treewidth primal graph log upper bound size sdd bound requir lower bound parameter match width central concept proof theorem match width match graph set edg edg incid vertex permut set vertic graph prefix vertic order call match width size largest match consist edg liberti sequenc set correct will clear context match width largest match width prefix final match width smallest match width permut exampl consid path vertic adjac match width permut suffix prefix edg match width permut wit partit match width graph determin permut smallest match width graph edg permut match width conclud match width graph main engin establish lower bound theorem theorem state lower bound size nsobdd theorem graph match width nsobdd comput cnf theorem prove order theorem proof theorem addit statement provid lower bound match width graph ctr recal cnf ctr theorem lemma match width ctr readi prove theorem proof theorem theorem size implement cnf ctr match width ctr replac lower bound match width ctr provid theorem requir lower bound proof theorem permut vertic preced preced under permut refer permut correspond prefix match belong prefix exist definit match width assumpt match width set assign variabl cnf satisfi condit xui occurr xui xvi distinct sign occur posit occur negat occur negat occur posit variabl xui xui xvi assign posit statement easi observ observ satisfi assign proof statement note claus xui xui xvi clear satisfi assign posit construct claus xui xui xvi satisfi xui xvi assign posit prove statement way assign variabl xut definit assign extend element element clear distinct prove second statement light statement observ identifi comput path identifi sequenc vertic length distinct sequenc associ distinct light second statement observ will follow sequenc node length number sequenc will follow order defin sequenc vertic associ prepar arbitrari comput path subpath hold variabl occur label label order note requir exist definit nsobdd subpath hold occur occur note exist definit variabl occur variabl occur identifi edg label variabl prefix head variabl occur vertex variabl occur vertex final variabl occur partit arbitrari respect end call separ vector decomposit remark note sat isfi condit separ vector pick arbitrari call separ vector separ vector path sequenc mention proof plan prove distinct path separ vector lemma distinct element separ vector proof assum andq separ vector variabl opposit assign variabl exist assign determin assign ment assign occurr true contradict assum occur negat posit respect decomposit path replac claim comput path proof verifi variabl occur posit negat definit variabl occurr distinct occurr definit decomposit separ vector variabl occur occur subgrpah comput path opposit liter reason variabl occur occur subgrpah comput path opposit liter claim disjoint xui xui xvi proof definit xui occur negat occur posit turn occur posit compos subpath liter xui occur definit decomposit separ vector liter xui occur element negat assumpt liter xvi occur liter xvi occur element negat assumpt xui xvi definit claim definit arbitrari extens satisfi ing assign cnf claim extens con tain xui xui xvi falsifi claus xui xui xvi exist edg contradict initi assumpt separ vector incorrect lemma hold proof theorem lemma second statement observ distinct separ vector putat path separ vector sequenc node clear sequenc requir match width pathwidth will match width graph linear pathwidth will extend notat maximum match size graph denot order vertic denot svi svi svi superscript order clear context denot gsvi order clear context graph set vertic set edg edg exact edg notat mind match width mwsv state mwsv max denot set permut vertic minsv svmwsv recal vertex cover graph set vertic incid edg smallest size vertex cover denot observ bipartit graph partit set vertic indepd set well bipartit graph size smallest vertex cover equal size maximum match mwsv restat mwsv max breadi prove upper bound theorem graph proof path decomposit width vertic chronolog list occur recal bag decomposit size bag defin permut will mwsv will impli theorem definit mwsv smallest number bxi arbitrari permut hard order exist instanc creat arbitrari order vertic suppos vertic order correspond permut creat permuat arbitrari order vertic bxi append vertex cover observ will impli desir statement mwsv definit mwsv combin claim prove will mwsv second inequ follow definit path width pick assum definit equal occur definit function remain consid case contain properti path decomposit definit preserv connected properti occur bag requir definit definit permut smallest set call settl lemma prove lemma permut settl readi theorem theorem graph proof permut thatmwsv smallest vcs settl candid path decomposit width pair path set bag defin rest proof demonstr path composit width amount prove statement satisfi union properti construct satisfi contain properti assum edg empti intersect assum construct satisfi contain properti assum construct satisfi contain properti assumpt hold construct satisfi contain properti satisfi connected properti assum contradict connected properti violat vertex assum smallest subject properti definit notic settl conclud ngj definit ngj claim ngj ngj claim will impli ngj minim neighbour contradict assumpt confirm correct connected properti remain prove claim ngj consequ edg edg ngj confirm claim connected properti previous paragraph width definit mwsv case clear upper bound appli proof lemma bipartit graph set vertic set edg order prove lemma three auxiliari statement proposit smallest smallest smallest proof edg cover cover cover assum smallest conclud smaller contradict definit lemma bipartit graph smallest smallest superset proof assum lemma true assum largest subset lemma hold repres consist vertic incid edg consist vertic incid edg denot observ vcs edg cover cover vertex incid vertex belong definit note edg edg joint belong smallest observ assum opposit assum note edg edg note smallest definit conclud smallest contradict confirm note empti definit element incid edg disjoint definit maxim smallest includ subset element incid edg end contain proposit smallest provid contradict initi assumpt complet proof lemma bipartit graph subset smallest subset smallest proof smallest oth erwis will smallest includ subset defin lemma observ recal proof lemma cover edg convers suppos cover vertex vertic cover edg belong recal smallest includ lemma appli play role play role substitut statement lemma smallest includ employ previous paragraph observ smallest proposit smallest includ requir proof lemma arbitrari smallest construct construct observ theorem smallest includ theorem smallest includ set smallest construct guarante requir properti refer fardid ablayev kamil khadiev extens hierarchi obdd small width russian mathemat han bodlaend rolf hring pathwidth treewidth cograph siam discret math beat bollig martin sauerhoff detlef siel ingo wegen hierarchi theorem kobdd ibdd theor comput sci allan borodin alexand razborov roman smolenski lower bound read time branch program comput complex simon bova florent capelli stefan mengel friedrich slivovski pander cnfs exponenti dnnf size corr adnan darwich sdd canon represent proposit knowledg base ijcai andrea ferrara guoqiang pan mosh vardi treewidth verifi cation local global lpar stasi jukna boolean function complex advanc frontier springer verlag kamil khadiev width hierarchi obdd small width electron colloquium comput complex eccc matthia kraus lower bound depth restrict branch program inf comput igor razgon small nondeterminist read branch program cnfs bound treewidth ipec igor razgon obdd cnfs bound treewidth principl knowledg represent reason martin vatshell width paramet graph phd thesi depart informat univers bergen ingo wegen branch program binari decis diagram siam 