approxim tree spanner breadth search tree ioanni papoutsaki kastelli pediado heraklion crete greec decemb abstract tree spanner graph span tree distanc pair veric time distanc effici algorithm find tree tÂ·o logn spanner graph admit tree spanner paper search space narrow concentr span tree simpl famili includ breadth search tree start vertex case easi find approxim tree spanner factor logn integ effici algorithm receiv input graph vertex return concentr tree logn spanner admit concentr tree spanner algorithm decid sat quasi polynomi time keyword tree spanner low stretch hard approxim span tree distanc introduct tree spanner graph span tree distanc pair vertic time distanc applic spanner varieti area distribut comput communic network motion plan ning robot phylogenet analysi embed finit met ric space graph mention spanner applic approxim algorithm geometr space approxim algorithm solv diagon domin linear system hand effici algorithm decid tree spanner missibl graph present hand prove problem decid graph admit tree spanner complet problem complex status tree spanner problem unresolv complet tree spanner problem famili graph hard determin minimum planar graph admit tree spanner tree spanner problem complet chordal graph diamet diamet odd note refer diamet graph diamet spanner base chapter problem determin graph admit tree spanner diamet tractabl complet problem reduct complet proof build block reduct articl subsect effici algorithm determin planar graph bound face length admit tree spanner present theorem logic exist effici algorithm decid bound degre graph admit tree spanner appear effici dynam program algorithm decid tree spanner admiss bound degre graph appear trivial approxim algorithm appear effi cient algorithm find tree log spanner input graph mit tree spanner present effici algorithm achiev approxim ratio present chordal graph condit graph admit tree spanner altern definit problem decid tree spanner admiss graph span tree graph stretch pair vertic ratio distanc distanc maximum stretch maximum stretch pair vertic minimum max stretch span tree problem mmst find span tree minimum maximum stretch find tree spanner unweight graph admit tree spanner prove approxim mmst problem factor better hard note hold big valu minimum maximum stretch big hard find tree spanner graph admit tree spanner note case minimum maximum stretch approxim addit approxim algorithm find good span tree input graph articl search space restrict concentr span tree input graph definit famili concentr span tree graph simpl easi decid breadth search span tree singl sourc vertex case easi find approxim tree spanner factor log integ quasi polynomi time algorithm sat effici algorithm receiv input graph vertex return concentr tree log spanner admit concentr tree spanner theorem definit lemma general terminolog graph vertex set edg set edg vertic denot subgraph subgraph induc vertic exact vertic edg vertic vertex set neighbor paper consid graph loop edg distanc vertic connect graph denot length shortest path distanc subgraph vertex minx denot final ith neighborhood vertex graph defin definit tree spanner definit graph tree spanner graph subgraph tree pair vertic distanc distanc note order check span tree graph tree spanner suffic examin pair adjac vertic appli techniqu introduc articl search space span ning tree find tree spanner narrow broadest famili span tree techniqu captur definit graph vertic span tree concentr connect graph clear breadth search span tree graph start vertex concentr concentr span tree breadth search span tree start note proposit graph admit tree spanner vertex veric ndg compon proposit hint tree spanner loos concentr vertex exampl cliqu breadth search tree start vertex super polynomi concentr span tree path join endpoint edg vertex distanc vertex distanc stretch distanc return instanc sat set claus claus disjunct exact distinct liter liter boolean variabl negat sat problem decid truth assign variabl instanc claus satisfi note claus variabl variabl negat appear claus claus satisfi truth assign suffic examin instanc claus exact variabl articl assum claus instanc sat exact distinct variabl function set graph set negat integ exist graph integ graph graph graph defin run time algorithm assum algorithm implement determinist ture machin object instanc problem output algorithm encod string exampl instanc sat encod string size instanc sat length encod algorithm run time determinist ture machin implement algorithm time requir input length algorithm run polynomi time algorithm call effici descript reduct algorithm reduct present figur take input instanc sat integ return graph paramet set proof theorem depend number variabl choic crucial relat find bad approxim tree spanner low run time decid satisfi tree spanner graph construct call function figur build block final graph build block tree structur height relat complet problem prove complet problem decid graph admit tree spanner diamet reduct sat turn graph built sake complet reduct stack top build block final graph construct stack build block start path central vertex difficulti find tree spanner local propag creat chasm tree spanner solv difficult tree spanner problem local tree spanner concentr vertic high stack adjac apart tree spanner note essenti prove fact graph admit tree spanner diamet admit tree spanner breadth search tree bigger diamet fact hold search space tree spanner narrow span tree concentr central vertex format build block function figur receiv input instanc sat integ construct graph integ label vertic output graph order distinguish copi graph output graph denot main function call graph figur function input nonempti instanc integ variabl claus variabl variabl jvi jvi claus variabl appear posit return figur function form graph instanc sat build block final graph paramet label build block matrix defin function present equat element array matrix number start note essenti point claus exact variabl vertex set generat distinct vertic vertex set vertic will reduct algorithm glue build block exist construct will attract posit stand variabl claus negat second boolean variabl rise vertex variabl vertex generat third claus vertic generat specif ical vertic presenc variabl distinct vertic generat variabl vertic carri subscript exampl variabl vertic addit remain vertic letter number carri subscript well vertic edg form vertex correspond variabl adjac distinct vertic second claus edg vertic vertic generat claus vertic correspond variabl particip vertic partit group group vertic denot letter group remain vertic vertex group vertic number creat thusli vertic group number vertic group array number figur exampl variabl number vertic group adjac group determin matrix matrix main properti consist three pair complemen tari row exampl row complement second matrix consist row column matrix pair complementari row third edg incid vertic indic stand negat variabl vertex adjac note vertex claus contrast vertex claus figur graph output function claus vertic claus distinct vertic vertic rectangl vertic array dash edg determin matrix edg incid white vertic figur algorithm reduct input nonempti instanc sat integ path identifi identifi claus identifi identifi return figur algorithm reduct form graph instanc sat build block form function figur tree structur hight variabl store number build block layer variabl iter build block layer final variabl iter consecut pair vertic claus build block put build block construct final graph start path length central vertex function input build block index block build block index layer exist structur build block indic layer block layer exact graph produc call input execut algorithm reduct input build block graph attach endpoint primari path identifi endpoint path vertex endpoint vertex layer graph layer command figur step construct build block attach pair consecut vertic previous layer build block attach build block identifi figur count build block layer iter examin build block previous layer number iter claus iter vertic claus build block process add iter block layer pair consecut vertic layer cover continu layer process halt layer complet summari pictur layer graph figur figur output graph algorithm reduct figur three claus involv examin loop second tabl hand side vertic correspond number vertic figur exampl number correspond vertic build block identifi vertex note build block attach pair vertic claus number build block layer hard approxim lemma satisfi instanc sat graph return algorithm reduct figur input admit concentr tree spanner proof truth assign satisfi graph return algorithm tree spanner figur input build block edg appear figur algorithm tree spanner input graph instanc sat truth assign build block variabl jvi jvi claus variabl variabl true return figur algorithm tree spanner construct tree spanner output algorithm reduct figur satisfi instanc sat truth assign satisfi assum build block algorithm input graph describ proof lemma command edg command edg essenti fact hint tree spanner problem solv local prove build block claus variabl form edg incid vertic figur correspond complementari row matrix vertex adjac variabl true adjac vertex figur fact build block claus distanc vertic clear span path number build block layer pictur subgraph induc layer path clear prove induct concentr tree spanner base case equal path central vertex consid build block layer set variabl vertex adjac depend consist exact tree note edg jvi jvi edg subgraph prove concentr observ vertex adjac vertex closer figur graph build block graph return algorithm reduct figur input satisfi instanc sat claus vertic claus distinct vertic truth assign satisfi solid edg belong tree return algorithm tree spanner figur input note variabl true observ distanc pair white vertic vertic set claus claus set three variabl figur vertex adjac vertic variabl appear vertex adjac depend stand negat figur adjac edg consist exact subtre vertex adjac vertex closer variabl form edg incid vertic figur correspond complementari row matrix vertex adjac exact note edg adjac consist exact subtre final vertex adjac vertex closer induct hypothesi subtre graph form tree attach subtre vertex attach tree vertex disjoint except tree attach vertex case tree common vertex subtre concentr breadth search tree start well construct vertex adjac vertex closer layer build block case path attach build block identifi pair pair ver tice claus set conclus fact induct hypothesi spanner order prove spanner suffic examin distanc point edg vertex distanc distanc endpoint edg remain examin edg termin matrix vertex distanc vertex distanc distanc vertex vertex theorem integ function set graph negat integ graph log effici algorithm receiv input graph vertex return concentr tree spanner admit concentr tree spanner algorithm decid sat logn time proof log log graph correspond spanner approxi mation algorithm assum theorem nonempti sat prove algorithm sat figur input return satisfi algorithm sat input nonempti instanc sat number variabl reduct log solv exhaust return appropri spanner build block variabl jvi truth assign satisfi return return figur algorithm sat receiv input nonempti instanc sat decid satisfi constant graph defin algorithm posit integ introduc theorem paragraph proof algorithm reduct present figur algorithm spanner explicit exist assum theorem assum decomposit build block return algorithm reduct necess algorithm sat return input find truth assign satisfi suffici assum satisfi number claus set log output algorithm reduct figur input note nonempti claus distinct variabl log build block vertic count variabl contribut vertex claus vertic build block layer point claus instanc sat exact vari abl encod instanc sat string size encod instanc polynomi bound number variabl log descript run time notat size instanc sat consid number variabl build block attach claus contribut build block number build block layer layer build block vertic block contribut vertic vertic start path increas quantiti order simpler substitut log turn logn vertic lemma admit concentr tree spanner admit concentr tree spanner well algorithm spanner input return concentr tree spanner assum contradict algorithm sat input return exhaust search truth assign satisfi second build block truth assign defin build block satisfi correspond log logn log spanner build block layer prove induct block layer path note concentr path consid layer induct hypothesi build block truth assign defin algorithm sat satisfi claus true set variabl appear claus concentr span tree vertex adjac exact hold neighbor vertic distanc edg vertic vertic distanc second vertic distanc distanc induc connect graph vertex adjac vertic distanc vertic neighbor vertic distanc graph edg vertic distanc vertic distanc induc connect graph concentr span tree vertex adjac exact vertex concentr span tree graph vertex distanc adjac vertex distanc edg determin matrix matrix consist row complementari row order matrix column variabl vertex adjac vertex adjac truth assign true adjac adjac vertex distanc vertex distanc vertex distanc consecut vertic integ distanc distanc pair attach build block layer build block induct step hold build block layer variabl adjac concentr span tree distanc neighbor contradict spanner remain check time complex algorithm sat base number variabl input construct graph take logn time logn vertic fewer build block build block construct effici haustiv search take place small valu algorithm spanner assum effici big input call take logn time final build block examin exam inat effici loop build block take logn time note tree spanner return algorithm tree spanner figur concentr breadth search tree start point proof lemma restrict algorithm spanner return breadth search tree start affect proof theorem hard approxim describ theorem hold breadth search tree start smaller concentr famili span tree vertex need algorithm reduct figur layer layer fill graph smaller build block path length suffic decreas number vertic dramat unrel note follow approach lead hard approxim tree spanner general span tree good tree spanner breadth search tree second result articl hold stretch factor greater equal open problem find low factor approxim tree spanner third function log log log logn log log logn log log refer srinivasa arikati danni chen paul chew gautam das michiel smid christo zaroliagi planar spanner approxim short est path queri obstacl plane algorithm esa barcelona springer berlin baruch awerbuch complex network synchron journal acm octob han rgen bandelt andrea dress reconstruct shape tree observ dissimilar data adv appl math bondi trigraph discret mathemat andrea brandsta feodor dragan hoa oanh van bang tree spanner chordal graph complex algorithm theor comput sci leizhen cai derek corneil tree spanner siam discret mathemat paul chew planar graph good complet graph comput system sci comput ometri feodor dragan ekkehard hler approxim algorithm tree spanner problem unweight graph general chordal graph algorithmica yuval emek david peleg approxim minimum max stretch span ning tree unweight graph siam comput jittat fakcharoenphol satish rao kunal talwar tight bound approxim arbitrari metric tree metric journal comput system scienc special issu stoc ndor feket jana kremer tree spanner planar graph discret appl math intern workshop graph theoret concept comput scienc smolenic castl fedor fomin petr golovach erik jan van leeuwen spanner bound degre graph inf process lett giri narasimhan michiel smid geometr spanner network cam bridg univers press york usa ioanni papoutsaki tree spanner simpl graph phd thesi partment comput scienc univers toronto univers space ioanni papoutsaki tree spanner small diamet corr ioanni papoutsaki tree spanner bound degre graph corr peleg upfal tradeoff space effici rout tabl stoc acm symposium theori comput stoc david peleg eilon reshef low complex variant arrow dis tribut directori journal comput system scienc david peleg jeffrey ullman optim synchron percub siam comput petti low distort spanner acm transact algorithm rabinovich raz lower bound distort embed finit metric space graph discret comput geom daniel spielman shang hua teng linear time algorithm graph partit graph sparsif solv linear system proceed thirti sixth annual acm symposium theori comput stoc york usa acm west introduct graph theori prentic hall 