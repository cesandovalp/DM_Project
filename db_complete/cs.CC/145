space effici algorithm work structur decomposit graph pilipczuk marcin wrochna dynam program path tree decomposit graph techniqu ubiquit field parameter exponenti time algorithm drawback space usag exponenti width work allend theori comput investig space complex explos unavoid idea reparameter cai jued comput syst sci prove question close conjectur longest common subsequ problem parameter number input string admit algorithm simultan time fpt space complet complex landscap sketch pathwidth treewidth allend consid paramet tree depth prove comput tree depth decomposit correspond model determinist machin work polynomi time logarithm space access auxiliari stack maximum height equal depth allend describ hierarchi complex class polynomi time determinist machin restrict access work space mirror classic relat treewidth pathwidth tree depth preliminari version paper appear proceed symposium theoret aspect comput scienc stac author support polish nation scienc centr grant dec work pilipczuk held post doc posit warsaw center mathemat comput scienc support foundat polish scienc start stipend programm institut informat univers warsaw poland introduct treewidth graph paramet measur graph resembl tree intuit graph treewidth decompos part call bag size decomposit call tree decomposit shape tree initi introduc robertson seymour graph minor project treewidth numer applic field algorithm fact problem intract general graph effici solvabl graph small treewidth principl dynam program theorem courcell arnborg explain decis optim problem express monad second order logic solv time graph treewidth size function elementari classic problem vertex cover domin set natur dynam program approach yield algorithm run time typic small constant point view applic dynam program ming procedur work tree decomposit serv critic subroutin complex algorithm subexponenti algorithm deriv techniqu bidimension approxim scheme approach algorithm work tree decomposit analyz paradigm parameter complex width decomposi tion consid paramet nowaday studi problem parameter structur mea sure input treewidth classic topic studi field refer textbook broad introduct survey langer specif limit dynam program tree decomposit space expo nential width practic applic prohibit factor machin simpli space elaps time exceed toler limit focus reduc space complex exponenti time algorithm polynomi cost worsen time complex usag algebra tool prove extrem approach algorithm work tree decomposit graph remain famili virtual progress achiev matter natur question aris reduc space complex algorithm work tree decomposit keep moder worsen time plexiti explicit statement question lokshtanov sketch simpl tradeoff polynomi space complex increas time complex question ask langer earli complet monien sudborough bandwidth constrain problem gottlob conjunct queri bound treewidth allend initi systemat studi satisfact complex small constant path treewidth essenti observ csp problem limit instanc small treewidth pathwidth complet complex class logspac reduct precis input graph equip path decomposit width log fix construct function input size denot case complet class poli time poli space problem admit determinist algorithm work simultan polynomi time space poli bound width tree decomposit complet class nauxpda poli time poli space differ poli time poli space algorithm auxiliari push unlimit sat parameter treewidth pathwidth primal graph exemplari problem sat easili equival logspac reduct lemma paper prefer exemplari hard csp problem size read write access top remark allend focus character semi unbound fan sac circuit character will relev work omit state logk proof work general set theorem log nice complet poli time poli space logspac reduct complet nauxpda poli time poli space logspac reduct feasibl space time tradeoff algorithm work tree path decom posit equival inclus correspond complex class instanc assum concis constant logk solvabl time logn space poli time space s·log time space time space poli poli time space time poli space statement infer treewidth contrast best determin brute forc approach yield construct log time space time time space time space log space s·log time log space manner allend conclud intuit speak achiev better time space tradeoff algorithm work path tree decomposit small width requir develop general techniqu improv tradeoff savitch lipton phrase biggest embarrass complex theori fact theorem improv prove tight allend argu improv contradict rescal variant conjectur contain time space constrain class assumpt precis rescal hierarchi built top class orthogon refer detail consid studi allend definit answer topic invit investig link introduc conjectur well establish complex assumpt contribut longest common subsequ problem lcs alphabet string task comput longest sequenc symbol appear subsequ applic lcs problem comput biolog motiv search faster space effici algorithm classic dynam program solut run time space length string number string practic point view parameter complex lcs parameter hard level remain hard fix size alphabet complet parameter joint nice function function construct lgn decreas simpl simul approach sequenc determinist choic prove time space space context wors theorem target length subsequ breakthrough abboud prove exist algorithm run time contradict strong exponenti time hypothesi space complex concern modest progress achiev best result algorithm barski improv space complex motiv formul conjectur conjectur algorithm lcs work time space poli comput function number input string total input length surpris conjectur close question time space tradeoff algorithm work path decomposit bound width theorem statement hold conjectur impli algorithm work time poli space poli valu width conjectur impli unbound comput function solv time poli space poli valu width conjectur sandwich weaker statement imposs achiev subexponenti space complex keep singl exponenti time complex stronger statement hold allow time complex expon increas arbitrarili slowli grow comput function width prove theorem elberfeld complet result lcs view perspect conjectur equival statement parameter complex imposs determin improv theorem defer definit discuss idea cai jued connect subexponenti complex fix paramet tractabl consid reparam teriz version allow compar question concern time space tradeoff determin time space class concern parameter class complex lcs conjectur impli poli time poli log space class call impli rescal version stronger variant time space second work complement find allend consid graph paramet tree depth graph tree depth equal minimum height root forest ancestor descend closur subgraph forest call tree depth decomposit tree depth graph lower bound pathwidth upper bound treewidth time motiv consid paramet fold advanc uncov wide rang topic tree depth appear natur instanc tree depth play role theori spars graph develop ossona mendez key factor classif homomorph problem solv logspac correspond class graph express power order logic monad second order logic coincid rediscov time context name minimum elimin tree height order chromat number vertex rank maximum number introduc node root leaf path tree decomposit graph second algorithm work tree depth decomposit small height model generic exponenti time divid conquer algorithm approach find small balanc separ graph algorithm way solut interact solv connect compon recurs algorithm natur rise tree depth decomposit graph top decomposit decomposit compon attach subtre maximum total number separ vertic handl moment recurs correspond height decomposit classic divid conquer algorithm includ deriv planar graph lipton tarjan separ theorem reinterpret build tree depth decomposit graph separ theorem run algorithm decomposit import implement recurs algorithm work tree depth decomposit polynomi space instanc algorithm tree depth decomposit depth run time poli space log lemma place poli time log space log space imm diat csp problem fürer algebra transform reduc space usag polynomi problem count perfect match domin set describ approach poli time poli space algorithm domin set detail improv space usag log fourier transform chines remaind theorem reduct space complex conjectur imposs treewidth pathwidth tree depth studi model comput stand low tree depth decomposit order understand differ model treewidth pathwidth consequ mirror theorem prove comput tree depth decomposit exact correspond class nauxsa poli time log space height problem decid determinist ture machin polynomi time logarithm work space access auxiliari stack maximum height stack freeli read machin input tape write access push pop oper theorem nice function complet nauxsa poli time log space poli height logspac reduct comput tree depth path decomposit differ access restrict space machin pathwidth space access freeli tree depth space apart log work buffer organ stack proof theorem approach akatov gottlob prove complet result class nauxsa poli time log space height call main idea regular machin push pop tree rigid shape full binari tree concret structur wrap gadget encod accept regular nauxsa machin motiv work akatov gottlob answer conjunct queri hypergraph exploit kind balanc decomposit problem proven complet general express problem origin databas motiv detail set order reduct work encod accept encod comput push pop perform produc singl atom conjunct queri comput gadget origin proof complet sat assumpt comput polynomi number step essenti bound tree depth gadget theorem present natur complet problem differ theorem work well behav function oppos bound inher problem consid akatov gottlob crucial idea increas work space machin log order perform regular move danger glanc turn increas express power comput model prove interest product work theorem nice function nauxsa poli time log space poli height nauxsa poli time poli log space poli height determin result nauxsa machin observ solv poli time log space log space theorem nice function nauxsa poli time log space poli height poli space theorem work akatov gottlob observ justif assumpt appar log theorem state high unexpect outcom find theorem interest naiv simul configur space nauxsa requir space exponenti appear exponenti blow space complex avoid simpler prove result problem tree depth view valuabl insight comput model nauxsa classic relat treewidth pathwidth tree depth complet mirror hierarchi nauxpda nauxsa class detail conclud answer question akatov gottlob relat nauxsa poli time log space poli log height class final theorem altern view nauxsa comput altern ture machin theorem answer question akatov gottlob point view theorem outlin preliminari prove theorem prove theorem deriv corollari theorem describ algorithm domin set graph low tree depth finish conclud remark discuss standard hard reduct preserv paramet linear defer appendix preliminari reduct complex class languag write logspac reduc complex class consid close logspac reduct handl measur complex compar wide array class bound measur simultan introduc notat complex class describ machin model denot determinist determinist altern ture machin squar bracket bound complex measur describ constant factor list function measur bound underneath function symbol reserv class parameter complex function input size exampl space denot class languag recogniz determinist ture machin space dspace time space denot ntisp write logarithm base log base irrelev poli customari notat complex class state bound famili function singl function defin sum class function famili exampl poli time time log space auxiliari push stack denot auxpda auxsa differ push read top stack read tape written push pop symbol top measur name height maximum height push stack function construct ture machin number unari output unari logarithm space impli poli function nice construct lgn decreas note impli decreas simplic will assum function describ complex bound nice note logspac reduct blow instanc size polynomi closur poli time space reduct poli time poli space exampl equal function poli includ lgk lgn exampl construct artifici exampl polylogarithm bound fail properti structur paramet recal definit treewidth pathwidth tree depth concis will refer certifi structur defin decomposit three paramet definit treewidth tree decomposit undirect graph tree collect set vertic call bag index node vertex bag edg bag vertex set induc connect subtre width tree decomposit defin maxt treewidth minimum width tree decomposit definit pathwidth path decomposit undirect graph tree decomposit path pathwidth minimum width path decomposit definit tree depth tree depth decomposit undirect graph root forest disjoint union root tree biject map vertic node edg ancestor ancestor depth root forest largest number node path root leaf tree depth minimum depth tree depth decomposit technic reason assum tree path decomposit standard method allow prune decomposit size logspac lemma graph problem structur paramet nice function defin decis problem instanc decomposit decomposit width instanc assumpt decomposit input factor complex find problem direct relev work note valid width depth decomposit natur encod easili check logarithm space observ equival logspac reduct reduct trivial revers reduct easili pad isol vertic size chang answer assum nice lgn lgnc impli equival hierarchi class well inequ paramet lemma corollari tree depth decomposit turn path decomposit bag vertex set root leaf path order left scan tree path decomposit trivial tree decomposit tree decomposit allow find small separ recurs build tree depth decomposit yield inequ detail corollari execut effect complet lemma constant graph log inequ certifi algorithm transform respect graph decomposit logspac corollari nice function log proof lemma algorithm inequ trivial third inequ straightforward implement problemat recurs rememb subset vertic circumv issu tree decomposit graph width elberfeld theo rem constant logspac algorithm tree output width tree decomposit full binari tree depth c·log implement fact circuit model restrict logspac easi check tree decomposit width comput logspac note root consid ancestor relat logarithm depth construct tree depth decomposit set vertic top node bag belong observ partit tree replac node path node respect ancestor relat vertex parent vertex child consid map biject assign vertic node arbitrari order claim defin tree depth decomposit consid edg vertic contain common bag bag topmost bag ancestor ancestor relat ancestor relat preserv construct correct membership well calcul fli logspac straightfor ward perform construct logspac depth log assum decomposit depth log equival problem reduct graph problem preserv structur paramet linear paramet integ instanc graph graphh produc reduct satisfi c·pi decomposit width depth transform logspac decomposit width depth hard reduct properti replac vertex edg gadget bound size descript local replac compon design method classic work garey johnson exampl variant sat equival theorem vertex cover domin set defin hard proof defer appendix definit cnf formula primal gaifman graph graph vertex variabl edg pair variabl appear claus incid graph bipartit graph vertex claus variabl edg claus variabl contain claus lemma problem equival logspac reduct preserv structur paramet cnf sat decomposit primal graph sat decomposit primal incid graph problem admit logspac reduct preserv structur paramet problem vertex cover independ set domin set will consid problem sat cnf sat case width depth decomposit primal graph formula theorem bound space reduct will describ ture machin comput cnf formula theorem complet cnf sat observ monien sudborough reduct appli machin bound space yield formula bound width differ set worktap space bound shorter input word read tape input treat differ standard solut modifi machin oblivi simul tape oper head movement independ input reduct encod appropri input symbol exact read employ approach encod read process direct formula provid input comput step copi simpl random access gadget advantag make reduct explicit adapt lemma random access gadget cnf formula includ name variabl input ydlgne output assign name variabl extend satisfi assign satisfi number encod binari variabl requir formula variabl total tree depth log primal graph construct log space proof construct full binari tree variabl depth dlg root leav add claus size requir introduc variabl ydlgne intern variabl level tree children enforc fals claus size variabl enforc assign input variabl extend satisfi assign exact tree depth decomposit logarithm depth full binari tree simpli map variabl path length dlg attach root tree lemma precis ture machin comput encod formula comput gadget crucial theorem reduct involv stack machin will describ fragment comput push pop oper content stack will consid separ read input tape treat differ smaller size content reduct note lemma appli theorem nice log complet poli time poli space logspac reduct lemma comput gadget determinist ture machin alphabet read input tape work tape input word length integ log space output cnf formula formula variabl includ name variabl dlg variabl describ configur symbol work tape head posit encod binari state word length assign name variabl extend satisfi assign iff comput input lead sequenc determinist choic configur configur step space primal graph pathwidth tree depth log appropri decomposit output space bound proof simplic present assum input tape binari alphabet larger alphabet reduc encod symbol block dlg bit appli straightforward modif machin origin proof creat block variabl describ configur step block variabl encod configur addit variabl creat assum machin track indic head input tape indic encod binari pre defin buffer work tape buffer time head input tape move machin updat encod read access input tape formula step input tape creat copi random access gadget lemma input tape gadget input variabl fix bit word reduct second input tape gadget input variabl identifi variabl identifi variabl block encod content respect buffer machin behavior encod claus bind variabl consecut block includ output bit random access gadget exact proof claus verifi correct transit allow step transit chang configur transit move work head symbol allow construct formula satisfi exact assign block describ configur reachabl step space configur describ variabl remain bound pathwidth tree depth construct primal graph construct path decomposit creat bag pair consecut configur block variabl describ configur singl comput step variabl consid random access gadget creat step bag provid path decomposit gadget log log bag provid path decomposit second gadget final decomposit bag construct bag variabl claus bind set variabl contain bag tree depth bound consid decomposit variabl remov width lemma tree depth decomposit primal graph depth log remov variabl variabl reintroduc place atop decomposit order increas tree depth connect tradeoff lcs algorithm work time logn space poli trivial comput unbound function algorithm work time poli space poli lemma algorithm work time lgn space poli comput lemma algorithm work time poli space poli trivial algorithm work time poli space poli log fpoli log log fpoli lemma time noeff space res cal ing conjectur thm fpoli log fpoli thm lemma figur summari relationship statement conjectur relat conjectur statement vari strength concern complex class contain time space tradeoff pathwidth constrain problem sum mariz figur consid algorithm work uniform valu pathwidth complex depend input size pathwidth decomposit notion reduct parameter problem algorithm transform instanc problem paramet equival instanc problem paramet work space log comput func tion elberfeld fpoli log class parameter problem solv determinist time poli space log comput function paramet fpoli class parameter problem solv determinist time space poli comput function class will defin analog express mention articl close reduct reason better fpt reduct fpoli log expect close reduct closur fpt reduct call wnl guillemot elberfeld argu parameter class notat oeff effect variant formal write oeff decreas unbound comput function invers function function max observ cai lemma comput bound invers assum comput appropri bound space logarithm loss general implicit comput tradeoff refer detail complet statement equival conjectur conjectur refer parameter problem lcs paramet input finit alphabet string integ question common subsequ length stress variant alphabet fix size input arbitrarili larg standard fpt reduct lcs hard level fix alphabet size problem remain hard problem complet parameter joint hard parameter perspect point view reduct elberfeld draw work guillemot pinpoint exact complex lcs theorem lcs complet fpoli log reduct conjectur fact general statement parameter complex class corollari conjectur hold fpoli log fpoli describ introduct best determin brute forc approach theorem impli fpoli log contain class common logn relat parameter tractabl bound subexponenti bound tool cai jued parameter problem reparametr extend version defin problem parameter paramet parameter problem paramet input graph path decomposit width question color class time space second argument drop subscript readabl theorem pathwidth constrain problem turn complet determinist comput simultan time space bound theorem complet fpoli log reduct proof contain determinist algorithm solv time poli space log pathwidth graph decomposit input algorithm proceed consecut bag pathwidth decomposit guess color vertex introduc time compar guess color adjac vertic bag moment color vertic current bag posit decomposit rememb log space suffic correct fact color guess exact edg check pair adjac vertic contain bag slgn paramet rescal problem algorithm work time poli space log log time poli space log hard consid determinist ture machin solv problem input size paramet time poli space log comput function instanc problem size paramet reduct lemma will output cnf sat instanc log log log space easili add claus name variabl enforc correct shape initi configur final configur accept formula modifi satisfi ifm accept lemma path decomposit primal graph width log easi verifi addit claus spoil bound lemma reduc instanc instanc path decomposit width log paramet conjectur equival statement fpoli solv determinist time lgn space poli comput function width input path decomposi tion contrast pathwidth tree depth easili observ lemma instanc tree depth decomposit depth solv determinist log space place log class statement weaker conjectur work cai jued parameter complex reparameter problem subexponenti bound complex recal assum instanc appropri path decomposit graph lemma assum conjectur algorithm work time poli space poli valu pathwidth proof suppos contrari solv time poli space poli fpoli log fpoli contradict conjectur assumpt impli solv time k·lgn space k·lgn unbound decreas comput function bound space bound case bound space bound comput function case algorithm solv time space theorem impli fpoli log fpoli weaker statement equival pad argument lemma algorithm work time poli space poli log valu pathwidth proof algorithm solv log polynomi time polylogarithm space theorem log complet impli direct suppos instanc path decomposit width solv polynomi time space logc constant instanc size path decomposit width pad size max isol vertic answer width chang solv algorithm time poli space logc solv time max poli poli poli space max logc poli log statement stronger conjectur contrari cai jued context unabl prove convers lemma arbitrarili close sens lemma conjectur fail arbitrarili slowli grow unbound comput function solv time poli space poli valu pathwidth proof assumpt equival fpoli log fpoli turn impli solv time lgn space poli comput increas function arbitrarili slowli grow unbound comput function loss general assum decreas log unbound comput function consid instanc size path decomposit width assum algorithm run time lgn poli space poli poli assum algorithm run time lgn space poli poli poli equal final pad instanc isol vertic answer width chang size appli assum algorithm pad instanc solv problem time lgn space natur stronger variant conjectur exact correspond note quasi polynomi factor side proof lemma algorithm work time logn space poli valu pathwidth fpoli log log fpoli proof suppos algorithm work time logn space poli unbound decreas comput function consid instanc size paramet equip path decom posit graph width algorithm solv instanc care reader notic floor ceil formal sake readabl proof ignor straightforward detail introduct obfusc main idea time lgn logn space lgn lgn poli bound comput function algorithm solv instanc time space bound comput function case algorithm solv time log space poli impli fpoli log log fpoli convers suppos fpoli log log fpoli algorithm work time lgn logn space poli instanc size path decomposit width comput increa ing function instanc lgn slgn assum algorithm work time logn space poli pad stanc size isol vertic answer width chang oeff pad instanc solv time lgn lgn space poli lgn summari theorem lemma summar relationship conjectur figur weakest statement explor hypothesi complex theori direct reachabl direct graph node reachabl complet problem equival question problem decid polynomi time polylogarithm space simultan weakest statement impli better conjectur exponenti time hypothesi simultan requir bound complex measur time space natur independ usual time complex consider complex assumpt need explor paradigm hope conjectur serv transpar robust exampl restrict comput model allow oper graph node individu bit uncondit tight lower bound prove edmond imposs decid direct reachabl time log space random allow essenti techniqu solv direct reachabl implement model includ depth breadth search well well theorem savitch immerman szelepcsényi breakthrough suggest algorithm run time log space noeff time noeff space theorem equival log solv time space bound strongest statement figur rescal impli time noeff space trivial pad argument revers implic probabl sens proof scale prove algorithm work polynomi space refut stronger statement time noeff space treedepth character ntms small auxilliari stack prove complet theorem small tree depth comput theorem nice function proceed discuss precis model machin defin class nauxsa poli time log space height machin three tape read input tape work tape length log stack tape length tape symbol fix finit alphabet initi work tape stack tape empti fill blank symbol tape head transit machin depend state tripl symbol head access restraint tape input tape read tape work tape read written machin stack tape read freeli written transit machin instruct form pop blank symbol case blank symbol tape replac case pop blank symbol tape replac blank nice poli work tape machin track current height stack head posit machin accept reach accept state sequenc transit problem nauxsa poli time log space height accept number transit bound polynomi nice function plete nauxsa poli time log space height nauxsa poli time log space height logspac reduct impli class equal start show contain exemplifi resourc lemma nice function nauxsa poli time log space height proof input consist graph map vertic root forest assum natur encod valid decomposit check logarithm space determinist algorithm show belong nauxsa poli time log space height algorithm consid tree tree explor depth search root tree root vertex store parent list children suffic maintain identifi current vertex search enter node algorithm determinist guess color encod constant number bit push stack depth search withdraw vertex parent algorithm pop color stack stack list guess color vertic path current vertex root tree verifi correct color guess color vertex check ancestor adjac color retriev stack color vertex guess exact edg tree verifi endpoint color consid endpoint lower machin accept graph proper color clear nauxsa poli time log space height nauxsa poli time log space height step stack oper class machin regular idea origin approach akatov gottlob idea defin regular stack machin valid sequenc push pop oper start end empti stack defin correspond push pop tree order tree tree order impos children node depth search result sequenc singl root node push pop root node attach child subtre identifi root put children root children root languag reg nauxsa poli time log space height recogn ntm log work space auxiliari stack height properti machin push pop block symbol time precis machin pre block size reader imagin push oper simultan push block symbol store work tape posit work tape pop oper simultan pop block symbol stack replac blank symbol stack tape machin decid push pop chang state head move content work tape chang decis push pop transit sole base state transit state belong subset state independ symbol head machin accept input correspond push pop tree oper push pop block consid atom full binari tree depth exact cdlg fix integ moment accept stack empti block push pop describ restrict simul standard machin step introduct addit express power comput model restrict technic adjust will streamlin futur construct intuit restrict easi achiev machin work space simul top symbol stack work tape group push pop block size restrict push pop tree fix shape full binari tree properti will essenti reduc arbitrari problem nauxsa poli time log space height push pop tree will form skeleton graph output reduct order achiev properti technic result akatov gottlob independ elberfeld travers order node order tree linear order place parent children children node occur place descend descend travers order order node visit depth search start root lemma lemma theorem order tree node depth logarithm space comput embed inject preserv ancestor relat travers order full binari tree depth readi prove problem nauxsa poli time log space height recogn regular machin case lemma nauxsa poli time log space height reg nauxsa poli time log space height proof consid machinem place nauxsa poli time log space height modifym compli restrict achiev restrict design work tape buffer simul top stack symbol stack modif top mod symbol store buffer remain symbol store block stack oper stack simul buffer size buffer reach full size modifi machin invok block push oper clear buffer wheneverm pop symbol buffer empti modifi machin copi top symbol stack buffer invok block pop oper simul pop buffer straightforward simul read access stack tape polynomi time overhead run time achiev restrict machin push pop split transit three transit machin verifi symbol head enter state readi push pop addit rememb target state addit oper move head perform stack oper second transit perform push pop note transit depend symbol head head move final third transit machin perform rememb head movement reach target state final concentr restrict add dummi symbol alphabet suppos input length machin modif accept simpl modif assum empti stack accept maximum stack height stack oper block oper time correspond push pop tree block oper consid atom depth size integ lemma exist integ embed tree full binari tree depth exact cdlg modifi accept push pop tree modifi machin manner will track current posit comput push pop tree encod binari string length cdlg add possibl guess determinist moment comput push block dummi symbol chang configur apart updat current posit comput leaf transit allow moment pop top block stack provid consist dummi symbol updat posit chang configur read access stack tape simul ignor dummi symbol head continu brows tape dummi symbol dummi symbol effect ignor comput easi modifi machin accept origin accept accept consid embed push pop tree construct modifi determinist push pop block dummi symbol node imag push pop tree modifi exact know comput nauxsa conveni regular describ exist comput cnf formula wrap rigid shape full binari tree encod push pop tree idea akatov gottlob reduct introduc element copi gadget lemma express target languag lemma suppos reg nauxsa poli time log space height cnf sat proof appropri machin recogn assumpt satisfi restric tion consid input word push pop tree input definit full binari tree depth exact cdlg fix integ depend assum machin work time work tape size log proceed formal descript elabor intuit figur visual euler tour node edg correspond subsequ phase execut comput start root node move edg push move edg pop fix idea construct gadget node wire gadget encod full comput node gadget will three copi comput gadget lemma copi encod part comput subtre withdraw subtre proceed second subtre withdraw second subtre comput depend symbol push stack path root independ guess branch bound lemma tree depth comput gadget will rise natur tree depth decomposit depth graph proceed formal descript reader advis figur read edg tree creat block stack variabl describ valu push stack access lower endpoint upper comput creat block logn variabl describ configur correspond push pop oper concern block stack push push pop pop block full content work tape posit head three tape encod indic binari state creat block logn variabl describ initi final configur init final enforc initi accept configur init requir introduct number claus size precis describ initi configur final verifi final state accept descript state constant number variabl easili impos constant number cnf claus wire group variabl order simul execut edg connect push push pop pop claus enforc valid push pop transit point restrict transit state chang enforc block push push apart state exact hold pop pop easili claus size verifi perform transit avail push pop transit depend sole state restrict verifi origin target state connect push pop transit constant size famili cnf claus variabl describ state final sure valu memor block stack machin intend push stack connect push push verifi claus size valu store stack exact valu posit work tape observ check need pop pop connect manner describ pair configur correspond comput stack oper root note children connect init push pop push figur construct lemma block stack depict light blue block push depict yellow block push depict violet block pop depict pink block pop depict orang block init depict light green block final depict dark green copi comput gadget red squar claus valid push pop oper depict yellow pentagon pop final intern root node parent children connect push push pop push pop pop leaf node parent connect push pop connect block creat copi comput gadget lemma statement lemma simpli statement lemma lgn equal stack height correspond moment height exact time number edg path root current node push pop tree note cdlg input word variabl gadget identifi variabl block connect variabl gadget identifi consecut variabl stack edg path root current node note manner comput gadget input string encod comput simul gadget read access conclud construct formula lemma restrict clear formula satisfi assign iff accept remain construct tree depth decomposit primal graph depth subset variabl consist variabl contain name block init stack push creat map map variabl node map variabl init final block root root node parent map variabl stack addit parent children map variabl push push pop push pop pop point map logn variabl node creat tree depth decomposit start replac node path consist variabl order arbitrarili path organ tree origin node vertex path correspond node parent node path correspond child observ variabl appear claus node block map equal ancestor descend relat easi construct valid tree depth decomposit depth log pre imag node size logn depth decomposit remain consid variabl claus creat comput gadget node lemma gadget tree depth decomposit depth logn log current stack depth observ variabl claus gadget connect variabl block map variabl stack block correspond edg path root tree depth decomposit gadget depth remov variabl contain attach decomposit subtre deepest vertex perform oper comput gadget tree depth decomposit prime graph depth straightforward verifi lemma describ construct perform logspac cnf sat constant depend machin assum nice function cnf sat cnf sat lemma cnf sat hard nauxsa poli time log space height logspac reduct lemma lemma fact closur nauxsa poli log logspac reduct nauxsa poli log poli chain contain class problem reduc logspac nauxsa poli time log space poli height nauxsa poli time poli log space poli height reg nauxsa poli time poli log space poli height poli contain equal conclud proof theorem note unbound polynomi stack theorem impli space unbound determinist logspac machin augment unbound aux iliari stack power observ vinay chandru theorem prove determin result nauxsa poli log poli result lemma solv time poli space log proof input instanc tree depth decomposit abus notat identifi vertic imag tail set vertic path root tree exclud tree set vertic contain subtre root includ proper color tail color boolean denot extend proper color tree tail clear true extend assign three color manner remain proper color tail true child proper color equival conjunct valu root tree recurs procedur comput valu problem reduc comput root tree recurs procedur simpli brows three extens proper color tail call recurs comput children memoiz comput valu note recurs tree stop leav correct algorithm direct discuss previous paragraph space usag concern point algorithm maintain identifi current vertex logarithm length stack call procedur comput data store call requir constant space note memor identifi vertex recomput return subcal space complex algorithm log analyz run time observ pair proper color tail algorithm will call recurs consid extens current color recurs tree will node comput node polynomi time run time algorithm poli nice log space theorem lemma observ poli space close logspac reduct yield theorem character altern machin altern ture machin atm ture machin partit state existenti univers state atm input word accept tree finit tree label machin configur root label initi configur node configur existenti state child label configur reach step transit rule node configur uni versal state configur children leav accept configu ration atm accept input word time space treesiz accept tree root leaf distanc configur space tree node atm prove comput model unifi view complex issu notion treesiz introduc ruzzo allow class common light simplifi contain proof ruzzo nauxpda poli time space space poli treesiz bound time oppos space polynomi treesiz atm lead class correspond small tree depth oppos small treewidth theorem nice function nauxsa poli time log space poli height poli time poli treesiz proof contain hard class theorem contain straightforward algorithm travers tree depth decomposit input graph top existenti guess color encount vertex check compat previous guess univers guess subtre proceed bound time treesiz altern ture machin execut algorithm follow direct bound depth size polynomi tree contain simul altern ture machin nauxsa machin exact simul nauxpda machin theorem configur current path rememb stack write differ log chang previous configur constant size descript consist state direct movement head symbol written worktap observ manner machin logarithm work space retriev need verifi avail transit current simul state top stack current head posit recalcul brows stack appli consecut move symbol worktap head recalcul find stack latest symbol written current posit consequ determinist step machin simul verifi applic transit push stack constant size log chang lead configur existenti guess simul determin univers guess simul choos possibl backtrack pop stack choos possibl describ ruzzo backtrack correspond exact travers accept tree atm run time polynomi poli step describ stack time requir constant number symbol keep log chang domin set graph small treedepth solv domin set count number domin set cardin time poli space log tree depth decomposit depth recal graph set domin set vertex adjac vertex describ algorithm work space poli lemma exist algorithm graph vertic tree depth decomposit depth run time poli space poli output sequenc number domin set cardin proof will work ring polynomi formal variabl algorithm will comput polynomi qix coeffici constitut output tree depth decomposit recal root forest depth abus notat identifi vertic imag introduc notat relat tail denot set vertic path root tree tree denot set vertic contain subtre root includ defin tail tail tree tree chld denot set children function argument domain denot function extend domain map symbol reader allow forbidden vertex function tail defin aixi number element subset tree domin tree vertex function tail defin bixi number element subset tree domin tree vertex note adjac vertic tail set satisfi requir remark valu exact appli möbius transform standard definit state dynam program domin set count set domin subset tail exact vertic domin transform translat subset convolut standard dynam program pointwis product crucial idea proof algorithm complic prefer direct appli transform recurs equat valu observ chld tail tail easi verifi equat hold chld tail chld set tree contribut coeffici partit tree chld set tree contribut coeffici tree comput product formal variabl correct track cardin chld tree comput direct definit edg proceed set equat tail easi verifi equat hold term count contribut set term count contribut set domin subtract term remov contribut set domin observ neighbor domin subtract term will polynomi correspond fact case care domin neighbor will polynomi correspond fact case allow final observ root root set root tree forest algorithm comput algorithm mutual recurs func tion comput valu polynomi comput equat sequenc call procedur comput procedur pute appli equat call recurs procedur comput appli equat call recurs base case memoiz comput valu perform correct algorithm equat note moment space algorithm compos stack recurs call main procedur comput call store partial result comput polynomi case equat will product calcul prefix polynomi degre bound coeffici valu total space usag algorithm final estim run time observ pair tail comput will call comput recurs function extens previous pair tail comput will call comput total number pair impli recurs tree node work node polynomi conclud algorithm run time poli improv space usag algorithm log graph vertic tree depth decomposit depth consid polynomi qix singl variabl integ coeffici equal number domin set cardin exact fact prime number element galoi field mod comput time poli space log recurs comput valu mod mod describ proof lemma recurs level maintain number describ partial sum product multipli partial sum product requir time poli space log procedur hand theorem describ recov exact coeffici interpol chines remaind theorem appli number theoret transform discret fourier transform special field integ mod prime effect techniqu boil evalu polynomi point comput weight sum simpl corollari prime number theorem fact prove explicit bound theorem hand comput small fact product prime strict larger theorem qix polynomi variabl degre integ coeffici satisfi suppos prime number mod comput time space comput poli time log space proof comput mod prime primit element field generat multipl group element polynomi time element test comput take time log space claim mod notic mod mod mod mod mod denot notat depend predic bracket fals true integ mod claim conclud mod integ strict check prime brute forc comput mod time log space fact chines remaind theorem mod turn assum comput brute forc list pair mod prime exact recov logspac polynomi time algorithm chiu theorem effect version chines remaind theorem note simultan store valu mod composit logspac algorithm valu output algorithm recomput fli need remaind algorithm multipli run time space bound algorithm corollari exist algorithm graph vertic tree depth decomposit depth run time poli space log output sequenc number domin set cardin conclus assum concis nice function satisfi constant includ lgk hierarchi graph paramet corollari theorem impli hierarchi complex class nauxsa poli time log space height time poli treesiz space poli time space poli time space nauxpda poli time space space poli treesiz time nauxsa poli time log space log height log log time poli treesiz log space consid function logk class consid name nauxsa poli time log space logk height name dck divid conquer poli time logk space nsck determinist variant class nauxpda poli time logk space equal class name sackquasi yield hierarchi dck nsck sackquasi dck conclud open question stem work complet nauxsa poli time log space height tree depth decomposit depth input lemma hold equival csp problem cnf sat primal incid graph independ set domin set hard class hard independ set solv complex class nauxsa poli time log space height approach lemma algorithm travers treedepth decomposit prefix order nondeterminist guess maximum size independ set fli store stack store intersect path current vertex root decomposit work memori store number vertic theorem independ set graph tree depth decomposit depth solv determinist space log domin set concern demonstr algebra approach lokshtanov nederlof fürer algorithm domin set run time poli space complex log unclear problem domin set graph treedepth decomposit width belong nauxsa poli time log space height observ case theorem solvabl space log achiev space complex log high nontrivi acknowledg author yoichi iwata point independ set graph treedepth decomposit width class nauxsa poli time log space height refer abboud backur william tight hard lcs sequenc similar measur ieee annual symposium foundat comput scienc foc berkeley usa octob ieee comput societi akatov exploit parallel decomposit method constraint satisfact phd thesi univers oxford akatov gottlob balanc queri divid conquer mathemat founda tion comput scienc intern symposium mfcs brno czech republ august proceed lectur note comput scienc springer allend chen lou papakonstantinou tang width parametr sat time space tradeoff theori comput arnborg lagergren sees easi problem tree decompos graph algorithm austrin kaski koivisto määttä space time tradeoff subset sum improv worst case algorithm automata languag program intern colloquium icalp riga latvia juli proceed lectur note comput scienc springer baker approxim algorithm complet problem planar graph acm barski stege thomo upton shortest path approach longest common subsequ set string proceed ieee intern confer bioinformat bioengin bibe octob harvard medic school boston usa ieee comput societi björklund husfeldt kaski koivisto narrow siev parameter path pack corr bodlaend discov treewidth sofsem theori practic comput scienc confer current trend theori practic comput scienc liptovský ján slovakia januari proceed lectur note comput scienc springer bodlaend deogun jansen klok kratsch müller tuza rank graph siam discret math bodlaend downey fellow wareham parameter complex sequenc align consensus theor comput sci cai jued exist subexponenti parameter algorithm comput syst sci cai chen downey fellow structur parameter problem inf comput chen müller hierarchi spawn graph deconstruct plexiti classif conjunct queri joint meet twenti third eacsl nual confer comput scienc logic csl twenti ninth annual acm ieee symposium logic comput scienc lic csl lic vienna austria juli acm chiu davida litow divis logspac uniform theoret informat appl courcell monad second order logic graph recogniz set finit graph inf comput cygan fomin kowalik lokshtanov marx pilipczuk pilipczuk saurabh parameter algorithm springer demain fomin hajiaghayi thiliko subexponenti parameter algorithm bound genus graph minor free graph acm downey fellow fundament parameter complex text comput scienc springer edmond poon achliopta tight lower bound connect nnjag model siam comput elberfeld grohe tantau order monad second order logic coincid proceed annual ieee symposium logic comput scienc lic dubrovnik croatia june ieee comput societi elberfeld jakobi tantau algorithm meta theorem circuit class constant logarithm depth intern symposium theoret aspect comput scienc stac februari march pari franc lipic schloss dagstuhl leibniz zentrum fuer informatik elberfeld jakobi tantau logspac version theorem bodlaend courcell electron colloquium comput complex eccc extend abstract includ proceed foc elberfeld stockhusen tantau space circuit complex parameter problem class complet algorithmica flum grohe parameter complex theori text theoret comput scienc eatc seri springer fomin kaski lokshtanov panolan saurabh parameter singl exponenti time polynomi space algorithm steiner tree automata languag program intern colloquium icalp kyoto japan juli proceed lectur note comput scienc springer fürer space save dynam algebra comput scienc theori applic intern comput scienc symposium russia csr moscow russia june proceed lectur note comput scienc springer garey johnson comput intract guid theori complet freeman garey johnson stockmey simplifi complet graph problem theor comput sci gottlob leon scarcello complex acycl conjunct queri acm guillemot parameter complex approxim longest compat sequenc problem discret optim katchalski mccuaig seager order colour discret mathemat klok treewidth comput approxim lectur note comput scienc springer langer reidl rossmanith sikdar practic algorithm mso model check tree decompos graph comput scienc review lipton theorem question lost letter springer lipton tarjan applic planar separ theorem siam comput lokshtanov mnich saurabh planar path subexponenti time polynomi space graph theoret concept comput scienc intern workshop teplá monasteri czech republ june revis paper lectur note comput scienc springer lokshtanov nederlof save space algebra proceed acm symposium theori comput stoc cambridg massachusett usa june acm zhang poon cai simul undirect connect algorithm uniform jag nnjag algorithm comput intern sympo sium isaac sanya hainan china decemb proceed lectur note comput scienc springer monien sudborough bandwidth constrain complet problem theor comput sci nederlof fast polynomi space algorithm inclus exclus algorithmica ossona mendez sparsiti graph structur algorithm algorithm combinator springer ossona mendez tree depth subgraph color homomorph bound eur comb pietrzak parameter complex fix alphabet shortest common supersequ longest common subsequ problem comput syst sci pothen complex optim elimin tree technic report pennsyl vania state univers robertson seymour graph minor algorithm aspect tree width algorithm rosser schoenfeld approxim formula function prime number illinoi math mar ruzzo tree size bound altern comput syst sci savitch relationship nondeterminist determinist tape complex comput syst sci vinay chandru express nondeterminist auxiliari stack tomata relat treesiz bound altern auxiliari pushdown automata foundat softwar technolog theoret comput scienc tenth confer bangalor india decemb proceed lectur note comput scienc springer reduct preserv structur paramet captur structur depend reduct uniform proof definit borrow chen müller tree decomposit limit tree allow edg cover adjac bag turn general better properti definit graph deconstruct famili subset call bag vertex bag edg endpoint contain adjac bag vertex subset connect width deconstruct maximum size bag union adjac bag observ reduct output graph deconstruct input graph incid graph input formula constant width guarante reduct preserv structur paramet lemma logspac algorithm graph deconstruct width decomposit width depth output decomposit width depth proof deconstruct width treewidth pathwidth observ tree path decomposit width tree bag defin valid decomposit width tree depth defin tree depth decomposit depth creat set node place vertex lowest common ancestor observ definit deconstruct path connect vertic common ancestor lowest common ancestor vertex set impli modifi replac node path node defin biject vertic ofg node tree map vertic inmt node path replac order modifi decomposit clear depth check defin valid tree depth decomposit consid edg definit deconstruct adjac equal vertic inh ancestor vice versa assign setmt ancestor assign setmt ancestor ancestor vice versa ancestor vice versa reduct complet graph problem introduc compon bound size place edg origin graph general attach small compon cliqu origin graph lemma reduct preserv structur paramet graph vertex set subgraph induc denot graph vertex set edg set write lemma induc subgraph connect compon vertic neighborhood cliqu constant decomposit comput decomposit width depth larger logspac proof tree depth decomposit vertic cliqu map node fulli order ancestor relat simpli connect compon examin placement cliqu tree depth decomposit attach vertic path length lowest node cliqu map manner creat tree depth decomposit depth larger input tree depth decomposit fact cliqu fulli contain bag decomposit lemma connect compon find bag vertic cliqu creat copi bag vertic straightforward arrang bag decomposit manner construct decomposit width larger origin decomposit three paramet trivial implement describ procedur logspac readi standard reduct exampl complet problem prove equival hard set lemma restat problem equival logspac reduct preserv structur paramet cnf sat decomposit primal graph sat decomposit primal incid graph problem admit logspac reduct preserv structur paramet problem vertex cover independ set domin set proof reduct standard descript concis will straightforward verifi implement logspac trivial check will verifi lemma structur paramet preserv cnf sat primal graph sat primal graph replac claus length claus variabl primal graph origin formula primal graph formula graph vertex set edg set union edg set construct connect compon size maximum claus size origin formula neighborhood connect compon cliqu claus induc cliqu primal graph lemma max appropri decomposit construct decomposit logspac subgraph decomposit sat primal graph fix sat incid graph formula bound follow lemma connect compon singl vertic sat incid graph fix sat primal graph primal graph natur width deconstruct incid graph formula variabl formula creat bag claus formula creat bag variabl contain claus easi verifi deconstruct sat primal graph fix cnf sat primal graph trivial sat incid graph reduct garey johnson stockmey creat pair adjac vertic variabl formula variabl gadget vertex subgraph claus claus gadget claus three edg connect gadget variabl occur claus singl triangl creat vertex connect vertic variabl gadget graph creat easili width deconstruct incid graph bag correspond vertic bag triangl sat primal graph creat three variabl claus vertex input graph describ exact variabl correspond vertex true edg add three claus size describ true variabl correspond endpoint label endpoint easi primal graph width deconstruct origin graph origin vertex creat bag correspond variabl sat incid graph independ set creat adjac vertic variabl variabl gadget triangl claus claus gadget claus gadget label vertic triangl liter occur claus connect vertic correspond liter claus gadget input formula satisfi independ set output graph vertic variabl claus total output graph trivial width deconstruct incid graph input formula variabl claus creat bag correspond gadget independ set vertex cover graph number output vertex cover domin set graph number subdivid edg output bound follow lemma connect compon singl vertic 