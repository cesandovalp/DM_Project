polynomi fix paramet algorithm case studi longest path interv graph archontia giannopoulou georg mertzio rolf niedermei abstract studi design fix paramet algorithm problem solvabl polynomi time main motiv effici algorithm problem unattract polynomi run time focus fundament graph problem longest path undirect graph find maximum length path longest path hard general solvabl time vertex interv graph solv longest path interv graph parameter vertex delet number proper interv graph time notabl longest path trivial solvabl linear time proper interv graph paramet approxim factor linear time general perspect parameter complex analysi enabl refin understand effici aspect polynomi time solvabl problem classic parameter complex analysi hard problem keyword fix paramet algorithm preprocess data reduct polynomi time algorithm longest path problem interv graph proper interv vertex delet set introduct parameter complex analysi flourish field deal exact solvabl hard problem key idea lift classic complex analysi root versus phenomenon dimension multi dimension perspect key concept fix paramet tractabl fpt natur success approach limit intract hard problem convinc appropri parameter polynomi solvabl problem shed light problem solvabl linear time classic fpt algorithm help illumin hard problem solvabl polynomi time nutshel credo leitmotif paper fpt insid interest explor fit leitmotif scatter literatur systemat refer exploit toolbox parameter algorithm design chang fpt insid wider foot parameter algorithm design techniqu data reduct kernel simpl illustr exampl consid maximum match problem buss kernel standard knowledg parameter algorithm appli polynomi time match algorithm difficult deriv effici algorithm graph vertic comput match size time sake complet detail algorithm formal general propos scenario problem instanc size exist time algorithm aim identifi appropri paramet deriv algorithm time complex depend refin class fpt defin polynomi bound function class fpt problem solvabl time arbitrari exponenti func tion note strong contrast fpt algorithm hard problem function polynomi motiv refin complex class preliminari confer version work appear proceed intern symposium param eter exact comput ipec patra greec septemb partial support epsrc grant warsaw center mathemat comput scienc institut informat univers warsaw poland email main paper prepar author affili school engin comput scienc durham univers school engin comput scienc durham univers email institut softwaretechnik und theoretisch informatik berlin germani email introduc polynomi function class fpt polynomi fix paramet tractabl problem solvabl time constant depen denci complex paramet polynomi paper focus attent practic attract subclass fpt polynomi linear fix paramet tractabl fpt fpt exampl algorithm sketch maximum match parameter solut size yield contain class fpt attempt systemat follow leitmotif fpt insid forward three desir algorithm properti run time polynomi depend paramet run time close linear paramet constant improv exist high degre polynomi time unparameter algorithm paramet good approxim comput effici prefer linear time arbitrari paramet valu addit direct explor focus problem best upper bound time complex polynomi high degre higher work discuss previous work graph problem fit leitmotif fpt insid exist work topic string match xpath queri evalu xml databas linear program solv complex polynomi time algorithm easili tune respect specif paramet reduc complex paramet bound instanc vertex edg graph nonneg edg weight log time algorithm comput shortest path adapt log time algorithm number distinct edg weight refer addit motiv quest explain effici shortest path heurist road network algorithm slow rout applic highway dimens introduc parameter help rigor proof qualiti heurist altogeth work shortest path comput despit quasi linear time algorithm adopt parameter view practic interest maximum flow comput constitut applic area fpt insid log time maximum flow algorithm present graph planar delet ing cross edg notabl assum embed cross edg input time maximum flow algorithm develop genus graph sum edg capac assum embed paramet input final remark multitermin flow wiener comput exploit treewidth paramet assum correspond tree composit graph public depend paramet exponenti contribut paper illustr potenti algorithm challeng pose fpt insid framework clear fpt insid exampl focus longest path interv graph solvabl time deriv fpt algorithm appropri parameter satisfi three desir algorithm properti describ longest path problem ask undirect graphg comput maximum length path ing general graph decis variant longest path complet fpt algorithm design contribut parameter algorithm design toolkit techniqu color code random techniqu well algebra approach longest path solvabl polynomi time trivial graph class smaller graph class year ago longest path interv graph solv polynomi time provid algorithm run time algorithm extend run time larger class cocompar graph lexicograph depth search ldfs approach notabl longest path proper interv graph comput trivial linear time algorithm connect proper interv graph hamiltonian path consequ class interv graph proper interv graph behav differ natur parameter longest path interv graph size minimum proper interv vertex delet set minimum number vertic delet proper interv graph parameter exploit distanc trivial sens paramet measur input instanc trivial solvabl special case turn comput approxim time interv graph vertic edg constant factor approxim provid polynomi fix paramet algorithm run time prove longest path interv graph class fpt parameter size minimum proper interv delet set develop algorithm introduc data reduct rule interv graph reduct shrink size specif vertex subset call reduc weak reduc set proper interv delet set interv graph appropri decompos graph collect reduc weak reduc set appli reduct rule interv graph weight weight vertic special properti call special weight interv graph paramet case notabl reduc size vertic fix paramet algorithm paramet comput time maximum weight path special weight interv graph note maximum weight path special weight interv graph direct map longest path origin interv graph parameter algorithm comput longest path initi interv graph time turn attent longest path interv graph sake complet buss kernel maximum match problem kernel effici algorithm easili deduc arbitrari graph vertic comput match size time final conclud discuss contribut provid outlook futur direct notat consid finit simpl undirect graph graph denot set vertic edg graph weight weight function vertic edg vertic graph denot case adjac neighborhood vertex set adjac vertic cardin degre deg subset denot denot subgraph induc vertex set defin set induc independ set resp cliqu resp pair vertic vertex cover independ set graph write induc subgraph match graph set edg common vertic graph interv graph vertex biject assign close interv real collect interv call interv represent interv graph proper interv graph admit interv represent call proper interv represent interv graph subset proper interv delet set proper interv graph proper interv delet number size smallest proper interv delet set final posit integ denot data reduct interv graph data reduct interv graph reduct shrink size collect vertex subset kind call reduc set produc weight interv graph second reduct appli arbitrari weight interv graph shrink size collect kind vertex subset call weak reduc set produc smaller weight interv graph reduct retain invari maximum path weight proof invari base crucial notion normal path interv graph vertex order character interv graph appear number paper includ lemma graph interv graph order call endpoint order rulu figur forbidden induc subgraph claw interv graph proper interv graph interv represent remaind paper assum interv graph vertic edg input interv represent endpoint interv sort increas loss general assum endpoint interv distinct vertex denot interv correspond left endpoint assum endpoint order vertic interv represent set denot interv represent induc interv vertic vertic consecut respect vertex order vertex set write final denot span interv min max well interv graph proper interv graph free includ claw vertic figur induc subgraph worth note best knowledg unknown minimum proper interv delet set interv graph comput polynomi time uniqu forbidden induc subgraph vertic appli generic algorithm arbitrari interv graph vertic comput proper interv delet set minimum size fpt time poli prove theorem approxim minimum proper interv delet number interv graph comput effici theorem interv graph size minimum proper interv delet set proper interv delet set size comput time proof set vertic induc interv represent figur resp neighbor vertex leftmost endpoint resp rightmost left endpoint represent min max note set induc describ time algorithm iter detect induc remov vertic current graph execut algorithm maintain set mark vertic vertex mark remov graph previous iter initi vertic unmark algorithm process vertex arbitrari order mark previous iter algorithm ignor proceed vertex unmark algorithm iter vertex comput vertic min max case algorithm defin algorithm iter vertex check set induc detect vertex induc mark vertic add vertic set algorithm proceed process vertex easi check vertex process algorithm deg time vertic process time total algorithm termin process vertic return comput set quadrupl mark vertic note quadrupl set clear proper interv delet set induc addit detect quadrupl set induc initi interv graph minimum proper interv delet set vertex quadrupl summar note vertic induc claw interv graph interv repr sentat interv proper includ figur convers true exist vertic particip claw definit interv graph interv represent semi proper vertic particip induc claw interv represent graph effici transform semi proper represen tation prove theorem remaind paper assum preprocess step appli theorem preprocess interv represent semi proper interv represent comput time proof proof theorem algorithm comput vertex vertic min max algorithm defin algorithm iter algorithm iter current interv represent vertic lvt algorithm process vertic order algorithm increas endpoint ivi point appropri small algorithm choos valu perform oper adjac introduc interv represent remain represent interv graph note algorithm effici implement time total explicit comput valu endpoint interv assum increas sort initi scan left map biject integ increas endpoint ivi point describ store vertic order link list endpoint process deal pair vertic interv represent scan interv endpoint left map biject integ map place endpoint rvt order clear time algorithm iter current interv repr sentat vertic rvt algorithm process vertic order algorithm decreas left endpoint ivi point appropri small algorithm choos valu adjac introduc perform oper interv represent remain rep resent interv graph algorithm effici implement time total explicit comput valu descript previous paragraph denot interv represent perform oper denot endpoint order interv easili check initi represent direct construct vertic induc comput vertic vertic time visit vertic deg time algorithm endpoint interv assum sort increas order edg check time resp check resp check total run time algorithm normal path interv graph reli notion normal path refer straight path notion extend greater class cocompar graph normal path analysi data reduct well algorithm impos monoton properti path inform vertic normal path appear left fashion endpoint order graph path write preced definit interv graph endpoint order path normal leftmost vertex leftmost vertex lemma interv graph interv represent path exist normal path provid properti normal path interv graph will observ interv graph normal path vertex vertex normal path observ interv graph normal path vertex lemma interv graph normal path proof proof contradict assum pair vertic assum loss general distp maximum distp denot distanc vertic path observ vertex predecessor note distp distp suppos normal vertex path contradict suppos case lemma contradict assumpt recal distp distp contradict assumpt distp maximum complet proof lemma lemma interv graph normal path proof assum contrari observ vertex predecessor normal neighbor notic neighbor summar lemma contradict assumpt normal lemma interv graph interv represent proper interv represent normal path proof normal path lemma assum contradict assum observ vertex notic lemma contradict assumpt proper represent normal notic prove contradict lemma lemma prove prove claim contradict notic hold proper interv contradict assumpt predecessor complet proof lemma lemma interv graph normal path vertex hold proof contradict assum lemma normal vertex contradict lemma interv graph normal path proof assum lemma contradict assumpt normal vertex lemma interv graph normal path vertex proof normal remain prove prove assum contrari contradict assumpt normal contradict assumpt normal lemma assum contradict exist vertex loss general assum vertex vertex denot predecessor vertex path normal contradict vertex data reduct data reduct interv graph reduct rule appli data reduct interv graph weight interv graph weight vertic maximum weight path equal greatest number vertic path theorem introduc notion reduc set vertic properti essenti reduct rule definit weight interv graph interv represent set reduc satisfi condit induc connect proper interv represent span hold intuit reduc set reduc set longest path vertic lemma longest path set vertic appear consecut lemma reduc number vertic longest path chang total weight replac vertic singl vertex weight reduct rule observ will technic lemma remaind paper observ condit definit reduc set weight interv graph observ easili verifi consid proper interv represent observ weight interv graph interv represent reduc set hold observ proper interv graph proper interv represent consecut vertic order connect lemma weight interv graph weight function reduc set path maximum weight proof path maximum weight reduc set loss general assum lemma normal path assum exist consecut vertic vertex order case will augment path vertex contradict maxim assumpt induc definit connect proper interv represent observ suppos notic path path greater weight contradict maxim assumpt vertex assum contrari lemma contradict reduc set definit lemma impli lemma impli exist path greater weight contradict maxim assumpt suppos notic path path greater weight contradict vertex lemma case suppos note reduc set induc proper interv represent definit consecut observ impli final assumpt contradict reduc set definit case exist path greater weight contradict maxim assumpt lemma weight interv graph weight function reduc set path maximum weight exist path vertic appear consecut proof path maximum weight denot loss general assum lemma normal induc proper represent ofg definit lemma impli vertic appear order vertex order path observ impli uiui denot vertex suppos contradict vertex successor assum lemma izi iui reduc set definit contradict recal induc proper interv represent min max span uiui lemma impli suppos exist vertex span reduc set assumpt definit contradict prove path vertic appear consecut complet proof lemma auxiliari technic lemma will prove correct reduct rule theorem lemma interv graph interv represent reduc set graph replac span remain reduc set proof vertex span denot interv represent replac span note induc connect proper interv represent reduc set assumpt prove condit definit span assum reduc set span span span span reduc set contradict span prove condit definit complet proof lemma lemma posit integ weight interv graph interv represent reduc set graph replac interv span maximum weight path maximum weight path proof assum maximum weight path loss general lemma assum normal lemma notic path suppos lemma path vertic appear consecut notic replac subpath consist vertic singl vertex path path weight assum maximum weight path path suppos aim suppos lemma impli span contradict remain lemma span span contradict impli path replac vertex path weight equal weight path weight definit reduc interv graph weight interv graph fewer vertic prove theorem longest path correspond maximum weight path reduct rule data reduct interv graph interv repr sentat proper interv delet set set vertex disjoint reduc set weight interv graph induc weight interv represent deriv replac interv singl interv span weight interv receiv weight theorem prove correct reduct rule theorem posit integ interv graph weight interv graph deriv reduct rule longest path vertic maximum weight path proof construct graph reduct rule sequenti replac time interv set interv appropri weight make replac set maximum weight path graph lemma equal maximum weight path graph replac vertex set set remain reduc graph lemma iter replac set eventu weight graph maximum weight path equal maximum number vertic path origin graph lemma prove weight interv graph interv graph appli reduct rule properti properti will exploit corollari crucial deriv special weight interv graph definit lemma interv graph proper interv delet set set vertex disjoint reduc set suppos span span distinct set weight interv graph reduct rule proper interv delet set partit set independ set proof defin note set form partit set prove independ set note reduct rule vertex correspond set correspond interv span interv represent graph span span distinct set distinct vertic induc independ set second prove suppos exist independ set recal construct span reduc set span definit contradict construct prove proper interv delet set suppos proper interv graph induc vertex contain induc subgraph contradict proper interv delet set assumpt vertex denot vertex degre suppos three vertic contradict prove suppos denot leav exist reduc set ivi span span exist vertex uiv defin observ belong origin graph ivi ivj izi ivi izi izj independ set vzi induc contradict proper interv delet set assumpt proper interv delet set second data reduct second data reduct appli arbitrari weight interv graph weight vertic reduct rule prove theorem maximum weight path weight interv graph maximum weight path introduc notion weak reduc set vertic properti need reduct rule definit weight interv graph interv represent set weak reduc satisfi condit induc connect proper interv represent note condit definit appli case induc cliqu observ state observ weight interv graph interv represent weak reduc set cliqu max min intuit weak reduc set weak reduc set longest path vertic lemma proper interv delet set path maximum weight set appear vertic interrupt time vertic path min vertex maxim subpath vertic lemma reduc number vertic maximum weight normal path chang total weight replac vertic min vertic reduct rule vertic weight total weight sum lemma weight interv graph weight function weak reduc set path maximum weight proof path maximum weight weak reduc set loss general assum normal path lemma suppos contradict exist consecut vertic vertex order case will augment path vertex contradict maxim assumpt observ induc cliqu suppos notic path path greater weight contradict maxim assumpt vertex prove notic lemma vertic weak reduc set definit lemma impli lemma impli complet argument exist path greater weight contradict maxim assumpt suppos notic path path greater weight contradict vertex lemma case suppos note weak reduc set induc proper interv represent definit consecut observ impli final assumpt vertic weak reduc set definit contradict case exist path greater weight contradict maxim assumpt readi second data reduct prove theorem data reduct maintain maximum weight path reduct rule second data reduct weight interv graph weight function interv represent proper interv delet set final famili pairwis disjoint weak reduc set recurs defin graph interv represent replac interv min copi interv isi span equal weight min interv remain unchang final note construct interv represent reduct rule perturb endpoint min copi interv isi span endpoint remain distinct min newli introduc interv induc proper interv represent observ direct definit graph lemma observ set weak reduc set prove lemma weak reduc set maximum weight path set rewritten path appear vertic interrupt time vertic path min vertex maxim subpath vertic prove lemma provid auxiliari lemma lemma interv graph interv represent weak reduc set graph replac span remain weak reduc set proof vertex span denot interv represent replac span note induc connect proper interv represent weak reduc set assumpt prove condit definit assum weak reduc set assumpt span vertex weak reduc set prove condit definit lemma weight interv graph weight function interv represent proper interv delet set famili pairwis disjoint weak reduc set graph reduct rule final path maximum weight exist path vertic min vertex maxim subpath consist vertic proof path maximum weight denot loss general assum lemma normal observ yield weak reduc set induc proper represen tation definit lemma impli vertic appear order vertex order path observ impli uwuw denot vertex note proof lemma izw iuw vertex weak reduc set definit graph prove independ set contradict assum exist zwzj uwzw uwzj successor normal path appear order vertex order path successor lemma impli lemma predecessor contradict independ set assum contradict exist vertic note recal recal independ set vertic form independ set induc notic construct reduct rule vertic vertex appear replac weak reduc set denot weak reduc set correspond vertex defin resp denot resp weak reduc set correspond vertex resp resp defin resp observ exist vertex exist vertic note definit form independ set vertic form independ set induc contradict assumpt proper interv delet set complet proof vertex appear second proof set induc cliqu note lemma impli lemma prove suppos exist note weak reduc set induc proper interv represent definit observ assumpt final choic weak reduc set definit contradict assumpt final set induc cliqu vertex set set induc cliqu interv point complet second proof third proof exist path vertex maxim subpath consist vertic defin notic second proof set induc cliqu path choic proof exist path empti subpath con tain vertex maxim subpath consist vertic subpath clear vertex maxim subpath consist vertic subpath vertex maxim subpath consist vertic clear vertex maxim subpath vertic complet proof lemma auxiliari technic lemma will prove correct reduct rule theorem lemma posit integ weight interv graph weight function interv represent weak reduc set final graph replac min copi interv ivj span weight min maximum weight path maximum weight path proof denot induc proper interv represent observ max min assum maximum weight path defin denot min path assum assum loss general augment path greater weight miss copi span copi span contradict maxim assumpt lemma assum loss general normal denot set predecessor successor vertic path consid vertex predecessor successor vertex span assum initi graph recal max min assum observ impli suppos weak reduc set definit contradict assumpt span induc proper interv represent path normal lemma impli vertex appear vertex contradict assumpt suppos weak reduc set definit contradict assumpt span induc proper interv represent path normal lemma impli vertex appear vertex contradict assumpt summar initi graph vertex predecessor successor vertex path nalli min path weight readi prove correct reduct rule theorem posit integ weight interv graph weight interv graph reduct rule maximum weight path maximum weight path proof assum maximum weight path iter appli lemma maximum weight path convers assum maximum weight path induct maximum weight path argument assumpt prove induct basi induct step assum weight maximum path path maximum weight weight loss general lemma assum normal lemma impli notic path suppos lemma path min vertex maxim subpath consist vertic subpath consid path replac interv represent subpath copi span replac subpath min copi span note path graph recal definit reduct rule min copi interv span weight min total weight copi span equal weight path maximum weight path complet induct step proof theorem special weight interv graph sequenti appli data reduct section interv graph proper interv delet set defin specif famili reduc set appli reduct rule respect famili weight interv graph defin specif famili weak reduc set appli reduct rule respect famili weight interv graph turn vertex set partit graph final graph input fix paramet algorithm introduc notion special weight interv graph paramet will prove construct graph special weight interv graph paramet depend size theorem comput time theorem definit special weight interv graph paramet weight terval graph interv represent vertex set partit set independ set resp special weight interv graph resp special interv represent param eter partit special vertex partit graph proper interv delet set vertic proper interv graph add isol dummi vertic set correspond interv idk vertex note idk interv represent interv graph simplic present refer denot dummi isol vertic defin set defin set rdi rdi rdi rdi denot note rdi rdi defin note set partit set observ strict contain consecut point lemma proof note rdi rdi rdi rdi rdi rdi lemma interv represent proper interv represent proof proof contradict assum proper interv represent exist vertic preprocess theorem exist vertic suppos vertic induc contradict assumpt proper interv delet set suppos assum definit set contradict assumpt final suppos contradict assum belong set definit contradict assumpt proper interv represent denot connect compon note distinct compon cti disjoint cti defin famili vertex subset cti lemma set reduc proof consid set cti prove three condit definit satisfi connect compon cti condit recal cti interv represent proper lemma interv represent cti cti connect proper interv represent prove condit definit span cti recal definit cti cti connect cti span cti definit cti note rua span cti assumpt cti proper interv represent prove observ impli lua suppos span cti contradict condit definit prove rua definit span cti assumpt cti definit cti prove condit definit lemma distinct element span span proof contradict distinct element cti assum span span exist suppos loss general assum note cti definit set rdi rdi rdi rdi rdi rdi rdi rdi rdi rdi contradict definit suppos loss general assum note cti definit contradict summar set connect compon vertic contradict assumpt span span distinct set note connect compon cti vertic definit set reduc lemma disjoint appli reduct rule graph respect set replac interv represent interv interv span weight denot weight graph interv represent denot endpoint order corollari theorem corollari maximum number vertic path equal maximum weight path defin vertex correspond interv span interv represent recal cti remaind denot vti vti denot simplic correspond interv represent iti ivti recal graph graph span span distinct set lemma corollari lemma corollari set remain proper interv delet set weight interv set partit set independ set vti vti iti theorem prove weight interv graph vertex subset corollari comput time theorem interv graph proper interv delet set graph independ set comput time proof denot interv represent recal endpoint interv sort increas link list set comput time store left endpoint interv set set clear comput time set set effici comput visit endpoint interv increas order endpoint ldk visit rdi rdi rdi rdi add label label initi set rdi rdi iter ldk label add set note comput store element set increas order link list time add element set pointer posit link list endpoint interv increas order comput set iter compar label label label label set set comput store element set increas order order endpoint link list endpoint assum sort increas order comput set total time note total set lemma set effici comput set comput iter point set increas order visit sequenti link list endpoint increas order point point point check case add vertex set check point time check label label describ scan link list comput set time total note comput store element set increas order order endpoint link list comput set effici scan set set comput rightmost endpoint interv represent max defin rdd comput point time total fix comput set initi set iter order defin max vertex check case add vertex set easili check process eventu correct comput set definit set disjoint set comput time total time store element set increas order order endpoint link list comput connect compon effici visit vertic increas order vertex compar left endpoint endpoint previous vertex belong connect compon belong belong connect compon correct comput fact interv represent proper lemma observ visit vertex comput connect compon cti time total note time comput interv span cti compon keep track left endpoint resp endpoint leftmost vertex resp rightmost vertex cti summar comput time famili vertex set cti time comput interv span interv represent comput time replac interv interv span note interv span exact interv vertic independ set set comput time graph consid weight interv graph interv represent endpoint order construct recal corollari proper interv delet set vertic parti tion independ set vti set recal vertex interv vti represen tation denot iti defin set endpoint represent liq note lemma impli denot defin uji note uji partit lemma suffic consid set uji lemma uii proof uii uii note vertex exist origin unweight interv graph strict contain consecut point strict contain consecut point observ vertic initi interv graph replac vertex set weight interv graph contradict uii readi defin famili vertex subset uji lemma set weak reduc graph proof consid set uji proof contradict uji proper interv represent uji assum exist vertic uji interv vertic uji interv represent represent initi unweight interv graph preprocess theorem exist vertic graph suppos vertic induc contradict assumpt proper interv delet set suppos contradict contradict assumpt belong set uji final suppos contradict contradict assumpt belong set uji prove condit definit second proof contradict uji uji graph uji assum exist vertex uji suppos assumpt contradict assumpt belong set uji assumpt contradict assumpt belong set uji suppos endpoint belong contradict note lemma equat contradict endpoint belong definit set contradict vhi recal recal interv interv represent initi graph replac interv ihi interv represent graph suppos ivhi assumpt proper represent three interv vertic interv proper initi represent tripl interv izh chi induc independ set belong connect compon initi graphg vertic induc contradict assumpt proper interv delet set suppos rvq proper initi represent tripl interv izh izq izq chi contradict rvq interv proper contain interv span definit set vertex replac weight graph vertex contradict uji assumpt uji uji graph prove condit definit note set uji vertic definit uji set disjoint appli reduct rule graph respect set replac interv represent interv min copi interv span denot weight graph interv represent corollari theorem corollari maximum weight path equal maximum weight path theorem provid main theorem prove construct weight interv graph special weight interv graph paramet upper bound theorem provid time bound comput special vertex partit theorem weight interv graph special weight interv graph paramet proof defin set vertic introduc weight interv graph appli reduct rule initi unweight interv graph note vertic belong weight graph applic reduct rule graph defin vertex set partit set will prove satisfi three condit definit vertic applic reduct rule corollari impli induc independ set prove condit definit vti vti assum iti interv represent vertex weight graph corollari impli iti interv represent represent contradict assumpt iti vertex vertex span vertex span iti interv represent graph contradict corollari vti vti iti interv represent prove condit definit recal corollari set partit set recal uji partit vertex set uji replac graph min uji vertic vertex set vertic vertic vertex subset uji recal exist set uji recal prove condit definit complet proof theorem theorem interv graph proper interv delet set special weight interv graph special vertex partit comput time proof recal graph independ set comput time theorem recal proof theorem comput interv represent graph comput point interv iti span connect compon comput time comput set endpoint interv represent time total pair comput set uji time visit vertex check definit set uji comput time interv span uji keep leftmost left endpoint rightmost endpoint uji pair indic set interv span uji comput time total comput interv span uji iter remov represent interv vertic uji replac min uji uji copi interv span uji interv represent number vertic set uji replac time total final set comput time theorem set comput time summar interv represent special vertex partit comput time total note special weight interv graph paramet depend size theorem vertic independ set special vertex partit arbitrarili larg parameter longest path interv graph algorithm comput time maximum weight path special weight interv graph paramet definit algorithm section conclud fix paramet algorithm longest path interv graph paramet size minimum proper interv delet set algorithm implement time theorem algorithm run time algorithm special weight interv graph consid special weight interv graph paramet special interv represent special vertex partit recal definit independ set vertex weight function add set isol dummi vertex addit note contain maximum weight path augment graph maximum weight path augment graph maximum weight path vice versa denot augment graph denot augment interv represent endpoint order vertex defin lemma vertex well defin proof prove exist vertex uniqu assum contrari exist distinct vertic contradict independ set defin set note defin vertex piu max note definit piu piu condit definit vertex piu independ set vertex piu defin pair vertic definit rvi defin induc subgraph rvi vertic interv represen tation entir contain point rvi note definit lvi vertex belong subgraph notat rvi denot maximum weight normal path normal path vertex path denot weight algorithm auxiliari technic lemma lemma will proof correct run time analysi algorithm theorem lemma rvi normal path vertex path piy proof denot rightmost vertex order note claim piy notic statement trivial hold prove piy lemma impli normal lemma impli induc proper represent pix path piy lemma rvi lvi piy proof lvi prove clear suppos lvi sake contradict assum lvi rvi note ivi ivi induc proper interv represent assumpt lemma impli contradict assumpt vertex lemma impli path piy piy subgraph piy lemma rvi max pix lvi rvi proof normal path denot vertex normal path normal path lemma impli normal path pix vertex pix will prove pix assum contradict pix recal pix normal path pix vertex xvi impli pix path vertex rightmost vertex path pix normal observ pix pix contradict assumpt pix conclud max pix lvi rvi complet proof lemma lemma rvi lvi lvi normal path pix vertex normal path piy vertex normal path vertex proof piy rpiy vertex normal vertex lemma lvi xvi rpiy rvi viv vertex path vertex vertex pix piy pix path remain normal vertex vertex notic vertex normal path vertex recal vertex equat vertex vertex vertex successor vertex hold assum contrari successor exist vertex notic contradict assumpt normal path contradict fact normal path successor vertex neighbor notic hold normal lemma contradict assumpt normal conclud vertex successor vertex hold complet proof normal path vertex lemma rvi exist lvi max pix lvi piy lvi max pix lvi proof denot notic rightmost vertex path empti observ denot vertex prefix normal path observ normal path vertex path pix lemma normal path pix pix lemma impli viv lemma impli induc proper interv represent ivi ivi ivi ivi ivi lvi min well defin notic neighbor note exist independ set case suppos definit exist normal vertex contradict lemma impli contradict normal note lvi xvi lvi definit lvi prove assum exist vertex definit definit set neighbor independ set assumpt definit vertex contradict assumpt recal ivi prove viv recal vertic appear vertex normal path assumpt normal path prove normal path lemma impli path piy vertex piy remaind proof pix piy contradict assum equal hold notic lemma pix piy normal path vertex notic pix piy contradict pix piy summar max pix lvi piy max pix lvi complet proof lemma readi algorithm comput maximum weight path special weight interv graph easi check algorithm modifi return actual path weight overview algorithm dynam program comput dimension tabl tabl point vertex rvi entri resp entri weight normal path subgraph largest normal path vertex resp dummi isol vertex algorithm maximum weight path will eventu store entri entri depend vertex desir maximum weight path coincid rightmost vertex path order algorithm note comput entri vertic adjac independ set elig pair vertic comput dimension tabl store entri loop line algorithm obvious induct hypothesi assum iter previous valu correct comput previous iter initi phase pair line algorithm comput initi valu path vertex interest case case initi path vertex line initi piy path piy normal path graph piy induc subgraph induct step phase line algorithm updat initi entri lemma updat consid case case updat line lemma valu updat line case lvi updat line lemma updat line lemma correct algorithm prove theorem run time prove theorem theorem special weight interv graph special interv repr sentat special vertex partit algorithm comput maximum weight path algorithm comput maximum weight path special weight interv graph input special weight interv graph paramet special interv represent partit endpoint order output maximum weight path add isol dummi vertex set denot rvi initi piy initi max pix lvi rvi max lvi piy max pix lvi lvi max pix lvi max piy return max proof line algorithm iter rvi algorithm comput valu valu vertex will prove induct valu weight maximum weight normal path valu notat induct basi isol vertex algorithm algorithm execut algorithm correct comput dummi vertex assumpt line line algorithm execut final line algorithm recomput exist vertex lvi rvi algorithm clear correct complet induct basi induct step consid iter algorithm rvi algorithm initi line valu valu vertex initi correct singl vertex path clear normal path graph vertex initi line correct path piy normal path piy induc subgraph definit line algorithm updat current initi correct updat direct lemma line algorithm iter vertex algorithm updat current initi correct updat direct lemma execut line algorithm deal case lvi belong desir path lemma normal path piy induc subgraph case piy algorithm updat current initi piy remaind proof assum belong desir path path line algorithm distinguish case deal case case algorithm comput max pix lvi desir path lemma compar current store greatest updat correct lemma deal case algorithm iter line lvi comput desir path lemma algorithm compar current piy store greatest lvi lemma impli path pix piy normal path vertex piy lemma impli exist valu max pix lvi piy equal weight path updat valu correct complet induct step execut line algorithm correct comput valu rvi graph induc subgraph maximum weight path valu algorithm return correct theorem special weight interv graph vertic paramet algorithm implement time proof special weight interv graph special vertex partit defi nition independ set addit dummi vertex set recal endpoint interv sort increas link list point effici visit endpoint interv increas order endpoint visit endpoint defin point comput time point comput time enumer vertic set comput time total recal vertic piu note adjac vertic comput vertex piu time enumer worst case vertic vertic piu comput total time provid upper bound number valu comput algorithm total valu valu comput rvi condit total pair vertic comput valu valu summar algorithm comput valu comput perform line algorithm impl ment total time denot set endpoint interv recal point assum sort increas note order perform comput line suffic store point valu max pix lvi lvi rvi comput valu line algorithm execut time access store valu rvi observ point lvi rvi vertex endpoint adjac vertex pair adjac vertic pair point vertex point vertex comput valu time lvi endpoint lvi order endpoint exist vertex lvi store point visit increas order point rvi note visit vertic time point sort increas current visit point rvi predecessor order definit max pix consecut point rvi comput time max pix comput time comput valu lvi rvi fix fix perform time total comput valu total time comput perform line algorithm implement total time remaind proof assum line execut time line execut time total line execut pair adjac vertic time total line execut pair adjac vertic time total final comput valu line output comput time consid comput valu vertex pair adjac vertic summar algorithm implement total time general algorithm combin section parameter linear time algorithm longest path interv graph paramet algorithm size minimum proper interv delet set input graph run time polynomi depend theorem interv graph minimum size proper interv delet set interv represent endpoint sort increas proper interv delet set comput time semi proper interv represent construct time longest path comput time proof statement theorem follow theorem remaind proof assum proper interv delet set semi proper interv represent comput third statement theorem comput weight interv graph time theorem graph comput weight interv graph time theorem theorem graph special weight interv graph paramet definit comput graph comput time time special vertex partit vertex set corollari maximum number vertic path initi interv graph equal maximum weight path special weight interv graph order comput longest path suffic comput path maximum weight special weight interv graph paramet comput maximum weight path algorithm run time algorithm input theorem kernel maximum match sake complet detail algorithm maximum match sketch paramet solut size paramet kernel vertic edg comput time lead total run time maximum match parameter solut size belong class fpt simpl data reduct rule spirit data reduct rule buss vertex cover reduct rule deg vertex return instanc reduct rule deg vertex return instanc instanc parameter maximum match call reduc reduct rule appli instanc easili check reduct rule safe lemma reduct rule safe lemma posit integ graph deg instanc instanc proof instanc instanc match size match size instanc exist uniqu edg impli match instanc instanc instanc match size note match match clear instanc match size suppos deg graph assumpt exist vertex match edg set match instanc denot size maximum match graph lemma graph deg proof uivi maximum match vertex cover vertex suppos exist exist altern path set uivi uiz match size contradict maxim loss general assum vertex cover exist set vertex cover deg assumpt impli final vertex cover deg readi provid kernel algorithm maximum match upper bound run time size kernel graph find maximum cardin match decis version addit desir match size input theorem maximum match parameter solut size admit kernel vertic edg vertex graph kernel comput time proof instanc parameter maximum match kernel algorithm return comput equival reduc instanc exhaust appli reduct rule visit vertex remov vertex degre greater current graph notabl vertex remov reduc degre remain vertic algorithm visit vertex construct instanc procedur remov vertic return correct decis fact clear instanc reduct rule safe lemma exhaust applic reduct rule implement time time discov vertex deg current graph current paramet remov current graph mark remov proceed vertex counter number vertic mark remov note check appli reduct rule vertex visit mark neighbor unmark neighbor initi graph exist point mark vertic check neighbor initi graph decid mark remov vertex vertic total procedur run time denot total number vertic mark remov process exhaust appli reduct rule remov unmark vertex mark neighbor vertex remain unmark exhaust applic reduct rule mark neighbor unmark neighbor neighbor total check time current unmark vertex mark neighbor case mark remov process clear time induc subgraph unmark vertic note vertex neighbor final count number vertic edg time visit unmark vertic unmark neighbor strict vertic edg return kernel algorithm return kernel vertic edg consequ kernel algorithm run time total remain prove greater instanc assum instanc lemma contradict complet proof theorem appli match algorithm micali vazirani kernel theorem achiev result corollari maximum match parameter solut size solv time proof instanc parameter maximum match solut size appli kernel algorithm theorem return equival instanc vertic edg comput maximum match graph algorithm algorithm micali vazirani comput time final return return total maximum match solv time outlook discuss work head stimul general program systemat exploit concept fix paramet tractabl polynomi solvabl problem fundament problem time complex current fastest algorithm upper bound polynomi larg degre promin exampl arguabl celebr polynomi time recognit algorithm perfect graph time complex remain apart improv worst case time complex problem difficult imposs task complementari approach propos spot paramet high degre polynomi time algorithm separ depend time complex paramet depend input size close linear fpt insid field rich offer plenti possibl conclud three topic lead interact remark classic parameter complex analysi grow awar concern polynomi time factor neglect notabl promin fix paramet tractabl linear time factor input size larg exponenti factor paramet includ famous linear time algorithm comput treewidth linear time algorithm comput cross number graph interest paper emphas linear time titl fix paramet tractabl spirit result longest path interv graph linear time algorithm depend paramet exponenti polynomi interest work fomin appear short confer version paper paper fomin studi graph matrix problem instanc small treewidth author present log random algorithm comput cardin maximum match random algorithm construct maximum match upper bound treewidth graph second polynomi time solvabl correspond lower bound long stand interest believ famous problem solvabl quadrat time conjectur employ prove relat lower bound problem push direct relat lower bound fpt insid approach help break nonlinear relat lower bound introduc parameter strive fpt direct interest negat result appear abboud paper abboud prove plausibl complex assumpt fail exist algorithm run time approxim diamet radius graph upper bound treewidth contrast author prove diamet radius comput log time final come practic motiv fpt insid observ identifi parameter problem help design meta algorithm dynam select appropri solut strategi respect paramet approach program optim note infanc studi hard problem approach promis fpt insid framework refer abboud grandoni william subcub equival graph central problem apsp diamet proceed annual acm siam symposium discret algorithm soda abboud william popular conjectur impli strong lower bound dynam problem proceed ieee annual symposium foundat comput scienc foc abboud william wang approxim fix paramet subquadrat algo rithm radius diamet proceed annual acm siam symposium discret algorithm soda technic report http abraham fiat goldberg werneck highway dimens shortest path provabl effici algorithm proceed annual acm siam symposium discret algorithm soda alon yuster zwick color code journal acm amir lewenstein porat faster algorithm string match mismatch journal algorithm bertossi find hamiltonian circuit proper interv graph process letter van bevern fix paramet linear time algorithm hard graph hypergraph problem aris industri applic phd thesi institut softwaretechnik und theoretisch informatik berlin germani bodlaend linear time algorithm find tree decomposit small treewidth siam journal comput bojan czyk pari xpath evalu linear time journal acm bringmann walk dog take time frechet distanc subquadrat gorithm seth fail proceed ieee annual symposium foundat comput scienc foc cabello knauer algorithm graph bound treewidth orthogon rang search comput geometri cai fix paramet tractabl graph modif problem hereditari properti infor mation process letter cai parameter complex vertex colour discret appli mathemat chamber erickson nayyeri homolog flow cohomolog cut siam journal comput chen sze zhang improv algorithm path match pack problem proceed annual acm siam symposium discret algorithm soda chudnovski cornu jol liu seymour recogn berg graph combinatorica cygan fomin kowalik lokshtanov marx pilipczuk pilipczuk saurabh parameter algorithm springer damaschk path interv graph circular arc graph discret mathemat downey fellow fundament parameter complex text comput scienc springer fellow jansen rosamond fulli multivari algorithm param eter ecolog deconstruct comput complex european journal combinator flum grohe parameter complex theori springer fomin lokshtanov pilipczuk saurabh wrochna fulli polynomi time parameter comput graph matric low treewidth technic report http gajentaan overmar class problem comput geometri compu tation geometri giannopoulou mertzio niedermei polynomi fix paramet algorithm case studi longest path interv graph proceed intern symposium parameter exact comput ipec technic report http guo ffner niedermei structur view parameter problem distanc trivial proceed intern workshop parameter exact comput iwpec hagerup katajainen nishimura ragd character multitermin flow network comput flow network small treewidth journal comput system scienc hartung hoo program optimis meet parameteris algorithm case studi cluster edit proceed learn intellig optim confer lion hochstein weih maximum flow cross log time proceed annual acm siam symposium discret algorithm soda hoo program optim communic acm ioannidou mertzio nikolopoulo longest path problem polynomi solut interv graph algorithmica kawarabayashi reed comput cross number linear time proceed annual acm symposium theori comput stoc keil find hamiltonian circuit interv graph process letter knei lle richter rossmanith divid color proceed intern workshop graph theoret concept comput scienc kouti miller peng log time solver sdd linear system proceed ieee annual symposium foundat comput scienc foc megiddo linear program linear time dimens fix journal acm mertzio corneil simpl polynomi algorithm longest path problem cocompar graph siam journal discret mathemat micali vazirani algorithm find maximum match general graph proceed annual symposium foundat comput scienc foc niedermei invit fix paramet algorithm volum oxford lectur seri mathemat applic oxford univers press niedermei reflect multivari algorithm problem parameter proceed intern symposium theoret aspect comput scienc stac olariu optim greedi heurist color interv graph process letter orlin madduri subramani williamson faster algorithm singl sourc shortest path problem distinct posit length journal discret algorithm robert indiffer graph harari editor proof techniqu graph theori academ press york uehara uno comput longest path small graph class intern journal foundat comput scienc william find path length time process letter 