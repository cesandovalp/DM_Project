practic system guarante access presenc ddos attack flash crowd hsuan kung taeho lee ning tseng hsu chun hsiao tiffani hyun jin kim soo bum lee yue hsun lin adrian perrig nation taiwan univers hchsiao eth zurich kthlee hrl laboratori hjkim qualcomm soobuml samsung america abstract grow incid flash crowd sophist ddos attack mimick benign traffic challeng protect internet base servic sole differenti attack traffic legitim traffic fair share scheme common suggest defens differenti difficult suffer high variabl unbound wait time propos raincheck filter rcf lightweight primit guaran tee bound wait time client despit server flood keep client state server rcf achiev strong wait time guarante priorit client base long client wait server maintain queue client line wait servic avoid keep state incom client request server send client raincheck timestamp cryptograph token inform client retri serv proof prioriti level virtual queue prove client compli rcf access server bound time flash crowd incid ddos attack larg scale simul confirm rcf small predict maximum wait time exist scheme demonstr deploy implement rcf python modul web develop protect critic server resourc three line code introduct internet user impati studi half onlin shopper abandon websit fail load three second wait unavoid user perceiv finit wait shorter uncer tain wait wait longer period visual feedback progress bar presenc distribut denial servic ddos attack user suffer uncertain infinit wait time access onlin servic server user attack will ceas ddos attack easi launch work author carnegi mellon univers sever damag enterpris solut ddos pro tection server content deliveri network cost small medium size compani afford cdn web host suitabl secur sensit servic sophist ddos attack emul flash crowd stealthier attack target scarc server resourc cpu disk low traffic volum difficult imposs differenti attack traffic legitim traffic ddos defens ddos attack flash crowd incid server guarante maximum wait time mwt client addit accur wait time estim mwt ensur request accept servic finit time exist fair base fair queue proof work base comput puzzl ddos countermeasur fail provid mwt guarante paper raincheck filter rcf ddos mitig primit enabl server guarante mwt client server overload core idea rcf simpl effect rcf priorit client request base wait time time elaps initi request rate limit number request client server maintain infinit queue client request line wait servic simul infinit queue small physic buffer rcf server send client raincheck timestamp cryptograph token tell client retri serv proof prioriti level infinit virtual queue simul raincheck propag network store client buffer raincheck valid limit time durat server effici rate limit client prevent raincheck reus keep client state rcf protect critic resourc exampl middlebox front flood link server rapid growth ddos attack applic layer focus appli rcf protect critic resourc server paper prove rcf client access server finit time linear number client achiev strong guarante rcf lightweight extrem simpl deploy implement rcf oper rate requir minim modif server modif client envis rcf work complementari defens resolv server overload detect base scheme fail block bot primari mediat flash crowd main contribut rcf lightweight ddos mitig prim itiv help legitim client fair share process power util net work infinit virtual queue rcf mitig flash crowd resort ineffect insuffici separ attack traffic legitim traffic prove rcf achiev mwt guarante small amount state independ number user rcf requir precis request schedul prior work achiev thorough evalu perform effect ness rcf theoret analysi simul implement confirm practic rcf guarante bound wait time reduc varianc wait time characterist enabl server provid reliabl feedback client introduc fulli function rcf python modul provid fine grain url protect web develop three addit line code modif requir client side problem definit primari goal provid maximum wait time mwt guarante server flood flood incom request deplet scarc resourc processor disk intern bandwidth interest context server flood attack assum network infrastructur link bandwidth well provis server flood bot legitim client wait time legitim client grow indefinit flash crowd server swamp request legitim client bot driven ddos attack adversari direct compromis endhost overload server overwhelm number request paper assumpt power strategi exampl power smart adversari compromis major endhost target client increas wait time consid flood initi request data request server rate limit request accept request rate higher support wait time model wait time guar ante consid strong notion call maximum wait time mwt guarante finit time request accept servic perspect wait time client request accept time retri time server see ith retri client retri repres origin request wait time perspect elaps time time initi request time client receiv accept respons server retri rtt process rtt process indic round trip time request process time assum rtt process bound bound impli bound loss general consid wait time observ server server model request arriv server perform oper rate replay detec tion incom request rate rin bound network rate server process request queue queue fast memori enqueu dequeu oper rate well process rate limit bottleneck oper databas queri client model consid network client consist compromis legitim client bound unknown server typic compromis client control adversari malwar legitim client control human user assum client uniqu unforg assumpt defin web develop flexibl choos identif method login captcha singl sign address combin multipl factor exampl member base web servic login credenti mitig flash crowd discuss choic client compar appendix desir properti practic system effi cient deploy usabl desir properti translat design requir ment mwt guarante ddos limit primit bound wait time legitim client bound independ client strategi minim overhead client server ddos limit primit incur minim overhead server client avoid increas attack surfac primit avoid request client state server modif client network frastructur support deploy system easi adopt server side requir modif client network infrastructur accur feedback estim wait time reason error margin actual wait time order increas user willing wait iii raincheck filter core observ rcf maximum wait time mwt guarante achiev server larg queue size number client call ideal buffer realiti avoid keep client state rcf simul ideal buffer realist buffer size smaller leverag network infinit virtual queue simul achiev exchang special type messag call raincheck client server simpl approach ideal buffer discuss fundament properti achiev mwt guarante rcf satisfi fun dament properti realist buffer notat summar client client raincheck total number client request process rate number compromis client server queue length raincheck expir period paus paus time resend current time tstart start lifetim tend lifetim tabl notat mwt guarante ideal buffer buffer size achiev mwt guarante buffer model fifo queue enqueu incom request limit client request queue ensur buffer overflow server process request time unit wait time bound nrs approach adopt simpl rate limit polici request client queue well request rank polici order request age time request stay buffer server process request lowest rank oldest request observ request rank polici present properti lead mwt guarante ideal case initi rank request bound rank decreas time general observ theorem prove mwt guarante rcf design buffer size flood server discard request make difficult server treat client fair bound wait time address challeng rcf leverag network infinit virtual queue server retriev knowledg drop request rcf design generic primit appli protocol layer granular describ high level overview rcf protocol design implement detail rcf support url protect applic layer overview figur illustr rcf work overload server server accept reject postpon incom request raincheck carri raincheck absent server postpon request server ask client revisit time issu raincheck client note raincheck carri request postpon case client obtain updat raincheck manag raincheck rcf implement core compo nent server side raincheck issuanc raincheck valid oper rate raincheck valid compon check valid secret key request invalid expir raincheck reject request valid raincheck prioriti queue length request wait longer higher prioriti valid drop request raincheck issuanc compon construct raincheck secret key return raincheck client raincheck protect messag authent code mac prevent forgeri tamper share multipl client client resend request return raincheck proof wait time raincheck absent request forward raincheck issuanc compon direct assign lowest prioriti reason prevent server request rcf enabl client raincheck valid raincheck issuanc overflow issu raincheck request postpon reject request vaild invaild accept request raincheck filter prioriti queue raincheck figur rcf overview queu request spoof address client return raincheck order servic ensur bound wait time raincheck absent request stuck queue forev raincheck carri request arriv speed process rate major challeng prevent doubl spend raincheck keep client state address challeng impos raincheck valid lifetim tstart paus tend tstart consequ server rememb accept request paus period time raincheck client will expir server adjust paus strike balanc communic storag overhead raincheck messag format raincheck mac protect client timestamp lifetim tstart tend comput secret key adversari tamper forg raincheck mack tstart tend uniqu client includ enabl rate limit base sourc ident prevent client share raincheck mac comput secret key server correct creat valid raincheck server enabl instanc rcf rcf secret key server descript raincheck issuanc raincheck issu renew time valid tstart paus tend tstart paus small amount minimum time client wait resend raincheck absent request arriv server drop request direct return client raincheck timestamp current time queue overflow raincheck carri request drop direct raincheck issuanc compon renew timestamp stay raincheck server issu raincheck drop request client multipl valid raincheck concur rentli multipl valid raincheck addit benefit client server raincheck valid compon limit rate accept raincheck client describ raincheck valid effici doubl spend pre vention rate limit server set accept request accept time paus denot accept client request set denot buffer request current buffer queue size record irrelev total client implementd effici bloom filter variant raincheck valid condit hold lifetim tstart cur time tend duplic raincheck reus limit client request rate request allow client interv request accept accept fals buffer fals condit easili extend allow multipl request client time interv instanc rcf deploy protect multipl critic resourc integr mac verifi correct three condit ensur request accept raincheck possess invalid valid request prioriti queue rank unambigu base timestamp request queu compon dequeu lowest prioriti request issu raincheck return client client descript figur illustr client server interact rcf protocol client initi protocol send raincheck absent request server return client raincheck expir futur raincheck expir client resend raincheck carri request server busi client obtain renew raincheck extend lifetim client resend request accept prove client resend strategi will access server bound delay greedi client attempt reduc wait time resend request protocol guarante greedi client gain benefit send rate faster rsl buffer copi request client server explicit specifi raincheck long client wait retri set tstart trade exist timestamp granular wait time bound request allow timestamp wait time bound increas client serverreq req paus req paus request raincheck issu lifetim paus queue overflow renew lifetim paus accept req req reject req accept req reject req expir figur client server interact exampl lifetim restrain greedi client minim communic overhead configur improv build practic deploy system investig detail function corner case actual paramet configur mwt guarante minimum number request applic scenario estim number request bottleneck server process vari process time configur satisfi perform requir highlight core idea leav detail descript appendix accur wait time estim provid user feedback expect wait time help increas willing wait wait time bound serv loos estim actual wait time better estim incorpor current client status desir design analyz rank estim algorithm allow server estim client rank posit virtual queue time keep client state extend probabilist count algorithm algorithm describ pendix refin estim account number client renew raincheck server inform client estim rank piggyback raincheck balanc load distribut avoid sudden increas bandwidth load rare case client concurr retri desir distribut bandwidth load caus raincheck renew propos hybrid scheme combin rcf coars grain schedul balanc load distribut appendix origin rcf hybrid scheme requir client renew raincheck period novel improv assign coars time interv request client fall time interv reduc overhead duplic detect rate limit accommod multipl raincheck plicat multipl raincheck need client exampl rcf appli http protocol raincheck allow http request multipl raincheck need load singl webpag raincheck request sequenti increas wait time client implement resolv issu enabl rcf instanc resourc consum url account small set http request webpag client multipl raincheck parallel explor appendix effect extend rate limit mechan allow sender multipl request virtual queue analysi wait time guarante prove rcf guarante mwt properti rank function impli mwt rcf satisfi properti tinic time server see client trial taccc time sever accept request retri denot rank client prioriti servic posit ideal queue time rank defin tinic taccc client serv time rank rank function rcf formul rank lower rank time time client valid raincheck timestamp smaller client valid raincheck rank server queue length request will accept theorem properti rank function ensur mwt bound taccc tinic independ power strategi rank function satisfi condit initi rank client bound rank tinic adversari independ rank client decreas time rank rank adversari independ sketch proof take time reduc rank wait time bound server guarante mwt rank function satisfi condit theorem rcf guarante mwt rcf guarante legitim client will serv finit time regard legitim compromis client behav linear total number client typic webpag requir multipl http request modern browser support concurr http connect firefox allow concurr connect sketch proof rcf initi rank bound number client network retri lrs time apart server accept request accept request privileg client rcf ensur request accept raincheck invalid rank decreas retri attempt server will accept request iii legitim client resend request frequenc paus min rsl paus base theorem wait time bound rank tinic paus rtt neglig compar paus bound revis paus rtt compens delay upper bound repres worst case scenario strong attack request send schedul control host victim client server presenc realist attack target specif client actual wait time lower upper bound bot will consum high rank raincheck legitim client wait silent demonstr strength rcf client increas prioriti simpli wait contrast prior work client work solv comput puzzl overhead analysi rcf incur low comput communic stor age overhead server client client requir perform addit comput client simpli raincheck protect sourc renew raincheck rough paus time period implement byte raincheck format bit client bit microsecond level timestamp bit lifetim raincheck offset timestamp bit mac size comput overhead minim generat raincheck server perform mac generat receiv raincheck server perform mac verifi cation effici mac function raincheck generat verifi rate exampl take cycl comput bit cbc mac intel support instruct set implement confirm enabl rcf degrad servic throughput rcf avoid keep state client cost send raincheck rcf accept client support effici valid rate limit duplic detect expir time server adjust raincheck expir period strike balanc communic storag overhead rcf incur small overhead communic server client instanc appli rcf http applic size http header raincheck store increas size typic http request respons header byte raincheck byte rcf explicit specifi long client wait retri incur small overhead compar case greedi client bot aggress resend request rcf initi request raincheck reject raincheck issu return client initi reject add resili spoof attack add slight latenc serv request minim initi latenc rcf dynam enabl disabl server peacetim server util rcf remain inact incom request serv server server util increas threshold rcf activ start issu raincheck incom request secur benefit design rcf avoid expand attack surfac raincheck protect forgeri messag thentic code generat valid rate rcf prevent traffic amplif attack raincheck smaller typic http request respons header rcf secur sourc spoof misus raincheck reus accumul share prevent compromis greedi client gain advantag legitim client evalu valid rcf effect simul infinit buffer enabl bound wait time low varianc presenc flash crowd ddos attack evalu rcf simul larg scale simul measur wait time legitim user case describ flash crowd case larg number legitim user simultan access server short time period ddos attack case server flood bot case compar rcf tradit client server model protect comput puzzl flash crowd consid legitim client server buffer request process request rate exponenti distribut averag figur scatter plot initi request time serv time client request initi request time uniform distribut second interv server experi averag incom request second time rate averag request process capac describ server client model simul flash crowd comput puzzl model client solv comput puzzl send request model puzzl server prioriti queue puzzl level prioriti metric request prioriti level server process base arriv order send initi request client solv level puzzl request level deni client solv level puzzl resubmit request puzzl comput time determin delay client wait submit request delay associ level puzzl deriv geometr distribut number comput hash find length hash geometr distribut unprotect unprotect server implement stan dard fifo queue inform client request drop client continu resubmit request request process server wait time client three model scatter plot fig dot diamond scatter plot request time accept time request green dot left figur repres request unprotect client green dot figur repres request puzzl client figur red diamond repres request raincheck client solid fill green trapezoid area figur demonstr larg varianc wait time unprotect puzzl client lucki client serv client unlucki experi long wait time hand rcf client mark red diamond resembl thin indic rcf support low varianc wait time steadili increas number request serv increas order request well preserv request generat earlier time serv request generat time figur scatter plot raincheck server ident ideal server infinit buffer flood attack consid legitim client bot rang observ relationship volum attack traffic wait time client experi experi client request request time uniform distribut second interv server capac ident simul simul ddos attack case bot adopt strategi flood server request generat model poisson process attack strategi rcf rcf server favor request earlier timestamp simpl flood send request high rate ineffect bot save valid raincheck send earliest timestamp flood period bot run valid unexpir raincheck send request attack strategi puzzl puzzl server favor request higher level puzzl puzzl bot submit request highest puzzl level solv request generat interv addit shorten puzzl comput time bot collabor collabor puzzl solv time model bot geometr attack strategi unprotect bot periodi calli submit request server distribut wait time client box plot fig flash crowd simul simul confirm maximum wait time raincheck client smaller unprotect puzzl client number bot addit simul confirm varianc wait time smaller case height box drawn figur maximum wait time raincheck client upper bound maximum wait time vari unprotect client increas varianc number bot tin rcf number bot tin puzzl number bot tin unprotect figur box plot wait time client vari number bot raincheck server puzzl server unprotect server note wait time unprotect server graph dramat number bot increas unprotect server treat request equal collect request submiss rate higher client depriv client access server puzzl client median wait time compar raincheck client varianc wait time well maximum wait time higher raincheck client larg varianc attribut amount time need solv puzzl implement demonstr effici feasibl rcf implement rcf high bandwidth testb support rate raincheck valid issuanc python modul easili incorpor http server dpdk testb evalu evalu raincheck generat valid rate commod machin addit bottleneck server testb setup build small testb machin machin simul malici traffic gen erat simul rcf machin direct connect gigabit ethernet cabl oper ident commod pcs hardwar specif core intel core cpu haswel mhz hynix memori dual port gbe nic intel intel data plane develop kit dpdk packet engin machin generat process high bandwidth traffic intel dpdk support high perform packet process involv system kernel dpdk avoid interrupt packet transfer user space memori buffer elimin redund memori copi kernel cbc mac rcf implement intel instruct set hardwar acceler crypto graphic engin effici verifi issu raincheck experi design initi experi send request packet rcf step receiv request rcf generat raincheck send packet raincheck step initi exchang start measur perform rcf raincheck valid issuanc manner simpli forward raincheck carri packet server step rcf valid raincheck updat raincheck timestamp send updat raincheck step step repeat measur worst case process time incom request comparison establish baselin case send initi request rcf rcf repli packet dummi raincheck resend receiv request server rcf simpli forward packet verifi updat raincheck step repeat evalu result baselin case send raincheck carri request server rate rate gbps achiev raincheck case rcf valid issu raincheck incom request observ degrad throughput confirm raincheck comput incur low overhead raincheck http rcf easili deploy http server appli rcf web server effici rate limit request comput intens wolframalpha intens databas queri ensur client fair access implement python modul serv extens microframework python web develop solut practic real requir modif addit instal client side incur minim effort server side server side implement work intermedi level web server applica tion decor featur develop integr rcf exist server applic effort list demonstr basic usag modul text bold addit code need appli raincheck modul initi develop add code mark critic resourc protect independ applic protect develop easili turn rcf knowledg implement detail applic raincheck modul url fine grain protect flexibl appli rcf critic resourc leav noncrit resourc static content freeli access allow configur separ queue url essenti web server provid ser vice achiev full capac gbps bottleneck pci interconnect nic mainboard flask import flask app flask __name__ raincheck import raincheck raincheck queue_siz time_paus time_interv concurr def comput intens intens job return resp list basic usag rcf modul implement detail fulli implement raincheck modul describ iii includ suanc valid communic protocol rank addit detail concern implement raincheck carri http cooki common featur major client support addit modif need client side cooki pro vide simpl mechan allow renew expir raincheck http refresh header indic long client wait come renew raincheck time syncron need refresh time uniform random tstart tend tnetwork delay consequ subsequ renew request will cluster client initi request pattern addit sourc client accept entri session client allow develop login captcha singl sign identif method uniqu client generat address issu share public preval nat estim current posit client virtual queue expos develop variabl develop custom web interfac estim wait time error messag client comput critic rcf deriv messag authent code integr low overhead implement dos resili ctype librari invok nativ function achiev compar perform raincheck tcp http discuss advantag disadvantag implement rcf tcp layer http layer implement rcf tcp layer robust effici incur overhead fewer layer pass request drop bottleneck applic sight tcp flood attack implement flask implement top cryptograph sign cook figur scatter plot initi request time serv time step chart averag wait time tcp layer protect resourc http layer rcf serv generic defens mechan protect upper layer protocol applic modif requir kernel chang privileg modul instal client server intrus favor difficult chang protocol persuad peopl updat time suitabl adopt univers set protocol applic tcp layer unnecessari protect hand implement rcf http layer flexibl transpar chang occur server develop full control decid enabl rcf resourc protect configur queue size wait time paramet better knowledg applic rcf accur custom specif situat rcf protect udp packet rcf integr udp easier tcp udp connectionless rcf appli protect applic request dns queri paramet select describ rule thumb select paramet determin reason rang paus chang ing paramet affect perform detail mathemat analysi includ appendix determin network delay memori consumpt long toler varianc network delay short small state accept client paus determin bandwidth consumpt rank feedback frequenc long prevent overhead frequent raincheck renew short updat rank client experi effect rcf http comput intens web server deploy server xlarg instanc amazon servic singapor instanc tokyo send request configur server summar server rcf rcf queue size entri concurr process client comput time request second paus second second unprotect server fifo queue buffer request limit concurr process request server will overload request will timeout client unprotect server retri second request fail request accept mimick realist scenario server receiv request second uniform distinct client second experiment purpos assum client acquir uniqu result figur result server rcf flash crowd unprotect server suffer high varianc wait time queue full rcf wait time direct proport initi request time consist valid correct prove capabl real vii work typic defens servic level ddos attack aim offer fair chanc servic access client avoid grant access exist entiti address spoof limit attempt gain advantag masquerad multipl entiti ddos defens mechan employ interact protocol request client evid prove client ident comput puzzl demand client comput effort servic despit simpl stateless high overhead legitim client provid weak probabilist wait time guarante hinder real adopt captcha hard problem easili solv human machin bot test human presenc servic request captcha adopt web base applic test human presenc distinguish flash crowd ddos attack advanc captcha break techniqu weaken effect ddos defens tool requir human interact limit applic follow thought latenc base proof work server dos attack priorit request client wait long servic crowcroft propos mechan enforc passiv delay client slow request rate contrast raincheck mechan client state server provid servic access guarante propos aim faster web cryptograph credenti tcp syn cooki reduc number round trip connect establish exampl tcp fast open tfo speed success tcp connect tfo cooki server generat messag authent code prove ownership sourc technic rcf creat credenti aforement mechan key distinct raincheck fine grain timestamp rcf perform admiss control guarante maximum wait time establish connect queu system heavili research comput scienc oper mechan assign queue aggreg request origin lee propos mechan differenti guarante aggreg base observ bot distribut uniform main stoica propos core stateless weight fair queue mechan fair network schedul edg router maintain flow state core router label insid packet header creat edg router realiz fair schedul queu system intend offer provid precis wait time guarante client altern gligor propos scheme client maximum wait time guarante precis time schedul servic access ken schedul requir conserv workload pre diction singl servic assum grant token time unavoid lead resourc util servic replic infrastructur outsourc common practic ddos mitig servic financi govern healthcar servic hard replic relocat distribut outsourc secur privaci reason ssl protect content serv man middl approach high undesir secur perspect traffic scrub cloud ineffect difficult differenti malici legitim client rcf outperform prior work simpl practic solut protect initi request guarante access public servic afford server farm viii conclus technolog advanc introduc unfortun side fect internet user increas impati increas user willing wait wait time small low varianc user inform accur wait time estim propos rcf lightweight ddos mitig primit bound wait time legitim client rcf achiev strong guarante leverag network virtual queue order client base arriv time guarante close optim case server infinit memori rcf focus bound wait time work conjunct ddos countermeasur differenti bot legitim client strengthen wait time guarante rcf hope legitim client access flood server attack send larg number request huge advantag legitim client contrast rcf server effect legitim client access guarante presenc bot driven ddos attack flash crowd acknowledg work receiv fund european search council european seventh frame work programm erc grant agreement ministri scienc technolog tional taiwan univers intel corpor grant ntu icrp ntu icrp grate acknowledg support eth zurich nsf award number cns refer studi reveal impact travel site perfor manc consum http html press releas press html maister psycholog wait line harvard busi school nah studi toler wait time long web user wait behaviour technolog branaghan sanchez feedback prefer impress wait journal human factor cloudflar featur price https plan retriev state internet secur report gligor guarante access spite distribut servic flood attack proceed secur proto col workshop cohen matia spectral bloom filter pro ceed acm sigmod naor yogev tight bound slide bloom filter pre print flajolet martin probabilist count proceed ieee symposium foundat comput scienc spdi experiment protocol faster web http spdi spdi whitepap wang reiter defend denial servic attack puzzl auction proceed ieee symposium secur privaci communic infrastructur divis dpdk intel data plane develop kit dec gueron intel advanc encrypt standard instruct set intel mar white paper juel brainard client puzzl cryptograph countermeasur connect deplet attack proceed network distribut system secur symposium ndss dean stubblefield client puzzl protect tls proceed usenix secur parno wendlandt shi perrig magg portculli protect connect setup denial capabl attack proceed acm sigcomm srivatsa iyengar yin liu mitig applic level denial servic attack web server client transpar approach acm transact web jul von ahn blum hopper langford captcha hard problem secur pro ceed eurocrypt kandula katabi jacob berger botz sale surviv organ ddos attack mimic flash crowd proceed nsdi yan ahmad low cost attack microsoft captcha proceed acm comput communic secur ccs bursztein martin mitchel text base captcha strength weak proceed acm comput communic secur ccs bursztein beauxi paskov perito fabri mitchel failur nois base continu audio captcha proceed ieee symposium secur privaci crowcroft deegan kreibich mortier weaver lazi susan dumb wait proof work ucam tech rep radhakrishnan cheng chu jain ragha van tcp fast open proceed acm conext salowey zhou eronen tschofenig tls session resumpt server side state rfc roskind quic design document specif ration https document retriev petullo zhang bernstein lang minimalt minim latenc network better secur acm ccs bernstein syn cooki http syncooki html yang wetheral anderson tva dos limit network architectur ieee acm transact network lee gligor perrig depend connec tion setup network capabl proceed ieee dsn stoica shenker zhang core stateless fair queue scalabl architectur approxim fair bandwidth alloc high speed network ieee acm transact network ssl option flexibl full full strict https articl ssl option flexibl full full strict retriev chou lin sen spatscheck proactiv surg protect defens mechan bandwidth base attack proceed usenix secur appendix client select rcf assum client uniqu unforg allow web develop flexibl choos identif method login captcha singl sign address combin multipl factor discuss choic client address client assum address repres ident client rcf fair effect limit send rate request origin client assumpt general hold practic nat deploy internet client nat public address rcf treat uniqu public address client client nat will fair share resourc provid fair context proach approach assign uniqu independ address client approach allow rcf identifi client nat client client approach suscept sybil attack client creat multipl gain unfair advantag mitig effect sybil attack websit requir user creat user process creat user difficult discourag malici greedi user creat multipl captcha mobil sms authent user creation approach fair resourc share base dif ferenti alloc base prior connect histori server consid fair model alloc server resourc proport number request peacetim server flood server split address block measur number request serv address block peacetim attack fair alloc server resourc base address space requir keep state address block server wait time estim provid user feedback expect wait time help increas willing wait wait time bound serv loos estim actual wait time desir better estim incorpor current client status design analyz rank estim algorithm allow server estim client rank posit virtual queue time keep client state achiev goal rank estim algorithm extend probabilist count algorithm estim refin time account number client renew raincheck server inform client estim rank piggyback raincheck effici accur rank estim challeng count number issu raincheck smaller timestamp client ineffici requir maintain counter client client multipl valid raincheck hand server prevent count client background sketch provid effici accur estim rank estim algorithm extend probabilist count algorithm propos flajolet martin estim number distinct item set logn memori number distinct item probabilist count algorithm bit vector refer sketch initi zero determinist function map item ith bit probabl bit set item map bit sketch estim number distinct item lowest order bit posit base index reduc estim error averag multipl sketch function algorithm guarante bound error log number sketch rank estim algorithm explain algorithm work defin notat client obtain raincheck timestamp ntt size client front time rank ntt client raincheck smallest timestamp valid raincheck time stand timestamp updat rank estim sketch minim bin map function map incom raincheck client front convert sketch client front figur rank estim sketch exampl estim rank separ sketch requir logn memori contrast rank estim algorithm design answer queri distinct item lower keep logn number item updat estim oper rank estim algorithm work updat set bit store map posit lower current store posit estim estim number item lower convert rank estim sketch sketch bit set correspond posit figur illustr rank estim sketch work relationship sketch core idea rank estim sketch ensur sketch run algorithm item lower set item raincheck raincheck timestamp raincheck ident client rank estim algorithm estim ntt time interv estim rank time tcur virtual queue server maintain rank estim sketch reset period time sketch account interv posit integ rank rank tcur approxim rank tcur rank tcur base proof rank rank tcur tcur rank log number sketch ensur estim error tcur probabl higher balanc load distribut avoid sudden increas bandwidth load rare case client retri concurr desir distribut bandwidth load caus raincheck renew propos hybrid scheme combin rcf coars grain schedul balanc load distribut origin rcf hybrid scheme requir client renew raincheck period novel improv assign coars time interv request client fall time interv reduc overhead duplic detect rate limit server divid time overlap time interv constant raincheck issu valid mmin mmax requir cool period mmin expir period mmax mmin mmin mmax posit integ integ deriv mmin mmax mod prfk cid mod secret key prf pseudorandom function equat uniqu solut construct ensur raincheck carri request client time interv request renew approxi mate time interv server track accept request current time interv duplic detect rate limit hybrid scheme easier implement server maintain slide window origin rcf server updat secret key increas random minim risk key exposur suppos server complet switch key ensur smooth transit server choos key key mmax request basi criterion comput key key key hybrid scheme trade flexibl scalabl extrem prf perfect distribut client interv overhead storag band width consum raincheck renew reduc order mwt guarante lrs omit proof extrem prf map client time interv degener origin rcf mmax render mwt bound mmaxw practic implement prf generat reason random output key secret hybrid scheme expect better scalabl origin rcf server adjust mmax dynam distribut load mmax mmin interv server overload interv mmin larg ensur request return server time accommod multipl raincheck applic multipl raincheck need client exampl rcf appli http protocol raincheck allow http request multipl raincheck need load singl webpag raincheck request quential increas wait time client implement resolv typic webpag requir multipl http request modern browser support concurr http connect exampl firefox allow concurr http connect issu enabl rcf instanc resourc consum url account small set http request webpag client multipl raincheck parallel explor effect extend rate limit mechan allow sender multipl request virtual queue rcf extend accomod raincheck client support case raincheck accept addit raincheck renew accept client point time total number request server equal rcf issu raincheck resourc consum request account small set http request webpag simul effect support multipl raincheck paramet simul flood attack submit request client submit request amount time need request accept server measur request send strategi modifi handl multipl request raincheck client send request simultan server allow smaller number simultan request server allow fewer number simultan request client initi submit maximum number request allow server accept request remain request submit sequenti wait puzzl client client initi submit request lowest level puzzl return request client resubmit request puzzl level higher previous puzzl unprotect client client submit request simultan return request client resubmit request server figur summar wait time client request accept leftmost figur longest wait time raincheck client server allow simultan request box plot show distribut wait time client case server allow simultan request client figur middl describ distribut wait time client puzzl normal server expect client three model wait longer request accept server primari reason longer wait increas traffic client submit request raincheck model volum bot traffic increas well bot advantag multipl simultan raincheck server allow simul wait time mea sure time request accept raincheck client shortest maximum wait time well smallest varianc wait time maximum wait time raincheck client shortest raincheck server allow simultan request wait time increas server allow simultan request allow bot flood server highest rate three case bot flood rate lowest wait time creas server allow simultan request fourth request submit three request accept timestamp raincheck request correspond late request schedul virtual queue experi suggest rcf http server client wait time client experi depend number simultan request allow server experi suggest better server allow larger number simultan request client smaller number simultan request compar number request need load web allow smaller number simultan request increas wait time paramet configur bound determin request process rate provid mwt guarante bottleneck server requir process request second discuss ensur lower bound applic scenario discuss estim request process time vari accur estim wait time improv user experi oper guarante depend accur model access link bottleneck rcf instal front access link firewal load balanc band width critic resourc raincheck deter mine lower bound request process rate min downlink bwmax req uplink max resp max req max resp maximum size request respons packet approach appli case intermedi network link bottleneck attack exhaust cpu resourc server full knowledg type servic offer time complet request unpredict solut consid raincheck explicit permiss number bot wait time request accept raincheck client simultan raincheck simultan raincheck simultan raincheck number bot wait time request accept puzzl client number bot wait time request accept unprotect client figur wait time client request accept vari number bot three server model start left raincheck server puzzl server unprotect server note scale axi three graph access unit resourc client wait longer higher level raincheck permiss access resourc exampl raincheck repres cpu cycl server time adopt modif client divid task smaller chunk chunk process unit resourc server termin process accept request unit resourc return server resum process server declin comput expens request ddos attack safe mode support limit function leav futur work explor resourc alloc polic rcf framework request complet time predict server alloc resourc multipl request group consist request complet time base servic type group request improv accuraci wait time estim allow server appli rcf resourc consum request rcf help address memori exhaust tack tcp syn flood slow http attack raincheck work syn cooki push state client addit set explicit timeout buffer request request process time bound rcf appli configur size memori term number request rcf recal rin incom request rate request process rate expir period number client iii client wish stay virtual queue renew raincheck pire expir period long accommod client worst case rin hand expir period short avoid keep state server constraint serv guidelin rcf configur server typic control unabl increas memori set rin estim number client server base histori adjust estim chang satisfi second constraint server reduc request process rate increas memori size note reduc affect mwt higher requir obtain mwt bound worst case scenario discuss set paramet hybrid scheme describ appendix hybrid scheme server satisfi rin introduct addit paramet fulfil second criterion set set rin·w 