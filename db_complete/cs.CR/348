xcrush famili arx block cipher evan saulpaugh septemb abstract xcrush famili feistel arx block cipher design effici modern bit general purpos processor small number encrypt round simpl implement softwar avalanch function appli data depend key depend rotat bit word plaintext round allow xcrush achiev visibl diffus bit ciphertext block round design speed softwar refer implement round xcrush measur cycl byte singl thread intel haswel processor pseudoran dom number generat construct avalanch function serv key schedul algorithm secur claim paper keyword arx data depend rotat ddr xcrush introduct author origin inspir creat block cipher effici rijndael softwar modern general purpos processor idea bit xor add rotat oper lookup tabl work bit time think tech niqu preced cipher call czar tsar play letter xar mean xor add rotat experi rotat bit block bit key determin rotat distanc obvious key depend rota tion ineffect fix rotat achiev diffus subsequ default data depend rotat tool choic xcrush fix block length bit support key size algorithm present paper free intellectu properti restrict releas constitut endors algorithm offici bit develop uninfluenc prior work involv data depend rotat techniqu present paper result attempt achiev fast diffus softwar bit arithmet tabl notat notat descript addit modulo multipl modulo bitwis xor bitwis shift bit left rotat bit descript algorithm bit plaintext ciphertext bit skj bit subkey encrypt process formul algorithm algorithm encrypt process xcrush skj skj skj skj function function key avalanch function confus diffus function return integ interv bitwis leftward rotat distanc function cryption process key expans bit function formul algorithm algorithm function function function compress design produc larg set bit valu appli set input bit word function formul algorithm algorithm function key expans bit subkey encrypt process generat seed pseudorandom number generat encrypt key cryption key equal key length bit bit word bit prng seed equal key length bit bit key expans formul algorithm algorithm key expans algorithm ski algorithm function pseudorandom number generat bit state function avalanch function generat seri bit output design rational algorithm make addit import bitwis rotat bit word plaintext depend three plaintext block allow output avalanch oper feed ensur small chang plaintext block will tend result larg chang output block round construct appear natur simpli add bit word key materi sum three plaintext avalanch function confus diffus achiev effici simul taneous final key whiten block xore final bit subkey order obscur input final invok avalanch function key expans key expans seed determinist random bit gen erat pseudorandom number generat encrypt key produc subkey encrypt process prng base xorshift generat chosen speed simplic impl mentat complex natur key expans intend difficult attack subkey recov infom subkey master key addit prng method subkey deriv stream subkey depend bit master key intend mitig key attack constant lead decim digit fraction squar root arbitrarili chosen ensur prng seed zero note key size xcrush compos three avalanch round key whiten xor conclud remark xcrush ambiti attempt creat unconvent famili block cipher lend well tradit cryptanalysi hope author serv advanc field cryptographi refer joan daemen vincent rijmen propos rijndael present advanc encrypt standard candid confer georg marsaglia xorshift rngs journal statist softwar issu jul figur round xcrush figur avalanch function appendic test vector xcrush key plaintext ciphertext xcrush key plaintext ciphertext xcrush key plaintext ciphertext refer implement refer implement block cipher famili xcrush softwar releas public domain includ defin block_length_long defin defin defin defin num_subkey defin defin long_long_s int compress unsign long long return long long avalanch unsign long long unsign long long const int shiftamount compress rotat left return shiftamount long_long_s shiftamount long long unavalanch unsign long long unsign long long const int shiftamount compress rotat shiftamount long_long_s shiftamount return void _encrypt unsign long long plaintext int offset int length unsign long long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const int offset length int one___ two___ three_ long temp block offset offset block_length_long one___ offset two___ offset three_ offset plaintext offset plaintext one___ plaintext two___ plaintext three_ round temp avalanch temp avalanch temp temp avalanch temp avalanch temp round temp avalanch temp avalanch temp temp avalanch temp avalanch temp round temp avalanch temp avalanch temp temp avalanch temp avalanch temp plaintext offset plaintext one___ plaintext two___ plaintext three_ void decrypt unsign long long ciphertext int offset int length unsign long long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const long subkey const int offset length int one___ two___ three_ long temp offset offset block_length_long one___ offset two___ offset three_ offset ciphertext offset ciphertext one___ ciphertext two___ ciphertext three_ temp unavalanch temp unavalanch temp temp unavalanch temp unavalanch temp temp unavalanch temp unavalanch temp temp unavalanch temp unavalanch temp temp unavalanch temp unavalanch temp temp unavalanch temp unavalanch temp ciphertext offset ciphertext one___ ciphertext two___ ciphertext three_ long long long long long long avalanch return void expand_key unsign long long key int keylen unsign long long subkeybuf num_subkey switch keylen case key key break case key key key break case key key key key break default break int int num_subkey subkeybuf int main int argc const char argv const int keylen unsign long long key keylen const int datalen unsign long long data datalen unsign long long subkey num_subkey expand_key key keylen subkey int datalen printf llx data printf _encrypt data datalen subkey int datalen printf llx data printf decrypt data datalen subkey int datalen printf llx data return 