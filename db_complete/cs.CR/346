implement support pointer privat data general purpos secur multi parti compil yihua zhang depart comput scienc engin univers notr dame marina blanton depart comput scienc engin univers notr dame mblanton ghada almashaqbeh depart comput scienc columbia univers ghada abstract compil allow general purpos program written convent program lan guag handl privat data translat secur distribut implement corr spond function program guarante provabl protect privat data secur multi parti comput techniqu goal compil general usabl effici complet set featur modern program languag support exist compil compil picco parti ansi compil strive translat program secur multi parti implement current lack support pointer dynam memori alloc compon program work mitig limit add support pointer privat data con sequent dynam memori alloc picco compil enabl handl divers set program privat data open design space investig pointer privat data well privat locat store program report find dynam memori alloc examin topic associ common pointer refer pointer address cast build data structur context secur multi parti comput enabl compil automat translat user program pointer privat data distribut implement prov abli protect privat data comput empir evalu construct report perform repres program introduct advanc secur multi parti comput techniqu feasibl secur comput privat data belong organ complex function addit combin ubiquit prolifer cloud comput servic techniqu rise secur comput outsourc reason year number compil transform general purpos program correspond secur distribut implement develop communiti tool aim general design translat program written convent program languag equival program work univers notr dame employ secur comput techniqu protect privat data aid usabl easier programm extens knowledg secur comput techniqu produc protocol secur execut distribut environ long comput function secur evalu multipl particip function repres arithmet boolean circuit represent obvious increas program size exist compil remov programm perform translat assembl secur implement effici build block elementari oper effici secur comput goal compil target abil support privat protect public protect data variabl singl program add level complex implement support interact public privat variabl enforc secur data flow design goal exist compil support featur general purpos pro gram languag compil awar limit origin version picco compil provid support pointer result support dynam memori alloc form static array origin version parti compil ansi support pointer addit limit support float point arithmet open sourc cbmc compil build support pointer program languag support featur pointer enabl dynam memori alloc refer pointer address build data structur crucial general purpos program current unavail exist compil support focus work paper extend picco compil pointer support picco sourc sourc translat take input program written program languag variabl protect mark privat produc program implement comput secur multi parti comput techniqu base linear secret share view picco attract compil choic flexibl set set assum three group particip input parti hold privat input comput comput parti perform secur comput secret share data iii output parti entitl learn result comput composit three group arbitrari includ overlap overlap group set suitabl secur multi parti comput smc deleg comput multipl data owner subset suitabl entiti secur comput outsourc parti linear secret share techniqu secur comput place input parti split privat input secret share communic share respect comput parti comput parti proceed evalu function secret share data communic share result output parti reconstruct output valu share linear combin secret share integ valu perform local parti protect form multipl secret share integ valu constitut elementari interact oper perform measur total number interact oper well number sequenti interact round solut base secret share aim minim overhead metric picco perform sourc sourc translat input program convent program variabl mark privat public comput privat vari abl transform secur multi parti comput comput public data interact privat variabl left unchang addit privat public qualifi variabl picco allow programm mark place comput proceed concur rentli perform reason decreas number comput round extend convent syntax work investig problem pointer support program manipul privat data extend compil handl program violat secreci privat data addit permit featur program languag treatment best knowledg work explor pointer privat data includ pointer privat locat implement impact program support pointer privat data studi common pointer program impact implement languag featur exampl evalu pass argument refer dynam memori alloc pointer cast base analysi well empir evalu featur introduc margin cost topic studi work pointer base data structur written privat data indic pointer privat data attract maintain high effici popular data structur case work sort data privat manipul pointer increas complex data structur oper desir pursu altern implement emphas goal paper develop effici impl mentat data structur goal determin pointer privat data support lowest cost perform typic program lead note depend program structur asymptot complex translat program higher origin exampl consid statement privat condit con dition statement travers binari tree data privaci requir branch will execut compil produc secur implement branch will evalu hide result privat condit sequenc nest statement worst case secur program execut instruct origin program execut general translat approach lead exponenti increas runtim program practic relev work data structur util pointer privat data cover entir spectrum possibl extrem result asymptot increas convent secur counterpart extrem increas exponenti insight natur pointer attract altern implement desir data structur altern pointer base implement note extens picco pointer enabl support aspect modern program secur multi parti compil awar dynam memori alloc dynam memori alloc essenti general purpos program languag current cover secur multi parti comput compil literatur public compil secur comput data set larg size assum size data fix compil time illustr suppos applic maintain link list item arriv time natur implement link list pointer node list suppos sake exampl applic avoid pointer place item posit array issu aris array full memori realloc support larger size natur implement pointer dynam memori alloc altern possibl static alloc array general satisfactori rest paper organ overview work tion proceed present solut support pointer privat data discuss common pointer program pass argument refer dynam memori alloc array manipul pointer cast under implement framework summar oper pointer privat data formal secur design analyz data structur built pointer privat data last present perform evalu repres program util pointer privat data work review close work smc compil secur oblivi data struc ture compil fairplay pioneer work enabl compil secur parti protocol base garbl circuit extens multipl parti fairplaymp implement secur comput boolean circuit secret share techniqu tasti parti smc compil combin garbl circuit techniqu base homomorph encrypt sharemind viff multi parti compil base custom addit parti secret share standard threshold linear secret share compil custom domain specif languag repres user program parti compil ansi pcf parti garbl circuit techniqu goal support general purpos program circuit format employ optim reduc compil time storag last tinygarbl hardwar synthesi optim garbl circuit parti comput compil requir linear size memori work access memori privat locat scvm hand autom compil util oblivi ram oram target parti comput oblivm oram base secur parti comput compil transform program written high level abstract optim garbl circuit implement support data structur smc framework solut propos main motiv work store manipul privat data effici flexibl manner toft propos privat prioriti queue determinist access pattern oppos random oram base data structur hand keller scholl introduc implement array dictionari prioriti queue base flavor oram implement mitchel zimmerman provid implement stack queue prior iti queue base oblivi data compact offlin variant oram wang propos implement map set prioriti queue stack dequ base oram techniqu modifi specif data access pattern public work includ extend picco compil support dynam data structur generic general purpos program ming languag programm basic tool primit enabl build desir data structur pointer support work solut work pointer presenc privat data tradit pointer public variabl distinguish pointer privat data point singl locat privat data store point memori pool number locat privat data store locat privat data determin implement program languag consid pre alloc memori pool pointer privat locat memori pool requir data type ensur store extract privat data correct approach sever disadvantag memori pool unnecessarili increas memori footprint pool will need data type includ complex type defin struct construct clear size pool set optim perform incur unnecessarili larg comput cost touch locat memori pool singl access touch locat pool implement complex oram techniqu will evid paper larg class program applic data structur pointer privat data correspond singl locat remov secur multi parti comput techniqu pointer manipul allow pointer store singl locat drastic improv program perform compar pointer pool iii memori pool work presenc pointer cast pointer initi point pre alloc memori pool decis proper declar pointer point singl locat set locat left programm introduc addit burden programm variabl declar time variabl pointer type will requir protect pointer insid condit statement privat condit requir protect locat assign pointer protect result condit evalu eas program burden time avoid consum unnecessari memori compu tation resourc solut program interfac pointer point privat data pointer declar initi locat associ pointer initi locat set default correspond uniniti pointer comput pointer point multipl locat true locat modifi insid condit statement privat condit illustr suppos declar variabl privat integ code privat int priv cond variabl declar pointer privat integ type pointer respect locat privat implicit execut execut line singl locat execut associ list locat address address true locat protect rest work term public locat refer pointer privat data pointer singl locat initi uniniti term privat locat pointer list public locat locat remain privat consid interact public privat valu connect pointer number question address pointer declar point privat data assign address public data note pointer equival action general allow variabl declar hold privat data assign consequ convert protect form hold pointer disallow assign locat public variabl pointer declar point privat data suppos user program code declar privat integ public integ priv cond execut line store address true locat point address protect pointer dereferenc result privat condit priv cond evalu reveal examin elimin leakag pointer privat data assign locat store privat valu pointer public data modifi insid condit statement privat condit result point multipl locat answer question pointer public data updat bodi condit statement privat condit treat pointer privat data dereferenc reveal unauthor allow perform convers implicit compil will confus programm longer pointer store address public data reason disallow updat pointer public data bodi condit statement privat condit pointer implement proceed describ pointer privat data implement realiz idea outlin note program transform describ preserv semant origin program program compil correspond secur implement transform program will produc output origin program restrict user program meet order compil secur implement leakag restrict includ case interact public privat data describ addit restrict inherit picco fact bodi condit statement privat condit public side effect loop termin condit public public ensur leakag compil program place program meet requir abort compil time constraint met extens picco will allow user program compil secur counterpart pointer represent incorpor support pointer note pointer public data will modifi implement remain program languag chang implement pointer privat data maintain multipl locat reason data structur maintain pointer privat data consist integ field store number locat associ pointer list address data store iii list privat secret share tag set true data locat set special case pointer public locat tag employ uniform data structur pointer privat data data type integ float point valu pointer pointer data structur maintain includ addit field integ flag determin type data associ pointer integ float struct integ field indic indirect level pointer instanc pointer refer privat pointer type indirect level set refer pointer indirect level level will set pointer updat initi pointer declar time number locat associ pointer set address set special constant uniniti pointer time pointer modifi includ simultan pointer declar data structur updat pointer assign locat public constant address memori alloc mechan malloc size data structur set associ address store address list pointer updat pointer data structur copi store simpl manipul assign place insid bodi condit statement privat condit pointer assign insid condit statement privat condit interest case list pointer locat modifi updat valu modifi bodi condit statement privat condit requir special handl picco support specif procedur variabl pointer type modifi distinguish statement consequ discuss consid code statement priv cond pointer privat data type general case number locat associ recal assign type singl locat code written ordinari privat variabl type generic implement updat picco compil set comput bit equal result evalu priv cond notat indic protect secret share comput take place share case pointer simpl updat work procedur turn address secret share valu prevent pointer dereferenc touch memori locat execut assign combin public locat set tag base current tag result evalu priv cond pointer execut assign locat store correspond tag copi pointer store note order address arbitrari tag correspond address posit result condit assign comput content algorithm algorithm compos locat appear repeat locat store notat retriev posit element provid argument special symbol element tag output set base three case locat iii tag privat line correspond privat comput condit statement form updat bodi claus comput algorithm appli unchang pointer updat bodi claus comput perform algorithm call last pointer updat claus statement pointer content prior statement disregard pointer valu assign merg algorithm result privat condit evalu better illustr consid code segment algorithm condassign find find set return priv cond assign content overwritten content depend result evalu priv cond enter claus current content copi safe disregard correct updat insid condit statement call condassign algorithm content pointer construct compos presenc nest condit statement privat condit instanc execut code priv priv will combin content pointer algorithm call content pointer result evalu priv gorithm call result previous execut content result evalu priv evid descript modif variabl type includ pointer well data insid condit statement privat condit requir special handl insid compil condit statement picco examin list variabl modifi insid bodi statement updat differ modif surround privat condit case pointer pointer updat insid statement algorithm compil will process variabl insid bodi condit statement privat condit pointer dereferenc pointer privat locat dereferenc dereferenc privat comput store denot store locat comput dereferenc dereferenc updat locat touch content chang denot store anew denot dereferenc updat updat content locat anew true locat will set anew will unchang current form procedur applic pointer indirect level equal pointer associ list privat locat pointer comput will result produc secret share locat loos semant mean pointer indirect level comput store address pointer associ retriev dereferenc comput merg list list set locat comput correspond tag sum valu match locat individu list simpli sum tag set result correspond tag updat dereferenc assign pointer store address updat tag locat updat comput tag locat list locat merg locat list form list locat insert tag set comput appropri choic locat appear list updat tag locat true pointer privat locat dereferenc time derefer algorithm natur appli multipl time instanc version produc pointer instanc produc pointer privat depend indirect level treat root tree child node locat pointer store list leav tree eventu point privat data pointer type perform level dereferenc oper travers top level tree consolid valu store level updat valu level dereferenc updat pointer struct discuss design implement pointer struct includ represent associ algorithm pointer complex data type declar struct construct common build data structur link list stack tree pointer struct deserv special attent complex data type privat field transform need deal pointer struct privat field address question struct group number variabl privat public complex data type declar struct associ type secreci declar pointer complex data type determin pointer treat pointer privat data treat convent pointer public variabl design represent privat pointer point struct account fact field complex data type access modifi independ struct remain question maintain separ list address struct field maintain singl list address struct variabl associ pointer question reus describ algorithm work privat pointer updat dereferenc pointer struct individu field struct modif need focus answer question secreci pointer struct secreci pointer struct implicit determin protect mode field determin pointer complex data type treat pointer privat data field declar privat singl field struct public pointer data type public type treatment elimin infor mation leakag pointer struct modifi insid condit statement privat condit consid exampl data type privat public field treat pointer data type pointer privat data modifi insid statement privat condit multipl locat associ pointer dereferenc observ public field determin true locat pointer learn unauthor result privat condit complex data type struct variabl field variabl data type will check recurs determin public field provis skip cycl declar pointer data type treat pointer privat data pointer struct represent implement privat pointer struct need determin singl list locat suffici field complex data type recal field privat separ list maintain work answer question determin maintain multipl list locat list locat associ variabl struct valu field modifi individu access modifi locat field locat entir struct store singl list benefit employ represent pointer privat data simpl data type treatment impli pointer struct object will indirect level field struct pointer oper privat pointer struct repres pointer struct record pointer oper pointer updat valu remain unchang derefer specif field pointer retriev variabl minor chang describ algorithm need determin offset address record perform dereferenc procedur pointer locat locat modif appli case dereferenc modifi assign derefer retriev entir record rec iter field struct retriev derefer field describ updat dereferenc pointer rec perform equival field struct pointer program discuss common pointer program translat environ comput privat data topic cover pass argument refer dynam alloc memori array manipul pointer cast data structur constitut common pointer discuss separ pass argument refer function call contribut basic softwar engin principl modular program design expens term stack memori usag pass argument led differenti function call argument pass refer case function typic take pointer argument updat dereferenc pointer will visibl complet function call argument pass refer input output pass privat variabl function refer inherit benefit convent public variabl program languag good news special provis need pass privat variabl refer effici implement pass argument refer address suppli function call oppos suppli exist pointer pointer will singl locat allow enjoy benefit avoid extra resourc slowdown work pointer privat locat dynam memori alloc pointer program dynam alloc memori free store dealloc longer focus style malloc free pointer public variabl modif need support dynam memori alloc pointer privat variabl malloc alloc request number byte heap pass argument function malloc result function address alloc variabl array element case dynam array alloc store pointer support dynam memori alloc privat variabl start code int int malloc sizeof int int int malloc sizeof int point singl variabl point dynam array size assign oper direct save malloc result pointer compat type case pointer privat variabl privat pointer repres multipl field consequ assign malloc result direct privat pointer modifi interfac pointer privat variabl function implement privat malloc invok privat int pmalloc privat int pmalloc take argument request number dynam variabl data type function return data structur privat pointer implement locat set address variabl alloc array argument function privat data type proper alloc initi memori exampl picco privat integ repres variabl type mpz gmp librari privat float repres mpz variabl memori choic function crucial call malloc simplifi programm effort transform exist program equival program comput privat data prefer pmalloc explicit comput refer privat data number variabl alloc initi comput call free pointer allow dealloc memori variabl dynam array pointer point support function privat variabl implement function pfree take pointer privat variabl dynam array argument pfreew distinguish case pointer provid argument function singl locat privat locat public list handl case simpl effici simpli call free command dealloc memori associ address store pointer pointer privat data public locat common program pointer privat data build data structur privat data link list stack free memori pointer privat data case extrem effici introduc addit overhead handl second case well challeng dealloc physic memori public observ outcom extrem care reveal true locat store pointer privat locat time reduc memori usag exampl simpl strategi dealloc memori associ locat list address will accept program illustr consid dummi exampl pointer alloc memori pmalloc locat pointer point swap base result privat condit evalu ident locat list address true address distinct suppos process data point dealloc correspond memori dealloc address list dangl pointer data point longer access implement pfree restrict permit general call pfree result dealloc memori associ address list address address dealloc depend privat data function public data dealloc memori associ true locat pointer pointer store locat list adjust preserv correct comput involv addit resourc describ realiz idea pointer pfree call default locat correspond unini tializ pointer list address public knowledg choos perform memori dealloc ensur memori deactiv pointer uniniti free locat list altern locat smallest number pointer freed free memori privat updat valu store remain locat store maintain correct will ensur true locat valu store remain locat will remain unchang true locat store true locat valu store locat remain unchang time call pfree store denot valu store locat oblivi updat comput satisfi requir true true locat fals result will true fals result will fals result will surpris formula depend current discuss assum privat pointer point pointer data type idea will appli point pointer second updat privat pointer store freed locat list comput perform pointer store rational true locat addit work requir fact public job ensur free affect variabl true locat pointer store move true locat prior memori dealloc replac pointer list locat guarante includ origin store updat locat tag pointer store list retriev posit pos correspond tag pos replac pos pos pos appear locat includ second time tag set sum tag locat pos return exampl prior call pfree store store pfree call schedul dealloc chang place data locat copi locat locat remov correspond tag locat correspond tag store tag store singl locat tag set origin tag user program written correct leav dangl pointer call free implement pfree will maintain pointer exact tag set locat tag set call dealloc memori correspond pointer dangl pointer tag pointer reason call pfree number address pointer reduc treat correspond tag public program correct written open tag reveal privat assum tag modifi behavior note pmalloc pfree will allow insid condit statement privat condit function public side effect access array element common pointer program manipul array pointer static alloc array array treat constant pointer point element array array pointer tight coupl pointer extens work array array index array base pointer array index appli pointer construct pointer array support pointer privat data pointer index pointer privat data public implement natur iter locat address list advanc multipli size data type retriev data determin posit combin privat tag locat result comput pointer dereferenc retriev data posit advanc posit data item permit negat indic negat locat decrement amount oper pointer array bound picco static alloc array privat variabl array size store array creation time know size array allow compil support number oper array permit privat index array element privat posit retriev array syntax size array support privat index techniqu implement permit oper inner dot product array introduc optim runtim compil program treat privat index essenti secur comput privat data support array dynam alloc heap offer pointer index privat privat pointer main challeng overcom fact size memori point locat store arbitrari correspond valid memori address unaccess program correspond memori mark locat stack pointer address alloc variabl correspond size meaning determin access address trigger invalid memori access except safe program languag size proper alloc memori determin util implement privat index oper requir array size pointer privat data memori malloc alloc heap mark size alloc block malloc free maintain determin pointer content fall proper alloc memori block case access size implement privat index detail addit privat index static alloc array impl ment picco permit privat index pointer privat data success locat store alloc prior call pmalloc dealloc call pfree secur implement picco produc call malloc call pmalloc program intern maintain list address turn malloc correspond memori request user program address list freed privat index call user program pointer store address iter list maintain address address retriev correspond block size store malloc check offset multipl data type size check succeed locat alloc address list adjust data type size size array point note implement correspond memori block address array legitim negat valu circumst address fall memori block dynam allo cate user privat index oper perform return result set secret share note result set guarante interpret error proceed comput despit error send signal store error messag fix locat program catch signal note address call pmalloc return public programm avoid invalid address ideal fact privat index oper carri address determin program compil time will incorrect written user program error will trigger program execut program languag perform static analysi user program array bound check dynam best perform static program analysi compil time warn user place error current discuss refer singl locat store pointer view common privat index pointer multipl locat oper perform locat separ combin pointer dereferenc custom trigger user program pointer arithmet pointer modifi set address point result arithmet express evalu pointer arithmet reli pointer increment decrement integ amount move posit array arithmet oper meaning move variabl pointer arithmet unreli error prone chose limit pointer arithmet user program compil process introduc mechan elimin larg class program error constrain express user program program written avoid pointer arithmet perform function chang posit array program will written emphas disabl pointer arithmet limit compil approach deliber choic reduc program error constrain express languag pointer cast variabl cast refer abil treat variabl type variabl type cast constant variabl type constant variabl type typic preserv convers type data represent convers involv comput picco convers float point integ valu base algorithm convers integ type size float point type size requir minim work assum overflow underflow detect requir cast shorter represent pointer cast handl differ uniqu sens allow pointer base memori cast data type pointer cast involv data convers memori read interpret sequenc element type pointer cast meaning limit number data type order support pointer cast picco resolv main question data represent privat data type differ data represent correspond public data type determin mimic size public data type work block privat data modifi data secret share valu picco repres element field exampl share bit integ share bit integ bitlength programm cast memori store array bit integ pointer array bit integ expect extract bit integ bit integ meet expect privat data will process assembl form modifi origin data pointer cast data duplic memori perform convers time cast solut comput time pointer dereferenc record data type cast perform data type pointer time cast delay convers pointer dereferenc store cast data type pointer extract relev portion memori pointer dereferenc time note presenc sequenc cast singl data type maintain memori layout chang picco simpl data type defin bitlength cast exampl pointer integ type pointer integ type guarante data type will bitlength multipl case calcul relev portion memori base posit memori dereferenc partial fill element reliabl extract exampl suppos memori fill element bit integ array cast array bit integ fourth element will extract bit origin data retriev element result memori violat data origin array fulli form element analysi discuss multipl aspect privat pointer design program summar notion pointer privat data oper formal program execut involv pointer privat data compli standard definit secur secur multi parti comput pointer privat data defin style pointer privat object store locat object privat object type primit privat data type privat int float composit data type style struct element privat object pointer privat object second third categori defin pointer privat data recurs pointer indirect level nest struct type combin primit composit pointer data type newli defin oper pointer privat object pointer read updat denot read updat dereferenc pointer read updat denot read updat pointer updat insid condit statement privat condit prior work multiplexor notat denot oper mux cond set privat cond evalu pointer read insid condit statement privat condit process ident convent read read list separ oper dereferenc pointer updat insid condit statement privat condit denot mux cond previous case process dereferenc pointer read presenc condit statement dynam memori alloc form malloc assign pmalloc type notat alloc type dynam memori dealloc pfree denot dealloc array index public treat general pointer dereferenc notat read updat mux cond denot read updat updat insid condit statement privat condit array index privat divid three oper readp updatep muxp cond oper perform locat store pointer correspond array bound alloc pmalloc interfac static array declar pointer cast denot cast type type data type cast correspond valu associ privat object data structur correspond pointer privat object depend context cond privat bit variabl type public variabl read insid condit statement privat condit updat perform mux oper list implicit defin oper perform pointer privat object will reject compil address public object updat pointer privat data updat mux pointer public data mix privat privat field defin struct construct modifi insid condit statement privat condit correspond mux oper pmalloc pfree call insid condit statement privat condit mux oper cast call insid condit statement privat condit modifi public store data evid prior descript implement pointer oper maintain invari locat store pointer privat object exact true locat object tag correspond locat set tag correspond locat set invari true well form program violat memori associ pointer dealloc pointer case tag set dereferenc pointer will return data show secur pointer oper refer privat data tradit simul base definit secur picco built top threshold secret share techniqu comput parti util setup secur analysi der techniqu offer theoret secur util statist oppos comput indistinguish secur definit definit parti engag protocol evalu program mix public privat data denot view execut form input intern random coin toss messag pass parti protocol execut ini denot subset particip size denot combin view particip execut protocol privat presenc semi honest adversari coalit size exist probabilist polynomi time simul input parti output produc view statist indistinguish output parti theorem well form program augment pointer public privat data compil privat protocol comput carri parti proof proof proceed evalu oper involv pointer privat object sum mariz build simul pointer oper appli composit theorem canetti result guarante combin oper secur oper picco secur program comput parti execut describ simul oper involv pointer privat object turn prior oper parti adversari coalit hold share relev privat data item includ privat input data privat field pointer data structur time oper termin parti hold share output updat privat item function modifi data public parti includ simul read oper simpli retriev data structur store local computa tional parti simul interact parti updat data structur contain simpli copi parti simul interact parti read store singl locat store locat retriev simul interact parti store multipl locat parti instruct iter locat extract valu store combin valu privat tag associ locat describ section procedur oper public valu locat privat comput consist multipli tag privat data tag case pointer pointer simul particip multipl oper behalf honest user invok simul correspond multipl oper number time pointer object complex data type declar struct singl field dereferenc simul interact parti locat valu retriev local modifi offset parti updat read referenc pointer associ locat store locat parti interact simul store mul tipl locat parti iter locat updat locat secur multipl describ section locat number public simul engag pre determin number secur multipli cation simul honest user invok simul secur multipl protocol point struct field updat interact parti ident valu retriev comput valu locat store locat adjust offset struct mux cond implement condit assign parti simul local merg list store privat tag updat base privat condit cond describ algorithm simul particip number secur multipl determin public content perform invok multipl oper simul mux cond condit updat dereferenc pointer involv modifi store locat fix function cond simul particip pre determin number secur multipl simul honest user simul secur multipl alloc type alloc memori number privat object type type involv secur comput simul interact parti purpos oper dealloc locat store correspond special uniniti parti includ simul perform oper locat remov data structur store valu locat updat secur multipl describ simul produc communic behalf honest user simul invoc secur multipl protocol parti consequ locat pointer store updat locat tag procedur depend public data simul invok simul number secur multipl behalf honest user simul secur multipl read dereferenc pointer read simul will simul invo cation secur multipl behalf honest user differ simul read pointer locat local adjust space occupi item parti includ simul comput updat procedur updat differ local public comput mux cond mux cond simul will particip pre determin number secur multipl simul honest parti simul comput public data readp retriev element array repres pointer privat locat store correspond proper alloc memori block parti simul perform privat tabl lookup oper implement picco read element array easili simul array size determin public store comput parti elig address store simul simul privat tabl lookup oper behalf honest user invok privat tabl lookup simul multipl locat combin privat tag simul engag secur multipl simul updatep oper proceed readp oper perform order parti simul local determin elig address ing public parti simul modifi data store locat tag secur multipl engag inter action tabl updat privat locat simul engag pre determin number secur multipl simul simul interact correspond pri vate tabl updat simul simpli invok correspond simul secur multipl tabl updat privat locat muxp cond condit updat array element privat perform regular updat parti simul combin data cond singl simul will engag simul fix number secur multipl follow step updatep simul produc messag describ simul oper cast type oper updat public associ pointer sim ulat interact parti cover oper pointer privat object conclud proof note secur result state well form program discuss compil will reject type improp written program static analysi compil time exampl pointer public data modifi insid condit statement privat condit program will compil compil will filter major program error well form program enjoy simulat secur type error compil detect static analysi deal mem ori access invalid locat boundari array access access hard code invalid locat access trigger comput parti continu execut quit error privaci violat place incorrect share privat data read data will remain protect form recon struct origin intent note discuss appli dereferenc pointer offset public offset public implement access array privat locat boundari access call oper improp alloc array will skip runtim memori layout differ platform illeg memori access result behavior comput parti execut parti result segment fault faster parti simul guarante ident environ honest parti simul distinguish program illeg memori access base point execut parti abort comput exclud program secur statement theorem guarante program compil framework will result privaci violat summar solut guarante program compil framework reveal unauthor privat data simul written program illeg memori access indistinguish real execut proper written program enjoy simul base secur pointer base data structur popular data structur typic built pointer discuss implement pointer privat data complex perform explor link list tree stack queue link list link list consist sequenti link group node singl link list node compos data refer form pointer node sequenc complex variant doubli circular link list refer field incorpor addit link link list allow effici node insert remov ideal candid implement stack queue well represent graph adjac list discuss implement link list store privat data start analyz oper standard link list elabor special case link list store sort data repres typic link list program attract featur provid simpl demonstr form work sort data secur comput framework standard link list ubiquit link list program analyz link list correspond oper link list store public data node insert cost node insert fix place list perform search requir time number node list node travers sequenti delet node fix place list case stack queue involv time delet preced search node delet search delet requir time link list store privat data refer field hold pointer privat data record type time node creation pointer store singl locat node insert place node list manipul pointer take time effici search list involv privat comparison node process reveal result individu comparison privat data total work node delet list time complex oper pointer store singl locat node remov vari posit list posit protect pointer start acquir multipl locat time complex list travers delet search fact search data list remain privat remov node eras content node indic data case pointer singl locat cost list search oper chang list will reduc size defer discuss case node guarante search remov privat locat subsect sort link list mention discuss sort link list demonstr sort data process general purpos secur comput compil understood typic link list best work sort data discuss consecut descript node insert link list insert posit determin base data store list involv time public data complex oper work privat data locat node insert remain privat depend privat data execut simul node insert posit consid way insert node perform result pointer updat tradit implement node insert link list correct insert point updat pointer node list point node pointer node point node list condit statement base privat data will result locat pointer node locat pointer node insert execut oper node list pointer node origin list store locat pointer newli insert node store locat oper perform repeat node list acquir locat maximum current list size list built insert node time cost node insert list travers node delet search take time node delet fix locat bound constant number node insert exist list provid sort input program complex oper unchang public data case data updat implement sort link list insert node list swap content node list correct insert point algorithm implement oblivi privat data smc compil comput process node list start newli insert node base result privat comparison current data perform swap data unchang node insert refer field node point singl node list complex oper unchang public version clear avoid acquir larg number locat refer field pointer base data structur privat move data oppos privat move pointer prefer work sort data return question delet node privat locat standard unsort link list search node remov list approach insert node privat posit appli delet node privat posit standard approach manipul pointer will result acquir multipl locat pointer degrad perform oper second approach data updat oblivi place data delet node list scan node swap ping valu base privat data comparison simpli remov list will maintain optim complex oper tell tradit implement data struc ture exhibit perform wors altern implement secur comput framework analysi view step make inform decis implement tree tree implement hierarch data structur common store sort data search easi tree node typic compris data list refer child node node balanc search tree search node insert node delet log time complex great chang write program implement search tree privat data distinguish tree pre built prior start comput tree built gradual comput proceed pre built tree consid balanc binari search tree suppos perform search tree tradit implement involv log condit statement travers tree root leaf choos left child current node data privat statement privat condit branch comput execut result sequenc log nest privat condit execut branch comput touch node tree exponenti increas complex compar work public data consid node insert delet result node rotat balanc tree discuss gradual built tree gradual built tree analog insert node sort link list nipul pointer insert node appropri place tree insert node fix locat move data place complex option insert dele tion search closer travers tree place insert node search node will touch result nest privat condit execut reveal place node insert pointer node will acquir locat add comput associ node rotat tree unbalanc pointer will acquir locat faster maximum pointer repeat call insert gradual build tree eventu alli node will point node complex insert delet search complex clear avoid altern implement pursu search tree repres worst scenario implement algorithm privat data general purpos compil incur exponenti increas runtim compar public data coun terpart evid discuss link list tree search element store singl element perform linear time generic techniqu data store sort custom intern built implement specif data structur conceptu simpler effici maintain data unsort form append insert time shift data implement delet stack stack character lifo behavior achiev push pop oper fundament applic pars express pars program compil backtrack implement function call execut program best knowledg despit popular data structur studi context secur multi parti comput analysi consecut implement stack work privat data demonstr appeal secur comput pointer base implement stack built link list node insert head list remov head well take time discuss implement oper privat data maintain constant time complex stack privat data consid possibl push pop oper perform insid condit statement privat condit case public oper take place record top stack implement condit privat push oper manipul pointer top stack will store locat push oper base privat condit implement push oper equival execut code node node priv cond top top store singl locat time condit push merg list top take time merg list top take time implement pop oper privat condit involv execut code priv cond temp top top top temp complex oper domin second assign top point locat field locat store locat well complex assign worst time complex condit push stack record condit pop implement push pop oper depend privat condit maintain singl chain record pointer singl locat data updat push pop oper result work insert node data data depend privat condit stack time pop privat locat node data eras data queue queue data structur maintain set entiti event order wait serv distinguish fifo lifo prioriti queue implement queue involv maintain pointer head tail head point queue element will remov dequeu oper tail point element queue enqueu oper stack enqueu dequeu oper fifo queue implement public data privat data privat condit statement complex complex data structur insert delet search link list link list delet privat locat search tree stack queue stack condit privat push pop queue condit privat enqueu dequeu prioriti queue prioriti queue condit privat enqueu dequeu tabl perform data structur pointer privat data enqueu dequeu oper implement privat pointer manipul implement maintain pointer head tail queue updat second pointer asymptot increas amount work privat data updat prioriti queue node addit store prioriti assum privat dequeu remov node highest prioriti complex prioriti queue oper depend under data structur implement best complex public data log enqueu averag case log dequeu heap suppos oper condit statement privat condit link list store queue node best perform achiev enqueu dequeu store newli insert node remov highest prioriti node privat locat enqueu dequeu store list sort remov node dequeu maintain enqueu dequeu oper depend privat condit approach regular queue stack under implement heap insert node fix leaf locat log compar exchang oper maintain invari max heap implement enqueu realiz dequeu requir work reveal path travers root leaf path choic depend privat prioriti implement maintain complex enqueu dequeu perform result privat condit evalu summari conclud summar perform data structur implement privat data newli introduc pointer privat data record tabl list best perform achiev pointer base implement data structur discuss data structur evalu altern mechan exampl analysi suggest implement data structur array privat data pointer privat data result complex case public data well util oram base implement improv asymptot complex data structur lead faster runtim practic larg data set pronounc benefit oram will observ implement search tree oper perform polylogarithm time solut hand oram link list increas complex oper complex delet privat locat search reduc data structur benefit oram base implement stack queue oper updat data structur perform insid privat condit statement oram techniqu involv larger constant big notat simpl oper initi setup cost leav thorough comparison oram pointer array base implement data structur framework direct futur work perform evalu report implement evalu number repres program util pointer privat data program evalu context secur multi parti comput draw comparison prior work case measur cost pointer cost pointer base data structur program implement reduc function pointer note picco secur multi parti comput outsourc input program input parti client program implement evalu work includ program construct link list privat data read input travers list count number time data appear list tradit implement link list record privat data prepend list build program figur notic program optim term time util con current execut capabl provid picco reason implement optim version program differ privat comparison list travers execut singl round batch construct evalu pointer base implement work privat data maintain sort form general privat manipul pointer locat oblivi move data build program sort link list function program program creat link list travers count number occurr data item differ list build evalu variant program correspond pointer updat data updat describ program variant figur program variant figur third program implement mergesort take array unsort integ input program extens pointer privat data pass data refer function condit swap data item base valu perform call compar exchang oper mergesort chosen best perform oblivi sort object demonstr perform program util pointer privat data exercis modular design program compar program pointer evalu version mergesort perform compar exchang oper place call function point pointer base mergesort figur pointer base implement figur program implement shift reduc parser context free grammar cfg privat data fundament applic natur implement compil build maintain stack support pointer privat data place choos struct node privat int data struct node public int count public int main public int privat int output struct node ptr head construct list count ptr pmalloc struct node smcinput ptr data ptr head head ptr travers list ptr head count ptr data output output ptr ptr smcoutput output return figur construct travers link list cfg correspond algebra express consist addit multipl parenth ses privat integ variabl statement statement statement term term term term factor factor var statement grammar general complex express program work privat well public variabl type view applic enabl evalu custom function privat data write compil separ program function function evalu input consist privat data provid input parser note function grammar rule privat well result increas program perform parser lookahead charact complex implement program includ paper approxim perform overhead associ pointer base stack creat pro gram perform arithmet oper privat data parser parser execut note evalu mergesort equival function program complex pars input grammar maintain stack perform addit multipl struct node int data struct node public int count public int main public int privat int output tmp struct node head construct list count pmalloc struct node smcinput data head head head data data tmp data data data data tmp travers list ptr head count ptr data output output ptr ptr smcoutput output return figur construct travers sort link list data updat program compil picco extend pointer support describ work distribut set three comput parti compil program util gmp librari larg number arithmet openssl implement secur channel pair comput parti experi three ghz core machin run red hat linux connect ethernet experi time report time run correspond deviat confid interv experi work unsort sort data tabl tabl program data size link list pro gram well mergesort data size correspond number element input set struct node int data struct node public int count public int main struct node head pmalloc struct node head data public int privat int output struct node count pmalloc struct node smcinput input will posit data head data data data data travers list ptr head count ptr data output output ptr ptr smcoutput output return figur construct travers sort link list pointer updat shift reduc parser arithmet oper size correspond number arithmet oper formula mix multipl addit link list experi time correspond time build travers link list tabl report size field element bit repres secret share valu program written work bit integ program tabl statist secur parison requir length field element increas statist secur paramet set size field element size data bit ensur data valu repres public int privat int public void swap privat int privat int privat int tmp tmp tmp void mergesort public int public int public int size size int tmp size mergesort mergesort size size swap figur mergesort median program pointer work link list secur comput framework effici build link list consist thousand element take fraction second travers link list quick link list size second optim program perform sort link list character perform expect data structur hide place node data item insert mention good reason implement variant data structur provid sort link list illustr purpos version sort link list list travers time regular unsort link list report time sort link list optim regular link list build sort link list oper take time time perform oper element input quadrat perform observ empir increas size data set factor time increas list build time insert oper perform sequenti mergesort variant pointer privat data function call compar exchang oper comparison variant pointer correspond function call differ perform small amount pointer version perform work faster last perform shift reduc parser extrem fast entir consist public int privat int void mergesort public int public int public int size size int tmp size mergesort mergesort size size tmp tmp public int main public int median smcinput mergesort smcoutput median return figur mergesort median program pointer time take evalu provid formula privat data despit complex function employ pointer base stack time perform arithmet oper time parser take experi demonstr pointer great potenti general purpos program evalu privat data pointer base data structur exhibit higher perform framework public data counterpart custom intern built implemen tation data structur recommend conclus work introduc solut incorpor support pointer privat data general purpos secur multi parti comput compil maintain effici pointer base impl mentat distinguish pointer public address pointer privat address introduc provid extens evalu impact design featur program languag well evalu perform common pointer base data structur analysi empir experi indic cost pointer privat data minim case pointer base data structur retain best program field data size size bit link list optim link list shift reduc parser arithmet oper tabl perform repres program unsort data structur measur second program field data size size bit sort link list sort link list mergesort pointer mergesort pointer tabl perform repres program sort data structur measur second plexiti store privat data complex notabl balanc search tree increas privat data flow custom intern built implement oblivi data structur work sort data recommend hope work valuabl insight program languag featur develop program secur comput general purpos compil well highlight benefit limit pointer base design smc compil develop acknowledg ethan blanton discuss work work support grant cns cns nation scienc foundat air forc offic scientif opinion find conclus recommend express public author reflect view fund agenc refer gmp gnu multipl precis arithmet librari http mehrdad aliasgari marina blanton yihua zhang aaron steel secur comput float point number network distribut system secur symposium ndss assaf ben david noam nisan benni pinka fairplaymp system secur multi parti comput acm confer comput communic secur ccs dan bogdanov sven laur jan willemson sharemind framework fast privaci preserv comput european symposium comput secur esor canetti secur composit multiparti cryptograph protocol journal cryptolog ivan damga martin geisler mikkel krøigaard jesper buus nielsen asynchron multiparti comput theori implement public key cryptographi pkc wilko henecka ahmad reza sadeghi thoma schneider immo wehrenberg tasti tool autom secur parti comput acm confer comput communic secur ccs andrea holzer martin franz stefan katzenbeiss helmut veith secur parti compu tation ansi acm confer comput communic secur ccs marcel keller peter scholl effici oblivi data structur mpc asiacrypt benjamin kreuter abhi shelat benjamin mood kevin butler pcf portabl circuit format scalabl parti secur comput usenix secur symposium chang liu yan huang elain shi jonathan katz michael hick autom effici ram model secur comput ieee symposiym secur privaci chang liu xiao shaun wang kartik nayak yan huang elain shi oblivm program framework secur comput ieee symposium secur privaci dahlia malkhi noam nisan benni pinka yaron sella fairplay secur parti comput system usenix secur symposium john mitchel joe zimmerman data oblivi data structur symposium theoret aspect comput scienc stac ebrahim songhori siam hussain ahmad reza sadeghi thoma schneider farinaz koushanfar tinygarbl high compress scalabl sequenti garbl circuit ieee sym posium secur privaci toma toft secur data structur base multi parti comput acm symposium prinici ples distribut comput podc xiao shaun wang kartik nayak chang liu chan elain shi emil stefanov yan huang oblivi data structur acm confer comput communic secur ccs yihua zhang aaron steel marina blanton picco general purpos compil privat distribut comput acm confer comput communic secur ccs 