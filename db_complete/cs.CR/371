internship kerckhoff institut wetzel bokslag spong engin introduct keccak keyak jos wetzel wouter bokslag abstract document introductori overview algo rithm design compon under keccac cryptograph primit keyak encrypt scheme authent session support cryption document aim familiar reader basic principl authent encrypt spong duplex construct full state key well regular version permut function under keccak keyak well keyak motorist mode oper keyword keccak keyak sha caesar competit authent cryption spong construct permut base cryptographi introduct document present overview algorithm design compon lie keccac cryptograph primit subset standard ize nist sha cryptograph hash function keyak refer simpli keyak encrypt scheme authent session support encrypt goal document provid reader overview goal authent encrypt context caesar competit permut construct under keccak keyak famili document seek compil state art overview permut base encrypt spong construct origin seek improv current state art document intend implement refer implement refer origin specif document keccak keyak seek gather document matter singl access introductori document omit design consider justifi cation secur proof formal sake breviti clariti aim student industri profession authent encrypt authent encrypt authent encrypt associ data aead cryptograph mode oper provid confidenti integr authent assur data decrypt combin singl step integr valid data authent scenario man middl mitm attack arbitrari modif sender phertext receiv recipi lead host prob lem rang simplest case data corrupt bit flip attack pad oracl attack cryptograph scheme guarante confidenti iti risk attack categori mode oper provid confidenti authen ticiti aead differ allow authent data separ plaintext addit authent data aad requir confidenti authent encrypt serv prevent modif metadata address port network data mail header email data mitm attack document refer refer categori explicit state aros observ combin block cipher confidenti mode block cipher authent mode prove easi wrong practic combin secur cipher secur mac result insecur authen ticat encrypt scheme practic attack ssl tls exampl mode api encrypt option decrypt option ciphertext authent tag plaintext secret key option header decrypt ciphertext option header addit authent data aad discuss authent tag consist messag authent code mac decryp tion output plaintext error provid authent tag match provid ciphertext option header form special block cipher mode oper ocb eax ccm gcm general construct limit block cipher combin encrypt scheme mac provid encrypt scheme secur chosen plaintext attack cpa mac unforg chosen messag attack cma three widespread composit primit list krawczyk encrypt authent eta plaintext encrypt mac ciphertext generat authent tag result pair fig encrypt authent encrypt authent aam mac plaintext produc plaintext encrypt separ pair fig encrypt authent authent encrypt ate mac plaintext generat concaten plaintext result encrypt fig authent encrypt note figur key encrypt authenti cation recommend secret key differ ent purpos encrypt authent approach secur provid under primit meet appropri secur requir encrypt authent authent encrypt secur implement secur hand krawczyk initi report ate scheme ssl tls secur revis ssl tls block cipher cbc mode insecur plaintext encod pad ded implement troubl nist block cipher mode oper ccm gcm offer function aead function precis note random append ciphertext authent pair caesar caesar competit authent encrypt secur applic robust project identifi portfolio authent cipher offer advantag gcm suitabl widespread adopt caesar submiss famili authent cipher member vari extern paramet caesar submiss follow api specif consist encrypt option option option ciphertext plaintext secret key option associ data option secret messag number option public messag number figur secur purpos restrict input integr confidenti length option impos singl requir plaintext variabl associ data variabl secret messag number fix public messag number fix key fix fig secur purpos restrict input caesar submiss cipher expect maintain secur choic messag number except reus singl pair encrypt key keccak keccak famili spong function subset standard nist sha cryptograph hash function keccak permut denot permut width primit spong construct permut choic sha permut consist iter applic simpl round function block cipher key schedul oper limit bitwis xor rotat descript draw outlin spong construct spong construct spong function type algorithm finit intern state consum arbitrari length input bitstream produc output bitstream arbitrari desir length spong function serv implement cryptograph primit cryptograph hash function mac stream cipher prngs scheme arbitrarili long input output size spong construct iter construct oper intern state width bit denot bitrat denot capac iti appli fix length permut function illustr figur fig spong construct spong function start pad input string length multipl revers pad rule cut block bit bit state initi spong construct proceed phase absorb absorb phase bit input block xore bit state applic permut function state input block process fashion pad input fulli absorb spong con struction switch squeez phase squeez squeez phase user choos number bit size output block block bit state return fol low applic permut function note bit capac state direct input block absorb phase output squeez phase exampl spong construct api input messag request output length permut function permut function denot advantag permut tradit usag block cipher key schedul invers function oper intern state repres array lane length state divid part depend axi axe select bit figur axe repres select lane axi bit size lane fig full state fig state row column lane fig state plane slice sheet function consist iter applic round function permut width depend number round illustr figur fig permut pseudo code keccak round return keccak round function illustr figur consist applic step state round constant current round defin round constant tabl figur fig round pseudo code figur denot complet permut state array denot lane intermedi variabl con stant rotat offset list tabl figur oper bitwis cyclic ward shift oper move bit posit posit round step bit diffus xor xor xor xor xor rot xor step inter slice diffus step disturb align lane transposit rot step linear map xor step break symmetri xor return fig round constant tabl round constant round valu lfsr mod mod period fig rotat offset tabl pad revers pad rule keccak pad messag sequenc bit block denot multi rate pad denot append singl bit minimum number bit singl bit length result multipl block length keccak spong function combin document function spong construct tain spong function denot bitrat denot capaci illustr figur note pseudo code figur limit case number bit messag multipl span number byte multipl lane size case sha paramet pseudo code denot state array lane pad ded messag organ array block organ array lane fig spong function pseudo code keccak initi pad xor absorb phase xor keccak squeez phase empti string output request keccak return keyak keyak permut base authent encrypt scheme support ses sion submit round caesar competit document mention keyak refer keyak explicit state keyak oper call motorist mode under permut free invers keyak offer featur place encrypt paralleliz encrypt decrypt crement aead simultan process plaintext associ data ses sion support intermedi authent tag option combin wrap unwrap session unwrap plaintext tag valid keyak consist name instanc river keyak lake keyak sea keyak ocean keyak lunar keyak specif paramet valu detail materi draw outlin duplex construct duplex construct construct close spong construct equival level secur duplex construct allow altern input output block figur rate spong con struction analog full duplex communic allow effici impl mentat reseed prngs scheme requir call mutat function input block fig duplex construct duplex construct spong construct start pad input string length multipl revers pad rule cut block bit bit state initi spong construct stateless call duplex construct sult object accept call input string return output string depend input receiv object call duplex object denot duplex object bit intern state set initi call denot input string denot request number bit maximum number bit request bitrat input string short pad singl bit block maximum length call max imum duplex rate denot smaller bitrat execut call will duplex object pad input string xor bit intern state appli permut function state return bit state output call empti string refer blank call call refer mute call exampl duplex construct api initi duplex call key spong construct key spong construct divid categori outer key spong construct bertoni introduc key spong construct evalu spong function concat nation key messag type key spong denot outer key inner key spong construct chan introduc inner key spong construct take regular spong construct spong permut permut key mansour construct build bit block cipher bit permut bit key full state key duplex spong construct order optim effici spong base authent encrypt mennink formal full state duplex spong fds construct differ origin duplex construct key explicit initi state make key construct absorpt phase perform entir state enforc explicit usag key mennink prove increas input block length bitrat full state permut width notic impact secur generic construct allow inject bit call under permut improv perform note full state key spong construct usag outer key spong construct longer secur differ usag inner key spong construct special case full state key spong fks construct full state key spong construct full state key spong fks construct work initi inner bit state key outer bit messag pad bit length multipl absorb usual spong fashion absorpt squeez phase output outer bit state usual spong fashion request amount bit output illustr figur fig full state key spong fks construct full state duplex construct full state duplex spong fds construct work initi inner bit state key outer bit figur full state key duplex fskd construct outlin figur initi consist set inner bit state key outer bit string applic permuta tion essentiali initi ident initi singl duplex call unpad duplex object subsequ duplex call consum messag bit output string illustr figur construct ident save slight differ initi fig full state duplex spong fds construct fig full state key duplex fskd construct oper motorist mode express call fskd object motorist mode motorist mode construct support authent encrypt sequenc messag session serv replac keyak session process messag crypto gram messag consist plaintext associ data will refer metadata cryptogram consist cipher text metadata authent tag messag consist metadata correspond cryptogram will ciphertext wrap messag wrap cryptogram encrypt ciphertext comput authent tag full sequenc messag unwrap cryptograph unwrap decrypt ciphertext plaintext verifi authent tag return plaintext tag valid session tag cryptogram authent full sequenc mes sage receiv start session start session requir secret key nonc secret key uniqu session duplex instanc motorist mode spong base support duplex instanc form call piston oper parallel call plex function input key nonc plaintext metadata bit output tag key stream bit motorist duplex instanc differ origin duplex construct tion full state key duplex fskd instanc accept input block larg pad permut width bitrat width motorist mode support parameter degre paral lelism form array call piston fskd object motorist distribut messag consist plaintext metadata set piston duplex instanc order produc authent tag pend full messag messag bit suppli singl plex instanc motorist perform dedic process call knot messag extract chain valu duplex instanc concaten inject duplex instanc state instanc depend full sequenc messag final extract authentica tion tag singl duplex object authent full messag sequenc session session support order start session motorist consum global uniqu secret string call secret uniqu suv consist key nonc recom mend order key come inject duplex instanc append diversif string diversifi state singl motorist session suffici secur communic clear indic messag sender includ identifi messag metadata altern approach reli strict altern convent suv nonc requir requir motorist session perform unwrap function layer motorist three layer handl aspect function consum input term byte stream string byte read written sequenti fashion sequenc con secut byte stream call fragment piston layer piston layer effect augment full state key duplex fskd con struction maintain bit state appli permut paramet squeez rate absorb rate handl basic function data inject simultan encrypt decrypt sire tag extract set fragment offset piston state initi denot byte state exampl piston api denot under permut function squeez rate absorb rate proper engin piston construct full width input block suppli plaintext metadata fragment offset code illustr figur block start number lead zero start plaintext fragment metadata fragment fragment offset absenc plaintext metadata start run fig piston full width input block plaintext piston input block fragment offset eom eom fragment offset function denot number byte output block tag delimit messag input block mes sage string inject collect case tag request collect inject messag string take crypt crypt fragment offset function denot plaintext fragment current input block start plaintext fragment denot eom fragment offset previous input block plaintext fragment start inject start inject start fragment offset function denot start metadata fragment current input block plaintext fragment current input block metadata fragment start start inject inject fragment offset function denot metadata fragment current input block input block absorb state permut function appli outer state arbitrari number byte tag start arbitrari number byte keystream start tag piston function replac tradit singl duplex function duplex object illustr figur achiev function function illustr figur support combin encrypt plaintext decrypt cipher text absorb correspond ciphertext plaintext outer state long input updat plaintext fragment appropri fragment offset param ter input bytestream plaintext ciphertext output bytestream result will written state plaintext fragment ject fragment will earlier input haust plaintext fragment set offset indic encrypt fals crypt true fig pseudo code function illustr figur inject metadata input bytestream start set indic current input block plaintext fragment metadata fragment will earlier input exhaust start metadata fragment set offset fig pseudo code function illustr figur pli under permut state set fragment offset input block messag string collect inject indic case set number byte state applic reserv tag fig pseudo code crypt unwrapflag hasmor state state unwrapflag state state cryptend return inject cryptingflag cryptingflag state injectstart hasmor state state injectend return spark eomflag eomflag state eom state eom state state return function write byte state output byte stream tag chain fig pseudo code engin layer engin layer control reli array piston object oper par allel piston engin maintain attribut denot output tag chain order pass avoid reus bit key stream exampl engin api denot number parallel piston denot array piston object engin maintain state machin attribut order direct function call sequenc order maintain consist indic input block construct piston object phase input block empti input block plaintext fragment plaintext come input block plaintext fragment plaintext come input block fragment readi mes sage fulli inject engin function illustr figur achiev func tional gettag assert state return function central applic mutat call function piston vector spark piston set fig pseudo code function dispatch input piston requir engin phase subsequ call piston exhaust input stream phase set set note piston take fragment piston process byte fig pseudo code function dispatch metadata piston pro vide phase call input metadata stream exhaust phase set applic delay call call phase reset note piston take fragment piston process byte call byte oth erwis spark eomflag piston spark eomflag return crypt unwrapflag assert phase fresh piston crypt unwrapflag phase crypt hasmor endofcrypt return fig pseudo code function call phase call collect corr spond tag output stream piston call piston set phase fig pseudo code function call phase inject metadata piston object call inject chain valu set set ject append byte byte encod degre parallel domain separa tion instanc number piston object byte encod piston object domain sepa ration piston object avoid ident key stream stream process phase set inject assert phase fresh crypt endofcrypt cryptingflag phase crypt endofcrypt piston inject cryptingflag phase crypt hasmor spark fals phase fresh phase endofmessag return gettag assert phase endofmessag spark true piston gettag phase fresh return fig pseudo code motorist layer motorist layer control engin object control number piston object motorist layer paramet typic denot align unit ensur fragment start offset tag length chain valu fragment stream exhaust multipl allow multi byte chunk data manipul motorist layer final paramet determin secur strength capac tag length determin squeez rate largest multipl bit inner bit fragment offset state output absorb rate largest multipl bit state reserv absorb fragment offset chain length smallest multipl greater equal capac exampl motorist api motorist maintain attribut valu motorist object initi input injectcollect diversifyflag assert phase fresh hasmor diversifyflag hasmor piston inject hasmor spark fals phase endofmessag return motorist object process wrap unwrap remain phase error occur motorist object receiv incorrect tag motorist function illustr figur achiev func tional function call phase start ses sion read byte stream collect ject set domain separ call paramet set knot need call call step support generat verif tag set verifi tag return tag succeed phase set fig pseudo code function call phase unwrap cryptogram wrap messag depend set function start process input metadata input metadata set engin phase call long input call denot output stream fol startengin suv tagflag unwrapflag forgetflag assert phase readi suv true forgetflag makeknot handletag tagflag unwrapflag phase ride return low call input long metadata call metadata set call final call suc ceed call succeed produc output output stream fail call clear output stream function call wrap unwrap fol low function call plaintext input stream metadata stream output stream receiv ciphertext tag stream receiv tag well function call ciphertext input stream metadata stream tag stream output stream receiv plaintext well function return iff tag correct fals function clear tag incorrect fig pseudo code wrap unwrapflag forgetflag assert phase ride hasmor hasmor hasmor unwrapflag hasmor makeknot forgetflag handletag true unwrapflag return function intern motorist tag depend state piston achiev forget function start retriev bit chain valu piston object call initi empti local bytestream concaten bit string collect inject piston object call fig pseudo code function intern motorist start initi empti byte stream set proceed tag copi tag wrap check set phase order indic tag desir tag match unwrap set simpli call move engin phase fig pseudo code makeknot bytestream fals return handletag tagflag unwrapflag bytestream tagflag unwrapflag phase fail return fals return true start session motorist object ceiv arbitrari number call nonc requir hold session level session messag explicit number nonc process order tag verif communic par tie synchron valu paramet permut permut deriv permut tweakabl number round permut defin permut width number round short consist appli cation round case key pack keyak key encod call key pack serv encod secret key prefix key pack pad rule return bitstr mod multipl sequenc byte pad rule return bytestr key key pack byte defin indic full length key pack byte key limit bit key pack illustr figur fig bit key keyak encrypt scheme combin document function keyak encrypt scheme instanti motorist mode instanc permuta tion keyak instanc defin suv limit length nonc keyak name instanc name keyak instanc specif paramet suitabl optim instanc param ter usag round capac bit tag size bit instanc order increa ing state size river keyak lake keyak primari recommend sea keyak ocean keyak lunar keyak river keyak key pack length stanc instanc variabl length public messag number nonc privat messag number fix length propos byte river keyak byte instanc stanc produc bit tag mac truncat desir user truncat gap plaintext ciphertext length bit key size variabl key size maximum bit refer https wiki authenticated_encrypt https wiki bit flipping_attack https wiki padding_oracle_attack http attack week xml http choos authent paterson authent encrypt tls bernstein failur secret key cryptographi rogaway evalu blockciph mode oper krawczyk order encrypt authent protect munic secur ssl https wiki http choos authent http mail archiv web tls current html https wiki poodl http public nistpub pdf http public nistpub http caesar http caesar function requir tabl bertoni keccak refer retriev http keccak refer pdf http group hash sha html bertoni cryptograph spong function http keccak http bertoni insid keccak bertoni caesar submiss keyak retriev http keyak pdf mennink secur full state key duplex spong applic authent encrypt bertoni secur key spong construct chang key spong construct pseudorandom standard model construct cipher singl pseudorandom permuta tion abe general overview authent scheme round caesar competit 