placement vulner studi multi tenant public cloud venkatanathan varadarajan yinqian zhang thoma ristenpart michael swift univers wisconsin madison ohio state univers cornel tech venkatv swift yinqian ristenpart abstract public infrastructur servic cloud amazon googl comput engin gce microsoft azur allow client virtual machin vms share phys ical infrastructur practic multi tenanc bring economi scale introduc risk share physic server arbitrari malici work demonstr place alongsid target victim locat earli generat cloud extract secret side channel numer work side channel attack studi place ment vulner public cloud adopt stronger isol technolog virtual privat cloud vpcs investig problem placement vulnerabili tie quantit evalu three popular public cloud suscept locat attack find adopt technolog vpc prior attack cloud cartographi ineffect find way reliabl test locat amazon googl gce microsoft azur find way detect locat victim web server multi tier cloud applic locat load balanc resid test multipl custom account launch instanc strategi seek maxim likelihood resid find easier higher success rate cheaper achiev locat three cloud compar secur refer placement polici keyword locat detect multi tenanc cloud curiti full version earlier paper publish usenix curiti work univers wisconsin madison introduct public cloud comput offer easi access cheap comput storag resourc cloud provid sustain cost effect solut multi tenanc infrastructur share putat arbitrari custom internet increas util compar dedic infrastructur allow lower price practic multi tenanc enabl var ious secur attack public cloud versari launch virtual machin physic host victim make vms resid term locat exist attack break logic isol provid virtual breach confidenti degrad perform victim notabl side channel attack steal privat key virtual machin isol boundari clever monitor share resourc usag understood abil adversari arrang resid place general consist launch strategi mech anism resid detect prior work obtain resid simpl network topolog base resid check low cost launch strategi high probabl achiev resid compar simpli launch instanc advantag strategi exist cloud suffer placement vulnera biliti amazon chang architectur includ remov abil simplest resid check placement vulnera biliti exist public cloud best knowledg explor work provid framework systemat evalu public cloud placement vulner three popular public cloud provid vul nerabl locat attack set answer question resid effect detect modern public cloud launch strategi effect mod ern cloud exploit placement vulnerabili tie quantifi money time requir adversari achiev probabl success start explor efficaci prior resid test develop reliabl test place ment studi find novel test detect resid vms uncontrol attack ing public interfac load balanc multipl custom account three popu lar cloud provid launch instanc scenario affect placement algorithm test resid launch instanc ana lyze three popular cloud provid amazon elast pute cloud googl comput engin gce microsoft azur azur vulner placement algorithm exhaust experimenta tion cloud provid run cloud provid attack suc cess arrang locat find launch strategi three cloud locat faster higher success rate cheaper compar secur refer placement polici start background public cloud defin threat model con clude paper futur work background public cloud infrastructur servic iaa public cloud amazon googl comput engin microsoft azur provid manag interfac cus tomer launch termin instanc user configur typic user regist cloud provid account cloud interfac configur includ instanc type disk imag data center region host vms launch instanc addit public cloud pro vide higher level servic monitor load auto matic launch termin instanc base work load servic intern mech anism user configur launch termin vms launch servic receiv client desir set paramet describ configur servic alloc resourc process call provis interest portion provis select type variabl custom instanc launch custom placement instanc type paramet data center region time launch cloud provid time day environ day week variabl number vms number machin figur list placement variabl physic host call place ment algorithm host map call placement placement specif virtual machin depend factor load machin number machin data center number concurr launch request cloud provid general publish placement algorithm variabl control user affect placement time day request data center number stanc list notabl paramet figur control variabl adversari partial influenc placement vms physic chine host target set vms call variabl placement variabl set valu variabl form launch strategi exampl launch strat egi launch instanc minut trigger auto scale event victim applic fact launch strategi suggest prior work placement polici placement algorithm public cloud aim increas data center effici qualiti servic realiz placement pol ici instanc polici aim increas data center util pack launch vms singl machin polici optim time provis involv fetch imag network physic machin boot choos machin imag imag cach local disk polici vari cloud provid provid public cloud placement polici undocu ment exhibit behavior extern observ exampl parallel placement local vms launch account short time window physic machin instanc launch sequenti stanc termin launch second physic machin phenomenon call sequenti placement local placement behavior artifact place ment polici describ earlier exam ples polici behavior exist well vms launch account pack physic machin maxim local resid stripe differ ent physic machin maxim redund resid cours normal usag behavior notic measur care experi launch strategi adversari exploit placement behavior increas likelihood locat tar victim point ristenpart parallel placement local exploit trigger scale event target victim increas load will victim vms launch adversari simultan time lag launch multipl vms locat newli launch victim studi develop framework systemat evalu public cloud launch strategi uncov unknown placement behavior approach studi identifi set placement variabl character enumer inter est valu variabl iii quantifi cost strategi fact expos resid vulner repeat three major public cloud provid amazon googl comput engin crosoft azur note goal studi vers engin exact detail placement polici identifi launch strategi exploit adversari resid detect key techniqu understand ing placement vulner detect vms resid physic machin term locat ristenpart propos resid detect techniqu identifi placement vulner amazon resid status report direct cloud provid detect method refer side channel base techniqu classifi categori logic side channel perform side channel logic side channel logic side channel allow infor mation leakag logic resourc observ softwar program address timestamp counter valu amazon assign address public address communic internet privat intern address intra datacent communic cloud infra tructur allow translat public address intern counterpart translat reveal topolog intern data center network allow remot adversari map entir public cloud infrastructur determin exampl avail zone instanc type victim resid vms tend adjac intern address logic side channel establish share timestamp counter prior work skew timestamp counter fingerprint physic machin techniqu explor resid detect resid detect perform share softwar state custom context contain base platform servic paa cloud custom share oper system exampl logic side channel includ interrupt count process statist report procf perform side channel perform side channel creat perform variat resourc content observ variat indic resid instanc network perfor manc detect resid hypervisor direct relay network traffic vms host provid detect shorter round trip time vms host covert channel special case side channel establish vms cooper der detect resid purpos resid detect covert channel base share hardwar sourc level cach llcs local storag disk exploit detect perform degrad caus resid covert channel detect techniqu requir control vms experiment practic attack refer approach cooper resid detect placement studi paa studi placement vulner context iaa periment platform servic paa cloud paa cloud offer elast applic host servic iaa user grant full control paa manag comput task instanc exe cution host web applic allow multipl instanc share oper system cloud process level isol file system access con trol increas linux style contain detail descript logic side channel suffici resid detect pur pose instanc paa cloud resid instanc share public address host machin host instanc network con figur network address translat nat instanc assign uniqu port host address incom connect logic side channel base resid detect approach work paa cloud contain system level interrupt statist proc interrupt share public address instanc detect locat heroku note techniqu requir direct access victim instanc soft ware vulner access procf initi revers con nection investig locat attack heroku strategi scale paa web applic instanc time interv minut locat attempt locat detect simpl quick includ time appli cation scale experi free cost result reinforc prior find paa locat attack confirm exist cheap launch strategi achiev locat easi detect mechan verifi investig paa cloud rest paper threat model resid attack public cloud mention earlier involv step launch strategi resid tection assum adversari access tool identifi set target victim vic tim vms launch characterist direct trigger launch increas load order victim scale launch instanc focus studi identifi exist launch strategi adversari devis increas chanc resid set target victim vms threat model assum cloud provid trust attack affili form cloud provid adversari intern knowledg placement polici sponsibl placement public cloud adversari interfac launch ter minat vms regular custom special interfac account limit number vms cloud provid impos versari access unlimit number account limit number vms launch time resourc limit cloud provid match versari limitless resourc realist assum adversari resourc limit reason cloud provid vulner launch strategi trivial cost effect adversari aim quantifi cost execut launch strategi adversari defin refer placement polici placement polici real cloud compar iii defin metric quantifi place ment vulner exist cost effect launch strategi better refer polici cost launch strategi quantifi cost launch strategi straightforward cost launch number vms run test detect resid target victim vms precis cost launch strategi atyp number attack vms type atyp launch locat victim vms atyp price run type atyp unit time time bill unit detect resid pair attack victim vms exclud ing pair group simplic assum attack run instanc resid check complet equival time finish resid check granular unit bill time hour equival refin model refer placement polici order defin placement vulner yardstick compar place ment polici launch strategi vulner aid purpos defin simpl erenc placement polici good secur properti resid attack gaug place ment polici public cloud chine data center machin unlimit capac set unord launch request map machin uniform dom distribut victim vms assign uniqu machin probabl collis resid dom placement polici attack scenario attack launch instanc call probabl refer probabl recal calcul cost launch strategi refer polici defin price function vmtype simplic competit min imum price offer cloud provid price comput resourc refer polici exam ple time studi amazon offer small instanc hour instanc activ cheapest price three cloud consid studi note refer placement polici simplifi assumpt benefit attack conserv will compar experiment best launch strategi erenc polici instanc assumpt unlimit capac server benefit attack limit number victim vms attack poten tialli locat conserv probabl event hypergeometr distribut minimum network rtt coresid resid gce minimum network rtt coresid resid minimum network rtt coresid resid azur figur histogram minimum network round trip time pair vms frequenc repres fraction total number pair categori figur tail histogram order magnitud number server smallest report ama zon data center price function placement polici favor attack cheapest price market aliti secur placement polici demand higher price troubl state art place ment polici public cloud measur well conserv refer placement pol ici placement vulner put fine metric gaug launch strategi placement polici normal success rate cost benefit normal success rate success rate launch strategi cloud test normal success rate strategi refer placement polici cost benefit strategi addi tional cost incur adversari refer placement polici achiev success rate strategi placement polici test defin placement polici placement vulner exist launch strategi normal success rate greater note normal success rate quantifi easi locat hand cost benefit metric help quantifi cheap locat compar secur placement polici metric compar launch strategi placement polici higher metric indic placement polici vulner launch strategi ideal placement pol ici aim reduc success rate cost benefit strategi detect resid essenti prerequisit placement vulner studi access resid detect techniqu identifi vms resid phys ical machin third parti public cloud challeng modern cloud appli detect techniqu mention longer feasibl modern cloud vulner disclo sure ristenpart modern public cloud adopt technolog enhanc isol tween cloud tenant thwart resid detec tion techniqu network layer virtual privat cloud vpcs broad employ data center man agement vpcs intern address pri vate cloud tenant longer cloud cartographi allow older genera tion instanc call classic longer pos sibl amazon vpc set addit vpcs quir communic tenant public dress communic figur net work time test defeat public dress involv rout data center network short circuit hypervisor ground truth resid detect memori base covert channel describ tice clear distinct frequenc distribut network round trip time resid coresid pair three cloud system layer persist storag local disk longer default instanc amazon instanc type support local storag gce azur provid local solid state drive ssd suscept detect delay long seek addit covert channel base level cach reliabl modern cloud multipl cpu packag vms share machin share llcs establish covert channel llc base covert channel captur subset resid instanc result technolog chang prior techniqu detect resid reliabl work mod ern cloud compel develop approach studi resid test describ subsect pair tool resid test design goal applic varieti heterogen softwar hardwar stack public cloud detect resid high confid fals tection rate low presenc ground nois neighbor vms detect resid fast facilit experimen tation larg set vms chose perform covert channel base detect techniqu exploit share hardwar resourc type covert channel hard remov cloud vulner covert channel consist sender receiv sender creat content share resourc signal tenant share sourc receiv hand sens con tention period measur perform share resourc perform degrad measur receiv success detect signal reliabl covert channel high depend choic share resourc level content creat sender sender key compon resid detect techniqu develop studi alloc memori multipl bit char_ptr allocate_memori move half word unaligned_addr char_ptr loop forev loop atomic_op unaligned_addr some_valu loop loop figur memori lock sender memori lock sender modern processor port atom memori oper xadd atom addit maintain atom cach coher enc protocol lock oper extend cach boundari processor lock memori bus temporarili lock bus detect slow bus fetch data dram proper time covert channel send signal cach base covert channel tech niqu work vms share cpu core packag develop sender exploit share memori bus covert channel psuedocod sender figur sender creat memori buffer pointer arithmet forc atom oper align memori address indirect lock mem ori bus modern processor architectur size llc_size llc_way stride llc_set cacheline_sz buffer alloc_ptr_chasing_buff size stride loop sampl number sampl start_rdtsc rdtsc loop probe probe buffer hit memori loop time_taken sampl rdtsc start_rdtsc loop figur memori probe receiv receiv aforement memori lock sender way sens memori lock content induc sender resid ten ant instanc receiv measur memori band width share system type ceiver studi work heterog neous hardwar configur memori probe receiv care craft memori quest cach hierarchi hit memori ensur constrict data cess receiv singl llc set order evad hardwar prefetch pointer chase buffer random access list memori address pseudocod figur time need complet fix number probe signal resid sender perform lock opera tion load memori proceed slowli memori lock receiv sender mea sure number unalign atom oper complet unit time measur memori bandwidth memori probe receiv work cach architectur machin unknown sender receiv form novel resid detect method studi memori probe test memori lock test name respect receiv compris resid test suit test suit start run receiv keep idl perform measur baselin perform content receiv sender receiv detect decreas perform test conclud vms resid slowdown threshold detect chang receiv perform indic resid dis cuss machin core memori memori socket architectur probe lock xeon xeon xeon diff figur memori probe lock testb machin slowdown relat baselin perform observ receiv averag sampl sender receiv core socket diff sender receiv core socket xeon machin singl socket evalu local testb order measur effi caci covert channel test local testb run memori probe lock test der configur figur hard ware architectur machin observ cloud hardwar con figur observ perform degrad compar run memori lock sender coresid instanc baselin idl sender indic reliabl note work resid instanc run core dif ferent socket share llc work heterogen hardwar singl take tenth second complet quick note test suit work real attack requir control vms test includ victim call scenario resid detect cooper victim short oper resid detect mechan suffici observ placement behavior public cloud investig approach detect resid realist set uncoop victim adapt memori probe test detect locat web server load balanc cooper resid detect describ methodolog detect resid public cloud purpos studi placement polici flexibl con trol vms test resid launch vms separ account test pairwis resid encount chal leng run resid test suit three public cloud googl comput engin ama zon microsoft azur handl nois neighbor vms share host second hardwar softwar het erogen three public cloud requir spe cial tune process resid detect test nalli test resid larg set vms demand scalabl implement elabor solut challeng cloud machin clock llc provid architectur ghz way set intel xeon gce generic xeon azur intel azur amd opteron figur machin configur public cloud machin configur observ run small instanc type gce reveal exact microarchitectur physic host way set word size llc size word size machin byte handl nois nois neighbor vms affect perform receiv signal baselin result misdetect han dle nois altern measur perfor manc signal nois equal measur second ten sampl measur detect resid ratio median sampl exceed threshold take frac tion second complet repeat time fast tune threshold expect encount differ ent machin configur three public cloud figur heterogen cach mension organ replac polici perform degrad observ receiv respect baselin ideal thresh detect resid threshold detect resid yield fals pos itiv set low fals negat set high tune threshold hardwar three cloud start conserv threshold tune final threshold gce azur memori probe lock test figur distribut perform degra dation memori probe test intel chine gce azur gce perform degrad threshold clear separ resid coresid instanc intel machin encount memori lock probe test memori probe suffici detect resid azur observ lower perform degrad initi threshold suffici detect locat intel machin pictur amd machin azur differ signif icant figur distribut perfor manc degrad memori lock memori probe architectur resid detect high sensit choic threshold amd machin associ cach way intel differ perform degrad coresid resid gce perform degrad coresid resid perform degrad coresid resid azur intel machin figur distribut perform degrad memori probe test vari number pair cloud gce azur note axi plot perform degrad axi rang cut short pair clariti perform degrad azur amd machin mprobe mlock mprobe mlock figur distribut perform degrad memori probe lock test amd machin azur pair node stand coresid resid pair note axi plot perform degrad ent handl lock instruct machin threshold high fals posit verifi hand check instanc covert channel observ consist perform degrad determin pair vms resid degrad test threshold detect cross architectur fals resid detect run scale resid detect test test resid scale time consum increas quadrat ical number instanc check stanc involv pair wise test entir resid test suit take second sequenti execut test pair will hour parallel resid check speed check ing concurr test interfer parallel test partit set pair set pair vms set time record pair detect resid run set set didat resid pair test sequenti paral leliz resid test decreas time test resid pair instanc par allel version test cloud provid second pair serial version second pair speedup faster way parallel resid detect chose approach simplic verac test notic perform degra dation correspond perform degrad high perform degrad clear signal declar resid resourc share hand check run test isol tect instanc pair fraction run cloud observ consist covert channel sig nal methodolog detect fals pos itiv detriment studi fals negat resid impli share memori channel share core core hardwar resourc resid detect uncoop victim describ method detect resid cooper victim realist set adversari wish tect resid victim access limit public interfac http key interfac basic coopera tive resid detect employ detect resid uncoop victim wild attack set previous attack scenario sume attack access victim vms applic permit user internet victim applic expos well public interfac http ftp store proto figur exampl victim web applic architectur col allow incom request access point attack victim front victim applic rang cach data storag servic memcach cassandra generic webserv assum multipl instanc front servic run load balanc scenario attack wish tect locat front face victim vms resid test adapt memori test pre vious run memori lock sender attack instanc receiv public interfac expos victim generat set request victim vms hit memori bus achiev loop larg number quest size equal greater size llc creat perform side channel leak resid receiv run depend control call resid detector experi setup evalu efficaci method olio multi tier web applic design mimic social network applic instanc workload cloudsuit olio support tier memcach cach databas queri configur tier figur webserv databas server run separ type small amazon multipl webserv vms con figur haproxi base load balanc run medium instanc better network perfor manc load balanc standard configu ration round robin load balanc algorithm sticki client session cooki victim web applic configur reason general real applic run cloud attack shelf http perfor manc measur util call httperf ceiver resid detect test receiv insid micro instanc free charg idl background load victim concurr user mlock mlock figur resid detect uncoop victim graph averag request latenc resid detector memori lock sender run resid attack vari background load victim note axi log scale load number concurr user user averag generat http request second webserv set request includ web web ject imag pdf file gather request access log manual navig web appli cation web browser evalu methodolog start resid pair cooper resid detec tion method configur vms victim web server launch vms webserv databas server load balanc resid attack resid detect start measur averag request latenc receiv insid resid tector baselin idl attack contend case attack run memori lock sender perform degrad baselin contend case multipl sampl reveal resid victim vms attack amazon setup observ erag request latenc baselin case memori lock case perform degrad background nois test perform victim web applic idl realiti victim cloud experi constant vari background load system fals posit negat occur spike load victim server case solut alternat ing measur idl contend case order gaug efficaci test con stant background load repeat experi vari load victim result exper iment summar figur counterintuit constant load background server exac erbat perform degrad gap clearer signal resid run memori lock resid attack increas servic time request major request reli memori bandwidth increas queu delay system turn increas request tenci interest aforement perform gap stop widen higher load concurr user system hit bottleneck case network bottleneck load balanc run memori lock sender detect resid victim high load bottleneck applic hard test number webserv mlock mlock mlock usersidl figur vari number webserv load bal ancer graph averag request latenc resid detector memori lock sender ning resid attack vari background load victim note axi log scale error bar standard deviat sampl experi increas number victim webserv load balanc figur expect resid signal grew weaker increas victim webserv perform degrad low tect resid placement vulner studi evalu three public cloud amazon googl comput engin microsoft azur placement vulner answer que tion strategi adversari employ increas chanc locat victim vms chanc success cost strategi iii strategi compar refer placement polici introduc experiment methodolog present describ exper iment set methodolog employ placement vulner studi experi set recal placement depend placement variabl figur sign reason valu placement variabl enumer launch strategi corr spond launch strategi involv launch mul tipl vms distinct account subscript azur project gce check resid pair vms launch account des ignat proxi victim adver sari denot configur number victim instanc number attack instanc launch vari restrict inequ increas likelihood achiev resid placement variabl con figur includ victim launch time includ time day day week delay victim tacker launch victim attack instanc type data center locat region vms launch repeat multipl time three cloud provid repetit experi quir control environ variabl time day repeat experi con figur time day day week instanc type vms small instanc small small gce small standard azur data center region east gce east azur wise experi conduct month decemb februari singl local intel core machin smt core launch instanc log instanc informa tion resid detect test suit implement cloud api order auto mate experi python libcloud librari interfac gce libcloud support azur azur cloud api linux platform librari cross platform command interfac cli built wrap cli differ cloud api azur explicit interfac launch multipl vms simultan ousli mention experi set experi ment delay victim attack launch hour save money reus set victim instanc libcloud version modifi version gce support multipl account gce delay config min median max delay config min median max europ figur distribut number resid pair gce delay config min median max east delay config min median max west figur distribut number resid pair delay config min median max figur distribut number resid pair azur region east longer run configur hour delay victim attack launch launch victim vms start experi run resid test set pair termin attack stanc relaunch attack instanc appro priat delay hour rerun test set victim vms repeat experi delay configur call methodolog leap frog method note delay parallel launch vms test chine sequenti launch vms account section closer fect vari placement variabl keep variabl fix cloud provid case three metric measur degre resid chanc resid instanc number run success rate averag number resid instanc multipl run averag coverag fraction victim vms attack vms resid experi victim vms control extrapo late guid launch strategi uncoop erat victim discuss set strateg que tion help answer summar calcul cost interest launch strategi evalu public cloud refer placement polici number instanc observ placement behavior vari number victim attack instanc intu itiv expect chanc resid increas number attack victim instanc sid figur chanc resid victim instanc vari number attack instanc data center region east gce azur east delay victim attack stanc launch hour run configur run time day vari number attack instanc keep placement variabl constant includ number vic tim instanc measur chanc resid multipl run result experi help answer question vms adversari launch increas chanc resid figur placement behavior chang cloud provid gce observ higher number attack stanc relat victim instanc higher chanc resid figur distribut number resid pair gce number resid pair increas number attack instanc impli ing coverag attack increas larger fraction attack instanc target stanc launch time coordin contrari expect placement behavior serv azur invers chanc resid attack instanc high attack instanc reflect distribut number resid pair figur investig reveal correla tion number victim attack instanc launch chanc resid configur num ber victim attack instanc delay chanc resid equal high configur suggest placement polici collat launch request base request size place group machin sid figur chanc resid attack instanc vari number victim instanc data center region east gce azur east delay victim attack stanc launch hour run configur run time day vari number victim instanc vari number victim instanc keep num ber attack instanc placement variabl con stant figur expect chanc resid increas number victim tar gete present help adversari answer question chanc resid vari size target victim expect increas chanc resid increas number victim vms cloud provid absolut chanc resid lower azur cloud result addit delay tween victim attack launch time azur result methodolog instanc launch time answer question aid adver sari design better launch strategi sid figur chanc resid vari delay tween victim attack launch solid box correspond delay simultan launch gauz box cor respond hour delay victim attack launch observ resid instanc run delay data center region east gce azur east run configur run time day delay min median max success rate min figur distribut number resid pair suc cess rate chanc resid shorter delay configur delay victim attack instanc launch sequenti attack stanc launch victim instanc run averag run run time day attack launch vms victim vms launch increas chanc associ time day launch vari delay attack victim launch result vari delay parallel launch hour delay figur observ result observ reveal artifact placement polici vms launch short time window resid machin observ help adversari avoid strategi investig placement behavior shorter delay order find durat time window resid figur time window short sequenti launch instanc time lag victim attack instanc hour figur chanc resid long period includ run week run time day configur note conduct run hour delay oppos run delay denot result resid second observ delay gce delay azur increas chanc resid direct benefit attack azur launch delay victim attack instanc longer hour leap frog experiment methodolog actual delay tween launch averag hour maximum delay hour run higher delay common run larger number instanc fals posit requir separ sequenti phase resolv experi longer delay gce understand chanc resid drop increas delay figur contrari expect find chanc resid drop delay high hour specul reason observ system constant churn neighbor vms chine termin note leap frog methodol ogi theori interfer placement noteworthi observ increas number uniqu resid pair increas delay suggest fresh resid victim vms longer delay time day prior work churn load correl time day simpl refer placement polici notion load time day realiti limit number server datacent limit number capac host load system direct placement behavior placement polici expect observ small place chanc resid cloud morn afternoon night gce figur time day chanc resid attack chang launch time instanc aggreg configur hour delay victim attack launch time time sid europ bus gce sid west east figur median number resid pair gion box plot median number resid pair exclud resid account configur axi ment base time day attack instanc launch figur higher chanc resid attack stanc launch earli morn night gce number coresid instanc host figur distribut number resid instanc host azur run instanc host instanc host gce data center locat experi conduct popular region cloud true report smaller popular region region popular fewer machin expect higher resid rate resid instanc figur median number resid pair region alongsid popular region distribut number resid instanc figur main observ experi higher chanc resid smaller region larger popular region note resid pair run region higher number resid pair suggest larger coverag victim vms smaller region anomali run januari serv unusu larg number resid instanc includ three vms account anomali result intern manag cident amazon west region observ report interest observ tion vms resid host azur gce figur distribut number resid instanc host run vms singl host interest observ resid inu tes gce azur figur launch strategi resid detect execu tion time configur indic number victim number attack launch error bar standard deviat run averag cost maximum cost config gce azur gce azur figur cost run launch strategi dollar max imum cost column refer maximum cost incur run configur cloud provid cost hour small instanc time studi dollar gce azur respec tive minimum maximum cost bold instanc account term resid instanc observ resid pair gce azur hand notic resid pair anomali west notic actual chanc resid placement behavior lack affect placement experi medium instanc suc cess locat vms gce employ success strategi learn small instanc cost launch strategi recal cost launch strategi atyp order calcul cost time detect locat attack victim figur erag time complet launch attack instanc config eva figur probabl resid refer placement polici complet resid detect config urat measur resid detect parallel version discuss clude time detect resid tenant account reason time detect locat upper bound realist high opti mize resid detect mechan calcul cost execut launch strat egi three public cloud result summa rize figur note consid cost cur comput instanc cost resourc network storag insignific note bill hour instanc run hour gce azur charg minut instanc activ differ consid cost calcul maximum cost cur run vms hour minut azur minimum cent gce run vms minut incur highest cost launch strategi azur higher cost hour part longer test resid detect methodolog summari placement vulner return secur refer placement polici introduc identifi place ment vulner three cloud recal probabl pair resid random placement polici eva eva random variabl denot number locat observ place attack vms total machin machin pick victim vms evalu probabl configur periment public cloud probabl figur recal launch strategi cloud impli place ment vulner placement polici normal success rate greater normal success rate strategi ratio chanc locat launch strategi probabl locat refer polici eva list select launch strategi escal placement vulner refer polici normal ize success rate parenthesi azur launch ten attack vms close victim vms launch strategi cost benefit normal success figur cost benefit analysi atyp cost instanc hour cheapest simplic fastest averag time detect resid instanc pair configur strategi test note cost benefit addit cost incur refer polici equal cost incur addit vms gce victim smaller datacent launch ten attack vms delay three cloud launch attack instanc delay azur hour delay gce victim launch locat victim instanc amazon launch attack vms delay minut victim launch optim delay victim attack launch hour amazon launch attack vms hour victim vms launch time day fall earli morn pst cost benefit quantifi cost benefit strategi refer polici success rate launch strategi vulner placement pol ici greater refer polici attack instanc refer polici achiev success rate calcul number attack instanc sva sva success rate strategi config urat result calcul present figur result best strategi three cloud provid cheaper refer polici evid metric enabl evalu compar launch strategi efficaci placement polici robust placement attack cost exampl note normal ize success rate lower higher cost benefit attack limit exhaust experi varieti placement variabl limit jor limit studi number placement vari abl set valu variabl experi exampl limit experi instanc type avail zone region account victim vms dif ferent instanc type exhibit placement havior present hold strong chosen stanc type caveat affect placement polici account place ment decis experi vic tim account separ design attack account provid worst case captur placement behavior unlucki vic tim account subject placement decis resid vms desig nate attack account run cloud provid period month increas statist limit run configur run time day lim itat minor bear present report impact cloud comput secur work placement vulner studi ristenpart studi placement vulner public cloud malici cloud tenant place vms machin target high probabl placement vulner ploit studi includ public map public intern address disclosur address shortcut communic path resid vms studi extend herzberg studi outdat develop cloud technolog main tivat work concurr work conduct sys temat measur studi resid threat ama zon focus depth evalu resid detect network rout trace quantif resid threat older generat instanc classic network prior amazon vpc contrast studi placement vulner context vpc well azur gce studi complementari strengthen argument placement polici defend placement attack studi han azar unclear propos polici work perform reliabl goal public cloud provid resid detect techniqu techniqu resid detect studi context categor techniqu class side channel approach detect resid cooper vms covert channel approach detect ing resid cooper vms side channel allow parti exfiltr secret infor mation approach adapt practic placement attack scenario target control attack network round trip time side channel ristenpart detect resid zhang develop system call homealon enabl vms detect third parti vms ing time side channel level cach bate propos side channel resid detect caus network traffic congest host nic attack control vms interfer target perform vms resid tectabl remot client kohno explor tech niqu fingerprint remot machin timestamp tcp icmp base network probe proach design resid detect approach work effect modern cloud infrastructur covert channel share hardwar compon resid detect vms test cooper coars grain covert channel cpu cach hard disk drive ristenpart resid confirm estab lish covert channel share level cach collud vms public cloud exploit memori bus covert channel modern processor sender issu atom oper memori block span multipl cach line memori bus lock effect processor covert channel propos studi design resid detect develop work tune purpos conclus futur work multi tenanc public cloud enabl resid attack paper revisit problem placement attack achiev locat modern public cloud find techniqu verifi locat longer work insuffici perform isol hardwar allow detect locat three popular cloud provid gce azur achiev locat surpri ing simpl cheap simpler cost achiev locat paa cloud demonstr cloud provid massiv datacent numer physic server chanc locat higher expect work need achiev better balanc effici secu riti smarter locat awar placement polici acknowledg work fund nation scienc founda tion grant cns cns cns swift financi interest crosoft corp refer amazon instanc store http latest userguid amazon elast comput cloud http apach libcloud http elast beanstalk http elasticbeanstalk innov scale slide http amazonwebservic innov scale reinvent googl comput engin https comput googl comput engin disk https comput doc disk googl comput engin autoscal http comput doc autoscal haproxi reliabl high perform tcp http load balanc http heroku devcent dyno dyno manag dress https articl dyno address heroku paa system https intel ivi bridg cach replac polici http blog ivb cach replac olio workload https confluenc display olio workload rightscal http virtual machin cloud servic size azur https msdn librari azur aspx window azur http amazon price http price amazon web servic extend infrastructur amazon virtual privat cloud technic report amazon azar kamara menach raykova shepard locat resist cloud proceed acm workshop cloud comput secur bate mood pletcher pruse valafar ler detect resid activ traffic analysi techniqu proceed acm workshop cloud comput secu riti workshop acm beach virtual privat cloud pro powershel amazon web servic springer farley juel varadarajan ristenpart bower swift money exploit perform hetero geneiti public cloud proceed third acm sympo sium cloud comput acm ferdman adileh kocberb volo alisafae jevdjic kaynak popescu ailamaki falsafi clear cloud studi emerg scale workload modern hardwar proceed seventeenth intern confer architectur support program languag oper system acm han alpcan chan lecki secur game vir tual machin alloc cloud comput decis game theori secur springer intern publish han chan alpcan lecki virtual machin alloc polici resid attack cloud comput ieee intern confer communic herzberg shulman ullrich weippl cloudoscopi servic discoveri topolog map acm workshop cloud comput secur workshop kanter cach ring interconnect http sandi bridg kohno broido claffi remot physic devic finger print secur privaci ieee symposium ieee mosberg jin httperfa tool measur web server perform acm sigmetr perform evalu review ristenpart tromer shacham savag hey cloud explor leakag third parti pute cloud proceed acm confer puter communic secur acm varadarajan kooburat farley ristenpart swift resourc free attack improv cloud perform expens proceed acm con ferenc comput communic secur acm varadarajan zhang ristenpart swift placement vulner studi multi tenant public cloud usenix secur symposium usenix associ wang nappa caballero ristenpart akella whowa platform measur web deploy iaa cloud proceed confer internet mea surement confer acm wang whisper hyper space high speed covert channel attack cloud usenix secur sym posium bailey jahanian joshi hiltunen schlicht ing explor cach covert channel virtual viron proceed acm workshop cloud comput secur workshop acm wang measur studi resid threat insid cloud usenix secur symposium yarom falkner flush reload high resolut low nois cach side channel attack usenix secur sym posium usenix associ zhang juel oprea reiter homealon resid detect cloud side channel analysi pro ceed ieee symposium secur privaci ieee comput societi zhang juel reiter ristenpart cross side channel extract privat key proceed acm confer comput communic secur acm zhang juel reiter ristenpart cross tenant side channel attack paa cloud proceed acm sigsac confer comput communic secu riti acm zhou goel desnoy sundaram schedul vul nerabl attack cloud comput corr 