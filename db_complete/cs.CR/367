high precis fault inject instruct cach architectur lionel rivi zakaria pablo jean luc julien laurent mine paristech cnrs ltci telecom morpho secur secur allianc morpho paristech center abstract hardwar softwar secur embed system prone physic attack fault inject attack reveal vulner data control flow allow attack break cryptograph secur algorithm implement studi concentr success attack data flow target instruct flow paper focus electromagnet fault inject emfi control flow instruct cach target widespread smartphon tablet settop box health industri monitor sensor architectur describ practic emfi platform methodolog provid high control level high reproduc fault inject observ precis fault model occur case character exhibit practic fault model cach consid literatur comprehens describ effect reproduc well fault attack final describ benefit attack mount power attack simplifi exist keyword fault attack instruct cach embed system electromagnet inject introduct secur embed system smartcard secur element store person sensit data dividu seamless reli physic object ident bank telecommun servic instanc cryptograph secur algorithm mathemat strong hardwar softwar implement tend vulner physic attack fault inject attack target physic implement secur devic order induc exploit error paper focus electromagnet fault inject emfi instruct cach memori widespread hardwar architectur memori modern embed architectur modern microcontrol fast comput unit process nano second time scale program perform hundr million oper second work partial fund french anr mata hari project program execut consist data instruct store volatil memori flash nvram rom memori modul fast provid bandwidth cpu avoid bottleneck memori vari size byte speed respons time bandwidth cost increas proport rare hold program fast memori size limit order provid suffici amount fast memori fair price industri adopt hierarch memori structur provid cach mechan cach mechan defin concept better understand cach local principl instruct close code current execut execut instruct previous loop true data access memori tempor local access item access futur loop spatial local item close term memori locat address refer array big number cryptograph key cach fail attempt read data instruct cach main memori access longer latenc cach penalti delay induc access main memori case cach miss arm cortex microcontrol member famili lru polici determin line replac instruct memori cach modern microcontrol design nowaday effici microcontrol architectur reli cach level level cach memori denot closest cpu consist super fast memori limit size kbyte arm cortex addit cach mechan addit instruct prefetch buffer queue allow mitig delay chang flow instruct branch subroutin call system call interrupt contribut contribut enhanc precis practic electromagnet fault inject attack expos methodolog allow high control level high reproduc fault inject behavior analysi target program extract under fault model tune experiment set increas fault occurr rate second contribut comprehens interpret emfi effect cach mechan modern microcontrol anti glitch countermeasur enabl reveal high occurr predict easili reproduc fault model describ common accept model instruct replac instruct skip exhibit tamper instruct cach lead power attack control flow organ paper explain implement prone physic fault inject review exist attack literatur expos cach mechan target devic detail perform emfi depict experiment setup target configur set provid experiment protocol perform fault inject correspond observ behavior well cost assess requir common criteria explain detail extens studi assembl test code review capabl exhibit fault model respect exist attack potenti includ exist countermeasur physic attack secur cryptograph primit mathemat proven communiti continu expos attack includ result classic cryptanalysi case cryptograph algorithm direct defeat flaw appear implementa tion passiv activ combin physic attack break cryptograph secur implement embed system algorithm implement transcrib low level machin languag order process hardwar devic compil process hope semant preserv associ data operand instruct oper data instruct store volatil memori will move memori ram cach regist buse process cpu cryptograph primit softwar secur featur cours except follow scheme consequ strong necess understand under mechan hardwar layer order avoid expos sensit data physic attack side channel attack sca exploit depend oper durat algorithm process attack straightforward number execut instruc tion depend secret key instanc number execut instruct squar multipli exponenti algorithm depend linear number bit key countermeasur implement case time execut oper will vari depend pres enc requir data cach memori principl attack case simpl consist exploit cach penalti induc cach miss occur cryptograph comput activ attack influenc paramet fault cach address memori exist fault attack cach target data produc error exploit side channel dfa dema instruct sequenc fetch faster cach memori target fault inject assum harder practic attack instruct cach data cach instanc chen time attack rsa algorithm exploit instruct path cipher proof concept harder practic cach time attack paper paper focus fault attack target instruct cach demonstr feasibl practic previous work report arithmet logic branch instruct subject error context global voltag glitch fault inject fact ascrib low capacit design cpu regist presenc instruct buffer cpu memori cut capacit load path instruct cach program memori moro constraint relax electromagnet puls inject lead singl instruct replac skip bit instruct singl puls doubl fault bit instruct previous allow perform experi bit arithmet logic oper help highlight isol faulti behavior instruct read cach mechan fault occur data path attack cach memori cach mechan cortex core cortex processor three stage pipelin harvard architectur flash memori interfac acceler code execut system instruct prefetch buffer cach line cortex manag advanc high perform bus ahb instruct code bus data code bus architectur cach line bit instruct cach line bit data addit cach memori bit fast instruct buffer place cpu program memori instruct fetch cpu preload instruct buffer featur modern embed processor allow cpu perform aggress instruct sequenc reorder execut case target instruct fed cpu instruct buffer instruct cach enabl instruct prefetch disabl cpu find correspond address instruct fetch cach tabl wait state need pipelin execut sequenc cpu find correspond address cach coupl wait state need refil instruct buffer program memori case cpu run cpu cycl need preload bit flash memori instruct buffer updat cach memori lru polici perform emfi expect exploit behavior exampl instruct buffer updat stall program pointer updat expect bit instruct height thumb bit instruct fault skip possibl previous instruct instruct buffer fault inject lead bit cach replac experiment set methodolog experiment setup figur architectur view electromagnet inject analysi platform experi ment base signal generat generat puls width signal amplifi broadband class amplifi max includ probe describ notic high accuraci signal generat jitter allow control reproduc manner fault inject oscilloscop data time generat control delay inject experi perform settl spatial locat fix posit fix angl orient spatial locat determin black box set decapsul order spot locat maxim fault inject success rate jtag probe dump intern regist memori content inject program control platform generat fault report develop process fulli automat electromagnet fault inject paramet select boost attack control look spatial tempor energi configur spatial paramet select manual step determin optim configur combin criteria chip respons fault induc fault local select spot maxim fault respons singl cpu regist configur delay generat interpos oscilloscop puls generat order cover broad time spectrum inject observ delay insert determin cpu regist impact respect process instruct sequenc select tempor paramet set chosen cpu regist fault observ energi paramet select depend spatial configur cover wide rang energi level dbm small impact inject success rate power inject diffus fault impli wors fault local consequ cpu regist disrupt attack notic power rang maxim cach fault success rate depend cach cach configur enabl reach best success rate lower puls energi cach disabl figur fault inject platform diagram ascrib local voltag drop load cach memori insid chip increas propag delay sum fix spatial energi set valu maxim precis induc fault play tempor paramet perform emfi test code experi week develop softwar need control platform autom fault analysi day tune spatial tempor energi configur platform final addit day perform experi test code list add sequenc assembl code order highlight impact induc fault control flow build idempot assembl test code sequenc highlight proper struction execut instanc sequenc ten consecut add imm instruct ten instruct destin regist store result addit practic fault inject cach target configur perform fault inject campaign three set combin test code includ depict list disabl prefetch mechan goal twofold avoid fault step experi increas control moment cach load happen consid instruct cach data cach enabl disabl set configur tabl consid case data cach activ work focus fault instruct general disrupt control flow data acquisit default set instruct cach data cach activ cach cach set practic appli cach cach default tabl set configur set disabl data cach second acquisit final disabl data instruct cach third data acquisit experiment protocol experiment protocol consist step golden will serv refer backup initi state backup refer state function output perform emfi target singl instruct retriev output state classifi behavior extract fault model comparison fault model extract behavior analysi anticip futur fault inject perform golden fault free test code step monitor status general purpos special regist retriev function output record initi state post initi valu refer state post execut valu save function output target function second phase perform fault inject precis target singl instruct attack sequenc accuraci achiev tune delay power paramet tempor point trigger signal step test program execut multipl time decreas power step start cach cach activ case puls retriev output state function post execut state general purpos special regist tempor point high fault occurr rate destin regist aforement instruct marker predict tempor point candid futur instruct read cach perform puls delay tune small amount tempor point target third step aim classifi observ behavior compar fault output state refer base analysi observ differ extract fault model caus deviat expect state analysi experi reveal fault type target instruct read cach mechan independ type instruct arithmet logic branch load store instruc tion previous work report arithmet logic branch instruct subject error context global voltag glitch fault inject fact ascrib low capacit design cpu regist presenc instruct buffer cpu memori cut capacit load path program memori moro constraint relax electromagnet puls inject lead singl instruct replac skip bit instruct singl puls doubl fault bit instruct previous allow perform experi bit arithmet logic oper help highlight isol faulti behavior instruct read cach mechan fault occur data path instruct flow nop normal replay skip tabl impact nop insert three assembl code sequenc base assembl macro distinguish three memori align instruct determin insert three nop oper instruct cach instruct trigger signal depict tabl align instruct shift inject observ behavior figur describ fault model occurr probabl observ experi respect power level fault inject protocol defin figur power inject repres abscissa start refer denot step tenth abscissa take constant ordin axi transcrib target instruct test code configur cach cach vari column figur column cach cach enabl figur column cach activ figur column cach disabl final code align vari row figur row nop offset figur three figur row sequenc bit instruct target nth instruct observ instruct skip replay execut continu instruct cach enabl cach abl nop cach disabl cach abl nop cach disabl cach dis abl nop cach enabl cach abl nop cach disabl cach abl nop cach disabl cach dis abl nop cach enabl cach abl nop cach disabl cach abl nop cach disabl cach dis abl nop figur fault model probabl depend inject power instruct cach flow read flow replay skip tabl fault cach read tabl behavior correspond prevent updat instruct buffer denot prefetch queue pfq cach read oper bit bit instruct bit instruct data prefetch cach read perform cpu clock cycl prefetch mechan disabl time instruct read fault inject denot sequenc instruct instruct buffer cach sequenc instruct suppos load instruct buffer fault disrupt memori read oper flash instruct buffer cach cach replay previous instruct program counter continu increment instruct read cach consequ instruct load instruct buffer simpli skip discuss case standard attack fault model advantag exist literatur reproduc sens input expect fault output will case second fault model repeat time comput close interv predic model help mount combin attack sca combin sca attack power allow break sca protect implement network consid difficult necess fault model reproduc order statist analysi sca faulti comput repeat fault time case attack straightforward classic attack appli dfa replay bellcor crt rsa differ privileg escal freerto nullifi xor replay tabl fault cach reachabl attack secur implement tabl attack cach mount classic attack exampl dehbaoui achiev fault model avoid round counter increment time order increas leakag manipul round key perform differenti fault analysi dfa simplifi exist attack deploy attack insight potenti usag fault model render practic exist theoret attack simplifi open attack path interest studi work infect countermeasur chosen base assumpt skip branch instruct easier zero big number instanc crt rsa countermeasur bellcor attack explain rauzi guilley fdtc paper fault model realist mount high level zero attack paper ccs barth expos fault attack crt rsa cryptosystem idea propos fault attack zeroiz bit intermedi exponenti requir fault inject achiev attack complic requir forc regist addit fault control flow modular exponenti repeat fault model time entir bypass exponenti repeat instruct increment loop counter simplifi work attack mov ldr eor ldr eor ldr eor ldr eor list mask consid typic implement mask block cipher instanc bit state store regist mask store memori address load regist appli mask sequenc load xore instruct list case fault model allow attack replay instruct skip effect unmask state help side channel attack break mask countermeasur cours best case scenario instruct perfect align instruct buffer practic unmask state benefit side channel attack case break countermeasur instruct skip present moro jcen paper countermeasur formal proven protect singl instruct skip skip instruct case bit instruct fault model countermeasur work model fault present paper conclus perspect present practic electromagnet fault inject emfi methodolog appli architectur method high precis high reproduc precis fault model describ occur case emfi set tune descript induc fault model practic attack cryptograph algorithm includ equip countermeasur fault inject futur work interest studi feasibl effici countermeasur fault model obvious step emfi practic system studi portabl architectur refer common criteria consortium common criteria aka technolog secur eval uation iso iec websit http paul kocher joshua jaff benjamin jun differenti power analysi michael wiener editor crypto volum lectur note comput scienc springer dan boneh richard demillo richard lipton check cryptograph protocol fault proceed eurocrypt volum lncs springer konstanz germani doi caisen chen tao wang yingzhan kou xiaocen chen xiong improv trace driven cach time attack rsa algorithm syst softw januari alessandro barenghi guido bertoni emanuel parrinello gerardo pelosi low voltag fault attack rsa cryptosystem fdtc ieee comput societi septemb lausann switzerland doi fdtc alessandro barenghi guido bertoni luca breveglieri mauro pellicioli gerardo pelosi low voltag fault attack host hardwar orient secur trust ieee comput societi june anaheim convent center usa doi hst alessandro barenghi guido marco bertoni luca breveglieri mauro pellicioli gerardo pelosi inject technolog fault attack microprocessor fault analysi cryptographi springer nicola moro karin heydemann amin dehbaoui bruno robisson emmanuell encrenaz periment evalu softwar countermeasur fault attack host ieee comput societi arlington usa omarouayach raoult jarrix chusseau maurin magnet microprob design fault attack intern symposium electromagnet compat emc europ smart brugg belgium ieee thoma roch victor lomn karim khalfallah combin fault side channel attack protect implement proceed ifip intern confer smart card advanc applic cardi berlin heidelberg springer verlag amin dehbaoui amir pasha mirbaha nicola moro jean max dutertr assia tria electromag netic glitch round counter emmanuel prouff editor construct side channel analysi secur design volum lectur note comput scienc springer berlin heidelberg pablo rauzi sylvain guilley countermeasur high order fault inject attack crt rsa fault diagnosi toler cryptographi fdtc workshop sept busan korea gill barth franc dupressoir pierr alain fouqu benjamin gre goir jean christoph palowicz synthesi fault attack cryptograph implement iacr cryptolog eprint archiv moro heydemann encrenaz robisson formal verif softwar countermea sure instruct skip attack journal cryptograph engin 