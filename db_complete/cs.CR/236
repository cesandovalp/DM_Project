model count modulo theori quoc sang phan thesi submit degre doctor philosophi london statement origin quoc sang phan confirm includ thesi work carri collabor support duli acknowledg contribut indic publish materi acknowledg attest exercis reason care ensur work origin best knowledg break law infring third copyright intellectu properti confidenti materi accept colleg plagiar detect softwar check electron version thesi confirm thesi submit award degre univers copyright thesi rest author quotat infor mation deriv publish prior written consent author quoc sang phan april public part thesi publish chapter publish paper list revers chronolog order chapter current submiss quoc sang phan pasqual malacaria corina concurr bound model check sigsoft softwar engin note februari quoc sang phan symbol execut dpll modulo theori imperi colleg comput student workshop volum openaccess rie informat oasic dagstuhl germani schloss dagstuhl leibniz zentrum fuer informatik quoc sang phan pasqual malacaria corina marcelo quantifi leak reliabl analysi pro ceed intern spin symposium model check soft ware spin york usa acm quoc sang phan pasqual malacaria abstract model count novel approach quantif leak proceed acm symposium comput communic secur asiacc york usa acm quoc sang phan composit symbol execut imperi colleg comput student workshop volum openaccess seri format oasic dagstuhl germani schloss dagstuhl leibniz zentrum fuer informatik quoc sang phan pasqual malacaria oksana tkachuk corina anu symbol quantit flow sigsoft softwar engin note novemb abstract thesi concern quantit assess secur softwar tackl problem effici comput channel capac maximum amount confidenti leak softwar measur shannon entropi min entropi approach comput channel capac effici return loos upper bound altern ineffici precis target realist program thesi novel approach problem reduc model count problem order logic model count modulo theori smt breviti quantit secur contribut twofold theoret side establish connect measur confidenti leak fundament verif algorithm symbol execut smt solver dpll second exploit connect develop novel smt base techniqu comput channel capac achiev accuraci effici techniqu scalabl real program illustr case studi includ program linux kernel java program european project anonym protocol formal verif contribut twofold introduc studi problem smt potenti applic comput channel capac return multipl counterexampl bound model check autom test generat second propos altern approach bound model check classic symbol execut parallelis leverag modern multi core distribut architectur softwar engin contribut demonstr correspond algorithm symbol execut dpll algorithm state art smt solver correspond leverag improv symbol execut autom test generat final relat comput channel capac reliabl analysi softwar parent phan kính acknowledg feel extrem lucki pasqual malacaria supervisor guidanc encourag support three year pasqual discuss advic develop idea thesi appreci opportun work network communiti establish foundat quantit flow main topic thesi deepli grate corina advic encourag kind corina facto supervisor larg thesi exist symbol pathfind platform develop corina share offic escort day internship nasa ame mentor johann schumann kristin rozier chanc work nasa share part vast knowledg experi johann teach unman aerial system allow stay hous internship grate oksana tkachuk marcelo mentor googl summer code program thank niko tzeveleko michael tautschnig dino distefano fruit discuss care comment earli version paper famili love help overcom difficulti wife huyen love care phd son voi born third year phd brought endless happi offic mate fellow phd student nhat anh dang help friendship work total area prevent countless discuss nhat anh manag teach mathemat concept thank kind help person life grate scholarship school electron engin comput scienc cover tuition fee stipend live london benefit great environ school week seminar theori group help broaden knowledg niko tzeveleko excel job organ seminar content introduct motiv state art contribut thesi structur preliminari quantit flow flow interfer theoret measur interfer problem statement logic satisfi problem proposit satisfi model count satisfi modulo theori program languag program formal method bound model check cbmc symbol execut symbol pathfind model count modulo theori illustr exampl model count modulo theori quantit flow smt symbol quantit flow sound complet evalu cve cve cyclic redund check grade protocol dine crypto protocol discuss work symbol execut dpll modulo theori introduct illustr dpll symbol execut dpll sqif symbol execut sound complet evalu tax record discuss work concurr bound model check introduct illustr exampl concurr bound model check bound model check symbol execut compar approach bmc sequenti verif concurr verif evalu compar cbmc spf compar spf discuss work quantifi leak reliabl analysi introduct qualit analysi quantit analysi preliminari symbol execut reliabl analysi composit symbol execut composit path equival path equival generat exampl optim quantifi leak reliabl analysi fine grain composit model count symbol path evalu discuss discuss work solver model count modulo theori quantifi leak smt solver illustr exampl program transform cbmc formula instrument solut satisfi modulo theori multipl counterexampl bmc autom test generat reliabl analysi algorithm smt smt solver block claus method depth search implement evalu evalu smt solver evalu qif analys discuss work quantit flow multipl counterexampl bmc autom test generat reliabl analysi solut sat modulo theori conclus summari futur chapter introduct motiv year wit high profil softwar secur incid disclosur heartble bug leak celebr photo icloud hack soni pictur damag caus leak confidenti vari person embarrass lost dozen million dollar incid protect confidenti data leak softwar access control system limit access control intern propag access motiv flow secur aim track flow softwar forbid illeg flow leak public observ leakag avoid comput program secur program leak secret data process popular exampl password check program consid secur reason strong password time reject input string reveal adversari password string amount small adversari allow attempt brute forc attack program will eventu leak attack leakag unavoid assess leak decid accept lead question program leak adversari area quantit flow analysi qif develop provid rigor framework answer question intuit observ execut program adversari gain uncertainti confidenti data differ uncertainti observ amount leak program qif base foundat entropi concept theori uncertainti confidenti data measur bit exampl shannon entropi leakag comput numer subtract manual comput qif tedious expens infeas complex program order appli theori qif practic crucial autom techniqu effici quantifi leakag softwar system approach autom qif effici return loos upper bound altern ineffici precis target realist program thesi step effici accur comput qif formal method state art outlin key advanc led current state art autom qif emphasi work determinist program concept flow introduc paper den describ lattic model variabl partit secur label stand high variabl sensit data stand low variabl public partial order lattic indic flow variabl label variabl label allow goguen mesegu describ interfer secur polici general automaton framework set state chang command set user group user interfer group user user group observ effect command user group volpano smith irvin achiev impress mileston prove sound den analysi type system coincid idea interfer flow evolv direct sabelfeld myer publish excel survey field time cite paper complet quantit analysi flow develop clark hunt malacaria seri paper author illustr analysi simpl determinist languag provid command languag lower bound upper bound amount leakag treatment loop pessimist assum loop condit will leak malacaria precis treatment loop construct partit properti entropi work labour intens imposs autom smith propos rényi min entropi metric qif channel capac flow maximum leakag measur metric equal logarithm number output result agre previous observ malacaria chen channel capac measur shannon entropi tight upper bound year back rybalchenko reach mileston introduc automat techniqu qif analysi model check barvinok algorithm model count analysi expens applic limit class program heusser malacaria publish paper demonstr qif analysi program linux kernel prior paper work qif analysi demonstr small toy exampl heusser malacaria assumpt program output assert exist output output assumpt assert requir composit copi program analysi suffer sever state space explos problem year meng smith describ fast approxim techniqu comput upper bound channel capac infer relat pair bit output proposit formula sat solver count model analysi manual demonstr toy exampl upper bound loos output spars scatter summari problem autom qif analysi challeng simpler problem call bound qif consid decid program leak constant previous work yasuoka terauchi prove bound qif safeti problem cerni prove case shannon entropi bound qif pspace complet qif bound qif remain huge challeng techniqu ineffici imprecis thesi investig techniqu improv precis effici qif analysi contribut thesi solv problem qif set tool refer formal method process solv problem gain insight improv tool result thesi contribut approach autom qif analysi formal method well techniqu improv formal method contribut quantit flow thesi theoret advanc cast qif problem variant satisfi modulo theori smt problem general algorithm qif analysi base dpll algorithm smt theoret advanc lead practic advanc compar work heusser malacaria techniqu propos thesi dramat reduc time analys program linux kernel hour second second theoret contribut thesi classic symbol execut understood variant dpll algorithm symbol executor smt solver view enabl develop qif analysi tool java bytecod built top symbol pathfind symbol execut platform third contribut relat quantit flow reliabl analysi total separ area prior thesi relat lead develop effici qif techniqu base reliabl analys practic contribut thesi develop qif analysi tool program java experi tool real program program linux kernel java tax program european project hat anonym protocol contribut formal method insight learn solv qif problem lead investig techniqu improv formal method contribut thesi introduct model count modulo theori smt problem potenti applic qif second contribut view symbol executor smt solver propos methodolog bound model check base symbol execut methodolog natur paralleliz exploit modern multi core machin distribut architectur experiment outperform state art bound model checker cbmc complex case studi third contribut thesi light weight method solut sat modulo theori smt approach method smt problem ground theori includ bit vector contribut thesi applic smt solver find multipl counter exampl bound model check second combin bound model check smt solver autom test vector generat thesi structur thesi divid part includ chapter focus autom qif formal method second includ chapter focus improv formal method chapter preliminari main concept thesi qif smt chapter introduc smt problem general smt problem cast qif problem smt result general algorithm qif analysi base dpll algorithm smt solver chapter symbol execut view variant dpll algorithm view enabl turn classic symbol executor smt solver qif analysi effort chapter present methodolog concurr bound model check classic symbol execut effect methodolog illustr complex case studi java chapter describ relat qif reliabl analysi relat exploit build effici qif analysi tool java bytecod base reliabl analysi engin chapter present lightweight algorithm smt pure logic set three applic smt smt solver apart qif multipl counterexampl analysi bound model check autom test generat reliabl analysi chapter conclud thesi summari contribut discuss direct futur work chapter preliminari order thesi contain chapter basic notion terminolog discret probabl theori theori order theori recal element general concept formal method content chapter synthes sourc chapter discov author thesi coupl proof well maxim entropi lift verbatim text book quantit flow attack model depict figur program character function take confidenti input public input produc output control adversari adversari infer observ adversari infer figur attack model flow interfer flow illeg transmiss variabl variabl process simplest case flow explicit flow direct flow partial copi direct exampl subtl case categor implicit flow indirect flow consid exampl program simul common password check procedur true fals figur password check program password confidenti data public input provid user observ output true password accept direct copi flow leak small reveal allow attempt flow confidenti data observ output sirabl motiv secur flow date pioneer work den secur flow analysi activ topic decad popular secur polici guarante absenc flow leak interfer introduc goguen mesegu secur polici general automaton framework definit interfer languag base set definit interfer suppos program take secret input public input produc public output interfer properti pair input vector denot result execut program input vector term flow interfer interchang flow interf interfer polici guarante absenc interfer flow type system approach interfer larg bodi work type system valid interfer idea volpano irvin smith type system fast support autom composit verif analysi safe program classifi secur secur fals negat approach extens small modif flow polici program languag featur requir trivial extens type system sound proof approach return fals posit secur program classifi insecur exampl consid exampl small modif satisfi interfer fals fals type rule classifi program insecur tricki case program leak intermedi state sanit exampl attack observ final output program secur classifi insecur type system theorem prove approach interfer promin approach secur flow theorem prove interfer logic formul composit interfer logic properti assum set case interfer program take secret input public input produc public output denot program variabl renam composit express hoar style framework hoar tripl state precondit hold execut postcondit hold purpos copi variabl renam compar composit logic formul interfer compar type system approach theorem prove approach precis return fals posit exampl consid password check program figur composit copi figur choos true fals true fals figur composit password check program easi find counter exampl hoar tripl hold hold password check program violat interfer compar type system approach theorem prove approach precis return fals posit impract realiti eleg terauchi aiken appli composit approach exist automat safeti analysi tool power verifi real istic problem instanc effici strong reason expect futur advanc terauchi aiken point limit composit symmetri redund compos program lead partial correct condit hold find condit crucial effect analysi find general impract interact theorem prover requir consider user interact verif expertis theoret measur interfer fact password check program figur leak indic interfer pessimist unachiev situat decid program secur consid program true fals program secur figur fact prove interfer exampl quantit assess flow program leak leak theori tool answer question discret probabl theori introduc concept construct theoret analysi flow thorough background descript standard textbook definit sampl space sampl space experi denot countabl set outcom experi outcom complet descript state real result experi number outcom toss coin head tail probabl theori definit definit random variabl random variabl function associ real number outcom element assign probabl denot measur likeli take definit probabl distribut probabl distribut random variabl function discret probabl function probabl mass function thesi interest uniform distribut element probabl outcom sampl space equal occur subset refere event probabl event defin straightforward definit probabl distribut event occur extrem easi empti set event occur definit condit probabl probabl event event occur defin definit joint probabl joint probabl mass function dis crete random variabl defin theori theori mathemat foundat reason quantit sens main concept entropi measur uncertainti random variabl definit entropi random variabl probabl mass function shannon entropi defin log logarithm base convent unit bit write quantiti lemma random variabl probabl mass function entropi bound log cardin set proof definit lead log result lemma hold second lemma prove lagrang multipli find maxim entropi simplic defin system element write maxim function log subject condit probabl lagrang multipli find maximum entropi probabl distribut requir equat expand system equat carri differenti equat depend equal definit probabl distribut lead maxim entropi log log prove second lemma log equal hold uniform distribut definit joint entropi random variabl joint shannon entropi defin log joint probabl mass function joint entropi measur uncertainti random variabl definit condit entropi random variabl condit entropi knowledg defin definit condit entropi expand log log log log log log independ know chang uncertainti extrem complet determin uncertainti know hold lemma random variabl inequ hold max proof loss general assum max prove definit condit entropi proof lemma hold result hold prove inequ lemma equal hold hold complet determin definit mutual random variabl mutual mutual depend defin log mutual rewritten log log log measur leakag context flow analysi interest variabl attack model figur variabl denot sampl space random variabl random variablexh repres priori knowledg adversari secret data consid exampl password check program figur adversari password abc abc abc suppos string length adversari advanc victim habit alic password case probabl distribut alic close general case adversari password uniform distribut entropi measur initi uncertainti adversari adversari password abc uncertainti abc lead hand adversari password advanc uncertainti maxim execut program leak flow result adversari learn reduc uncertainti differ uncertainti observ amount leakag leakag initi uncertainti remain uncertainti remain uncertainti knowledg definit condit entropi result leakag calcul case interfer independ interf hold result leakag posit properti prove inequ interest reader refer textbook cover thoma proof detail problem statement program attack model figur view channel confidenti flow input output channel capac defin maximum amount transmit channel formal maximum mutual input distribut theorem channel capac program discret channel channel capac comput log proof definit condit entropi leakag rewritten lemma lead lemma log log hold equal hold equal lemma lemma hold complet determin uniform distribut count number observ basi state art qif analysi basi thesi channel capac theorem justifi definit qif problem program qif problem count number output logic satisfi problem logic concept thesi interest reader refer detail proposit satisfi definit proposit atom proposit atom boolean atom statement assert true fals exampl boolean atom human mortal program leak bit boolean atom basic build block proposit formula boolean atom formula proposit formula construct boolean atom logic connect impli formula formula exampl proposit formula boolean atom negat call liter denot atom set boolean atom occur truth proposit formula function truth valu boolean atom denot truth valu true fals definit proposit formula truth assign defin function assign boolean atom truth atom partial truth assign formula function wherea subset atom partial truth assign satisfi proposit formula denot evalu exampl satisfi formula formula satisfi exist partial truth assign truth assign valid formula valid negat satisfi definit proposit formula conjunct normal form cnf conjunct disjunct liter lij proposit formula convert cnf algorithm worst case linear time definit sat problem proposit formula cnf boolean satisfi problem sat problem find assign satisfi sat problem complet algorithm effici work instanc problem main famili algorithm state art sat solver dpll stochast local search thesi focus dpll algorithm will describ detail chapter model count definit sat problem proposit formula model count problem sat problem count solut sat problem satisfi modulo theori assum countabl set variabl function symbol predic symbol order logic signatur defin partial function correspond ariti symbol ari predic boolean atom ari function symbol call constant term variabl built appli function symbol term exampl term definit term predic symbol atom atom negat call liter infix equal sign shorthand equal predic term atom call equal call disequ atom basic build block formula atom formula construct proposit formula formula construct term glu univers quantifi existenti quantifi logic connect formula formula quantifi free formula quantifi sentenc formula free variabl order theori defin definit order theori order theori set order sentenc signatur structur tripl consist empti domain signatur interpret interpret assign mean symbol function symbol assign ari function domain predic symbol assign ari predic repres subset variabl structur model theori satisfi sentenc formula satisfi model call satisfi henceforth simplic will omit prefix term atom formula will prefix denot theori defin biject function boolean abstract map boolean atom atom fresh boolean atom boolean refin function defin invers definit smt problem theori combin theori formula satisfi modulo theori problem smt prob lem decid satisfi work smt focus quantifi free formula decid order theori smt problem hard subsum sat problem state art smt solver implement dpll algorithm integr compon enumer integr dpll base sat solver enumer truth assign satisfi boolean abstract input formula solver valid consist theori partial assign produc sat solver dpll algorithm will describ detail chapter program languag program simplic illustr methodolog guard command languag java grammar languag depict figur program stmt stmt assum assert goto goto var variabl exp express figur guard command languag thesi focus safeti properti note command assum assert power encod express tempor properti support assum guarante style composit reason program view system transit state way describ system depend detail program captur apart chapter thesi program model transit system set program state set initi state set final state transit relat set trace concret execut program repres sequenc state defin function init fin initi state final state init fin semant defin set trace context flow problem assum initi state pair confidenti compon protect public compon control attack formal method formal method refer set mathemat base techniqu comput scienc specif verif softwar hardwar system techniqu base foundat conceptu framework automata theori logic calculi formal languag program semant formal method prove disprov correct system respect properti call formal verif compar test formal verif expens crucial develop system failur huge financi lost cost human live histori wit comput disast prevent formal verif three main compon involv formal verif hardwar softwar system formal model system model formal verif vari level abstract automaton describ status chang system sourc code machin code system formal specif describ formal languag formal languag power express formal method implement fulli partial autom tool prove disprov conform formal model formal specif three case result case program conform specif second case system violat specif counterexampl return final case tool fail prove disprov period time natur trade level abstract model express specif typic formal method base tool check complic specif high abstract model simpl specif detail model thesi formal model program sourc code java bytecod formal specif reachabl assert sourc code bytecod formal method bound model check symbol execut bound model check cbmc aim bound model check bmc find bug prove absenc bound number transit recal program model transit system trace repres sequenc state trace logic form set relat written characterist function iff hold iff hold trace repres formula clear transit system model formula model formula repres trace program bmc aim find bug prove absenc bound number transit explor trace program notic bound finit number trace explor repres bound program formula conjunct formula conjoint trace notic formula repres symbol trace exampl formula program variabl left unspecifi concret trace satisfi formula formula satisfi set concret trace refer symbol trace cbmc translat program logic formula model properti verifi properti verifi program iff valid check satisfi solver fact true model trace will satisfi properti valid hand fals model trace will satisfi valid symbol execut symbol pathfind symbol execut program analysi techniqu execut program unspecifi input symbol input concret data execut program path build path condit condit input execut follow path branch condit code path condit initi empti chang execut branch instruct statement condit three case choos path choos path iii execut path path updat path condit path updat path condit classic satisfi path condit check branch point shelf constraint solver feasibl program path explor symbol execut tree character execut path symbol execut program node repres program symbol state arc repres transit state symbol pathfind spf framework built top java pathfind jpf model check tool set java bytecod analysi implement bytecod interpret replac standard concret execut semant bytecod standard symbol execut spf implement classic default mode spf explor feasibl symbol path option constraint solv statement condit assum true result option spf will explor path feasibl infeas program bound option will chapter design concurr bound model checker chapter model count modulo theori chapter introduc smt problem smt base techniqu qif analysi dramat improv state art implement qif analysi theoret side work establish connect fundament verif algorithm qif connect exploit mitig state explos problem develop novel approach qif base smt specif contribut introduct problem model count modulo theori smt applic qif framework call dpll build solver smt base qif prototyp tool qif analysi sqifc built top cbmc analysi complex code includ vulner nation vulner databas govern anonym protocol illustr exampl illustr approach consid data sanit program figur straightforward integ valu output program attack output observ observ output will secret observ will secret greater assum attack prior knowledg secret apart bit variabl priori probabl figur data sanit guess expect probabl guess secret observ output measur leakag program differ log base probabl guess secret observ output program case log log log result measur log log number output observ altern explan theorem theorem channel capac prove previous chapter goal develop effici autom techniqu comput number output observ notic output store comput memori string bit repres set boolean variabl correspond truth assign exampl correspond valu truth assign view truth assign partial model logic satisfi problem logic formula obiv formula character behaviour program correspond output partial model goal count valu correspond count model respect set cast problem measur leak model count problem section will formal definit problem model count modulo theori develop algorithm qif analysi base model count modulo theori previous chapter recal three logic satisfi problem studi extens year sat sat smt relat depict figur proposit logic special case order theori signatur ari predic sat problem simpl case smt problem sat problem general sat problem find model count model lack big pictur satisfi problem general sat order theori general smt find model count model sat general order theori sat smt general count model general order theori general count model figur logic satisfi problem note count model smt smt theori permit infinit number model exampl uncount infinit model formula background theori theori linear arithmet ration restrict problem count model respect set boolean variabl restrict guarante finit number model background theori definit smt problem theori combin theo rie formula model count modulo theori problem smt problem count model respect set boolean variabl satisfi sat general order theori sat smt general count model smt general order theori general count model figur logic satisfi problem smt problem pictur logic satisfi problem figur complet smt problem general sat problem smt problem recal state art smt solver integr compon enumer integr sat solver enumer truth assign satisfi boolean abstract input formula solver valid consist theori partial assign produc sat solver natur smt solver extend smt solver replac sat solver sat solver explicit enumer model quantit flow smt assum set attack model figur program take secret input public input produc public output definit quantit flow problem count number valu output bit data assum order formula properti set boolean variabl set qif problem count view smt problem formula set boolean variabl view hand program perform qif analysi tool box formal method hand logic formula comput smt dpll algorithm approach qif problem construct formula program solv smt solver second formal method mimic dpll algorithm qif smt formal method dpll approach intuit complic shelf smt solver will leav chapter chapter will explor second approach simpler power analys real program outperform dramat state art techniqu extrem naiv techniqu qif formal method check number output assert violat return assert output check valid assert formal method assert valid contrari assert violat increas counter assum power tool verifi assert second procedur second year techniqu impract reason check concret time vulner state space explos problem techniqu naiv inspir develop procedur process multipl valu time consid set boolean variabl exampl partial truth assign repres concret valu bit configur bit bit second bit verifi satisfi ignor valu approach construct formula check satisfi formal method check assert valid partial truth assign symbol represent set valu output base develop techniqu call symbol quantit flow mimic dpll algorithm explor state space recal dpll algorithm consist dpll base sat solver enumer partial truth assign solver check consist truth assign formal method model check check formula satisfi partial truth assign model checker play role solver model checker solver symbol quantit flow step construct set boolean variabl describ languag support bitwis oper java instrument program figur program instrument instrument guarante variabl correspond bit output high level framework explor state space quantifi leak confidenti data describ procedur symbolicqif symcount figur function symbolicqif earlyprun symcount return figur symbol qif analysi function symcount return insecur extract solver symcount solver symcount figur symbol count qif pass refer pass symbol represent output describ previous formula repres program set model cardin procedur symbolicqif return channel capac size output data type bit integ depth recurs call paramet partial assign increment updat search progress symcount solver solver call check model assign illustr algorithm symcount run simpl exampl ignor temporarili line will clarifi consid case studi data sanit program figur integ valu output program number output variabl initialis procedur symbolicqif figur method earlyprun employ heurist will discuss method symcount call count number model variabl select systemat explor block code figur symmetr explain partial symcount illustr exampl depict figur call symcount variabl consider initialis empti solver call check model assign assert check valid program assert model check tool jpf cbmc solver verifi assert will return assert fail fals exampl solver return stand bit odd valu output satisfi condit sqif unsat figur partial explor path sqif program figur proceed call symcount procedur progress call symcount verifi assert time solver return fals repres set output element rang program output bit earlyprun sqif trim set concret valu repres famili set state space explos problem mitig depth sqif take path solver return model procedur continu point path sat sqif find full path repres output path sqif increas final method symbolicqif conclud data sanit program figur leak bit method earlyprun implement idea unsatisfi unsatisfi symbolicqif check satisfi store note earlyprun speed symbolicqif dramat number model output program small develop prototyp tool qif analysi program sqifc built top cbmc sound complet sound sqif approach return symbolicqif element model correspond output program complet sqif set model valu output theorem sound resp complet solver sqif approach sound resp complet symcount solv qif problem definit proof sketch sqif algorithm describ figur base dpll depth search procedur search space binari tree bound depth number bit output depth search procedur complet sound sqif guarante sound solver model checker realiti solver complet domain sound complet solver larg leak requir exponenti number call solver practic sqif complet program small leak tool base bound model checker choos analys bound program notic theorem hold general solver practic issu complet propos shift focus question leak simpler quantit question leak approach problem easier analysi intuit term secur user polici threshold encod analysi ultim goal secur analysi determin program secur insecur discuss previous goal qif relax secur polici interfer accept threshold bit interfer toler small leak accept program secur sqif approach user polici sqif find output procedur conclud program insecur mean line function symcount figur straightforward consequ theorem assum sound solver user polici symcount return secur program leak bit formal express corollari sqif sound user polici evalu paper qif static code analysi real applic exampl three approach attack model cach side channel direct compar approach attack model moment restrict program compar sqifc will concentr refer selfcomp base well concept composit analysi anonym protocol compar sqifc quail state art quantit analys probabilist program case studi broad fall three categori categori consist case studi nation vulner databas govern aim demonstr analysi deal complex code crc case studi applic quantifi leakag applic leak design case studi grade dine crypto protocol techniqu unabl analys probabilist program comput channel capac anonym protocol experi conduct desktop machin intel core memori cve case studi exampl program leak attack control public input nation vulner databas nvd govern releas int osf_getdomainnam char __user int namelen unsign len int error error verify_area verify_writ namelen error goto len namelen namelen len down_read uts_sem len __put_us break up_read uts_sem return error figur arch alpha kernel system call osf_getdomainnam depict figur linux kernel leak sensit kernel memori caus integ signed error sign paramet namelen assign unsign variabl len negat transform big posit condit restrict namelen number charact return user structur greater includ byte kernel memori order quantifi leakag caus vulner chose threshold secur polici program secur leak bit time figur sqifc selfcomp conclud program insecur appli patch provid vulner sqifc time sqifc leak bit prove patch fix leak cve case studi nvd releas function sco_sock_getsockopt_old linux kernel depict figur leak sensit kernel memori static int sco_sock_getsockopt_old struct socket sock int optnam char __user optval int __user optlen struct sock sock struct sco_conninfo cinfo int len err lock_sock switch optnam case sco_opt case sco_conninfo sco_pi conn hcon handl memcpi sco_pi conn hcon dev_class len min_t unsign int len sizeof cinfo copy_to_us optval char cinfo len err efault break release_sock return err figur net bluetooth cinfo copi user total size byte byte correct assign compil includ addit pad byte align purpos pad byte zero kernel memori leak user analysi figur cyclic redund check program figur perform cyclic redund crc shift result sft bit java version program test jpf qif unsign char unsign char check unsign char int sft check check check check check check check check check check check check check check sft return check figur cyclic redund check quantifi amount confidenti input reveal serv output function analys program sqifc selfcomp sft valu maximum leakag program selfcomp time case bit consist design program analysi figur case sft selfcomp faster state space small selfcomp requir call cbmc sft state space explos selfcomp fail solv sqif requir call solver vulner state space explos wiki cyclic_redundancy_check case studi polici loc sqifc time selfcomp time data sanit time cve cve time cve cve time crc crc time figur compar sqifc selfcomp time second timeout minut case studi polici grade protocol case studi illustr protocol analysi anonym protocol design enabl group student comput sum grade comput averag reveal individu grade note student arrang ring secret grade comput sum disclos student produc random number number student student output number sum grade equival sum output modulo protocol implement probabilist program implement standard ansi built determinist function cbmc sourc code figur base provid array store grade student secret attack observ sum compar quail tool sqifc repeat experi author grade protocol tool exampl provid quail time hour case figur leakag author case tool time result figur direct paper compar figur easi realis bound leak measur sqifc exceed real leak measur quail bit sqifc requir minut case figur int func size_t size_t sum size_t number announc nondet_int number nondet_int announc number number sum announc return sum figur grade protocol tool quail sqifc student time figur leakag measur quail sqifc tool quail sqifc student figur elaps time second quail sqifc dine crypto protocol case studi variat dine cryptograph protocol chaum popular problem anonym protocol group cryp tograph gather tabl dinner meal inform bill paid nation secur agenc nsa cryptograph respect anonym payment find nsa paid determin protocol pair adjac cryptograph toss coin hidden cryptograph valu coin share left cryptograph declar aloud exclus coin see payer cryp tograph declar opposit sum declar valu conclud nsa paid bill hand sum odd cryptograph size_t func size_t output size_t coin obscoin decl size_t nondet_uchar coin nondet_uchar decl coin coin decl decl output output decl return output figur dine crypto protocol interest know payer leak sum declar valu dine cryptograph observ declar valu input code protocol depict figur ident payer secret output observ coin toss model built determinist function model precis implement probabilist program select random valu specif distribut model determinist function comput channel capac comput maximum leakag distribut figur channel capac comput sqifc time comput crypto channel capac time second figur dine crypto protocol analys sqifc discuss work meng smith introduc approxim techniqu calcul upper bound channel capac author implement method manual propos autom work meng smith inspir techniqu imprecis exampl leak spars state space user polici encod analysi infeas leak small exampl program leak bit integr confidenti data call stp solver determin bit fix order determin bit pattern pair fix bit call stp solver call total autom method qif propos back method divid stage employ model check comput equiva lenc relationr set confidenti input observ output second relat repres system linear integ inequ bound integ polytop variant algo rithm count number integ solut work effort autom qif analysi clear approach appli real program exampl bit wise oper crc case studi linear relat closer work paper selfcomp discuss previous outlin approach address question leak appli qif real applic leakag cach side channel techniqu base abstract interpret base bound model approxim channel capac preliminari version chapter present workshop confer definit smt bit chapter requir boolean variabl set boolean abstract atom name problem proposit abstract model count requir definit complic general paper explor qif pure logic framework approach power eleg limit compar approach reli solver generat model approach solver exampl analys java jpf solver bytecod jpf generat model sens mccamant ernst releas flowcheck tool secur test base dynam taint analysi flowcheck measur number taint bit theoret bound approach tool describ analys larg program notion channel capac context dynam taint analysi approach base verif techniqu sens work stronger theoret guarante chapter symbol execut dpll modulo theori previous chapter introduc symbol quantit flow sqif approach mimic dpll algorithm sqif implement top bound model checker cbmc routin analys program written chapter present altern implement sqif approach symbol execut implement base key observ symbol execut view variant dpll algorithm symbol executor smt solver view enabl modifi symbol pathfind symbol executor java bytecod qif analysi tool jpf qif effort work chapter symbol execut qif analysi jpf qif qif analysi tool java introduct symbol execut popular increas academ set industri microsoft nasa ibm fujitsu success effici smt solver key factor fact introduc three decad ago practic smt advanc recal state art smt solver implement dpll algorithm integr compon compon dpll base sat solver search boolean skeleton formula second compon solver check consist theori conjunct liter path condit generat symbol executor symbol pathfind spf conjunct liter smt solver check path condit solver work sat compon hand classic symbol executor divid compon compon call boolean executor execut instruct updat path condit second compon solver sat solver valid consist path condit thesi boolean executor work dpll algorithm variant dpll view connect communiti insight futur illustr dpll complet formal descript dpll algorithm recal background run exampl linear arithmet formula boolean variabl call boolean atom atom formula call theori atom atom order formula abstract boolean skeleton replac atom boolean abstract exampl defin boolean variabl boolean abstract atom abstract express claim decis procedur stp convert bit vector formula proposit formula solv sat solver result formula stand proposit boolean skeleton logic equival function dpll booleanformula true status propag status sat return sat status unsat returnunsat true decid status propag status sat return sat status unsat allstatesareexplor return unsat backtrack figur dpll algorithm dpll algorithm integr dpll algorithm solver dpll algorithm search return conjunct boolean liter replac boolean atom correspond atom conjunct solver check consist theori illustr dpll limit space decis liter true true solver inconsist true solver consist dpll algorithm build model three main oper decid propag backtrack oper decid heurist choos liter unassign boolean atom negat branch oper propag remov claus delet occurr formula procedur call boolean constraint propag bcp delet liter claus claus liter left unit claus bcp assign liter true delet liter claus empti claus call conflict case dpll procedur backtrack branch step decid branch liter solver valid consist bcp remov claus delet occurr unit claus assign true step chosen solver check conjunct inconsist dpll backtrack lead consist model note dpll refer procedur integr dpll solver dpll procedur integr schema describ interest reader point refer symbol execut dpll intuit program encod order formula model cor respond program trace symbol executor explor program trace set program condit view smt solver return partial model set boolean atom thesi consid bound program class program analys loop unwound sequenc statement order encod program formula program variabl renam manner static singl assign form variabl assign exact renam variabl reassign assign will encod unsatisfi atom formula set program model symbol transit system sts set program state set initi state state sts model comput memori program point set guard set action guard action order formula action model instruct comput memori action updat comput memori condit jump boolean atom atom transit function tij gij aij model transit state state action aij guard gij transit tij state exact state apart variabl updat action aij note sts model program detail transit system will chapter encod transit tij order formula form tij gij aij equal tij gij aij encod express satisfi guard gij impli action aij perform program trace defin sequenc transit semant program defin set trace equal set transit repres formula tij tij tij gij aij void test int int figur simpl program associ sts model transit model rest program figur depict simpl exampl program associ sts encod sts formula illustr dpll previous illustr exampl smt solver symbol executor high level view integr compon boolean executor execut instruct solver check feasibl path condit exampl spf paramet custom decis procedur set paramet option no_solv spf sole work function executor program pathcondit true instructionpoint null updat return return true decid updat return allstatesareexplor return backtrack figur simplifi boolean executor figur depict simplifi procedur procedur describ build path condit three main oper decid updat backtrack oper decid choos liter condit negat statement branch path condit oper updat symbol execut block statement branch statement present updat comput memori reach symbol path backtrack explor path symbol executor integr solver backtrack path condit satisfi dpll reli depth search decid choos liter execut block guard exact dpll choos gij claus gij aij bcp delet gij assign aij true consid dpll simplest form chronolog backtrack oper updat work bcp view implement dpll algorithm dpll sqif symbol execut view dpll symbol executor work symbolicqif effort key idea enumer concret valu symbol execut figur partial explor path sqif data sanit program figur program take symbol input produc output result run formula symbol input path condit notic express symbol final term symex write proposit prove king proposit pci pcj path condit mutual exclus definit path condit pci concret set pci denot pci set concret valu output reach execut program pci consid illustr exampl figur path condit correspond concret set path condit set valu output form union concret set path pci set pci comput insert code figur program add condit test bit output thesem condit test bit output explor combin condit lead enumer valu denot sqif implement sqif partial explor path sqif describ figur implement symbol pathfind spf return concret valu path number distinct concret valu count sqif implement prototyp tool jpf qif built top spf tool work java program sound complet sqif reli symbol executor complet program bound model runtim behaviour program recurs unbound loop well issu handl orthogon work sqif sound sound symbol executor evalu evalu jpf qif compar previous implement sqifc selfcomp techniqu case studi revisit data sanit program crc program previous chapter consid tax program tax record balliu provid interest case studi flow secur java program deriv fund project hat program class interfac loc analysi assum year basic tax rate appli person incom exceed pound annum tax thousand pound annual assum donat chariti amount tax paid pay earn interest leak incom donat tax checker qif declassif balliu consid case declassif call associ polici incom donat payment second call associ polici incom donat payment claim declassifi case resp case lower bound resp upper bound reveal tax checker fix tax rate variant notic sentenc term reveal bound author describ quantit concept result jpf qif quantit answer question case observ payment greater smaller sum tax donat output correspond leak bit user polici threshold case assumpt list leakag upper bound bit second case studi loc sqifc time jpf qif time selfcomp time data sanit time crc crc time tax record figur time second timeout minut inapplic spf handl condit integ valu simplifi code replac incom tax integ simplif chang secreci entropi incom will affect result analysi analysi figur general jpf qif slower sqifc implement algorithm surpris java consid slower spf virtual machin run top java virtual machin overhead implement spf discuss work correspond symbol execut dpll algorithm mention previous work paper describ preliminari version dpll base algorithm previous chapter figur time tool sqifc present quick implement algorithm spf year brain publish excel paper show correspond dpll abstract interpret believ symbol execut case abstract awar paper discuss rigor relat wiki symbolic_execut chapter concurr bound model check chapter introduc implement symbol quantit flow approach sqifc employ bound model checker cbmc second jpf qif built top symbol pathfind symbol execut platform natur question relat symbol techniqu bound model check symbol execut chapter studi relat introduc methodolog base symbol execut concurr bound model check approach translat program formula disjunct form design enabl concurr verif main thread run symbol executor constraint solv build formula set worker thread run decis procedur satisfi check implement methodolog tool call jcbmc bound model checker java jcbmc built extens java pathfind open sourc verif platform develop nasa jcbmc symbol pathfind spf symbol execut solver implement concurr multi thread evalu compar jcbmc spf cbmc experi achiev advantag perform state art tool introduct model check techniqu classifi categori explicit state symbol depend process state system explicit state model check enumer state system explicit fli symbol model check repres set state symbol effici binari decis diagram boolean formula sat smt base bound model check bmc unwind transit relat program fix number step check properti violat occur fewer step bound verif reduc satisfi check perform sat smt solver bmc hardwar industri softwar applic bmc ansi embodi cbmc practic applic cbmc pro gram assert translat formula static singl assign form fed sat smt solver check satisfi satisfi assign indic error bound model check explor languag includ java explicit state model check tool java pathfind jpf verif java applic explos symbol execut tool test case generat error detect context high level languag exampl relev work report symbol pathfind spf symbol execut tool built extens jpf symbol analysi java program involv multi thread complex data structur thesi describ altern methodolog bmc base classic symbol execut sens king note cbmc transform program static singl assign form view execut program symbol encod king evalu encod work report methodolog languag specif reli symbol executor languag smt solver symbol execut translat program assert disjunct formula encod path condit bound complet path explor code suggest simpl concurr verif strategi reli observ subset disjunct disjunct separ check satisfi subset satisfi satisfi task stop verif disjunct formula natur paralleliz implement methodolog tool call jcbmc stand java concurr boundedmodel checker tool built top spf generat disjunct formula code constraint solv turn spf generat formula send formula multipl worker thread satisfi check jcbmc handl program multi thread recurs input data structur reli standard smt solver solv constraint solver easili incorpor solver solv path constraint parallel jcbmc prototyp concurr implement multi thread parallel perform compar exist tool symbol pathfind cbmc remark summar contribut methodolog concurr bound model check base clas sical symbol execut natur paralleliz methodolog languag independ support assum guarante rea sone tool jcbmc concurr bound model checker java experi effect tool verif program multi thread data structur comparison bound model check classic symbol execut embodi cbmc spf illustr exampl illustr approach simpl exampl program figur check assert valid input note analysi explicit state model checker jpf feasibl involv enumer input program void test int int assert figur simpl exampl figur path figur illustr classic constraint solv program path analysi perform spf concret valu take symbol input execut concret valu track path condit consist condit true path symbol environ map variabl express input symbol typic updat check satisfi shelf solver initi true map input symbol reach updat condit reach condit translat point call smt solver detect jump unchang approach bmc play role generat formula encod program behaviour properti check satisfi formula will check separ smt solver execut invok constraint solv updat postpon check execut path save execut time call solver trade infeas path includ will affect sound analysi constraint solv perform reach path reach properti verifi denot evalu symbol environ point map lead properti violat path find model set will provid model formula generat approach code figur general explor symbol path length encod program properti check formula form pci number path trigger error form allow divid formula block disjunct pci pci pci pci solv formula concurr thread solv singl block model singl block model formula procedur stop thread find model jcbmc main thread generat formula pass worker thread move generat formula worker thread solv formula concurr concurr bound model check method concurr bound model check illustr figur input method program test properti verifi three paramet search bound number worker number disjunct worker goal check properti hold program explor bound solver worker thread main thread solver worker thread solver worker thread control symbol execut constraint solv disjunct path condit program figur concurr bound model check architectur bound model check symbol execut program test analys classic bound symbol execut constraint solv turn path condit updat check satisfi continu explor result symbol execut explor infeas path will check constraint solv approach bound verif safeti properti assum reduc check assert embed code method support assum assert statement enabl assum guarante style verif assum condit simpli path condit symbol execut result disjunct path condit encod constraint input follow path pre search bound path lead assert violat select solv achiev control collect set violat path condit send solv parallel worker thread shelf solver worker start solv receiv disjunct formula happen symbol execut explor program verif termin thread find satisfi assign case error report disjunct satisfi case assert hold error bound note symbol execut discov violat path error unreach solv will perform compar approach bmc compar classic bmc explicit enumer path bmc implicit enumer path glanc implicit encod better experi sequenti jcbmc case explicit enumer easili paralleliz simpl natur load balanc thread crucial approach stop path lead error satisfi classic bmc program explor compar classic symbol execut solv price paid explor infeas path hand natur paralleliz constraint solv bottleneck parallel solver coordin need describ detail method start descript sequenti approach clarifi symbol execut built disjunct formula path condit solv formula symbol execut sequenti sequenti verif approach employ bmc base simpl observ suppos error state transit system determin reachabl initi state bmc build seri transit formula hand build path condit order formula characteris reachabl condit character input reach error suppos prove formal program satisfi bound properti repres set assert program reach assert point assert valid pci verifi check satisfi pci function symexbmc return extract statement statement eof issat return assum assert process execut assign updat extract statement eof return extract statement symexbmc symexbmc figur formula generat bmc function process figur process error path proof notic formula negat pci pci pci pci pci satisfi exist pci satisfi initi state lead path pci satisfi properti hand pci satisfi disjunct pci satisfi exist initi state lead execut path satisfi assert algorithm figur build formula pci languag describ previous essenc algorithm run classic constraint solv check satisfi statement determin locat function return locat statement statement consist condit locat true locat fals recurs procedur symexbmc well function process paramet pass symexbmc check concurr mode sequenti mode issat set fals chang procedur declar global variabl initialis fals denot global constant defin bound bmc standard symbol environ map program input symbol path condit initialis true denot depth recurs initialis procedur symexbmc start ensur search depth reach bound symbol execut basic block branch statement program basic block end statement locat reach sourc file eof assumpt assert evalu current symbol environ assign symbol environ updat map variabl left hand side evalu hand side block statement locat symexbmc recurs call path path condit path condit check path feasibl concurr verif simpl algorithm present previous section will essenti enumer feasibl infeas path program bound collect path condit path formula disjunct form invok constraint solver check satisfi disadvantag approach enumer path program expens multi thread consid propos concurr algorithm parallelis symexbmc deleg satisfi check disjunct worker thread concurr algorithm reli paramet number concurr worker number disjunct worker optim choic architectur smt solver depend experi disjunct reason choic main function figur initialis exact sequenti mode symexbmc issat boolean variabl share thread modifi set true global variabl issat statement symexbmc issat execut issat worker thread issat return verif success return verif fail figur main thread function issat smt solver model issat figur worker thread function process execut issat worker thread figur process error path concurr bmc main thread number current disjunct initi function symexbmc call main differ sequenti concurr mode function process figur check symexbmc sequenti mode issat fals symexbmc build formula reach eof concurr mode number disjunct reach bound process send satisfi check worker thread crucial worker thread parallel run thread complet independ task worker thread find model set share variabl issat true will return control main thread comput verif fail thread set issat true symexbmc will eventu termin remain disjunct number satisfi check final thread verif success return thread set issat true comput implement prototyp tool jcbmc implement observ design pattern spf execut symbol java bytecod program act subject control act observ wait spf generat formula withd disjunct send worker thread user chosen paramet jcbmc worker thread execut issat write file format call smt solver check satisfi jcbmc creat thread pool worker current architectur support parallel multi thread jcbmc built top spf extens jpf platform inherit power jpf spf evalu evalu compris case studi compar jcbmc spf default configur case studi compar jcbmc compar cbmc consid code java translat liter remind current implement jcbmc multi thread parallel expect parallel implement advantag current jsbmc denot sequenti implement jcbmc singl thread experi machin equip dual xeon cpus tabl time second xmi minut second time hour denot memori sourc code exampl https qsphan jpf bmc compar tool solver experi cbmc will call option will satisfi check memori hit memori problem address memori manag jpf direct implement symexbmc spf jsbmc cbmc jcbmc jcbmc array size bubbl sort assert negat time time time verif bubbl sort time time sum array unsaf safe fail figur perform tool jcbmc jcbmc jcbmc paramet fail refer spf fail solv constraint integr solver compar cbmc spf bubbl sort consid classic bubbl sort algorithm studi bmc communiti differ consid challeng symbol version valu array determinist chosen consid verif assert element array order bubbl sort negat element array order bubbl sort analys program implement bubbl sort will bug posit assert will buggi negat fig notic cbmc better posit assert jcbmc outperform tool negat assert capabl find counterexampl array size higher order magnitud sum array consid array case studi verif refut array size set spf jcbmc outperform cbmc unsaf version cbmc slight advantag safe version compar spf java code exampl consist substanti java code natur tran latabl compar jcbmc spf notic jcbmc spf extens jpf case input concret reduc jpf core perform ident consid program symbol input flap control case studi ship distribut spf multi thread program model simplifi flap control aircraft class line code exampl demonstr handl multi thread red black tree exampl spf distribut loc class check consist tree perform remov firstkey symbol jsbmc jcbmc outperform spf mer arbit mer arbit model compon flight softwar nasa mar explor rover mer mer arbit model simulink state flow automat translat java polyglot framework analyz spf configur analysi involv user resourc exampl class method line code includ java polyglot execut framework approx class relev analys code error perform spf jsbmc jcbmc compar spf better tool spf jsbmc jcbmc jcbmc flap control unsaf red black tree safe mer arbit unsaf mer arbit safe figur perform flap control red black tree mer arbit jcbmc jcbmc jcbmc paramet discuss experi compar cbmc jcbmc score better find counterexampl verifi absenc consist design counterexampl correspond worker thread find model formula compar spf jcbmc better bubbl sort red black tree compar wors mer arbit flap control reason cost generat path condit domin cost solv spf fail generat formula bubbl sort size higher error path mer occur explor discov spf jcbmc generat pre number error path solv direct futur work investig improv cost base path generat discuss work approach parallelis bmc address parallel solv conjunct formula built bmc aim perform solv bound claus share enabl effici sat solv contrast aim solv formula generat bound natur disjoint simpler parallel algorithm work aim verifi program written high level languag java clear previous work perform context finit state automata applic work parallel sat smt solv complement work present sens parallel version worker speed propos approach pkind parallel model checker lustr induct pkind run parallel task involv perform induct base step induct step generat auxiliari invari verif pkind perform parallel work higher level granular jcbmc interest investig replac parallel task pkind version base bound verif turn parallel level granular symbol path parallel model check investig context explicit state symbol explor context verif binari decis diagram approach concentr partit state space explor parallel deal communic overhead parallel worker contrast approach worker perform solv independ communic previous work develop framework perform parallel symbol execut spf set pre condit partit symbol execut tree distribut process pre condit comput priori shallow symbol execut small explor bound static comput partit input space communic overhead approach parallel symbol execut oper pri marili dynam partit symbol execut tree load balanc result better comput resourc communi cation overhead approach context classic dynam symbol execut constraint solv path gen erat contrast approach advoc clear separ path generat constraint solv allow easili achiev load balanc worker communic overhead interest pare experiment combin techniqu jcbmc parallel version spf plan futur work chapter quantifi leak reliabl analysi chapter present techniqu symbol execut quantit flow analysi symbol execut explor program count model chapter explor altern approach symbol execut explor program leav task count model reliabl analysi tool chapter divid part studi qualit aspect flow analysi contribut novel practic approach composit symbol execut second chapter relat reliabl analysi quantit flow exploit relat combin composit techniqu symbol execut base reliabl analysi tool quantifi leak java bytecod introduct recal introduc theorem prove approach interfer interfer logic formul composit awar approach qualit analysi return fals posit fals negat quot claim terauchi aiken composit impract expect futur advanc main limit composit point terauchi aiken symmetri redund compos program lead partial correct condit hold find condit crucial effect analysi find general impract practic implement composit qualit analysi idea composit copi program compar approach divid step step compos program copi second perform analysi compos program approach delay compos second step perform analysi origin program symbol execut second compos result analysi formula composit expand idea compar program copi compar pair execut imposs enumer execut symbol execut synthes symbol path repres set concret execut perform comparison symbol path formul path equival delay compos perform analysi main novelti approach avoid symmetri redund compos program symbol path synthes symbol execut present order theori generat formula composit valid formula automat effici check power smt solver quantit analysi tradit composit techniqu program leak contrari refin symbol execut base composit fine grain analysi decid path program leak quantifi leak symbol path reliabl analysi tool approach implement autom tool call qilura stand quantifi leak reliabl analysi program input label high low qilura comput upper bound maximum number bit program leak public observ implement context java bytecod program spf symbol execut engin extend reliabl analysi work general appli context program languag symbol execut tool exist program symbol pathfind label procedur omega quantifi procedur latt input label bit figur architectur qilura high level architectur qilura depict figur user label input program high low program pass spf collect symbol path label procedur fine grain composit classifi path three categori clean direct indirect procedur satisfi check composit condit final quantifi procedur barvinok model count techniqu symbol constraint simplifi omega collect spf count number input follow path label direct upper bound bit leak preliminari reformul symbol execut background symbol execut base reliabl analysi framework filieri symbol execut chapter describ symbol execut symbol transit system model detail transit program guard action detail chapter captur transit system describ concret execut reformul symbol execut coars grain transit system take account sourc target state transit program model set symbol state repres set concret state set initi symbol state set final symbol state transit function symbol path symbol trace program repres sequenc symbol state symbol semant defin set symbol path call symbol execut tree likewis repres set trace denot variabl state symbol execut program initi input symbol leaf symbol execut tree symbol formula output symbol environ product path condit pci reachabl pci correspond symbol path theorem prove king theorem pcj defin function path path pci output consid result function hold corollari general combin order theori linear arithmet bit vector tool shelf smt solver check satisfi elimin unreach path appear control flow graph reliabl analysi reliabl analysi aim comput probabl program accomplish task error previous work perform reliabl analysi earli stage design architectur abstract program applic sourc code filieri introduc approach comput reliabl program java bytecod approach enumer symbol path path condit pci symbol path label program accomplish task program reach error state iii decid path fulli explor stand grey path condit pci filieri tool latt comput effici number input pci satisfi path condit reliabl program probabl program accomplish task comput pct pcf pcg qilura comput probabl direct count comput symbol constraint composit symbol execut avoid limit theorem prove approach reformul composit formula simpler logic program trace semant program composit path equival program take secret input public input produc public output program variabl renam trace semant definit trace equival program satisfi interfer init init fin fin state hoar tripl pair trace initi state final state point formul composit involv program simpl program imposs comput trace solut trace equival recal symbol path repres set trace build complet symbol execut tree consid bound program corollari trace equival context redefin definit path equival program satisfi interfer equat hold init init path path fin fin smt formula combin order theori key novelti approach formul composit order theori enabl solv effici shelf smt solver path equival generat suppos symbol execut simplifi formula choos input symbol init init automat satisfi init init init init result function output path equival rewritten check path equival follow symbol path guarante absenc direct flow hand check path equival follow symbol path guarante absenc implicit flow exampl illustr approach toy exampl assum set program confidenti input public input output execut input symbol implicit flow consid password check program true fals true fals generat true true fals fals true fals trivial prove valid invalid program violat interfer leak implicit flow flow consid modifi version password check procedur list fals fals fals fals generat fals fals fals fals fals fals trivial prove valid program satisfi interfer note case type system taint analysi decid violat interfer confidenti data involv consid password check program small modif exclud confidenti data comput secur true fals true fals deriv true true fals fals true fals valid confirm intuit program secur implicit explicit flow consid data sanit program summari path condit return generat easi find counterexampl invalid exampl program leak implicit explicit flow optim collect symbol path path condit three case fin path classifi secur exclud comput optim program figur classifi secur comput fin path case comput path will result formula true valid exclud comput fin conclud program insecur leak direct flow taint analysi precis detect case three optim suffici elimin comput simplifi formula valid previous paper terauchi aiken present interest program comput fibonacci number confidenti data appli composit techniqu program turn tricki symmetri redund compos program state art safeti analysi tool blast fail termin symbol execut base approach optim case studi trivial check comput quantifi leak combin composit reliabl analysi high level qilura perform step analysi collect symbol path program user depth path assign label clean leak direct leak direct flow iii indirect leak indirect flow second model counter symbol path count number input direct path comput upper bound leakag qilura https qif jpf qilura fine grain composit check satisfi path equival condit decid program leak refin path level analysi leakag assum set symbol execut program input symbol program input symbol base path equival condit direct flow indirect flow defin composit condit symbol path definit path path fin leak direct flow condit hold appli materi implic rule condit case leak direct flow condit violat negat satisfi formula simplifi law definit symbol path path fin path fin leak indirect flow condit hold deriv case leak indirect flow formula satisfi base condit implement procedur label symbol path figur function issat implement call smt solver algorithm procedur straightforward path label clean procedur search direct flow check condit path search indirect flow check condit pair symbol path model count symbol path symbol path denot number concret input output pci comput label path classifi three categori clean direct indirect channel capac bound clean path indirect path indirect path label clean issat label direct issat label clean label indirect label clean label indirect figur fine grain composit clean path interf confidenti input replac indirect path reveal program path output interf path output number indirect path comput determinist program view function map input act output denot semant number input greater equal number output model count engin symbol path comput comput upper bound channel capac evalu autom qif analysi notori hard best knowledg tool qif analysi java bytecod work jpf qif qif analysi model count jpf qif add condit test bit output program explor condit spf compar jpf qif qilura compar bitpattern comput upper bound channel capac explor relat pair bit output work bitpattern improv heurist compar qilura improv bitpattern case studi figur flow consid special case program leak assess effect precis techniqu corner case program leak output secret assign condit program reject qualit flow techniqu base type system taint analysi discuss figur summari experi time faster version bitpattern note author manual transform program bit vector predic will extra time autom process case studi jpf qif qilura bitpattern capac time bound time bound time flow saniti check base saniti check base implicit flow electron purs ten random output figur capac bound bit time second report compar jpf qif qilura advantag disadvantag figur model count tool latt qilura faster jpf qif upper bound comput deviat small extent exact channel capac increas perform price latt count model system linear integ inequ reason qilura analys case studi crc tax record chapter complic constraint limit latt share previous work demonstr toy exampl bitpattern techniqu comput tight upper bound case analys relat pair bit techniqu vulner valu output specif rang case studi discuss work composit introduc darva express dynam logic prove flow properti java card program approach autom requir user provid loop invari induct hypothes barth coin term composit investig theoret aspect extend problem determinist termin sensit case terauchi aiken composit problemat compos program symmetri redund propos type direct transform simpl imper languag deal problem milushev implement type direct transform dynam symbol execut concol test program analysi tool interfer knowledg techniqu uniqu perform analysi origin program compos program idea composit renam symbol formula analysi stage back describ model checker armc latt qif analysi techniqu precis extrem expens involv input count comput pre imag observ contrast input count count observ work back extend interact theorem prover key armc requir user effort work base classic composit terauchi aiken point practic cours demonstr toy exampl techniqu precis determin program leak composit qilura composit key differ determin singl symbol path leak chapter solver model count modulo theori recal cast problem qif analysi smt problem propos smt base approach qif summar figur qif smt formal method dpll investig approach left hand side direct analys program formal method bound model check symbol execut mimic smt solver qif analysi chapter investig second approach hand side demonstr build program formula properti describ build smt solver count model studi variant smt problem solut satisfi modulo theori smt problem smt smt count number model ask enumer model algorithm smt smt propos smt solver applic domain bound model check autom test generat reliabl analysi quantifi leak smt solver assum set attack model figur program take secret input public input produc public output analysi consist step step build order formula program formula properti set boolean variabl second step smt solver count number model respect set will build smt solver moment assum solver qif analysi illustr exampl demonstr approach consid illustr exampl figur encod order formula figur figur simpl program encod order formula program transform static singl assign ssa form variabl renam reassign assum variabl declar variabl reassign rest program build set boolean variabl chapter direct analys program set instrument sourc code program block code figur block code bitwis oper extract bit output analys formula encod program build set instrument formula formula order theori support bitwis oper fortun model checker cbmc autom transform program formula theori bit vector qf_aufbv satisfi requir formula figur easili express qf_aufbv declar bit vector instrument formula set boolean variabl test bit exampl assert extract statement smt lib format extract bit bit posit posit compar bit equal boolean variabl assert truth comparison set appli rest boolean variabl point built formula character behaviour program set boolean variabl repres bit output program smt solver count number model respect set number valu output conclud maximum leakag program definit program transform cbmc step analysi second step autom smt solver autom step build formula program assert figur function program transform express renam ssa form assign model checker cbmc transform program guard logic formula function transform program constraint transform program specif assert guard initialis function defin induct syntax program figur interest reader point full detail default set cbmc transform program specif proposit formula option experiment transform program specif qf_aufbv formula smt lib format leverag option build formula recal formula generat cbmc form program constraint program specif assert assess secur program free error program constraint specif aggress program slice cbmc decid program violat specif generat formula strong featur cbmc prevent formula simpl solut problem add fake error assert program generat formula simpli formula instrument demonstr exampl instrument formula generat cbmc set boolean variabl ssa form variabl renam reassign exampl output name initialis assign renam increment final final assign build simpl parser locat variabl renam output maxim declar set boolean variabl bind bit append formula formula instrument procedur implement simpl java program solut satisfi modulo theori smt solver mathsat version function call smt formula set boolean variabl mathsat smt mode comput model respect set thesi extend smt mathsat set relev boolean variabl extend smt problem comput model respect set model includ assign variabl smt problem analys avail reliabl secur program bound model check smt base bound model check return singl error trace user error model checker error trace smt solver return model combin bound model check smt solver comput multipl counterexampl model checker autom test generat smt solver combin symbol executor bound model checker test input generat tradit symbol execut smt solver capabl generat test input hundr thousand call smt solver approach symbol execut tool call smt solver program reliabl analysi build reliabl analysi tool combin smt solver symbol executor enumer path condit program barvinok model count techniqu comput number input symbol path comput reliabl program probabl program accomplish task error multipl counterexampl bmc recal bound model check bmc transform program specif formula solv formula sat smt solver sat smt solver return singl model state art sat base smt base bound model checker return singl error trace user error model checker find error trace hand smt solver return model set boolean variabl exploit find multipl counterexampl bmc assert assert assert assert figur exampl modifi program transform static singl assign form encod logic formula illustr approach reconsid exampl illustr cbmc exampl figur modifi assert program error step program transform ssa form figur appli ssa program set guard denot boolean variabl model formula will correspond trace program violat specif smt solver return model respect set boolean abstract variabl guard set model correspond error trace note error trace repres set concret execut input repres concret execut trigger error set relev variabl includ model case repres guard program input autom test generat smt solver approach autom test generat atg bound model check symbol execut atg bound model check trick previous goal comput model formula correspond program trace program exampl figur figur program error will cbmc solver call cbmc will generat formula void foo int int return figur simpl program encod formula order generat test input cover program path bound previous append assert fake error program error reachabl program path cbmc will includ path formula box figur formula encod cbmc smt solver formula smt solver will return set solut assign test input function foo atg symbol execut recal symbol execut execut program unspecifi input symbol input concret data execut program path path condit built repres condit input execut follow path branch condit code classic satisfi path condit check branch point shelf solver feasibl program path explor test generat perform solv path condit propos approach smt solver constraint solver turn comput set program path pcm constraint solv pci infeas program test view correspond formula pcm illustr consid program figur program view correspond formula notic path infeas includ formula check constraint branch point appli boolean abstract lead smt solver set model return smt solver set feasibl path evalu relev variabl test input program atg repres guard program input reliabl analysi introduc altern implement approach smt base classic improv call smt solver explor feasibl path void foo int assert fals return consid previous exampl differ add error path previous constraint solver turn encod program logic formula path label path program finish hand path label error reachabl path previous smt solver will elimin infeas path latt tool count model path comput reliabl program algorithm smt smt solver shelf solver problem smt closet smt solver function smt mathsat mathsat support model generat relev variabl smt mode mathsat analysi mathsat return incorrect number model benchmark will reason develop lightweight approach implement smt smt front smt solver build algorithm number api provid smt solver list api descript assert assert formula solver check check consist assert model model check eval evalu express current model push creat backtrack point pop backtrack backtrack point key featur smt solver algorithm increment backtrack exampl sequenc api call effect solver assert check sat push assert check sat push assert check unsat pop assert check sat increment smt solver add addit assert orig inal formula check call time solver rememb comput call call check check avoid restart comput scratch restart comput previous status backtrack solver undo step push pop return previous status stack effici manner mathsat provid api interact solver increment mode api develop function filter model formula set boolean variabl set relev variabl function will return subset mir liter function will algorithm block claus method straightforward approach smt add claus prevent solver find solut function assert check sat model mir filter mir block fals block block eval assert block return figur block claus smt pseudo code block claus method figur time solver discov solut liter negat law block liter model view map true fals negat eval claus formula byassert block solut will discov procedur repeat solut point enumer solut respect solut store result correspond smt problem block claus method straightforward simpl implement larg number block claus will consum larg amount mem ori increas number claus boolean constraint propag procedur slow despit ineffici block claus method verifi techniqu depth search address ineffici larg number claus introduc alter nativ method avoid discov solut depth search dfs divid set variabl set set boolean variabl set unimport boolean variabl formula view function true fals smt procedur integr compon compon simpl sat solver enumer partial truth assign second compon smt solver check consist function dfs assert check sat return depth finish fals finish fals choose_liter push assert depth depth check sat depth model mir filter mir backtrack backtrack return figur depth search smt pseudo code dfs base smt depict figur method choose_liter choos state explor dfs manner variabl depth number variabl chosen choose_liter will select liter depth depth liter push formula unit claus recal plain dpll algorithm depth search combin bcp procedur perform bcp liter unit claus forc smt solver perform bcp liter variabl assign truth depth formula solver consist search model backtrack find method backtrack implement simpl chronolog backtrack pop unit claus set variabl finish true state explor call formula solver inconsist compar block claus method dfs base method effi cient term memori usag block claus method add block claus find model dfs add maximum unit claus memori effici lead time effici larg number model implement implement method discuss prototyp tool call tool built java api provid smt solver support standard smt lib addit command check allsat mathsat list variabl second allsat relev list relev variabl implement qif analyz call sqifc cbmc encod program formula invok comput channel capac evalu experi compar smt solver mathsat modifi smt second compar qif approach smt solver chapter formal method benchmark solver wrapper mathsat smt http test evalu smt solver benchmark expect mathsat time time dfs time exampl figur exampl figur flap control red black tree bubbl sort array fals sum array fals linear search fals data sanit implicit flow popul count mix duplic mask copi sum queri ten random output crc crc figur number model time dfs time time block claus method depth search base method time second time hour notic implement number model expect order evalu mathsat creat set benchmark group benchmark formula qf_lia integ linear arithmet benchmark evalu smt solver context test input generat formula generat symbol pathfind spf spf paramet set constraint solver paramet set no_solv tool will constraint solv architectur spf enabl attach listen spf execut program listen collect path condit output qf_lia formula model integ variabl test input origin program second group benchmark consid formula qf_aufbv bit vector array sourc benchmark program qif literatur collect cbmc option transform program qf_aufbv formula instrument formula smt problem relev variabl benchmark discuss evalu figur summari experi solver mathsat benchmark order compar mathsat comment relev variabl qf_lia benchmark figur mathsat faster surpris build tool front smt function mathsat built make intern data structur mathsat return incorrect model benchmark benchmark mix duplic mathsat faster extrem imprecis time note benchmark qf_aufbv deriv qif literatur number model report paper exampl mix duplic report model block claus method compar faster dfs base method number model small benchmark model block claus effici time memori result method fail provid answer benchmark hand dfs base method provid answer reason time evalu qif analys figur compar perform sqifc tool sqifc chapter sqifc effici reason sqifc call cbmc call cbmc transform program formula call sat smt solver check formula hand sqifc transform program search effici sqifc reli cbmc program transform function cbmc experiment cbmc generat incorrect benchmark leak sqifc sqifc time time cbmc time time total data sanit implicit flow popul count mix duplic mask copi sum queri ten random output crc crc figur compar approach sqifc tool chapter leak bit run dfs base algorithm time second timeout hour total time sqifc sum cbmc time time formula case studi chapter sqifc analys exampl dine crypto case studi discuss work quantit flow compar prototyp tool sqifc sqifc previous chapter compar smt base approach work qif literatur repeat discuss multipl counterexampl bmc relev work bhargavan embodi verisim test tool network protocol error trace violat specif extend ltl formula verisim techniqu call tune replac ignor violat tune fulli automat techniqu introduc ball embodi slam tool kit algorithm model checker routin model checker find error trace slam local error modifi sourc code halt statement error model checker invok halt statement instruct model checker explor path error procedur expens requir compar error trace correct trace local error requir model checker time work simpler faster error trace comput autom test generat closest work fshell cbmc autom test generat fshell transform program test cnf formula solv increment sat solver time sat solver find solut repres symbol path fshell add block claus prevent path explor experi block claus method suffer rapid space growth classic symbol execut smt solver check satisfi path condit smt solver call condit statement execut call hundr thousand time approach symbol executor call smt solver reliabl analysi approach reliabl analysi base paper filieri classic symbol execut barvinok model count tool extend approach smt base symbol execut classic symbol execut main differ case test generat approach call smt solver analysi solut sat modulo theori discuss chapter mathsat smt solver support smt algorithm describ comput predic abstract experi mathsat imprecis benchmark notic imprecis limit qf_aufbv benchmark author perform experi qf_lra formula context predic abstract lahiri propos techniqu smt solver barcelog generat set satisfi assign set predic includ barcelog experi solver provid author support smt princip differ work mention chapter implement front smt solver reason implement slower mathsat good side approach applic implement close sourc smt solver support smt provid api chapter conclus summari thesi introduc problem model count modulo theori smt present smt base approach quantif leak implement optimis drastic outperform exist techniqu base composit reduc time analys program linux kernel hour second approach applic program difficult data structur includ pointer java bytecod theoret side thesi origin contribut discov relat area cast qif problem smt problem correspond symbol execut dpll algorithm iii explor relat symbol execut bound model check final exploit connect qif analysi reliabl analysi applic side thesi symbol execut quantifi leak classic symbol execut bound model check propos smt solver multipl counterexampl bound model check autom test generat reliabl analysi practic side thesi develop tool java sqifc jpf qif qilura quantif leak softwar demonstr tool analys vulner nation vulner databas govern anonym protocol verif communiti contribut thesi includ develop jcbmc concurr bound model checker java smt solver futur previous chapter propos smt solver multipl counterexampl bound model check autom test generat reliabl analysi direct implement idea autom tool perform experi standard benchmark direct investig fault local interest avenu smt solver cbmc local error idea model correspond correct trace satisfi specif model correspond error trace violat specif smt solver comput set model respect set guard compar set model local transit appear error trace concurr bound model check improv direct upgrad concurr singl cpu multi thread true parallel perform obvious optimis improv replac symbol pathfind lighter weight tool parallel version reduc cost generat path condit will interest implement methodolog languag python investig symbol execut style verif statist analysi qif qilura tool prototyp improv approxim explor techniqu replac exact complet explor present thesi tool increas scalabl formal statist guarante refer august celebr photo leak http wiki celebrity_photo_leak benchmark loop softwar verif competit https softwar benchmark tag loop heartble bug http java pathfind http trac jpf latt http latt nation vulner databas http omega http project omega quail https quail soni pictur entertain hack http wiki sony_ pictures_entertainment_hack spin http symbol sourc code http trac jpf wiki project jpf symbc wolfram mathematica http mathematica http erika ábrahám tobia schubert bernd becker martin fra nzle christian herd parallel sat solv bound model check fmic pdmc alessandro armando jacopo mantovani lorenzo platania bound model check softwar smt solver sat solver sttt januari michael back bori kopf andrey rybalchenko automat discoveri quantif leak proceed ieee symposium secur privaci washington usa ieee comput societi daniel balasubramanian corina gábor karsai michael lowri polyglot systemat analysi multipl statechart formal taca thoma ball mayur naik sriram rajamani symptom local error counterexampl trace proceed acm sigplan sigact symposium principl program lan guag popl york usa acm musard balliu mad dam gurvan guernic encov symbol plorat flow secur proceed ieee comput secur foundat symposium csf wash ton usa ieee comput societi barnat brim divin parallel distribut model checker tool paper hibi pdmc ieee clark barrett aaron stump cesar tinelli smt lib standard version smt workshop gill barth pedro tamara rezk secur flow composit proceed ieee workshop comput secur foundat csfw washington usa ieee comput societi alexand barvinok polynomi time algorithm count integr point polyhedra dimens fix math oper res novemb karthikeyan bhargavan carl gunter insup lee oleg sokolski moonjoo kim davor obradov mahesh viswanathan verisim formal analysi network simul ieee tran softw eng februari bier bier heul van maaren walsh handbook satisfi volum frontier artifici intellig applic press amsterdam netherland netherland armin bier alessandro cimatti edmund clark yunshan zhu sym bolic model check bdds proceed intern confer tool algorithm construct analysi system taca london springer verlag fabrizio biondi axel legay loui mari traonouez andrzej wasowski quail quantit secur analyz imper code proceed intern confer comput aid verif cav berlin heidelberg springer verlag thierri boy tour optim result claus form translat symb comput octob martin brain vijay leopold haller alberto griggio daniel kroen abstract interpret dpll verif model check abstract interpret intern confer vmcai rome itali januari proceed roberto bruttomesso alessandro cimatti ander franzén alberto griggio roberto sebastiani mathsat smt solver proceed intern confer comput aid verif cav berlin heidelberg springer verlag ethan burn rong zhou parallel model check abstract spin berlin heidelberg springer verlag cristian cadar daniel dunbar dawson engler klee unassist auto matic generat high coverag test complex system program osdi cristian cadar koushik sen symbol execut softwar test three decad commun acm februari roberto cavada alessandro cimatti ander franzén krishnamani kalyana sundaram marco roveri shyamasundar comput predic straction integr bdds smt solver proceed formal method comput aid design fmcad washington usa ieee comput societi pavol cerni krishnendu chatterje thoma henzing plexiti quantit flow problem proceed ieee comput secur foundat symposium csf washington usa ieee comput societi chaum dine cryptograph problem uncondit sender recipi untrac cryptol march cheung user orient softwar reliabl model ieee tran softw eng march alessandro cimatti jori dubrovin tommi junttila marco roveri structur awar comput predic abstract proceed intern confer formal method comput aid design cad ieee liviu ciortea cristian zamfir stefan bucur vitali chipounov georg candea softwar test servic sigop oper syst rev januari david clark sebastian hunt pasqual malacaria quantit analysi leakag confidenti data electron note theoret comput scienc qapl quantit aspect program laguag satellit event pli david clark sebastian hunt pasqual malacaria quantifi interf enc languag electron note theor comput sci januari david clark sebastian hunt pasqual malacaria quantit informa tion flow relat polymorph type log comput april david clark sebastian hunt pasqual malacaria static analysi quantifi flow simpl imper languag comput cur august edmund clark daniel kroen flavio lerda tool check ansi program tool algorithm construct analysi system taca volum lectur note comput scienc springer edmund clark daniel kroen karen yorav behavior consist verilog program bound model check proceed annual design autom confer dac york usa acm edmund clark orna grumberg doron pele model check mit press cohen transmiss sequenti program demillo dobkin jone lipton editor foundat secur comput academ press thoma cover joy thoma element theori wiley intersci york usa cytron ferrant rosen wegman zadeck effici method comput static singl assign form proceed acm sigplan sigact symposium principl program languag popl york usa acm ádám darva reiner hnle david sand theorem prove approach analysi secur flow proceed second intern confer secur pervas comput spc berlin heidelberg springer verlag martin davi georg logemann donald loveland machin program theorem prove commun acm juli martin davi hilari putnam comput procedur quantif theori acm juli leonardo moura nikolaj bjørner effici smt solver pro ceed intern confer tool algorithm construct analysi system taca berlin hei delberg springer verlag leonardo moura nikolaj bjørner satisfi modulo theori intro duction applic commun acm septemb leonardo moura bruno dutertr natarajan shankar tutori satisfi modulo theori proceed intern confer enc comput aid verif cav berlin heidelberg springer verlag dorothi den peter den certif program secur flow commun acm juli herbert enderton mathemat introduct logic academ press william feller introduct probabl theori applic volum wiley januari antonio filieri corina willem visser reliabl analysi symbol pathfind proceed intern confer softwar engin ics piscataway usa ieee press cormac flanagan jame sax avoid exponenti explos gener ate compact verif condit popl acm erich gamma richard helm ralph johnson john vlissid design pat tern element reusabl object orient softwar addison wesley vijay ganesh david dill decis procedur bit vector array proceed intern confer comput aid verif cav berlin heidelberg springer verlag patric godefroid nil klarlund koushik sen dart direct autom random test pldi acm patric godefroid michael levin david molnar autom white box fuzz test ndss joseph goguen josé mesegu secur polici secur model ieee symposium secur privaci jonathan heusser pasqual malacaria quantifi leak softwar proceed annual comput secur applic confer acsac york usa acm andrea holzer christian schallhart michael tautschnig helmut veith fshell systemat test case generat dynam analysi measur proceed intern confer comput aid verifi cation cav berlin heidelberg springer verlag gerard holzmann dragan bosnacki design multicor extens spin model checker ieee tran softw eng octob holger hoo thoma sttzle stochast local search foundat plicat morgan kaufmann publish san francisco usa shahid jabbar stefan edelkamp parallel extern direct model check linear vmcai berlin heidelberg springer verlag temesghen kahsai cesar tinelli pkind parallel induct base model checker jiri barnat keijo heljanko editor pdmc volum eptc stefan kiefer andrzej murawski joe ouaknin bjo wachter jame worrel apex analyz open probabilist program proceed intern confer comput aid verif cav berlin heidelberg springer verlag andrew king distribut parallel symbol execut master thesi kansa state univers jame king symbol execut program test commun acm juli vladimir klebanov precis quantit flow analysi sym bolic model count fabio martinelli flem nielson editor pro ceed intern workshop quantit aspect secur assur qasa vladimir klebanov norbert manthey christian muis sat base analysi quantif flow program quantit evalu system volum lectur note comput scienc springer berlin heidelberg bori laurent mauborgn martín ochoa automat quantif cach side channel proceed intern confer comput aid verif cav berlin heidelberg springer verlag marta kwiatkowska alessio lomuscio hongyang parallel model check tempor epistem logic ecai shuvendu lahiri robert nieuwenhui albert olivera smt techniqu fast predic abstract proceed intern confer enc comput aid verif cav berlin heidel berg springer verlag pasqual malacaria assess secur threat loop construct proceed ing annual acm sigplan sigact symposium principl program languag popl york usa acm pasqualemalacaria algebra foundat quantit flow mathemat structur comput scienc pasqual malacaria han chen lagrang multipli maximum format leakag observ model proceed third acm sigplan workshop program languag analysi secur plas york usa acm stephen mccamant michael ernst quantit flow network flow capac proceed acm sigplan confer program languag design implement pldi york usa acm kenneth lauchlin mcmillan symbol model check approach state explos problem phd thesi pittsburgh usa umi order ziyuan meng geoffrey smith calcul bound leakag bit pattern proceed acm sigplan workshop program languag analysi secur plas york usa acm ziyuan meng geoffrey smith faster bit pattern analysi leakag proceed intern workshop quantit aspect secur assur qasa dimit milushev wim beck dave clark noninterfer symbol execut proceed joint ifip intern con ferenc proceed ifip intern confer formal techniqu distribut system fmood fort berlin heidelberg springer verlag pradeep nalla weiss jõìrgen ruf thoma kropf wolfgang rosen stiel parallel bound properti check symc jame newsom stephen mccamant dawn song measur channel capac distinguish undu influenc proceed acm sigplan fourth workshop program languag analysi secur plas york usa acm robert nieuwenhui albert olivera cesar tinelli solv sat sat modulo theori abstract davi putnam logemann loveland proce dure dpll acm novemb robert palmer ganesh gopalakrishnan partial order reduct assist parallel modelcheck full version technic report pdmc christoph papadopoulo antonella cavallo alessandro cimatti marco bozzano instal optimis http patent march patent app quoc sang phan composit symbol execut imperi colleg comput student workshop volum openaccess seri format oasic dagstuhl germani schloss dagstuhl leibniz zentrum fuer informatik quoc sang phan symbol execut dpll modulo theori imperi colleg comput student workshop volum openaccess seri format oasic dagstuhl germani schloss dagstuhl leibniz zentrum fuer informatik quoc sang phan pasqual malacaria abstract model count novel approach quantif leak proceed acm symposium comput communic secur asia ccs york usa acm quoc sang phan pasqual malacaria corina marcelo quantifi leak reliabl analysi proceed ing intern spin symposium model check softwar spin york usa acm quoc sang phan pasqual malacaria corina concurr bound model check sigsoft softw eng note februari quoc sang phan pasqual malacaria oksana tkachuk corina anu symbol quantit flow sigsoft softw eng note novemb david plaist steven greenbaum structur preserv claus form translat symb comput septemb corina neha rungta symbol pathfind symbol execu tion java bytecod proceed ieee acm intern confer autom softwar engin ase york usa acm corina willem visser david bushnel jaco geldenhuy peter mehlitz neha rungta symbol pathfind integr symbol exe cution model check java bytecod analysi autom softwar engin andrei sabelfeld andrew myer languag base flow curiti ieee journal select area communic sandhu samarati access control principl practic commu nicat magazin ieee sept schubert lewi becker pamira parallel sat solver knowledg share mtv roberto sebastiani lazi satisfi modulo theori journal satisfia biliti boolean model comput koushik sen darko marinov gul agha cute concol unit test engin esec fse acm shannon mathemat theori communic sigmobil mob comput commun rev januari siddiqui khurshid parsym parallel symbol execut icst volum carsten sinz wolfgang bloching wolfgang kõìchlin pasat parallel sat check lemma exchang implement applic sat geoffrey smith foundat quantit flow pro ceed intern confer foundat softwar sci enc comput structur fossac berlin hei delberg springer verlag matt staat corina parallel symbol execut structur test generat issta york usa acm ulrich stern david dill parallel murphi verifi cav london springer verlag tachio terauchi alex aiken secur flow safeti problem proceed intern confer static analysi sas berlin heidelberg springer verlag denni volpano cynthia irvin geoffrey smith sound type system secur flow analysi comput secur januari siert wieringa matti niemenmaa keijo heljanko tarmo framework parallel bound model check pdmc christoph wintersteig youssef hamadi leonardo moura concur rent portfolio approach smt solv proceed intern confer comput aid verif cav berlin heidelberg springer verlag hirotoshi yasuoka tachio terauchi bound problem quantit flow journal comput secur 