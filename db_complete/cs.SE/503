rensink zambon graph model gam eptc doi eptc heußner poskitt corrodi morandi work licens creativ common attribut licens practic graph base verif object orient concurr model alexand heußner univers bamberg germani christoph poskitt claudio corrodi benjamin morandi depart comput scienc eth zürich switzerland har power multi core distribut platform develop con current softwar access softwar engin object orient concurr model scoop propos despit practic analys scoop pro gram current general verif approach oper direct program code addit annot reason multitud partial conflict semant formalis scoop theori implement propos simpl graph transform system gts base time semant scoop grasp common featur semant languag time model implement state art gts tool groov allow simul analys verifi subset scoop program respect deadlock behaviour properti propos approach verifi scoop program automat translat gts highlight experi enc appli gts groov semant form time model transfer gts model concurr languag librari introduct background multi core distribut architectur increas ubiquit cus deliv comput perform shift cpu clock speed reach natur limit concurr har power requir fundament approach write softwar develop program concurr asynchron parallel mind tradit achiev thread synchronis low level construct lock semaphor approach pervas difficult master notori error prone deadlock data race concurr fault easi introduc challeng detect debug effort allevi task programm number high level librari languag propos provid simpler model concurr exampl clude grand central dispatch scoop support asynchron concurr program abstract safer simpler grasp thread concurr mechan scoop exampl exclud data race design despit abstract program exhibit rich complex behaviour difficult fulli comprehend test press formal model system facilit reason comparison understand well bring reach current verif tool techniqu initi problem intric featur librari languag includ lock wait queue asynchron remot call dynam automat thread generat lead formal mod verif decis question deadlock detect verif tempor haviour properti undecid exist approach tackl theoret challeng fall heußner poskitt corrodi morandi categori verif algorithm work restrict simpl approxim extend automata model petri net semi algorithm approach model cover origin featur faith bound model check context scoop high level object orient concurr model implement tension eiffel current analysi verif approach work direct pro sourc code addit annot step analysi prevent deadlock scoop base check deadlock condit abstract mantic level requir code annot lock order earlier work scoop program translat hand model process algebra csp deadlock analysi model larg lead csp tool cope requir tool custom built purpos longer maintain today verif approach behaviour properti tempor logic exist addit concurr librari languag semant fulli formal associ multipl semant exist formal specif plicit implement choic semant formalis substanti prerequisit analysi verif sourc code scoop exampl establish semant formalis semant plural addit sourc complic verif approach propos paper approach step develop core languag formal model permit ting simul verif scoop program rich semant featur scoop concurr basic object orient asynchron grasp help graph transform system gts parameteris under semant variant suppli compil autom task generat input graph scoop sourc code analys help groov state art gts tool includ basic model check algorithm gts contribut close work contribut paper manifold pro vide formal gts base model cover basic featur addit oper semant languag second gts model general time environ analys verifi object orient concurr program share main featur includ approxim scoop third analysi approach serv step general framework verifi concurr asynchron program highlight ing model best practic transfer analysi verif librari grand central dispatch combin aspect provid knowl edg approach verifi subset scoop program code level respect haviour specif includ deadlock freedom advanc type mechan eiffel specif featur scoop current reach automat verif approach broader verif communiti paper demonstr gts base semant tool effect model simul facilit verif concurr program languag abstract thread frequent evolv time graph model communiti paper present experi appli state art gts tool trivial practic model verif problem closest work share step provid oper semant scoop formalis semant help pro practic graph base verif object orient concurr model cess algebra model csp defin semant base rewrit logic maud reli classic process algebra express real asynchron concurr thread asynchron remot method call fulli support csp model contrari model propos comprehens maud formalis current communiti gold stan dard scoop coin understand semant model contrast focus core asynchron concurr featur scoop extend captur advanc languag featur inherit eiffel comparison detail csp maud model resolv ambigu origin inform descrip tion semant insuffici general verif task direct harvest exampl express complet maud implement deadlock analysi scale toy exampl dine philosoph program present plan paper introduc main concurr featur formal model sake simplic ignor local object orient correspond subset scoop will call corescoop render corescoop program gts model describ extend gts model scoop includ full object orient workflow translat scoop program groov model allow verifi program written scoop general algorithm implement groov conclud comparison work gts base verif concurr object orient system refer work state correspond section provid outlook current scoop concurr asynchron model scoop simpl concurr object orient program scoop concurr asyn chronous object orient program model intric semant provid tivat challeng work paper thorough implement model extens eiffel explor context java focus scoop synonym model princip implement scoop object handl processor concurr thread control exclus call method object handl context object refer point object handl processor separ object object handl separ object object refer method command return result method call execut synchron separ separ handler request execut method asynchron case main sourc concurr scoop program base essenti messag pass processor possibl object handler captur type system keyword separ order prevent data race call separ object allow current processor hold lock handler programm manag lock requir explicit express implicit formal argument list method argument method separ object object handler will lock simultan atom automat conceptu method execut releas finish heußner poskitt corrodi morandi list snippet philosoph class dine philosoph solut scoop live philosoph eat times_to_eat time times_to_eat loop print current eat left_fork right_fork print current times_to_eat times_to_eat eat left separ fork eat acquir left fork eat take place left_fork right_fork separ fork refer fork eat dine philosoph exampl simpl exampl highlight intricaci express scoop implement dine philosoph problem number philosoph sit round tabl singl fork adjac pair philosoph concur rentli correct altern eat think caveat cours philosoph eat hold fork left fork algorithm pick fork prevent cyclic deadlock aris consid list excerpt philosoph class well scoop solut philosoph fork object handl processor creation philosoph launch call argumentless live method caus concurr process eat think eat philosoph call eat method pass separ object erenc fork eat commenc handler fork lock handler conceptu occur simultan avoid possibl deadlock philosoph lock left fork wait indefinit concurr asynchron lock scoop number featur behaviour detail thorough describ queri contract separ object refer method queri return result call execut synchron separ handler current handler simpli wait result return second scoop maintain extend eiffel tradit annot method precondit keyword requir postcondit ensur sequenti set option check execut method concurr set precondit interpret wait condit synchronis conceptu execut routin delay simultan precondit satisfi handler formal argument lock allow programm express synchronis condit high level abstract concept requir execut time support effect time environ current time associ processor lock request queue method call separ object enqueu request queue process fifo order call enqueu lock handler held time respons correct synchronis wait condit lock handler formal argument method well releas time balanc design permit practic graph base verif object orient concurr model reason level perform reduc resourc content major challeng work offici time frequent evolv altern propos develop gts base model corescoop step time model core behaviour scoop remot method call fifo queue lock model name concurr processor model cpm strip object orient featur scoop grasp subset languag focus processor equip simpl data allow highlight fundament peculiar scoop model concurr fine grain formal set basic build block approach detail extend cpm includ full object orient corescoop cpm strip local object orient featur scoop call separ call focus remot synchron asynchron method call queri command fifo queue well lock concurr set lead subset scoop languag call corescoop formalis time model corescoop concurr processor model cpm cpm repres graph transform system configur direct graph conform type graph figur note type graph uml notat type attribut constraint semant model corescoop inspir current standard formalis semant consist set processor concurr processor handler data local memori repres map variabl name integ global share memori processor local memori memori access processor processor sequenti handl method call incom request control flow graph encod under corescoop method run processor handl current request current state belong request method control flow graph incom request store processor fifo queue local execut processor finit set neighbour processor access synchron asynchron remot call store refer variabl processor dynam generat processor assign direct local refer variabl remot call context paramet consist integ valu processor refer store request request implement pass request pass refer newli generat processor return queri synchron remot call store special local variabl access caller variabl result cpm local call call oneself local recurs cpm includ explicit lock processor processor lock distinct processor implicit lock translat explicit lock level granular general cpm simul execut program written corescoop round level atom model processor handl request walk correspond control flow graph updat current state action semant graph transform rule exampl configur rule command handl queue local schedul processor termin current handl request advanc wait queue instanti paramet handl global schedul rule assur heußner poskitt corrodi morandi practic graph base verif object orient concurr model control flow system state wait queue memori state action label stmt control state final state initi state meth meth processor processor processor request queue abstract element result processor processor data currentst handler currentrequest queue lock head tail requesttyp initi state incom edg outgo edg abstract element form linear queue head point front subsequ element tail queue figur type graph configur class diagram constraint assum disjoint finit set variabl name refer name meth finit set method name set integ number boolean cardin associ edg region highlight modul model local processor advanc note walk control flow graph schedul generic repres set gts rule independ scoop program refer full formal model direct repres gts brows simul groov modular cpm configur cpm global state system partit main part visibl figur represent under scoop program form control flow graph system concurr run processor handl request processor repres system state iii wait queue processor store pend request local memori state processor control flow compon deriv direct origin corescoop control flow graph pre compil step structur dynam chang contrari state time environ processor queue data partit mirror under rule treat walk control flow graph separ polici manag memori global schedul fix simpl interfac form model compon loos coupl type associ queue handler currentst requesttyp modul allow plug behaviour modul queue semant adapt exist scoop semant fifo queue versus queue queue direct appli abstract mechan context verif count abstract content predic abstract data small modular chang under rule global abstract schedul rule parameteris includ kind garbag collect global schedul rule prioritis state space small prefer termin processor current final state lit practic graph base verif object orient concurr model simul cpm groov realis cpm time model corescoop groov establish tool simulat ing analys gts base semant describ approach achiev task justifi choic groov exampl cpm configur rule rule applic repres tool final discuss issu sound gts tool groov chose graph object orient verif groov platform implement analys cpm model exist gts tool theori expr sive cover cpm groov appli analysi concurr object orient program java groov finit state model checker proven suffici analysi verif dynam state system report groov typic handl system state leav room experi final groov convinc gentl learn curv eas adapt extens well activ develop communiti repres cpm configur groov cpm configur repres groov straightforward control flow system state wait queue memori state type graph figur encod graph practic graph base verif object orient concurr model heußner poskitt corrodi morandi data_var state ref_var action assign var state data_var state data action fork action assign_ref processor applic data_var constant state state init method action command method data processor fork var handler var aexp in_method var points_to handler lock implement cpm semant groov semant cpm implement set groov rule broad fall three categori action rule processor rule error rule action rule fire transit control flow subgraph processor rule handl pre post process express evalu paramet instanti wait queue insert exit final state error rule detect irregular undesir state verif discuss rule prioriti extens prevent unnecessari interleav rule applic organis prioriti prevent unnecessari interleav rule prioriti prevent unnecessari interleav interleav limit processor proceed action higher prioriti rule handl pre post process express evalu cleanup dequei instanti paramet local processor progress terleav action step fine grain prioriti order matter constant variabl evalu singl step univers quantifi groov ongo work experi optimis progress action effect local interleav synchronis point rule action rule schedul rule error refere comment exampl data implement core contribut exampl rule applic basic data number rule control flow structur execut refere comment exampl rule method object explain method context object method execut encapsul data true object singl processor closer gts rule implement activ processor transit label command action target processor lock sake simplic held recal scoop cpm command asynchron remot method call figur cpm figur render groov exampl cpm con figur groov figur graph configur reach cpm encod ing full dine philoso pher scoop program processor configur plicat current execut ing method current_st processor refer enc points_to lock fork processor exclus enqueu quest processor stor ing method paramet wait queue empti data_var state ref_var action assign var state data_var state data action fork action assign_ref processor applic data_var constant state state init method action command method data processor fork var handler var aexp current_st var points_to handler lock simul cpm action groov ignor text semant cpm implement set groov rule broad fall three categori action rule processor rule error rule action rule fire transit control flow subgraph processor rule handl pre post process express evalu paramet instanti wait queue insert exit final state error rule detect irregular undesir state verif discuss rule prioriti figur cpm configur render groov control flow render static transit system graph compris state node entri point label init method exit point nal transit state node encod pair edg action node label cpm action command queri lock assign encod action node oppos label edg state facilit clean model action paramet sim ple action paramet vari assign encod tribut action node compound tion paramet hand boolean express evalu model abstract syntax tree incid action node action trigger method processor command queri arbitrari number method paramet node repres data instanti ration method attach correspond action node encod attribut paramet well integ refer variabl instanti pass method paramet system state wait queue memori state render dynam part graph processor node handl data node data node incid data_var ref_var node store handl integ variabl attribut refer variabl heußner poskitt corrodi morandi edg processor hold lock processor repres lock edg control state repres current_st edg wait queue request execut repres link list queue_item node label edg node label method transit system execut attach node store valu method paramet expect exampl cpm configur groov figur subgraph configur reach cpm encod full dine philosoph scoop program processor configur applic current execut method current_st processor refer points_to lock fork processor exclus send request processor store method paramet wait queue empti simul cpm action groov semant cpm simul groov set graph transform rule action rule schedul rule action rule facilit fire transit control flow graph corr spond updat system memori state model basic behaviour scoop pro cessor variabl assign condit evalu processor creation asynchron command syn chronous queri simultan lock multipl processor action rule appli cpm configur processor control flow state incid correspond label action prerequisit action satisfi processor target lock action lock action rule atom fire transit occur singl indivis step lock multipl processor occur instant appear scoop programm achiev extens power match construct univers quantif allow singl rule handl arbitrarili instanc structur arbitrari number method paramet action rule assign lowest prioriti groov mean determin interleav mod ell level atom processor action oppos partial evalu mitig sourc state space explos schedul rule handl queue local schedul processor advanc quest local pre post process requir action rule general advanc pro cessor action action rule model determin interleav model order request enqueu dif ferent program outcom schedul rule avoid step action local processor achiev rule prioriti groov schedul rule higher prioriti action rule mean local schedul simul explor determin action schedul rule prioriti ensur execut determinist reduc number state explor assign fine grain rule prioriti requir care ultim unimport exam ple constant variabl express evalu arbitrarili fix prioriti schedul rule constant higher hand assign schedul rule termin request final state higher prioriti schedul rule form post process action reset evalu express assign fault introduc model closer action rule command depict figur colour code recal scoop cpm command asynchron remot method practic graph base verif object orient concurr modela heußner poskitt corrodi morandi param processor method param current_st lock insert_into param current_st method handler processor param instanc instanc method method points_to processorst action command state init ref_varstr processor queue_item stringstr state param_ref param_data data param_data param_ref transit control flow activ processor data command action paramet request figur exampl action rule command groov rule colour code dash blue element exist left hand side rule will delet bold green element hand side will generat black persist call concurr run processor lock current processor start point rule activ processor current state current_st fire command action command action pointer points_to refer variabl ref_var target processor method call attribut action node iii number instanti method paramet param_data param_ref fire rule advanc current state current_st time generat request practic graph base verif object orient concurr model instanti paramet insert target wait queue separ high prioritis schedul rule illustr result appli action rule figur figur observ transit fire queue_item method action node wait enqueu processor refer variabl point ignor text data_var state ref_var action assign var state data_var state data action fork action assign_ref processor applic data_var constant state state init method action command method data processor fork queue_item method var handler var aexp current_st var insert_into points_to handler lock rule action rule schedul refere comment exampl data implement core contribut exampl rule applic basic data number rule control flow structur execut refere comment exampl rule method object explain method context object method execut encapsul data true object singl processor note final version check true reflect paramet current work sound discuss faith cpm requir fix formal semant scoop corescoop exist depth comparison exist semant approach requir stringent formal represent cpm graph program oper semant correspond semant proof equival simul scope paper step futur work paper piec puzzl lightweight approach issu figur command rul figur queue_item equip method instan tiat paramet sert target wait ing queue separ high priori tise schedul rule illustr result appli action rule figur figur serv transit fire queue_item method action node wait queu processor refer enc variabl point current prototyp cpm compris action rule schedul rule sound formal establish sound faith cpm step reli exist definit languag semant depth comparison heußner poskitt corrodi morandi propos semant approach scoop lack attempt faith comprehens oper semant propos morandi execut maud prove sound respect semant requir stringent formal represent cpm graph program correspond semant proof equival simul address ongo work scope proof concept paper lightweight approach gain confid sound cpm exampl driven test expert review look scoop exam ples suppli eiffelstudio ide demonstr idiomat usag concurr mechan solv number classic synchronis problem focus program dine philosoph singl element produc consum creat object processor corescoop program straightforward map cpm action recal cpm model notion multipl local object program test faith cpm visualis manual inspect program execut groov simul explor state space abnorm state unsatisfi action pre requi site absenc lock edg command ltl model checker iii compar effect action rule inform formal descript scoop addit test held day expert review morandi scoop research eth demonstr discuss cpm rule detail goal ensur rule fulli correspond understand scoop corescoop full fledg scoop approxim translat cpm corescoop consid three ongo extens work describ effort extend model full object orient express wider class scoop program second discuss cpm basi explor altern scoop semant model approxim final report prototyp tool automat generat groov input scoop corescoop program cpm cpm cpm allow boil scoop core asynchron concurr behaviour studi formal set full complex object orient aim practic verif practic scoop programm extens object ultim support benefit simpler formal model wonder start full object orient outset practic verif mind allow separ concern isol model concurr processor clean simpl set separ extend object orient eiffel specif languag featur core concurr model model approach essenti identifi core formalis gradual add miss detail behaviour extend cpm cpm object orient cpm richer time model capa ble express simul scoop program multipl object processor separ method call target local object version cpm result process replac simpl data cpm type graph object updat rule longer conform consult semant iii test includ regress test corescoop program goal support exist action cpm data organis object practic graph base verif object orient concurr model began updat type graph replac simpl data object node connect attribut attribut integ refer object processor advantag chang type graph instant feedback groov highlight rule longer conform updat rule process extract data general radic updat core behaviour captur cpm remain semant action fundament chang updat structur data sat top core well remot call processor remot call object question step correct emb object semant action emphat model asynchron behaviour object cpm objectifi turn model behaviour data organis object notabl separ call call object processor cours reason acquir lock separ case processor simpli execut method mediat model model call stack allow captur recurs local variabl practic detail ultim top crucial concurr core prototyp cpm download includ fea ture discuss well arbitrari name attribut buffer separ queri express refer express option postcondit check gain confid extens cpm remain sound test approach describ wider select exampl scoop program distribut eiffelstudio model express simul addit number simpl sequenti program scoop program processor focus test rule separ call perform regress test sens ensur corescoop program behav differ cpm basic cpm cpm cover scoop eiffel specif mechan agent routin except interact scoop captur advanc time mechan separ callback ignor inherit moment view advanc type mechan separ problem tackl anticip substanti difficulti cpm plan eventu includ methodolog view promis practic facilit verif rich complex concurr model scoop time altern approxim altern gradual extens cpm basi explor prototyp altern semant scoop model compet semant propos replac fifo queue queue queue chang gts implement wait queue exampl straightforward modular chang scoop compil risk discoveri fundament problem commit time propos modifi cpm compar execut trace ensur chang retain high level guarante model desir properti explor usag cpm ongo work envisag prototyp achiev analog object support modifi type graph replac fifo queue queue queue revis rule test idea implement approxim cpm direct gts plug schedul rule exampl replac fifo queue processor bag remov guarante processor execut request order receiv heußner poskitt corrodi morandi approxim sens behaviour fifo queue includ state space infeas behaviour includ verif approxim impli verif program counterexampl simpli spurious exampl approxim cpm petri net repres gts translat scoop program groov develop tool publish thesi automat translat scoop program input graph groov tool target subset scoop languag cpm prototyp formalis complet handl exampl scoop program current prototyp creat syntax tree input class parser generat conjunct exist scoop grammar input graph requir type exampl action node integ refer assign tool pass syntax tree gather type generat intermedi represent program close input graph final tool pass intermedi represent generat correspond input graph xml file conform graph exchang languag graph interpret analys groov verif scoop program explor scoop program translat time model groov verifi bound model check discuss kind properti check illustr detect deadlock faulti dine philosoph scoop solut verif impress small evalu scoop program verif groov model checker automat analys base idea determin presenc absenc state violat expect properti program properti absenc deadlock provid initi motiv work rang properti verifi broader contrast exampl includ absenc call void null object refer absenc state violat postcondit achiev extend time model set error rule assign highest prioriti match current configur violat properti error rule deadlock exampl will match cycl processor state preced lock action lock action requir turn resourc held cycl catch void call hand error rule will match processor state action target void refer variabl verif model check simpli matter express tempor logic formula rule error rule appli state space program infinit state space exampl deriv general scoop program groov support bound model check unabl fulli guarante correct provid search presenc counterexampl detail bound model check groov recal dine philosoph exampl list implement avoid possibl deadlock eat method requir simultan acquisit lock handler fork cpm implicit lock express singl action suppos philosoph call bad_eat list implement permit execut lead deadlock philosoph pick fork turn cpm map distinct lock action practic graph base verif object orient concurr model list snippet dine philosoph implement deadlock bad_eat print current pickup_left_then_right left_fork pickup_left_then_right left separ fork print current pickup_right right_fork pickup_right separ fork eat take place practic graph base verif object orient concurr model list snipp dine philosoph implement deadlock bad_eat print current pickup_left_then_right left_fork pickup_left_then_right left separ fork print current pickup_right right_fork pickup_right separ fork eat take place state action lock state action lock state processor fork processor fork data ref_var processor philosoph data ref_var processor philosoph current_st points_to handler lock points_to handler current_st lock refere comment larger evalu exampl formalis claudio includ state space reduct refere comment comparison analysi approach exampl explain evalu perform small studi model check run exampl well scoop program implement singl element produc consum scenario onlin program smaller write practic want initi impress size graph size state space perform groov current version translat tool generat input graph dine philosoph program version call eat dpe version call bad_eat dpb singl element produc consum program program record data graph size time check deadlock time explor full finit state space amount memori tabl present comput shelf workstat intel core cpu main memori present valu median test refer number philosoph dpe dpb number element produc time measur gnu time util repres elaps wall clock time second memori usag extract integr profil final explor figur deadlock cpm configur philosoph lock han dler left fork reach system will deadlock fork lock prevent philosoph enter pickup_right error rule dead lock model checker groov faulti execut automat unearth port path state space initi configur state exhibit struc tural deadlock pattern relev deadlock state philosoph figur philosoph lock left fork wait lock refer variabl fork philosoph lock left fork processor fire action system deadlock bug contriv illustr discord program level abstract concurr object method attempt handl hood ultim fail programm ignor unawar work exampl subtl way ich deadlock unintent accident introduc scoop program evalu initi impress verif perform small studi current cpm prototyp devis ten benchmark configur scoop program dine philosoph version call eat dpe nother call bad_ dpb singl element produc consum dine savag cigarett smoker adapt replac unsupport featur inherit exampl scoop program provid eiffelstudio implement current version translat tool generat input graph program record data graph size time check deadlock time explor full finit state space peak memori usag tabl present comput shelf workstat intel core cpu main memori pre sent valu median test refer number philosoph dpe dpb number element produc pot size number heußner poskitt corrodi morandi tabl impress verif perform program start graph final graph ltl deadlock full state space node edg node edg time state transit time state transit mem stddev dpe dpe dpb dpb savag hunger time measur repres elaps wall clock time second memori usag measur memorypoolmxbean class final explor strategi bfs final infinit ltl prop error_deadlock final infinit full state space ltl explor graph size differ initi final state variat cre ation manipul processor wait queue object local memori note perform discrep ltl check full state space explor dpb deadlock ltl check faster find counterexampl return answer program deadlock check formula incur overhead benchmark argu time accept practic infea sibil model check maud semant except overhead ltl check substanti understand reason ongo broader investig scalabl limit tool verifi scoop program conclus approach gts base specif analysi concurr program ver ifi concurr object orient program gts base model emerg trend softwar specif analysi approach root practic good overview discuss base lot person experi general appropri gts task closest semant time model qdas model present repres asynchron concurr wait queue base model global memori gts verifi program written grand central dispatch despit formalis gts direct compil gts creol model focus asynchron concurr model advanc remot call queue need scoop analysi model implement term rewrit tool exist gts base model java translat code type graph control flow graph cpm approach abstract gts base model concurr system finit state model verifi spin model checker groov verifi concurr distribut algorithm abstract gts level time level approach despit intent appli generic framework specif analysi verif object orient concurr program exist public tool implement long term goal power scoop practic graph base verif object orient concurr model outlook current approach allow automat verifi scoop program help simpl toolchain consist compil scoop gts base time model analys verifi groov streamlin instanc toolchain includ public avail version compil will mention time model oper semant scoop program detail formal comparison compet formalis current base stringent formalis cpm model extens verif approach model choic appli concurr asyn chronous librari languag altern concurr eiffel model cameo exist ing gts formalis grand central dispatch futur step includ verif approach strategi groov will depend novel abstract techniqu cpm extens spirit pattern abstract cluster abstract lot verif properti boil mso properti under gts plan enrich verif techniqu concurr asynchron object orient program idea program logic gts detail plan publish current toolchain conveni front provid bridg exist scoop ide groov fund acknowledg under partial fund european council erc grant agreement meyer scoop communiti valuabl scoop discuss rensink feedback intern groov final anonym gam refere insight comment help improv paper refer back reinek analysi infinit state graph transform system cluster abstrac tion proc vmcai lncs springer doi baldan corradini könig unfold graph transform system theori applic verif concurr graph model lncs springer doi brook paig cameo altern model concurr eiffel formal aspect comput doi brook paig jacob csp model scoop formal aspect comput doi caltai meyer coffman deadlock scoop proc nwpt onlin version http corradini dotti foss ribeiro translat java code graph transform system proc icgt lncs springer doi delzanno traverso specif valid link revers rout graph tran format proc spin lncs springer doi dotti duart foss ribeiro russi marchi dos santo environ develop concurr object base applic proc grabat entc elsevi doi lüdtke ferreira foss ribeiro formal verif object orient graph grammar specif proc entc elsevi doi lüdtke ferreira ribeiro graph base semant object orient program construct proc ctcs entc elsevi doi heußner poskitt corrodi morandi grand central dispatch gcd refer https librari mac document perform refer gcd_libdispatch_ref acc dec geeraert heußner raskin queue dispatch asynchron system proc acsd ieee doi acsd ghamarian mol rensink zambon zimakova model analysi groov intern softw tool techn tran doi graph object orient verif groov project web http acc dec habel pennemann correct high level transform system relat nest condit mathem struct comp sci doi johnsen owe axelsen time environ concurr ject asynchron method call proc wrla entc elsevi doi johnsen owe chieh creol type safe object orient model distribut concurr system theor comput sci doi kastenberg rensink model check dynam state groov proc spin lncs springer doi morandi schill nanz meyer prototyp concurr model proc acsd ieee doi acsd nienaltowski practic framework contract base concurr object orient program doctor dissert eth zürich ostroff ahmadi torshizi huang schoeller contract concurr formal aspect comput doi poskitt plump verifi monad second order properti graph program proc icgt lncs springer doi rensink edg graph transform graph behaviour specif graph transform model driven engin lncs springer doi rensink zambon type graph model java program proc fmood lncs springer doi rensink zambon pattern base graph abstract proc icgt lncs springer doi supplementari materi http torshizi ostroff paig chechik scoop concurr model java languag proc cpa concurr system engin seri press doi west nanz meyer modular scheme deadlock prevent object orient program model proc icfem lncs springer doi west nanz meyer effici reason object orient concurr proc ppopp acm doi zambon rensink graph transform graph abstract softwar veri ficat proc icgt eceasst zambon rensink solv queen problem groov compendium best practic proc vmt eceasst 