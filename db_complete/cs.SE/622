assist coverag closur adam pascal philippa ryan daniel peter michael rapita system univers oxford queen mari univers london abstract malfunct safeti critic system dam age peopl environ softwar system rigor design verifi domain specif guidanc automot safeti paper describ academ industri oper tool develop support stringent requir achiev full code coverag requir driven test verif workflow support tool integr coverag measur tool rapicov test vector genera tor fshell tool assist close coverag gap provid engin test vector help debug coverag code qualiti issu creat test case well justifi pres enc unreach part code order final achiev full effect coverag requir criteria illustr practic util tool report appli cation tool case studi automot industri introduct softwar safeti critic system undergo strict design verifi cation procedur prior deploy publish standard describ safeti life cycl electr electron softwar compon automot domain activ requir dif ferent stage life cycl help ensur system safeti requir met implement design rigor carri depend sever consequ failur compon compo nent automot safeti integr level asil stringent requir asil strict key requir activ softwar demonstr extent test exercis sourc code code coverag challeng expens task manual input requir achiev adequ coverag paper present work undertaken verif test support function safeti standard vetess project develop lead receiv fund artemi joint undertak grant agreement number vetess type descript asil function arch level function code exercis statement statement code exercis branch branch code exercis outcom condit ind pendent affect outcom tabl coverag requir high recommend rec ommend tool process meet main contribut paper integr fshell tool industri code coverag tool rapi cover order generat extra test case increas code coverag addit contribut discuss technolog appropri safeti life cycl achiev code coverag complex difficult task tool assist process desir ensur addit automat generat test address system safeti requir safeti standard requir depth coverag depend asil softwar requir summar tab aim requir base softwar test ensur type coverag achiev categori requir practic extrem difficult defens code hard provid test vector exampl code deactiv mode oper obvious lack coverag manual review situat generat test vector automat benefici user provid faster turnaround improv coverag paper laid provid background cov erag problem tackl criteria success describ specif tool integr describ industri automot case studi previous work lesson learn plement experi suggest improv final con clusion work contribut paper larg practic natur int gration formal method base tool industri test softwar safeti critic domain area general separ formal methodolog small critic section softwar prove correct view expens procedur case meth direct odd tool prototyp stage develop author work industri partner assess futur improv prepar commerci describ assist coverag closur test satisfi object effect cost effect test effect distinguish correct product incorrect test cost effect achiev lowest cost fewest test amount effort shortest amount time safeti standard demand requir driven test increas confid correct behavior softwar implement correct behavior softwar implement behavior requir implement unspecifi behavior qualiti metric demand measur coverag cer tain criteria list tab instanc rational code coverag qualiti metric assess achiev requir coverag test suit suppos test suit presum cover case requir specif miss erron implement featur observ fail test case lack coverag criterion indic behavior softwar exercis test case hint softwar test qualiti problem case requir specif forgotten requir cover addit test case featur implement need unspecifi featur allow safeti critic softwar remov requir specif vagu ambigu describ featur complet specif disambigu refin part code unreach reason program error fix code generat high level model unreach code code generat unabl elimin infeas condit intend case defens program error handl case fault inject test requir exercis featur depend polici unreach code case handl justif cover tune model code generat post process generat code difficulti softwar develop consist distinguish case extrem time consum expens task call tool assist coverag closur problem implement test code generat simulink model initi test suit craft manual generat test suit generat techniqu coverag criterion aim increas effect test coverag automat generat test vector help develop debug softwar order distinguish reason miss coverag suggest addit test vector help develop creat test case complet requir coverag case prove infeas cover code evid argu cover note safeti standard allow requir driven test case generat explicit forbid achiev full structur code coverag blind appli autom test vector generat easili lead confus distinct test case generat test vector generat clear test vector generat appli blind achiev full coverag test vector test case lack element correct softwar expect test result requir test engin expect test result test case generat base requir formal model object provid assist test case generat bridg coverag gap coverag measur combin test case generat coverag tool access test vector need level coverag requir qualifica tion level coverag tool determin part code execut instrument instrument point automat insert specif point code instrument point execut record execut data test complet coverag tool analyz execut data determin part sourc code execut tool comput level coverag achiev test coverag tool rapicov rvs tool suit develop rapita system test vector generat bound model check test vector generat fshell detail base softwar bound model checker program cbmc view program transit system initi state describ proposit formula init transit relat tran bound model check bmc check exist path length init set state describ formula check perform decid satisfi formula sat smt solver init tran initi test suit test suit test case test vector infeas test goal coverag measur program test vector generat full coverag cover test goal fig coverag closur process solver return answer satisfi satisfi assign ment variabl satisfi assign repres path init identifi correspond input sequenc refut safeti properti defin error state bmc generat test vector defin test goal cover analysi perform cbmc bit exact machin semant execut target cbmc full bit exact support float point arithmet architectur specif set configur command fshell rapicov support target coverag measur guarante generat test vector cover test goal addit bmc test vector generat permit generat shortest test vector cover test goal group test goal help keep test suit concis test execut fast advantag model checker abil find test vector corner case condit float point variabl nan experi high precis analysi discov inconsist hole requir specif test vector generat bmc proof unreach test goal loop unrol complet induct bmc base techniqu unbound model check attempt proof coverag closur process algorithm implement assist coverag closur process fig proceed start initi test suit craft manual generat test case generat techniqu direct random test initi test suit empti test goal easili cover test case generat method cheaper bound model check recommend start base test suit step test suit coverag measur tool order list cover test goal coverag measur perform develop machin approxim coverag final certif data run test suit actual target platform test vector generat take list cover test goal comput input valu cover ideal test vector generat parametr architectur paramet target platform order guarante goal cover test vector generat bound model checker will three outcom attempt cover test goal test goal cover case test vector present user turn test case test suit note build test case process bold edg fulli automat human judgment requir identifi correspond test goal cover place distinguish reason infeas cover test goal test vector generat proof unreach test goal mention bound model checker provid proof loop unwound complet instanc case correspond test goal annot coverag report proven infeas justifi cover increas effect coverag reduc number genuin cover test goal goal cover unabl prove infeas test goal bound model checker happen chosen bound low case test goal will remain uncov cover higher iter process coverag enhanc test suit measur identifi test goal remain uncov process repeat generat test typic will cover test goal intend measur coverag tween generat test increas cost effect process eliminat ing unnecessari test case generat cover test goal achiev full coverag process termin note process depict fig specif tool appli general reli test vector generat guarante generat test vector cover test goal generat coverag measur tool will check generat test case increas coverag generat useless test case avoid tool fshell provid guarante theori termin process achiev full coverag guarante embed softwar finit state practic depend reachabl diamet system capac test vector generat cope size complex fshell plugin rvs implement input program initi test suit output tool twofold output set generat test vector augment initi test suit increas coverag second output coverag report detail level coverag achiev initi test suit extra coverag generat test case fig rvs process fshell tegrat rapicov context menu option fig rapi cover select singl function call statement decis branch tool fshell generat test vector ement altern tool button gen erat coverag option chosen tool loop scribe fig fshell repeat generat test case increas coverag verifi coverag rapicov tension demonstr activ pre scribe met spirit well quantifi criteria recal achiev code coverag test ensur code meet intent consequ fshell plug provid advisori servic generat candid test vector user examin help identifi plan test inadequ valu generat assess valid system test reflect real valu input function sensor rvs licens softwar evalu version request http licens polici disallow anonym licens compens provid video show plug https drive file fig screenshot rapicov fshell plug introduct rapicov instrument determin program part execut instrument point automat insert specif point code execut instrument point record execut data test complet rapicov analyz execut data determin instrument point hit step rapicov analysi process creat instrument build applic fig rapicov automat add instru mentat point fig sourc code instrument code take form lightweight measur ment code written target ensur minim impact perform softwar support target test environ limit resourc instrument softwar instrumen tation librari compil link standard compil tool chain execut produc download target hardwar ecut exercis instrument data fig generat retriev data generat coverag metric introduct fshell extend test environ program support rich script languag interfac interfac design databas engin dispatch queri program program analysi tool queri express fshell queri languag fql user formul test http product rapicov http softwar fshell specif coverag criteria challeng fshell produc test suit input assign cover request pattern program support rich extens interfac express fshell plugin rvs implement list tab syntax exampl express syntax exampl function call call call concaten call call sequenc call call negat call repetit call altern call call tabl fshell express call quir generat test case call func tion primit pression modul con caten oper join expr sion requir satisfi sequent exampl test case generat call call cov call sequenc oper requir second call occur eventu call call fulfil call eventu call negat call satisfi statement call function repetit oper implement line regular express pendant call satisfi seri call final altern oper implement logic disjunct call call will satisfi call occur express oper fshell plug generat test vector request rapicov illustr express convert test goal equival fql queri fshell rapicov java modul fshell rapicov test goal fql queri test vector test suit fig architectur fshell plugin rvs fshell plugin rvs translat test goal request rapicov fql queri cover goal fshell illustr fig test goal ing marker element rapicov instrumenta tion identifi arbi trari statement sourc code assign instrument point criteria decis constitut condi tion identifi uniqu decis condit point fig exampl program rapicov instrumenta tion modul support categori test goal instrument point path test goal condit test goal specifi simpl seri int main printf return int main ipoint ipoint ipoint ipoint ipoint printf ipoint return fig code exampl rapicov instrument instrument point cover fshell system permit clusiv negat oper instrument point path allow choic instrument point cover sure request instrument point cover provid test vector exampl instrument point path fig cover decis statement evalu true convers path cover evalu fals achiev input cover vector condit test goal hand singl decis point multipl condit point well desir truth decis condit allow cover branch con dition precis valu condit exampl condit test goal true fals true cover input vector instrument element introduc rapicov map equival fql queri featur present tab categori goal fql instrument point path goal simpl call call disjunct call call complement call call call condit goal condit call call call call decis call tabl test goal type fshell queri purpos replac default implement rapicov synthes substitut optim effici track fshell mock implement synthes queri inject program fli analysi time standard fql queri examin augment model coverag goal tab explicit goal describ fshell queri syntax evalu fshell plugin rvs test industri automot case softwar manag control case studi shift park control unit illustr featur util tool appli softwar shift park control unit charg manag mechan park lock block unblock transmiss avoid unwant movement vehicl stop park mode enabl command driver gear lever prnd park rear neutral drive automat vehicl control unit dashboard park control unit prnd switch powertrain park lock fig case studi shift park control unit fig architectur element park system communic vehicl control unit monitor sta tus vehicl sensor inform driver particu lar speed vehicl status gear dashboard park control unit respons control decis tuat mechan park lock system requir fulfil park mode engag vehicl speed driver press park button brake pedal vehicl speed driver press park button brake pedal command acceler pedal ignor park mode activ speed decreas vehicl speed driver press drive button brake pedal forward drive mode enabl vehicl speed backward drive mode inhibit code provid centro ricerch fiat gpl licens download https file code generat simulink model disclos typic embed softwar park control unit softwar con sist task initi system start execut period control loop system shutdown test vector con sist sequenc input valu sensor valu messag receiv communic system chang control loop iter call number iter length test vector generat valid test vector model vehicl requir test vector generat produc occur run system infinit vehicl veloc case studi model consist assumpt input rang speed car will exceed reduc assumpt admiss oper condit state requir specif experiment setup order evalu fshell plugin rvs sourc code shift case studi approx start initi test suit consist random test vector uniform distribut admiss input rang increment extend test suit addit test vector generat approach fshell plugin rvs process illustr fig combin test vector generat base random search greedi test suit reduct fshell plugin rvs random search reduct start initi test suit compil sourc code current test suit rapicov generat coverag report rapicov fshell list cover test goal fshell generat test vector cover test goal generat random test vector uni form distribut admiss input rang fshell feed feasibl test goal test vector feasibl test goal creat test case base test vector compil code test case rapicov verifi generat test case cover test goal coverag increas test case discard repeat step tabl experiment setup approach compar initi random search fshell test suit plug runtim generat test case redund total test case statement coverag increas coverag increas tabl evalu compar fshell plugin rvs test vector generat random search compar achiev coverag gain test suit size run approach hour tab describ experiment setup runtim fshell exponenti loop bound main loop choos high loop bound fshell prohibit long set loop bound low branch cover mitig start experi loop bound gradual increas loop bound cover branch cover previous iter explain step tab automat requir specif sake comparison care pass fail status test skip manual addit expect test outcom experi hour approach spent time fshell time frame loop bound reach branch cover increas coverag achiev detail tab baselin coverag initi test suit second column left increas percentag coverag gain tool experi rightmost column code test implement state machin decis function call focuss decis statement coverag evalu underpin benefit tool compar second approach describ tab random search test generat strategi tab snapshot search middl column explor eventu test vector length admiss input rang generat test vector chose length good compromis increas coverag keep test execut time short case studi test vector length increas coverag test vector length increas random search redund increas coverag suit confirm system test repres challeng case black box test case generat test vector input rang lead actual coverag increas hand fshell plugin rvs achiev larger increas amount time statement coverag addit plug achiev increas coverag half test vector random approach lead smaller effici test suit evalu underlin benefit tool integr port coverag closur process industri case studi expect reduct manual work investig broader industri eval uation involv verif engin perform entir coverag closur process background context applic novelti approach work exist test case generat model check techniqu smaller amount target direct high critic safeti domain criterion framework test case generat restrict survey relat ghani clark search base approach generat test framework issu approach present first appli java languag rare safeti critic softwar critic softwar second subtl test case gener ate ensur minim set truth tabl exerc consider valid test data addit emphas approach take account exist coverag achiev complement requir base test complet replac work modif origin sourc mutat test order assess effect test con sider adjunct methodolog mutat test adopt industri jone consid test priorit test suit reduct test case generat wider issu lesson learnt order encourag wider adopt integr tool consid fit user workflow verif process well meet practic requir standard earlier fulli autom test execut time doubl half test vector explor code coverag test desir miss intent requir base test process achiev full code coverag difficult task requir larg amount manual inspect coverag examin miss provid user suggest test data valuabl improv product time consum expens part safeti certif process benefit integr test case generat coverag measur test suit reduct coverag measur tool return test case list cover goal test suit reduct comput minim set cover complet problem approxim algorithm achiev reason runtim fshell class semant exact comput expens complet algorithm reli sat solver depend program problem pose solver analysi long time complet initi feedback tool concept well receiv automot engin speed consid issu keep mind practic full coverag test person month estim cost loc great potenti cut time cost spent verif run autom tool background coupl day initi fail valid test vector generat cover test goal cover test goal reason imprecis number represent test vector output exact hexadecim represent float point constant imprecis decim fix problem highlight bit exact analysi well valid coverag rapicov process fig note process independ tool offer high degre flexibl hand plan futur rvs will support altern backend place fshell hand fshell combin chang pictur fig mutat test tool place rapicov generat test vector improv mutat coverag conclus paper demonstr success integr fshell tool industri code coverag tool integr tool increas code coverag exist sizeabl test suit industri automot case studi compar random black box test vector generat strategi approach generat time higher coverag increas amount time tool achiev coverag gain half test vector test vector shorter generat random search lead compact test suit faster test execut cycl integr atego arinc virtual solut architectur partit safeti critic tool seminar april tool simplifi test case generat coverag measur work flow unifi process futur work will consid better integr debug environ inspect test vector warn user unrealist envi ronment assumpt vehicl speed addit better support provid export test vector user exist test suit test framework refer road vehicl function safeti product develop softwar level annex model base develop bier cimatti clark zhu symbol model check bdds taca clark kroen lerda tool check ansi program taca dupuy leveson empir evalu coverag criterion hete satellit softwar digit avion system confer fraser wotawa ammann test model checker survey soft ware test verif reliabl galloway paig tudor weaver toyn mcdermid proof test context safeti standard digit avion system confer ghani clark automat test data generat multipl condit mcdc coverag icsea holzer schallhart tautschnig veith fshell systemat test case generat dynam analysi measur cav jia harman analysi survey develop mutat test transact softwar engin jone harrold test suit reduct priorit modifi con dition decis coverag transact softwar engin kandl kirner error detect rate case studi automot domain softwar technolog embed ubiquit sys tem kroen strichman effici comput recurr diamet vmcai rierson develop safeti critic softwar practic guid aviat softwar complianc chapter potenti risk model base develop verif crc press schrammel melham kroen chain test case reactiv system test ictss sheeran singh almarck check safeti properti induct sat solver fmcad tallam gupta concept analysi inspir greedi algorithm test suit minim past zam sewari hassin test case generat satisfi criterion intern journal advanc soft comput applic 