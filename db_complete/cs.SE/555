intern journal softwar engin applic ijsea juli doi ijsea design pattern adapt system engin yousef abuseta khale swesi comput scienc depart faculti scienc jabal gharbi univers libya abstract adapt propos overcom complex today softwar system uncertainti issu aspect uncertainti includ chang system goal chang resourc avail dynam oper condit feedback control loop recogn vital element engin adapt system despit lack systemat design interact compon compris feedback control loop well interact compon control loop exist approach domain specif abstract addit issu multipl control loop neglect consequ adapt system design singl loop paper propos set design pattern model design adapt softwar system base mape control loop ibm architectur blueprint take account multipl control loop issu case studi present illustr applic propos design pattern keyword adapt feedback control loop design pattern introduct develop today softwar system difficult task accomplish dynam heterogen natur system difficult build softwar system meet requir surviv chang respons user requir chang environment condit system afford long downtim sourc code modifi tradit top engin approach insuffici handl complex evolut problem inher decentr continu evolv softwar increas softwar system adapt accommod requir foreseen design time respons chang contextu condit adapt system sas softwar intens system augment abil respond varieti chang place environ goal system adapt structur behavior time autonom vision intern journal softwar engin applic ijsea juli requir shift human role oper strateg human defin high level polici state system react chang system carri correct chang adapt autonom time adapt system conduct area softwar engin includ requir engin softwar architectur middlewar compon base develop feedback control loop control theori area identifi vital element engin adapt softwar system control loop typic organ compon respons fundament function adapt monitor analyz plan execut refer mape loop ibm architectur blueprint function refer collect analyz decid despit feedback loop introduct adapt today softwar system lack systemat design interact compon compris feedback control loop exist approach specif domain high abstract model wide rang domain attent model design multipl interact control loop approach assum exist singl control loop design adapt system addit respons compon feedback control loop defin proper consequ sas design defin differ monitor respons instanc defin overlap analyz monitor accomplish data collect aggreg reason task contradict separ concern design principl design principl contribut clean flexibl design softwar system general adapt system paper introduc set design pattern serv assist tool softwar design adapt system pattern support reus solut evalu idea architectur well design accept approach area adapt system engin design pattern base feedback control loop propos ibm architectur blueprint rest paper organ review background issu propos design method adapt system introduc work adapt softwar system develop present propos set design pattern depict well solut idea adapt system engin evalu case studi employ evalu applic propos design pattern paper conclud outlin direct futur work intern journal softwar engin applic ijsea juli background feedback control loop feedback loop provid generic mechan adapt feedback loop control loop output control system fed input allow adjust oper differ actual output desir output feedback control loop entiti observ system initi adapt feedback loop typic involv key activ collect analyz decid sensor collect data run system environ repres current state collect data aggreg save futur refer construct model current state data analyz infer trend identifi symptom plan activ take place attempt predict futur prepar chang plan run system set effector actuat manag manag system adapt capabl introduc softwar system intern extern intern approach adapt logic manag system intertwin core applic manag system form except handl case adapt engin system depend difficult maintain evolv reus contrast extern approach concern adapt logic separ core applic exist approach adopt extern approach enabl realiz softwar qualiti reusabl modifi ibm architectur blueprint exampl approach fig depict fig manag system consist main activ monitor analyz plan execut activ share knowledg base compon system state well polici engin control system function set sensor collect data adapt process send monitor process set effector appli correct chang state plan fig autonom comput control loop intern journal softwar engin applic ijsea juli design pattern softwar design pattern repeat solut occur problem softwar design templat solv problem situat design pattern fundament chang approach design larg softwar system appli design pattern help system design advantag softwar collect experi captur pattern enabl studi system question gain deeper understand system structur behav way design pattern classifi three categori creation pattern concern creat appropri object case flexibl program choos object creat postpon runtim structur pattern concern compos group object larger structur behavior pattern defin communic set object softwar system flow control system number design pattern belong categori list play crucial role design adapt system observ design pattern instanc fit nice establish relationship monitor compon sensor strategi design pattern design implement plan compon set action execut condit hold desir benefici adapt system offer option revert previous system state prior applic plan chang command design pattern play offer featur system restor option offer window system encount problem choos restor point solv issu work approach propos address design adapt softwar system approach classifi requir engin softwar architectur middlewar compon base develop approach design pattern softwar architectur general dedic previous work conduct specif area garlan propos rainbow framework general support mechan adapt custom class system languag call stitch repres adapt knowledg high level adapt concept strategi tactic oper implement rainbow base larg control loop charg activ adapt issu system consider ramirez cheng describ set design pattern softwar design level facilit construct adapt softwar system gomaa propos pattern dynam reconfigur specif type softwar architectur time extend concept dynam chang manag introduc kramer mage introduc design pattern behavior requir dynam reconfigur master slave central server client decentr architectur iftikhar intern journal softwar engin applic ijsea juli weyn propos activeform short activ formal model contribut adapt system approach guarante verifi adapt behavior design time support deal dynam goal runtim ben propos set design pattern target real time system iglesia phd thesi propos model semant set mape formal templat design adapt system set design pattern introduc author model interact mape loop decentr control adapt softwar system propos design pattern propos design pattern built previous work carri address develop adapt softwar system concept propos ibm architectur blueprint model feedback control loop monitor analyz plan execut advantag work present design space adapt system present set dimens dimens defin design question studi design pattern introduc model interact multipl mape loop adapt softwar system metamodel adapt system dedic introduc metamodel mape base adapt system high level view concept involv mape control loop well relationship interact concept metamodel attempt accommod interact mape compon emerg situat domain situat exampl number sensor notifi monitor specif system properti sensor link monitor likewis analyz accomplish task notifi set monitor respons monitor system addit situat interact compon type monitor monitor analyz analyz accommod interact well notif process sensor monitor instanc conduct period base specif event adapt applic plan compon send chang plan call strategi metamodel number execut compon execut compon set actuat appli chang action fig metamodel uml class diagram notic fig close continu control loop start measur conduct sensor end chang actuat dot arrow process appli chang plan runtim system state brought desir accept state predefin goal requir intern journal softwar engin applic ijsea juli fig metamodel mape base adapt system sas design pattern introduc design pattern sas monitor sas analyz sas plan sas execut sas knowledg design pattern propos partial compli gamma templat structur pattern describ field pattern intent context motiv structur view particip uml diagram depict structur behaviour view design pattern sas monitor design pattern pattern sas monitor intent establish relationship compon particip accomplish monitor activ adapt system mape control loop context pattern stage feedback control loop process aim introduc adapt softwar system stage properti monitor question answer motiv detect properti threshold violat repres trigger adapt process adapt system order accomplish detect process monitor compon introduc structur view compon involv monitor activ well relationship describ uml class diagram fig state earlier relationship monitor sensor establish observ design pattern monitor interest collect data properti read set sensor take observ role sensor play subject role case monitor observ regist interest chang notif number sensor subject intern journal softwar engin applic ijsea juli relationship concurr place sensor run simultan notifi monitor chang occur properti direct respons handl concurr modern program languag java offer multithread techniqu number thread execut time sensor class fig stereotyp word thread concurr lead thread attempt access program monitor object synchron mechan place realiz java preced oper question updat oper monitor class keyword synchron fig uml class diagram monitor activ compon particip list class involv pattern describ class respons sensor sole respons collect data system properti high interest adapt process send monitor accomplish task conduct fix delay respons event demand adopt fix delay form sensor send system properti measur monitor second sensor send properti measur event properti threshold violat occur wait current time window finish kind sensor time trigger event trigger sensor intern journal softwar engin applic ijsea juli system properti refer context element properti direct connect great interest adapt process properti target monitor activ main concern monitor compon desir accept rang threshold accomplish task exampl system properti includ server load server throughput respons time bandwidth usag system properti contribut runtim system state environ properti tthe environ defin extern actor system environ properti repres contextu extern system question contribut runtim state exampl properti includ time oper current client connect client server architectur threshold monitor compon will compar decid current system properti desir accept rang threshold valu lower upper bound exampl threshold server cpu load greater load chang system runtim state runtim system state repres combin valu system properti properti repres environ context system oper system desir state driven goal function requir deviat desir state trigger adapt process monitor respons collect data set sensor filter aggreg data send analyz compon symptom system goal violat combin data collect sensor repres form system subsystem runtim state conceptu monitor play role master master slave relationship sensor play slave role term softwar design pattern observ pattern monitor play observ role subject role play sensor behavior view behavior view depict interact compon involv monitor activ uml sequenc diagram fig intern journal softwar engin applic ijsea juli fig behavior view monitor activ mape sas analyz design pattern pattern sas analyz intent establish relationship compon particip accomplish analyz activ adapt system mape control loop context pattern stage evalu collect data monitor compon symptom system goal requir violat stage question adapt requir answer motiv detect system properti system state violat threshold violat repres trigger adapt process adapt system order accomplish detect process analysi activ carri perform sas analyz pattern structur view compon involv analyz activ adapt system well relationship describ uml class diagram fig central class activ analyz updat oper receiv collect data systemstatelog monitor notifi plan compon requir adapt link monitor plan compon observ design pattern play subject role plan observ role monitor implement interfac observ subject symptom class compos associ array key entri store symptom key repres event symptom databas connect failur repres condit associ event implement program languag offer class interfac implement includ map java dictionari python associ array php intern journal softwar engin applic ijsea juli fig uml class diagram analysi activ compon particip list class involv pattern describ class respons analyz respons receiv collect log data monitor repres system subsystem state histori analyz symptom system goal requir violat analyz notifi plan adapt send adapt request symptom repres undesir state system question detect correct action high load server exampl symptom symptom work set combin condit condit satisfi analyz rais adapt request signal send plan compon adaptationrequest analyz analys receiv data monitor decid symptom exist adapt request creat plan compon includ event describ symptom high load server occurr event time window hour symptomrepositori set predefin symptom system question avoid heal facil add emerg symptom runtim addsymptom oper compon knowledg base feedback control loop intern journal softwar engin applic ijsea juli behavior view behavior view depict interact compon involv analysi activ uml sequenc diagram fig notic analyz plan compon updat oper observ interfac play observ role interact analyz receiv collect data monitor trigger analysi activ plan receiv adapt request signal analyz symptom undesir system state detect fig behavior view analysi activ mape sas planner design pattern pattern sas plan intent establish relationship compon particip accomplish plan activ adapt system mape control loop context pattern stage construct chang plan compos set correct action respons adapt signal rais analyz compon stage question action order motiv model adapt system design adapt strategi calcul adapt decis structur view compon relationship involv plan activ adapt system describ uml class diagram fig intern journal softwar engin applic ijsea juli fig uml class diagram plan activ compon particip list class involv pattern describ class respons plan respons construct chang plan respons adapt request receiv analyz plan compon polici engin accomplish task send construct chang plan execut compon dispatch chang plan link analyz execut observ design pattern take observ subject role implement observ subject interfac policyengin polici high level goal control oper function system question polici form event condit action eca rule determin action event rais provid specif condit met general form polici rule written event condit action polici engin belong knowledg base feedback control loop interfac system administr defin modifi polici system hand changeplan action dispatch execut compon order perform adapt correct action call strategi action perform specif logic order intern journal softwar engin applic ijsea juli behavior view behavior view depict interact compon involv plan activ uml sequenc diagram fig fig behavior view plan activ mape sas execut design pattern pattern sas execut intent establish relationship compon particip accomplish execut activ adapt system mape control loop context pattern stage execut adapt action chang plan receiv plan compon action execut specif order sequenti concurr mix state plan execut compon set actuat effector appli requir chang system involv set valu system properti collect constitut system state stage properti chang question answer motiv pattern model design activ mape involv dispatch correct action number effector order bring system desir accept state execut adapt order state chang plan crucial success transit undesir desir state structur view compon relationship describ uml class diagram fig central class activ executor updat oper receiv chang plan correct action plan receiv correct action dispatch set effector appli chang target system environ properti refer context element fig link plan effector compon observ design pattern play observ role plan subject role effector implement interfac observ subject particip list class involv pattern describ class respons executor respons send correct action effector specif order effector respons appli chang system environ properti action receiv executor compon intern journal softwar engin applic ijsea juli fig uml class diagram execut activ compon behavior view behavior view depict interact compon involv execut activ uml sequenc diagram fig fig behavior view execut activ mape intern journal softwar engin applic ijsea juli evalu case studi evalu effect devis design pattern introduc adapt exist system aspect easi introduc adapt capabl softwar system flexibl design pattern accommod scenario feedback control loop interact carri evalu introduc case studi augment virtual learn environ vle moodl blackboard adapt capabl architectur environ view design client server style environ provid learn servic set server server farm access number learner well instructor client major concern environ achiev scalabl scale accommod client access system cut oper cost switch server manag client server base softwar system load balanc techniqu contribut solv server problem includ respons time throughput scalabl feedback control loop compos compon concern load balanc mechan compon includ load monitor load analyz load balanc planner load balanc executor knowledg base compon compon achiev task candid properti identifi monitor compon appli load throughput properti associ server compon load express process wait queue access server processor measur cpu usag throughput measur amount messag server process specif time interv latenc properti associ client compon latenc measur client machin time send request receiv repli cost properti associ server compon number activ server adapt process trigger outcom observ server load adapt depend current system state system goal add server oper addit server server farm correct action sever high load provid affect oper cost remov server oper remov server server farm low load specif time respons unrespons server state earlier main object system learn servic learner instructor maintain oper cost specif rang avail oper cost issu great interest feedback control loop process ensur qualiti servic qos attribut describ will number sensor activ server measur current read server load send monitor collect read repres runtim system state server farm sensor report read server load chang instanc chang load read access request learner instructor receiv read sensor monitor construct runtim system state save system log send analyz analyz analyz receiv data symptom undesir event three symptom event identifi high load low load intern journal softwar engin applic ijsea juli unrespons high load event rais server load greater upper bound threshold low load event detect load lower bound threshold specif period hour instanc unrespons event rais read server load receiv sensor specif period plan construct correct action base system polici main polici system add server high load event rais provid number activ server exceed defin threshold exampl remov server system low load unrespons event rais demonstr map concept present design pattern concept real exampl illustr flexibl accommod scenario feedback control loop interact construct organis fig adapt system tailor case studi number interact recogn fig monitor monitor execut execut exampl interact compon type model kind interact design monitor execut compon appli analyz plan observ subject observ design pattern regist oper subject interfac exampl requir paramet observ type monitor regist monitor notifi chang monitor respons collect server load subsystem sensor report monitor main control loop respons aggreg collect data monitor send analyz scalabl easili accomplish add remov server server farm regist unregist main monitor monitor remov server fig feedback control loop interact adapt vle intern journal softwar engin applic ijsea juli conclus paper introduc set design pattern model main activ mape control loop engin adapt system sas pattern term sas monitor sas analyz sas plan sas execut interact mape compon model design interact includ sensor monitor monitor analyz analyz plan plan execut execut effector appli observ design pattern interact compon sensor effector play observ subject role implement interfac observ subject state interact enabl establish interact compon type monitor instanc need situat learn system case studi illustr applic design pattern futur work suggest issu address detail case studi illustr applic propos deign pattern applic design pattern introduc adapt capabl vles core servic level servic includ adapt user interfac adapt learn path case studi present interest provid scalabl hardwar level server farm server farm repres platform thevl execut model program state mape compon manag manag system complet lifecycl develop adapt system impact architectur style system develop feedback control loop organ decentr instanc refer ben kacem kerboeuf ben amor abid design pattern adapt rte system specif intern journal reconfigur comput brown cheng goldsbi zhang goal orient specif adapt requir engin adapt system acm intern workshop adapt manag system seam shanghai china brun engin adapt system feedback loop softwar engin adapt system springer verlag berlin heidelberg cheng buschmann pattern orient softwar architectur system pattern john wiley camara lemo laranjeiro ventura vieira test robust control adapt system journal brazilian comput societi lemo softwar engin adapt system second roadmap springer verlag berlin heidelberg adapt system lncs dobson survey autonom communic acm transact autonom adapt system taa gamma helm johnson vlissid design pattern element reusabl object orient softwar addison wesley profession garlan cheng huang schmerl steenkist rainbow architectur base adapt reusabl infrastructur ieee comput intern journal softwar engin applic ijsea juli garlan cheng schmerl increas system depend architectur base repair lemo gacek romanovski architect depend system lncs springer heidelberg garlan schmerl cheng softwar architectur base adapt springer scienc busi media llc gomma hussien softwar reconfigur pattern dynam evolut softwar architectur ieee confer softwar architectur wicsa ibm architectur blueprint autonom comput ibm iftikar weyn activform activ formal model adapt intern symposium softwar engin adapt manag system iglesia formal approach design distribut adapt system phd thesi jacob lanyon hogg nadgir yassin practic guid ibm autonom comput toolkit ibm johnson compon framework pattern symposium softwar reusabl kramer mage evolv philosoph problem dynam chang manag ieee transact softwr eng nov liu parashar accord program framework autonom applic ieee transact system man cybernet muller pezz shaw visibl control adapt system proceed second intern workshop ultra larg scale softwar intens system ulssi acm ieee northrop feiler gabriel ultra larg scale system softwar challeng futur technic report softwar engin institut carnegi mellon june oreizi gorlick taylor architectur base approach adapt softwar ieee intellig system applic peper schneider compon engin adapt hoc system acm intern workshop softwar engin adapt manag system seam leipzig germani ramirez cheng design pattern develop dynam adapt system proceed ics workshop softwar engin adapt manag system seam acm usa richter mnif brank muller schloer schmeck generic observ control architectur organ comput hochberg liskowski informatik informatik menschen edit lectur note informat salehi tahvildari adapt softwar landscap challeng acm transact autonom adapt system articl weyn pattern decentr control adapt system lemo gies muller shaw editor softwar engin adapt system volum lectur note comput scienc springer author yousef abuseta receiv comput engin univers hertfordshir receiv phd degre softwar engin autonom system liverpool john moor univers lectur jabal gharbi univers work senior lectur interest includ adapt system autonom system design pattern learn model driven develop mdd servic orient architectur soa khale swesi receiv comput scienc newcastl univers receiv phd degre softwar engin montfort univers join jabal gharbi univers work senior lectur interest includ learn web base applic 