depart informat engin faculti engin univers porto technic report fault detect program monitor rang valu preliminari pedro pinto rui abreu rui joa cardoso jmpc februari acknowledg work partial fund erdf programm compet portugues govern fct foundat scienc technolog project refer fcomp feder author grate project partner critic softwar gentl provid sourc code exampl applic evalu work aspect lara languag weaver prompt assist technic aspect work phase author tiago carvalho pedro pinto acknowledg support doctor program infor matic engin form year phd scholarship enrol doctor program abstract technic report present work autos project investig generic invari time domain spectrum base fault diagnost precis relat exist test oracl runtim overhead densiti requir strateg placement trade overhead versus precis work project develop sourc sourc compil manet languag instrument critic part applic test intent guid compil flow defin instrument strategi aspect orient approach provid allow separ origin target applic instrument secondari concern goal work develop sourc sourc compil modifi code input strategi modif provid code tran format target perform instrument debug work inject code collect valu variabl runtim compil support aop approach enabl definit instrument strategi decid extend exist sourc sourc compil tus coupl lara aop languag partial abstract target program languag propos evalu approach detect fault program monitor rang valu variabl consid monitor strategi real life applic gzip file compressor program provid industri partner strategi lara automat appli manet experiment approach potenti hinder account valu array control variabl achiev predict accuraci gzip compar approach tradit output compar expect result aspect orient program languag aop special design allow velop program code instrument strategi control applic code transform compil optim effect control tool toolchain lara separ concern includ function requir strategi map high level applic high perform heterogen embed system lara develop artefact unifi view diminish effort program evalu design space explor dse scheme develop lara languag context reflect project driven industri requir honeywel corework ace introduct report present work project autos investig generic invari time domain spectrum base fault diagnost precis relat exist test oracl runtim overhead densiti requir strateg placement trade overhead versus precis work project develop sourc sourc compil manet languag instrument critic part applica tion test intent guid compil flow defin instrument strategi aspect orient approach aop provid lara advantag allow clear separ origin target applic secondari concern repres sourc code instrument main goal work develop compil applic written languag output modifi code input strategi theori modif provid code transform target perfor manc instrument debug work compil inject code collect valu variabl runtim piler support aop approach enabl definit instrument strategi instanc case decid variabl monitor collect decid extend exist sourc sourc compil cetus coupl lara aop languag partial abstract target program languag sourc sourc compil framework control lara strategi advantag code instrument altern previous lara context sourc sourc transform instrument strategi ver sion harmon sourc sourc framework control lara highlight expos strong evid advantag possibl manual instrument sourc code obvious downsid time cost error prone approach includ binari instrument flexibl complex possibl extend exist compil instrument strategi want appli compil pass written scope skill user instrument applic altern approach hinder possibl explor strategi utmost earli stage project second goal develop evalu instrument strategi detect fault applic compil coupl lara allow great flexibl type instrument fine grain autos project refer http control select multitud point interest instanc develop strategi test program path instrument control flow statement work explor possibl rang variabl execut strategi revolv idea chang set variabl chosen monitor program comput rang valu rang analysi address year approach reli static analysi monitor mix rang analysi context compil hardwar synthesi opti mizat reduc bitwidth variabl static approach monitor approach simul effort consid rang analysi context detect program fault instanc context fault screener rang variabl identifi collar variabl consid rang constant execut variabl monitor approach reduc number variabl monitor applic consid effort context secur vulner rang analysi detect program fault buffer overflow program invari locat fault proven approach decid rang variabl approach focus type program invari prove benefici context daikon platform dynam invari detect run program find invari constant rang support multipl program languag extend user detect invari type zoltar toolset automat fault local instrument applic specif fault screener zoltar fault spectrum base fault locat techniqu extend easili approach work hardwar level iodin tool captur properti hardwar design simul dynam invari properti includ state machin protocol request acknowledg pair iswat framework detect perman fault hardwar level aim reduc latenc increas coverag previous techniqu compil time instrument monitor valu train generat invari code insert inject invari decid monitor variabl purpos detect fault integr comput applic expect fault eventu propag variabl straightforward monitor sens easi locat site code updat bring obvious downsid will default monitor larg number place choos critic variabl main issu call collar variabl easili identifi final simpl monitor rang valu variabl take execut maintain monitor variabl minimum maximum valu larg number variabl will comput expens requir memori problem comput system approach rang defin initi train phase execut applic test case exercis modul featur instrument learn rang variabl function basic minimum maximum valu variabl execut train phase execut test phase execut applic instrument detect learn rang violat variabl lesser minimum greater maximum learn train phase detect perform onlin deploy applic trigger fault toler measur place work rang violat test intend measur diagnost accuraci techniqu order evalu approach applic origin version applic linux distribut program compress decompress file typic archiv second applic simul anti lock break system will initi car wheel speed calcul distanc need car remaind report structur chapter present lara languag detail architectur manet sourc sourc compil support lara chapter explain approach detect applic fault rang valu well monitor strategi develop evalu work descript conduct experi chapter final chapter present conclus drawn work well path futur applic sourc code test case gzip provid softwar artifact infrastructur repositori http portal bio applic sourc code gentl provid industri partner critic softwar sourc sourc compil chapter lara languag compil manet detail architectur manet compil flow weav lara strategi applic written transform engin work illustr framework simpl exampl lara languag program paradigm decompos criteria function decomposi tion object orient decomposit concern align primari decomposit secondari cross cut concern spread program decomposit unit repeat scatter sourc code pollut primari object system aspect orient program aop paradigm intend increas mod ular program separ cross cut concern describ intend behavior applic paradigm base idea system work better properti function requir area interest separ aspect describ relationship weav process will bring concern intend program aspect separ ondari concern core object program cleaner code easier concern analysi monitor trace debug current divers set aspect program languag aspectj aspect orient extens java aspectc appli aspect program mention aop languag defin specif aspect reus aspect target languag instanc extens aspect defin pectj java languag manual translat disadvantag mention tool includ simpl model point interest consid loop local variabl reduc number action restrict code insert lara aop approach partial agnost target program languag allow definit aspect target languag lara aspect generic appli problem number languag lara enabl develop captur function requir concern form strategi complet decoupl function descript applic lara differ aop approach syntax agnost content target languag reli extern languag definit three generic compon join point attribut action join point point interest code intend observ influenc function call array access attribut repres join point retriev instanc call function activ carri select join point monitor code insert call action lara access type action compar current state art approach focus code inject allow code insert lara enabl attribut definit join point intend variabl type redefinit function renam addit type action defin languag specif optim task softwar hardwar partit code transform lara languag specif defin extern oppos common approach allow flexibl updat easili target program languag consequ lara built weav process lara compil pars aspect combin languag specif gen erat aspect intermedi represent aspect specif target languag aspect interpret extern interpret weav tool larai lara interpret lara remain partial languag agnost weav tool bound specif target languag concern intend appli target applic express aspect definit aspectdef basic modular unit lara aspect compris three main step will carri intend concern captur point interest code select statement appli statement select point concern constrain met repres requir step defin filter insid select statement simpl constrain condit statement complex allow definit sophist concern emb javascript code insid lara aspect spe tde loop var loop appli loop count loop loop loop rank count count cond loop type figur simpl lara aspect count print number iter loop figur exampl aspect written lara insert code loop count number iter runtim aspect start select loop statement insert code loop initi counter variabl uniqu loop insert call print number iter loop final add increment statement loop bodi statement code insert action appear line appli condit state loop type met manet extend cetus lara solut manet sourc sourc compil control aop approach lara aspect compil manag leverag express modular lara aspect control queri manipul abstract syntax tree ast exist compil infrastructur cetus creat easi compil process sourc file main goal code instrument usag aspect enabl easi select point interest code repres lara join point analyz retriev transform action manet creat report base compil analys implement complex sophist code instrument transform strategi manet exist test platform lara aspect orient dsl control compil flow cetus intermedi represent compon prove test platform bring robust solut sourc sourc compil manet intend intermedi tool complex toolchain standalon compil usag fect illustr manet transform sourc code design space explor mechan aim increas perform specif kernel dif ferent multicor model despit earli stage develop manet flexibl sourc sourc compil suitabl varieti task code instrumenta tion code transform optim altern multi architectur direct base compil manet compil flow guid lara aspect describ intend strate gie exampl consid aspect depict figur printloopiter print consol number iter loop execut loop iden tifi rank attribut uniqu identifi loop insid sourc file aspect basic lara construct select appli captur point interest sourc code loop exampl point instrumentfunctioncal aspect insert monitor code will print messag call function caller final exampl lara control loop transform aspect aspect captur innermost loop transform loop unrol manet architectur manet compos three main compon present figur compon lara engin interfac user translat aspect command compon weav engin respons establish communic compon command lara engin convert specif action appli cetus build maintain ast pars input sourc file compon detail spec tde tloop loop appli loop rank loop num spec tde instrumentfunct ioncal func appli var func funct var func spec tde input funcnam func funcnam loop type appli perform unro cond loop figur simpl exampl lara aspect illustr manet perform task code instrument transform lara engin lara engin compon execut start compos subcompon lara compil respons compil aspect intermedi represent aspect lara partial languag agnost input descript target languag lang spec block figur set three xml file manet specif languag join point attribut action generat aspect save xml file pass lara interpret second subcompon step figur step compil flow interpret take represent commu nicat weav engin instruct carri join point select attribut queri program alter action iter flow lara interpret weav engin cetus interpret revers path flow forward form command weav engin flow backward form join point attribut process repeat time normal execut lara engin interfac user compon respons pars lara aspect initi execut well print figur architectur manet consol aspect printloopiter figur cetus cetus sourc sourc compil infrastructur languag support ansi standard written java infrastructur aim multicor comput focus auto parallel current work translat share memori program written openmp model cuda support transform analysi pass control flow data depend analysi ast main element cetus manet repres program compos java class program translat unit procedur statement express basic build block hierarchi element node ast visit tree travers travers manipul node effect chang program join point creat execut base ast refer specif node repres cfunction refer procedur ast queri join point attribut method trigger tree refer return request analog action perform alter ast method join point call tree refer perform desir chang weav engin weav engin central compon manet bidirect communi cation channel compon respons instanti intent describ lara aspect queri chang ast cetus engin hierarch structur mimic join point tree defin languag specif join point model defin select loop insid function class cfunction select instanc class cloop structur languag specif join point attribut class implement getter method specif attribut instanc cloop getnumiter method languag specif defin consult number iter loop join point action defin languag specif perform weav engin interact ast creat cetus perform extens cetus infrastructur repres analysi engin transform engin figur instanc normalizereturn transform pass thing chang program structur function return statement transfor mation exist cetus adapt call lara aspect consid unaryexpans transform express unari increment decrement oper equival binari express transform pass written manet facilit code analysi instrument join point ast logic match join point lara engin ast built cetus implement join point tree time execut intuit think relat represent instanc correspond translationunit cfile join point repres sourc file rare except implement direct map join point node ast tree translat creat simpl effect intuit represent program portray figur actual ast exist join point extract need implement choic tree updat chang appli chang tree queri consequ simpler singl tree halv updat avoid synchron task expect choic disadvantag creat unnecessari join point pictur aspect perform chang tree collect case join point creat repeat ideal manet analyz lara aspect check tree alter action base select represent high dynam natur lara transform engin manet current number transform engin invok lara aspect engin goal transform code easier analyz instrument ensur function return statement provid well exit point engin chang code appli well transform improv perform tabl present current transform engin strategi develop work origin column indic transform cetus develop manet transform cetus adapt order call lara aspect http document api figur map join point tree ast creat cetus normalizereturn guarante function return statement addi tional chang exist return statement return express replac singl temporari variabl previous return express singledeclar declar statement multipl declar divid multipl statement singl declar assignexpans augment assign replac normal assign ment replic left hand side side structassigndecomposit replac hand side express assign struct member singl temporari variabl variabl previous engin origin normalizereturn cetus singledeclar cetus assignexpans manet structassigndecomposit manet unaryexpans manet tabl transform engin work hand side express unaryexpans express unari increment decrement oper replac equival assign express express singl statement transform perform unari oper complex express summari chapter overview lara languag main concept join point attribut action main construct select appli condit block present detail view manet explain extend cetus compil lara support control compil task three main compon lara engin weav engin extend cetus compil interact compil sourc file defin strategi lara engin compil interpret lara aspect communic intent weav engin engin will translat intent specif action appli intern program represent ast cetus cetus develop transform analysi pass chang program send weav engin monitor strategi consid strategi monitor rang valu variabl tabl sum mariz strategi detail section lara code strategi appendix fault detect rang valu process detect fault divid subprocess train subprocess learn rang relev variabl appli cation execut subprocess variabl chang check rang variabl violat rais except act need subprocess describ detail section train train process captur rang function paramet return valu variabl assign consid relev variabl time number train execut execut exercis applic learn rang singl execut sever constrain abil detect fault lead low detect accuraci rang variabl execut allow relax learn rang better represent global variabl insid applic final product train phase set rang variabl exampl execut instanc monitor variabl perform train execut rang execut idea subprocess simpl simpli check assign variabl execut violat rang learn variabl order calcul final rang variabl simpli choos learn rang percentag merg percentag repres singl test case will singl random train execut variabl rang repres rang will final rang relax subprocess exemplifi singl variabl name factor variabl figur exampl consid train execut choos rang tabl summari strategi work column indic applic strategi descript monitor function paramet assign return valu deal assign struct field freq monitor variabl percentag total assign fanin monitor variabl assign number variabl comband intersect variabl set freq fanin combor union variabl set freq fanin learn execut random calcul relax rang variabl factor factor select random percentag learn rang combin chose exampl figur exampl subprocess singl variabl perform train execut choos rang calcul final rang variabl name factor main strategi data structur librari idea strategi describ array track rang variabl monitor posit array correspond variabl posit calcul static weav time array pointer structur save rang variabl depict figur practic minimum maximum updat rang variabl updat perform function update_rang rang rang doubl librari develop track variabl rang instrument process monitor variabl insert call updat function correct posit array exampl illustr excerpt code instrument update_rang rang doubl array exampl uniqu variabl function identifi variabl uniqu calcul weav time javascript util librari provid lara variabl second argument rang updat function cast doubl broadest scalar type updat function will simpli updat minimum maximum rang struct updat minimum maximum updat min max min max figur represent array store minimum maximum valu monitor variabl consid variabl strategi monitor function paramet function return valu assign scalar variabl order monitor function paramet insert statement function call rang updat qualifi paramet avoid pointer array code insert declar code execut function monitor variabl return express return statement return statement function insert call rang updat variabl return express range_upd doubl range_upd doubl return final monitor assign scalar variabl call rang updat signment except monitor assign perform loop header step express monitor assign con dition statement monitor variabl ensur good happen function monitor input output well comput happen insid strategi perform instrument code previous strategi deal assign struct member execut addit preprocess step appli sourc code transform replac assign struct member equival code easier instrument code struct member replac temp_struct_memb struct member temp_struct_memb easili instrument temp_struct_memb range_upd temp_struct_memb struct member temp_struct_memb instrument usag struct account larg applic defin strategi freq strategi monitor variabl assign account percentag total assign strategi reli previous strategi instrument code order creat frequenc report report total number assign well number assign variabl calcul share total assign report load analyz main strategi choos monitor variabl share higher threshold work threshold exampl variabl chosen share calcul fanin freq strategi fanin auxiliari strategi generat report choos subset variabl monitor report variabl function maximum number variabl assign code explain fanin concept fanin fanin maximum chosen fanin fanin func main strategi select variabl fanin higher input threshold case exampl variabl monitor comband combor comband combin previous strategi perform intersect set set variabl will instrument previous strategi combor combin freq fanin perform union set produc final set will instrument inject fault fault inject test version exampl aaplic base concept mutant mimic fault introduc human write code oper moment fault activ gzip addit assign oper replac simpl assign oper ifdef header_byt sizeof long header_byt sizeof long endif fault chang oper oper effectivelli chang decompr sion method ifdef compr_level return deflate_fast compr_level return deflate_fast speed endif fault inject condit express chang remov bitmask comparison ifdef start start endif fault activ relat oper replac ifdef code error corrupt input code error corrupt input endif fault chang valu variabl hold error code defin defin error defin warn ifdef int err int err endif fault inject logic negat oper negat condit express ifdef fac facmin fac facmin endif fault inject repalc constant assign ifdef int_t int_t endif arithmet oper replac ifdef ztmp delta ztmp delta endif comparison oper replac ifdef localb rtu_input localb rtu_input endif fault activ assign statement remov ifdef localxdot wheelspeed_cst endif summari chapter describ rang valu detect fault program written phase approach initi perform train run learn minimum maximum monitor variabl run merg rang percentag run creat final rang valu monitor variabl check assign violat learn rang experiment chapter demonstr evalu approach applic pare approach tradit approach compar output applic applic version gzip compress decompress file common pack linux distribut second applic anti lock break system initi veloc car wheel calcul distanc need car test process test process compar fault matric generat perfect oracl unchang fault free version applic fault matric generat approach fault matrix test execut version program boolean indic test valid exampl matrix figur figur exampl fault matrix repres pass test exampl version test execut generat perfect oracl matrix origin version applic test version applic inject fault case version fault exampl applic compar output version output origin build fault matrix output assign output instanc exampl figur output origin version test equal output version test output version element order evalu approach generat fault matric refrain fault free version train execut process describ learn relev variabl strategi rang verifi rang violat deploy applic test perform onlin simpl assert case test execut generat rang contain learn rang learn rang percentag rang collect train phase element matrix test version test rang monitor variabl contain learn rang test consid fail assign assum test valid assign evalu present chapter compar exampl applic fault matric generat perfect oracl matric generat approach learn percentag tabl repres accuraci test strategi accuraci repres fault matric generat test process fault matrix generat usag perfect oracl instanc fault matrix generat approach complet equal matrix generat origin applic accuraci convers accuraci matric complet opposit boolean valu tabl present illustr test strategi describ chapter best accuraci achiev correspond learn percentag learn percentag achiev accuraci manag achiev accuraci smallest learn percentag best test perform applic low accuraci observ tabl upper bound accuraci will explain differ top accuraci achiev strategi consid freq best strategi freq comband share monitor variabl reach best detect accuraci smaller train percentag rest strategi strategi find set key variabl monitor remain difficult explain freq fanin share small number variabl best accuraci ident exist larg number fals posit present ahead tabl applic strategi best accuraci best percentag freq fanin comband combor figur evolut number correct predict fals posit fals negat strategi train percentag applic evid larg number fals posit entir rang strategi percentag number fals negat decreas increas train percentag trend strategi percentag correct increas number fals posit remain unchang worth note strategi freq comband fals negat train percentag elimin train data correct fals posit fals negat freq fanin train percentag comband train percentag combor figur percentag correct predict fals posit fals negat test train percentag applic test version applic tabl version poor achiev top accuraci rang maximum usag train data fault inject second version chang initi variabl perform memcpi function call number byte copi fault reduc number number copi byte smaller left array uniniti posit variabl upper bound loop initi third array pointer increment current strategi monitor valu insid array fail captur chang approach monitor control variabl loop strategi monitor loop control variabl execut loop variabl take insid loop bodi captur better strategi achiev top accuraci train data poor accuraci version explain type fault inject fault remov assign variabl calcul intern deriv represent speed wheel direct output program mean easi detect simpli compar output origin mutant version fault chang reduc number variabl insid program monitor array pointer hamper abil detect rang approach achiev good accuraci version strategi good expect larger differ strategi second monitor doubl variabl tabl final achiev perfect version three achiev larg percentag train data freq fanin strategi tabl version applic best accuraci best percentag strategi freq fanin comband combor perform final test applic chang faulti constant redefin fault activ test test accuraci present tabl strategi present chang notic impact tabl accuraci faulti constant valu inject second version origin faulti highlight faulti valu strategi test strategi produc constant chang worth note freq best strategi applic combor best strategi version fail detect chang fact strategi monitor greater number variabl includ rang chang fault function fault locat singl variabl monitor hold time instant variabl direct chang faulti variabl chang insid loop perform differ base faulti variabl fault propag end chang function paramet pointer struct field updat insid function fault locat detect rang function propag detect boundari valu test larg impact control flow program variabl fault inject control loop initi updat array complet skip execut block applic fact larger valu produc accur explain type applic program reli heavili numer calcul control flow structur heavili numer valu instanc stop calcul insid loop predefin threshold natur program chang variabl fault exponenti propag rang control flow structur gzip tabl present predict accuraci gzip applic accuraci good strategi correct predict test strategi freq comband achiev best accuraci train data achiev larg differ abil strategi detect fault differ strategi includ assign struct field null number monitor variabl gzip applic tabl fanin combor manag achiev better perform strate gie wors freq comband freq find better set variabl monitor applic comband variabl includ freq tabl gzip applic strategi best accuraci best percentag freq fanin comband combor figur illustr evolut percentag correct incorrect predict train percentag test strategi gzip applic chart start clearer indic percentag follow pattern start number fals posit fals negat percentag train data increas percentag correct predict increas fals negat null fals posit rate increas train percentag fanin strategi manag achiev rough predict accuraci freq strategi achiev smaller amount train data indic variabl chosen strategi better correct fals posit fals negat freq fanin train percentag comband train percentag combor figur percentag correct predict fals posit fals negat test train percentag gzip applic requir smaller amount train data improv quick test process strategi comband combor comband add variabl freq achiev earli combor add variabl fanin dilut variabl select freq version tabl great except version number highest accuraci achiev strategi achiev accuraci bad second version gzip explain type fault inject fault chang compress method faster produc output chang control variabl will impact lot variabl insid applic code will direct impact output case version applic test presenc fault compar output will easili detect harder rang strategi version second strategi better monitor lot variabl freq comband achiev best version second freq select good set variabl limit appli set intersect oper set fanin generat set comband strategi comband separ strategi manag achiev rough accuraci smaller amount train data combor dilut variabl chosen freq differ predict accuraci small applic test strategi augment best strategi add support monitor loop control variabl strategi par top accuraci train data tabl version gzip applic best accuraci best percentag strategi freq fanin comband combor instrument tabl illustr number join point instrument gzip applic join point point code instrument tabl number select point consid instrument number advis point instrument thing clear instrument difficult task perform manual case instrument small set variabl analyz larg number manual time consum error prone case code transform appli manual line code applic version select point remov inject fault describ remov statement applic code larg differ number select advis point strategi second strategi decompos assign struct field allow instrument assign scalar variabl strategi follow transform larger amount monitor point applic heavi struct execut hand gzip monitor variabl consid usag struct code strategi consid struct test applic tabl number advis select join point version applic column label indic advis join point column label indic select join point strategi freq fanin comband combor tabl tabl instrument time millisecond gzip version tabl singl version fault inject applic instrument time vari second tabl number advis select join point version gzip applic column label indic advis join point column label indic select join point strategi freq fanin comband combor second instrument time close time initi java virtual machin weav compil manet java applic freq fanin comband combor strategi longer load report choos variabl will instrument base content instrument time longer pattern gzip applic tabl longer time explain larger applic fastest weav second longest second tabl instrument time applic strategi time freq fanin comband combor tabl instrument time gzip applic time strategi freq fanin comband combor tabl tabl slowdown instrument version gzip applic distinct version slowdown rang mean execut time close origin instrument version strategi monitor larg number variabl slowdown accept instrument applic run time observ gzip applic slowdown rang strategi version comband strategi second version featur instrument approach increas execut time instrument applic approach collect data need analysi doubl execut time tabl slowdown instrument applic compar origin strategi slowdown freq fanin comband combor tabl slowdown version instrument gzip applic compar origin slowdown strategi freq fanin comband combor fals posit analysi metric paragraph explain mean calcul true posit count fals posit count true negat count fals negat count acc accuraci metric ppv posit predict percentag correct predict test will pass precis calcul ppv npv negat predict percentag correct predict test will fail calcul npv tpr true posit rate percentag posit instanc manag identifi recal calcul tpr tnr true negat rate percentag negat instanc manag identifi calcul tnr express negat predict posit predict predict approach test will fail pass predict incorrect correct appli express negat instanc posit instanc case fail pass test origin fault matrix fact version best lowest train percentag fact accuraci increas train percentag move farther origin fault matrix decid explor hypothesi approach fit code applic assum problem exist version worst accuraci present test version explain approach simpli pass singl test produc high number fals posit problem detect fals negat aris origin fault matrix small number fail test case decid origin fault matrix applic case highest number fals posit second version origin matrix largest number fail test occur hypothes approach blind pass test accuraci percentag pass test origin fault matrix calcul percentag program result prove hypothesi approach fit explain upper bound limit present tabl present best accuraci achiev version well percentag pass test origin bas fault matrix version three accuraci test pass version opposit version origin test fail accuraci predict close version explain model blind pass test produc larg number fals posit tabl percentag pass test origin fault matrix applic compar best accuraci predict best percentag percentag tabl best strategi freq valu describ metric train percentag tabl metric collect train percentag best strategi applic acc ppv npv tpr tnr accuraci program execut train data achiev high valu ppv npv predict posit negat correct find posit test tpr fail find larg portion negat test tnr increas train percentag accuraci ppv tpr valu remain tnr drop mean predict negat test origin fault matrix train percentag grow npv imposs calcul denomin sum negat predict fals true approach stop make negat predict happen gzip applic notic tabl present version best percentag test upper row percentag posit test origin fault matrix bottom row tabl percentag pass test origin fault matrix gzip applic compar best accuraci predict best percentag percentag valu accuraci achiev predict higher find negat test gzip applic oppos tabl best gzip strategi valu describ metric train percentag tabl metric collect train percentag best strategi gzip applic acc ppv npv tpr tnr valu ppv npv high mean predict posit negat confid will correct increas train percentag number negat predict decreas good fals negat decreas reach true negat tpr high reach expect predict posit predict will eventu find posit test case origin fault matrix hand tnr small misclassifi negat exampl origin test fail tnr decreas train percentag increas number posit predict increas gzip appear fals posit problem smaller scale fail correct predict negat instanc highlight tnr negat predict high degre certainti evidenc npv overview analysi approach produc larg number fals posit reason behavior clear time possibl current process compar rang permiss look consid big differ rate fals posit exampl applic analyz characterist applic identifi origin problem differ accuraci present strategi differ smaller expect case number monitor variabl great vari general speak strategi freq comband achiev rough accuraci manag smaller percentag train data factor requir shorter time perform fault detect test strategi monitor function paramet assign scalar variabl function return valu redund degrad detect accuraci argu return function depend assign occur insid bodi accept choos monitor concept sophist approach applic mix fault clear easier detect differ version inject fault assum type fault deterior abil detect inject fault direct impact output program dramat chang learn rang weak approach weak expos second fault valu insid array chang assum detect monitor rang array pointer variabl case test strategi prepar deal variabl posit gzip applic problem aris inject fault abil drastic chang output program caus major chang rang monitor variabl exact fault inject version compress method chang fault activ approach produc consider amount fals posit applic test notic applic applic negat predict state test fail high accuraci problem larg number negat test tradit comparison method approach incorrect label posit test identifi variabl rang critic diagnost expect main issu find critic collar variabl variabl execut applic instrument challeng effici techniqu requir step find instrument fault propag error violat learn rang detect fault trigger execut approach capabl detect execut context learn rang unpredict behavior lead erron state instanc consid second fault inject gzip applic worst detect accuraci fault fault chang method compress input data produc complet output suppos fault variabl hold compress method chang learn rang variabl chang lead error state unexpect output type control oper mode variabl difficult monitor rang inher discret mean rang unsuit represent place addit problem ensur exercis oper mode train phase type variabl approach rang suffici specif exampl compress method chang difficult detect approach simpl chang singl variabl lead program output rang approach issu deal fault drastic chang control flow applic rang suitabl represent deal type fault approach potenti manag achiev interest motiv gzip applic expect find difficulti approach obvious refin great benefit support complement approach approach control flow account summari chapter present experiment evalu applic compar abil approach detect fault tradit method compar output execut applic characterist gzip compressor simul applic mix achiev top accuraci consid test fault clear fault easier detect achiev perfect perfect fault accuraci key featur miss strategi array monitor fault larg impact array valu detect monitor array will principl improv achiev difficult implement suitabl strategi instanc case feasibl monitor singl posit array possibl maintain rang entir array accur better gzip applic manag achiev accuraci worst result singl fault gzip highlight key featur miss approach abil reliabl monitor control variabl common assum small set discret valu well captur concept rang order overcom limit approach complement better suit deal class variabl perform analys transform need approach prove massiv task perform manual result user induc fault process long tedious framework manag analyz larg number program critic point short amount time analyz point number gzip applic perform second gzip final instrument key approach slowdown gzip sophist care choic variabl techniqu onlin fault detect trigger fault recoveri polici conclus start work goal develop compil capabl appli custom code instrumen tation strategi detect presenc fault applic extend exist sourc sourc compil analys transform pass well support lara languag aspect orient program approach separ origin applic definit instrument strategi sourc sourc compil extend lara languag support great flexibl multitud task sourc code analysi optim instrumen tation larg number possibl instrument compil expos fine grain select code structur user target specif critic code section fur thermor approach forc separ origin applic specif strategi rapid test instrument possibl heavi chang applic compil task instrument strategi captur control flow signatur focus code instrument provid rang valu specif critic variabl initi train phase execut applic exercis modul featur result learn monitor variabl rang valu test phase assign variabl check fall learn rang consid fault detect evalu approach applic gzip compress util simul provid industri partner test strategi focus choos distinct set variabl monitor applic mix achiev accuraci fault test version achiev perfect accuraci fault easier detect instanc fault lead chang valu array pinpoint array reli monitor variabl depend array direct futur work reliabl test rang array variabl gzip applic posit accuraci inject fault except singl fault test strategi produc good accuraci perfect close perfect negat point second fault approach achiev accuraci weak approach captur mean control variabl difficult rang number sourc code point analyz instrument manual approach impract will requir big effort user will sure great time loss error introduc code applic strategi analyz maximum point code act gzip strategi analyz maximum code locat insert code clear effort better suit automat approach consid strategi execut faster user perform task instrument process take second second gzip obvious overhead learn lara languag develop strategi benefit outweigh disadvantag overhead will reduc strategi develop worth note strategi develop lara languag appli applic worst case applic slowdown gzip worst strategi slowdown slowdown account execut time binari instrument collect rang overhead test rang detect fault approach onlin measur fault detect trigger proper fault recoveri mechan order sophist strategi select critic variabl code reduc number onlin test turn provid better slowdown instanc approach mispredict consider amount test clear infrastructur implement custom instrument strategi capabl provid fault detect diagnosi futur sophist strategi implement enabl better diagnost accuraci fault detect locat clear room improv approach negat featur stood analysi experiment difficult detect fault target control variabl approach variabl respons direct flow execut choos oper mode practic variabl well learn rang produc output expect expect approach detect fault well manual approach difficult monitor variabl interest applic improv diagnost accuraci complement approach proven techniqu control flow analysi help control variabl interest futur studi focus find type fault detect approach common support provid manet lara monitor strategi will great help experi bibliographi rui abreu alberto gonza lez peter zoeteweij arjan van gemund automat softwar fault local generic program invari proceed acm symposium appli comput acm rui abreu alberto gonza lez peter zoeteweij arjan van gemund fault screener softwar error detect evalu novel approach softwar engin volum communic comput scienc springer asaithambi shen zuhe moor comput rang valu comput david brook margaret martonosi dynam exploit narrow width operand improv processor power perform proceed intern symposium high perform comput architectur ieee joa cardoso tiago carvalho jose coutinho wayn luk ricardo nobr pedro diniz zlatko petrov lara aspect orient program languag embed system proceed annual intern confer aspect orient softwar develop acm joa cardoso jose gabriel coutinho tiago carvalho pedro diniz lara languag compil synthesi embed reconfigur system springer joa cardoso jose coutinho tiago carvalho pedro diniz zlatko petrov wayn luk fernando gonc alv perform driven instrument map strategi lara aspect orient program approach softwar practic experi decemb dave hansang bae seung jai min seyong lee eigenmann midkiff cetus sourc sourc compil infrastructur multicor comput jose gabriel coutinho joa cardoso tiago carvalho sujit bhattacharya wayn luk georg constantinid pedro diniz zlatko petrov aspect base sourc sourc transform joa cardoso pedro diniz jose gabriel figueiredo coutinho zlatko marinov petrov editor compil synthesi embed reconfigur system springer york tzilla elrad robert filman atef bader aspect orient program introduct communic acm michael ernst jeff perkin philip guo stephen mccamant carlo pacheco matthew tschantz chen xiao daikon system dynam detect invari scienc comput program sudheendra hangal naveen chandra sridhar narayanan sandeep chakravorti iodin tool automat infer dynam invari hardwar design proceed annual design autom confer dac york usa acm john irwin gregor kickzal john lamp anurag mendhekar chris maeda cristina videira lope jean marc loingtier aspect orient program ecoop object orient program volum lectur note comput scienc springer berlin heidelberg tom janssen rui abreu arjan van gemund zoltar toolset automat fault local izat proceed ieee acm intern confer autom softwar engin ase washington usa ieee comput societi gregor kiczal erik hilsdal jim hugunin mik kersten jeffrey palm william gris wold overview aspectj ecoop object orient program springer luk coutinho todman lam osborn susanto liu wong high level compil toolchain heterogen system ieee intern soc confer sept tim menzi david owen julian richardson strangest thing softwar comput ricardo nobr pedro pinto tiago carvalho joa cardoso pedro diniz lara base strategi sourc sourc transform target multicor architectur workshop compil parallel comput cpc sahoo man lap ramachandran adv adv yuanyuan zhou ing program invari detect hardwar error ieee intern confer depend system network june joa santo rui abreu lightweight automat error detect monitor collar variabl test softwar system springer axel simon rang analysi program prove absenc buffer overflow vulner springer olaf spinczyk andrea gal wolfgang schro der preikschat aspectc aspect orient extens program languag proceed fortieth intern con ferenc tool pacif object internet mobil embed applic mark william stephenson bitwis optim bitwidth data rang propag phd thesi massachusett institut technolog mit depart electr engin comput scienc david wagner jeffrey foster alexand brewer eric aiken step autom detect buffer overrun vulner ndss acm lara strategi code aspectdef input onlyprimit true var laraobj laraobject call prepareprogram call instrumentparamet laraobj onlyprimit call instrumentwrit laraobj onlyprimit call instrumentreturn laraobj onlyprimit call setupinstrument laraobj aspectdef prepareprogram select program appli aspectdef setupinstrument input laraobject var size select function appli insert includ insert rang __r_a size break select function main first_stmt appli insert range_init __r_a size natexit print_ranges_to_fil var printfunctionj function laraobject var code nfile file ndoubl inf code file fopen output code file null printf open output file return code fprintf file size var type laraobject type typeof laraobject type function continu code fprintf file type var func laraobject type code fprintf file func var vari laraobject type func code __r_a laraobject type func vari min code fprintf file vari laraobject type func vari code fprintf file __r_a laraobject type func vari min __r_a laraobject type func vari max code nfclose file return code var code printfunctionj laraobject select function main appli insert void print_ranges_to_fil code aspectdef instrumentparamet input laraobject onlyprimit select select appli onlyprimit continu var param range_upd __r_a param condit main aspectdef instrumentwrit input laraobject onlyprimit select appli onlyprimit continu var write tostr range_upd __r_a condit write aspectdef instrumentreturn input laraobject onlyprimit select appli onlyprimit continu var return tostr range_upd __r_a condit aspectdef input onlyprimit true var laraobj laraobject call prepareprogram call instrumentparamet laraobj onlyprimit call instrumentwrit laraobj onlyprimit call instrumentreturn laraobj onlyprimit call setupinstrument laraobj aspectdef prepareprogram select program appli singledeclar assignmentexpans structassignmentdecomposit unaryexpans normalizereturn aspectdef setupinstrument input laraobject var size select function appli insert includ insert rang __r_a size break select function main first_stmt appli insert range_init __r_a size natexit print_ranges_to_fil var printfunctionj function laraobject var code nfile file ndoubl inf code file fopen output code file null printf open output file return code fprintf file size var type laraobject type typeof laraobject type function continu code fprintf file type var func laraobject type code fprintf file func var vari laraobject type func code __r_a laraobject type func vari min code fprintf file vari laraobject type func vari code fprintf file __r_a laraobject type func vari min __r_a laraobject type func vari max code nfclose file return code var code printfunctionj laraobject select function main appli insert void print_ranges_to_fil code aspectdef instrumentparamet input laraobject onlyprimit select select appli onlyprimit continu var param range_upd __r_a param condit main aspectdef instrumentwrit input laraobject onlyprimit select refer write appli onlyprimit continu var write range_upd __r_a condit aspectdef instrumentreturn input laraobject onlyprimit select appli onlyprimit continu var return tostr range_upd __r_a condit freq aspectdef frequenc input reportnam onlyprimit true var laraobj laraobject call res choosevarstomonitor reportnam var varstomonitor call prepareprogram call instrumentwrit laraobj varstomonitor onlyprimit call setupinstrument laraobj aspectdef choosevarstomonitor input threshold reportnam output varstomonitor varstomonitor var reportpath report reportnam var report filetojson reportpath var total report total funcvar report var ratio report funcvar total ratio threshold funcvar aspectdef prepareprogram select program appli singledeclar assignmentexpans unaryexpans normalizereturn aspectdef instrumentwrit input laraobject varstomonitor onlyprimit var function array key array array key return true return fals select appli onlyprimit continu var key varstomonitor key var write range_upd __r_a condit write aspectdef setupinstrument input laraobject var size select function appli insert includ insert rang __r_a size break select function main first_stmt appli insert range_init __r_a size natexit print_ranges_to_fil var printfunctionj function laraobject var code nfile file ndoubl inf code file fopen output code file null printf open output file return code fprintf file size var type laraobject type typeof laraobject type function continu code fprintf file type var func laraobject type code fprintf file func var vari laraobject type func code __r_a laraobject type func vari min code fprintf file vari laraobject type func vari code fprintf file __r_a laraobject type func vari min __r_a laraobject type func vari max code nfclose file return code var code printfunctionj laraobject select function main appli insert void print_ranges_to_fil code fanin aspectdef fanin input reportnam onlyprimit true var laraobj laraobject call res choosevarstomonitor reportnam var varstomonitor call prepareprogram call instrumentwrit laraobj varstomonitor onlyprimit call setupinstrument laraobj aspectdef choosevarstomonitor input threshold reportnam output varstomonitor varstomonitor var reportpath report reportnam var report filetojson reportpath funcvar report report funcvar threshold funcvar aspectdef prepareprogram select program appli singledeclar assignmentexpans unaryexpans normalizereturn aspectdef instrumentwrit input laraobject varstomonitor onlyprimit var function array key array array key return true return fals select appli onlyprimit continu var key varstomonitor key var write range_upd __r_a condit write aspectdef setupinstrument input laraobject var size select function appli insert includ insert rang __r_a size break select function main first_stmt appli insert range_init __r_a size natexit print_ranges_to_fil var printfunctionj function laraobject var code nfile file ndoubl inf code file fopen output code file null printf open output file return code fprintf file size var type laraobject type typeof laraobject type function continu code fprintf file type var func laraobject type code fprintf file func var vari laraobject type func code __r_a laraobject type func vari min code fprintf file vari laraobject type func vari code fprintf file __r_a laraobject type func vari min __r_a laraobject type func vari max code nfclose file return code var code printfunctionj laraobject select function main appli insert void print_ranges_to_fil code comband aspectdef combineand input reportnam onlyprimit true var laraobj laraobject call res choosevarstomonitor reportnam var varstomonitor call prepareprogram call instrumentwrit laraobj varstomonitor onlyprimit call setupinstrument laraobj aspectdef choosevarstomonitor input faninthreshold freqthreshold reportnam output varstomonitor varstomonitor var faninreport filetojson report reportnam var freqreport filetojson report reportnam var isfreqgood function total threshold return undefin total threshold var isfaningood function threshold return undefin threshold var total freqreport total funcvar faninreport isfaningood faninreport funcvar faninthreshold isfreqgood freqreport funcvar total freqthreshold funcvar aspectdef prepareprogram select program appli singledeclar assignmentexpans unaryexpans normalizereturn aspectdef instrumentwrit input laraobject varstomonitor onlyprimit var function array key array array key return true return fals select appli onlyprimit continu var key varstomonitor key var write range_upd __r_a condit write aspectdef setupinstrument input laraobject var size select function appli insert includ insert rang __r_a size break select function main first_stmt appli insert range_init __r_a size natexit print_ranges_to_fil var printfunctionj function laraobject var code nfile file ndoubl inf code file fopen output code file null printf open output file return code fprintf file size var type laraobject type typeof laraobject type function continu code fprintf file type var func laraobject type code fprintf file func var vari laraobject type func code __r_a laraobject type func vari min code fprintf file vari laraobject type func vari code fprintf file __r_a laraobject type func vari min __r_a laraobject type func vari max code nfclose file return code var code printfunctionj laraobject select function main appli insert void print_ranges_to_fil code combor aspectdef combineor input reportnam onlyprimit true var laraobj laraobject call res choosevarstomonitor reportnam var varstomonitor call prepareprogram call instrumentwrit laraobj varstomonitor onlyprimit call setupinstrument laraobj aspectdef choosevarstomonitor input faninthreshold freqthreshold reportnam output varstomonitor varstomonitor var tempset var faninreport filetojson report reportnam var freqreport filetojson report reportnam funcvar faninreport faninreport funcvar faninthreshold tempset funcvar var total freqreport total funcvar freqreport var ratio freqreport funcvar total ratio freqthreshold tempset funcvar tempset total undefin funcvar tempset tempset funcvar funcvar aspectdef prepareprogram select program appli singledeclar assignmentexpans unaryexpans normalizereturn aspectdef instrumentwrit input laraobject varstomonitor onlyprimit var function array key array array key return true return fals select appli onlyprimit continu var key varstomonitor key var write range_upd __r_a condit write aspectdef setupinstrument input laraobject var size select function appli insert includ insert rang __r_a size break select function main first_stmt appli insert range_init __r_a size natexit print_ranges_to_fil var printfunctionj function laraobject var code nfile file ndoubl inf code file fopen output code file null printf open output file return code fprintf file size var type laraobject type typeof laraobject type function continu code fprintf file type var func laraobject type code fprintf file func var vari laraobject type func code __r_a laraobject type func vari min code fprintf file vari laraobject type func vari code fprintf file __r_a laraobject type func vari min __r_a laraobject type func vari max code nfclose file return code var code printfunctionj laraobject select function main appli insert void print_ranges_to_fil code 