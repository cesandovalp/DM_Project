softwar base fault recoveri adapt divers cot multi core processor andrea ller tobia rauter johann iber georg macher christian kreiner institut technic informat graz univers technolog austria abstract grow demand embed system satisfi high comput perform cost effici lead trend commerci shelf hardwar high integr design increas suscept hardwar error caus radiat induc soft error wear effect fault fulli prevent system cope effect time trend multi core processor embed system approach achiev fault toler multipl core establish redund present literatur typic homogen redund techniqu consid toler soft error lack appropri reaction mechan restor system case perman hardwar fault propos basic idea enhanc multi core dundanc techniqu cost effici autom introduct divers execut softwar replica autom softwar divers techniqu attract attent secur domain propos techniqu recov perman hardwar fault achiev adapt softwar execut perman fault mitig introduct cyber physic system cps play central role critic applic domain industri control tomot healthcar consequ reliabl avail system con cern time cyber physic system face increas demand high comput perform autonom drive lead move commerci shelf cot hardwar allow design state art compon guarante high perform vulner hardwar fault increas continu structur downscal semiconductor industri soft error radiat perman error manufactur process variat age expect occur futur establish solut provid requir reliabl base harden compon hardwar base approach cost commerci processor design man ufactur safeti critic applic typic offer limit comput perform featur softwar base approach error detect correct come increas advent mult core technolog hardwar redund techniqu typic impos high hardwar overhead attract exampl tripl modular redund tmr mechan implement triplic critic task three core compar year focus hanc reliabl multi core system redund typic consid homogen redund binari replic redund core consid tmr system allow detect transient perman fault core perman fault core mask remain core produc correct result typic solut core system high parallel processor involv deactiv faulti core shift calcul spare core limit resourc embed system power product cost compos multi core processor low number core core consequ spare core limit fail concept order increas avail desir recov identifi perman malfunct core softwar base approach establish heterogen redund multi core platform pro pose push multi core redund techniqu level introduc divers redund execut cost effici main idea exploit concept autom softwar divers publish secur domain increas fault recoveri capabl redund implement multi core system high level concept capa biliti techniqu dynam chang divers execut recov detect faulti state main idea adapt execut divers program replica perman hardwar fault bypass background work heal system order deal unforeseen event idea soft ware adapt receiv attent exampl heal system autonom detect recov faulti state chang configur techniqu complex server system method embed system recov unhealthi state challeng hardwar fault bypass modifi hardwar techniqu applic typic cot hardwar offer limit flexibl remain sophist softwar base method handl unforeseen scenario caus fault fault toler multi core redund current develop trend comput platform move increas frequenc singl core increas parallel multipl core die multi core technolog velop challeng strong potenti support cost effici creation fault toler onlin error detect techniqu multi core processor compon propos techniqu classifi period built test dynam verif anomali detect redund execut approach focus built test supplementari techniqu modular redund fault detect techniqu multipl process element process data well exampl dual modular redun danci dmr element consequ error detect element promin techniqu tripl modular redund tmr identifi faulti element major vote lead higher avail system continu execut mask faulti element voter singl point failur high reliabl techniqu clas sifi spatial tempor redund techniqu spatial redund calcul perform distinct hardwar compon tempor redund indic calcul perform multipl time typic redund establish multi core realiz spatial redund exploit inher replic processor core cost effici achiev hardwar redund multi core system support fact full util core feasibl unus processor core execut redund thread main hardwar base approach redund execut propos literatur lockstep configur redund multithread rmt loos lockstep typic lockstep proach ident core tight coupl cross check perform cycl instruct execut compar hardwar base redund techniqu softwar base approach provid low cost altern impos smaller hardwar overhead offer higher level flexibl approach realiz softwar base redund multi core system propos author propos replic task three core execut comparison core offer high reliabl romain servic provid adapt replic execut present work consid adapt number parallel redund execut runtim propos increas adapt adapt softwar execut present approach homogen redund detect hardwar fault oper variant ident includ systemat fault fail fault detect reliabl redund system depend reliabl version dissimilar propos divers heterogen multi core architectur increas fault toler approach offer limit portabl propos realiz divers hardwar softwar idea divers softwar compon replica multi core environ present describ generat divers softwar replica autom autom softwar divers autom softwar divers asd techniqu introduc divers execut program autom divers gain attent secur domain techniqu diversifi deploy program version forc attack target system individu contrast version program divers introduc manual interact human loop common approach realiz autom softwar diversif random creat divers execut diver siti execut denot divers time divers output divers memori usag contrast static techniqu generat multipl divers program version dynam softwar divers techniqu binari deploy introduc divers oper detail autom softwar divers provid dynam softwar divers dynam random method creat singl version execut program perform execut differ techniqu adapt interfac implement interfac adapt work top code protect modifi layout interfac chang implement core code interfac implement diversif alter interfac implement portion code resist approach program random instrument mutat implement aspect program load oper ate system run dynam autom softwar divers realiz oper system chang user pro gram appropri mechan built program tabl present exampl dynam asd techniqu present literatur techniqu research secur purpos assum adapt approach reach reliabl goal dynam reconfigur appli heal establish bypass detect fault well establish method principl data express transform origin input produc input redund variant execut distort introduc express remov comparison initi data program failur region express input data circumv faulti region static softwar divers static softwar divers tech niqu automat generat multipl divers program vari ant base sourc code distribut program main approach perform program transform diversifi sourc code version gen erat introduc divers compil link tabl exampl adjust paramet dynam softwar divers method random method paramet memori gap object gap size chang base address program base address chang base address librari stack base address permut order routin call variabl order call permut order variabl order variabl insert nop instruct number nop data express data divers paramet express algorithm tabl exampl dynam autom divers techniqu goal propos literatur level diversif time diversif goal tio tio lit data random memori layout random program encod random place diversif instruct locat random binari stir stage main approach divers introduc perform code transform mean base common sourc code basi divers sourc code variant generat second diversif compil link sourc code basi generat divers binari addit techniqu propos secur domain well reliabl domain indic high potenti cross fertil techniqu exampl simpl automat introduc divers execut compil compil option generat multipl program version divers compil enhanc secur system increas hardwar softwar fault toler exampl static asd techniqu investig fulfil secur reliabl goal techniqu target secur diversifi softwar program deploy target expect basic concept techniqu high potenti increas resili hardwar fault toler redund configur multi core system propos execut divers replica multi core system recov detect fault describ techniqu repres method appli creat divers replica techniqu introduc divers execut divers softwar execut will time characterist memori cell processor instruct goal diversif method fault recoveri faulti region bypass adapt execut iii fault recoveri approach system model target applic techniqu cyber physic system embed devic form control applic devic typic oper perform input acquisit process data come sensor input data process output propag physic actuat focus increas reliabl process task consid embed devic consist multi core processor assum softwar base mechan manag redund calcul task place describ task high reliabl requir execut redund multipl core calcul finish separ core execut accept test compar redund calcul major voter vote involv singl point failur protect techniqu achiev propos previous work exampl propos softwar base test ensur need compon execut vote procedur function checkpoint fault free case overhead test low compon vote mechan check assum modular redund system mean ident modul synchron order perform vote output vote scheme implement basic major vote minimum number modul free error requir major count techniqu allow core fail addit assum modul fail independ sake simplic tmr system major vote exampl remain paper tmr system toler fault core faulti core identifi consid embed devic connect network offer possibl perform remot updat remot server updat binari execut embed devic assum trustworthi remot server guarante method exemplifi fault model scenario address occurr perman fault core execut redund calcul core core core core core voter redund calcul redund calcul redund calcul cot multicor cpu cach regist alu instruct decod regist cell fault instruct decod fault memori cell fault wrong content memori cell fault bus cach address decod fault wrong cell address fault bus cach fig system overview consid fault type program execut input decis mechan program output alarm signal random paramt error diversif control fig basic structur aasd base monitor compon diversif control decid reconfigur random mechan main program fig consid fault sourc cpu core element recommend iec safeti standard regist intern cach instruct decod address calcul transfer adapt autom softwar divers concept overview implement fault recoveri propos well concept recoveri block main idea recoveri block execut altern version function primari altern function pass accep tanc test approach extend concept generat divers replica program automat runtim establish switch static generat program version chang dynam random fig basic principl adapt autom softwar divers aasd system typic fault toler system program perform intend function system decis mecha nism monitor program execut detect anomali indic alarm decid output forward applic voter implement addit propos add compon denot diversif control creat feedback loop compon manag aasd collect analyz data detect anomali propos design program random execut paramet adjust runtim tabl diversif control decid alter execut chang multipl paramet asd configur propos learn detect anomali adapt softwar replica identifi problemat diversifi execut describ asd method identifi faulti core adapt dynam divers mechan core increas error_counteri error_counteri thresholddynam program execut random paramet execut sbsts hardwar fault migrat spare core return failur except send hardwar fault descript remot server binari generat send binari cps devic binari generat sucess send failur cps devic program execut binari cps devic server fig basic procedur fault recoveri redund multi core system task color green correspond decis mechan orang task execut diversif control fig fault recoveri procedur fig overview propos fault recoveri procedur voter detect mismatch output valu execut redund core error counter correspond faulti core increas subsequ execut core perform correct assum observ error caus transient fault error counter set number error thresholddynam observ core regard faulti fault recoveri approach appli adapt execut adapt dynam divers method trend observ anomali appli adjust paramet set dynam divers featur analyz namic divers paramet adjust present basic exampl implement mechan assess method introduc memori gap adjust size chang size runtim start address variabl chang size memori gap repres reconfigur paramet chang diversif control diversif control decid chang replica size memori gap adapt preliminari indic techniqu effect circumv faulti memori region exampl simpl bitcount applic approach bypass introduc address decod fault mask mechan tabl iii dynam divers techniqu fault type expect toler adapt dynam divers approach prove fault toler recov fault static divers mechan softwar base test appli identifi fault propos softwar base test find consid fault type describ iec safeti standard test identifi fault fault definit fault locat type fault remot server exampl fault regist bit chang stuck stuck fault fault fault recoveri procedur stop fault handl appli exampl calcul map tabl iii expect fault type address exampl candid dynam divers techniqu regist cell fault instruct decod fault memori cell fault address decod ing fault memori gap chang base address data random memori layout random program encod random spare core alarm forward fault sourc code power remot server generat variant softwar bypass fault static divers techniqu detail generat describ generat success embed devic receiv binari binari execut faulti core remot binari generat static divers method fig illustr binari generat procedur remot server generat divers execut sourc code static diversif method appli method includ sourc code mutat compil execut diversifi usag divers optim flag compil stage influenc amount mask regist instruct decod fault propos exploit leverag effect order generat binari bypass fault exampl gcc compil allow regist ffix reg fault regist faulti flag exploit generat binari regist propos multipl static divers techniqu place combin divers techniqu appli generat binari binari generat mask fault probabl mask coverag binari generat procedur success binari embed devic propos procedur determin probabl fault type mask evalu consequ fault fault mask crash corrupt data propos appli fault simul propriat fault inject techniqu qemu base fault inject framework describ framework support deploy commerci shelf processor architectur allow softwar base fault simul softwar instrument framework featur inject memori cell fault address decod fault instruct decod fault regist fault addit input test set repres typic input valu need process input stimuli faulti hardwar simul output compar golden refer output generat correct hardwar assum probabl inject fault mask approxim proport sourc code static random variant binari fault simul input test set fault descript mask coverag threshold binari generat success binari generat success random variant fig basic procedur binari generat remot server static divers techniqu appli order binari mask fault probabl mask coverag figur detail step fig run fault mask total amount test input stimuli challeng high fault recoveri potenti propos techniqu pose challeng determin depend applic fulfil real time requir requir determinist execut introduct divers compli cate difficult task determin worst case execut time implement overhead impact fault detect latenc resourc requir perfor manc memori low find appropri asd techniqu pre sent potenti asd techniqu studi requir investig feasibl approach multi core system exhaust evalu effect fault detect capabl techniqu kind applic requir adapt tactic tactic analyz trend detect malfunct way adapt execut redund replica investig conclus increas complex threaten system reliabl complex embed system cope increas number hardwar fault propos opportun inher multi core redund achiev resili typic field focus homogen redund execut propos introduc divers execut softwar version develop overhead low offer adapt execut runtim propos auto mate softwar divers approach promi ing approach present literatur consid context redund multi core system emphas cross fertil secur reliabl multi core highlight idea autom softwar divers techniqu fault recoveri futur plan evalu adapt autom soft ware divers techniqu specif complex applic multi core system implement prototyp hope encourag research explor techniqu base promis challeng idea refer alhakeem munk lisicki parzyjegla parzyjegla muehl framework adapt softwar base reliabl cot core processor intern confer architectur comput system sagges wang zbigniew kalbarczyk experi mental studi soft error microprocessor ieee micro gizopoulo psaraki adv ramachandran hari sorin meixner biswa vera architectur onlin error detect recoveri multicor processor design autom test europ mar bel rtig engel oper system support redund multithread acm intern confer bed softwar emsoft brun serugendo gacek gies kienl litoiu ller pezz shaw engin adapt system feedback loop softwar engin adapt system jafri piestrak sentiey pillement design fault toler coars grain reconfigur architectur case studi intern symbosium qualiti electron design macher ller armengaud kreiner automot embed softwar migrat challeng multi core comput platform ieee confer industri informat mushtaq bertel survey fault toler techniqu share memori multicor multiprocessor system ieee intern design test workshop dec bolchini miel sciuto adapt approach onlin fault manag core architectur design autom test europ confer exhibit ieee unger parmerasa multi core execut parallelis hard real time applic support analys euromicro confer digit system design sep larsen homescu brunthal franz sok autom softwar divers ieee secur privaci magazin pullum softwar fault toler techniqu implement springer larsen brunthal franz automat softwar divers ieee secur privaci april baudri monperrus multipl facet softwar divers develop year bhatkar duvarney sekar effici techniqu comprehens protect memori error exploit usenix secur symbosium chew song mitig buffer overflow oper system random homescu neisius larsen brunthal franz profil guid autom softwar divers ieee acm interna tional symposium code generat optim ammann knight amman kngiht data divers approach softwar fault toler ieee transact comput barrant ackley forrest stefanov random ize instruct set emul acm transact system secur pappa polychronaki keromyti smash gadget hinder return orient program place code random ieee symposium secur privaci hiser nguyen tuong hall davidson ilr gadget ieee symposium secur privaci scott kumar velusami childer davidson soffa retarget reconfigur softwar dynam transla tion intern symposium code generat optim wartel mohan hamlen lin binari stir random instruct address legaci binari code acm confer comput communic secur cowan hinton walpol cracker patch choic analysi post hoc secur techniqu nation system secur confer wheeler fulli counter trust trust divers doubl compil phd thesi georg mason univers gaiswinkl gersting autom softwar divers hardwar fault detect ieee confer emerg technolog factori autom ieee sep ller kajtazov mer kreiner evalu divers compil softwar fault toler design autom test europ ller rauter iber kreiner divers compil microprocessor fault detect tempor redund system ieee intern confer depend autonom secur comput ieee bel rtig engel oper system support dundant multithread proceed tenth acm intern confer embed softwar acm ulbrich hoffmann kapitza lohmann schro der preikschat schmid elimin singl point failur softwar base redund depend comput confer edcc ninth european ieee rauter ller kajtazov kreiner privileg base remot attest integr assur lightweight client acm workshop iot privaci trust secur iso intern organ standard iec func tional safeti electr electron programm electron safeti system intern organ standard std ller rauter iber kreiner adapt dynam softwar divers feedback base resili ieee ifip intern confer depend system network ller rauter iber kreiner dynam softwar divers resili redund embed system softwar engin resili system springer intern publish ller scho nfelder kajtazov kreiner fie fault inject framework evalu test cot base safeti critic system ieee microprocessor test verif workshop ller macher rauter iber kreiner virtual fault inject framework reliabl awar softwar develop ieee ifip intern confer depend system network workshop 