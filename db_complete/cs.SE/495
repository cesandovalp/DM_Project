constrain applic behaviour generat languag paul van der walt inria bordeaux franc abstract write platform reactiv applic enforc oper constraint difficult approach way experi report detail proach embed dsl structur permiss program plicat domain develop compon applic will consist mission specif evalu tailor languag final implement applic written specialis environ precis api call associ permiss grant prototyp platform target domain mobil pute implement racket demonstr resourc access control camera address book prevent leak privat data racket extrem effect platform design program ming languag time librari demonstr approach allow reus inter compon munic layer conveni applic develop high level build block structur applic increas control platform owner prevent class error develop categori subject descriptor softwar engin softwar architectur domain specif architectur languag pattern general term languag secur keyword sport equip introduct program framework intend third parti develop trend includ mechan restrict access featur wise constrain behaviour applic case platform android aim protect sensit data contact list physic locat undesir applic access resourc hardwar data need function correct exampl email applic legitim requir access internet calcu lator applic rais suspicion case android restrict enforc time check permiss file call manifest user accept instal time framework adopt declar form declar driven framework general speak identifi class program fra mework widespread call declar driven framework framework tradit static program framework form declar input exampl abound includ android sdk manifest file facebook plugin sdk requir permiss grant pri ori declar vari great express spectrum simpl resourc permiss access list friend camera express rule control flow applic list compon implement exampl diasuit individu compon applic well subscript relat laid declara tion access resourc grant compon level rich declar encourag separ ponent provid relat clariti user potenti flow compar simpler list permiss diagram potenti flow extract specif present graphic format exampl problem identifi number shortcom system mention frequent declar list permiss check time leav user guess actual behaviour applica tion fact check dynam lead applic halt android develop access forbidden resourc exist static approach exist hand general solv prob lem resourc access control exampl check requir compon implement shortcom address approach low static check resourc access base extern dsl current implement dia suit generat java boilerpl code declar tailor specif applic generat proach extend declar languag involv modifi standalon compil general gener ate code difficult debug inconveni work hand languag build platform provid racket allow simpl implement embed dsl featur racket applic develop provid express construct specif implement applic rais level abstract allow implement static guarante resourc access equival diasuit maintain parser compil machineri parallel framework infrastructur report demonstr languag extens system allow easili deriv tailor pro gram environ applic declar decreas effort applic develop control platform owner best knowledg implement edsl rise tailor edsl racket code present report http pwalt outlin overview work introduc platform chosen basi prototyp well exampl applic implement devel oper system write exampl applic detail declar unfold languag extens final discuss strength weak approach racket conclus present work work close resembl diasuit inspir approach relat advantag disadvantag thorough dealt literatur generat framework vari degre frame work depend declar adopt general address demonstr threat user safeti approach propos address leak parallel remot execut remot dynam taint analysi run natur incur privaci concern well depend connec tion approach bear similar aim work xiao restrain devel oper mobil applic limit extern dsl base touchdevelop extract flow static analysi present user decid resourc usag reason power promis approach prefer declar flow path priori constrain develop heavi static analysi extract develop general purpos languag familiar learn dsl aspect implement compar altern provid tower lang uag style solut good trade figur sens comput control paradigm lustrat adapt declar resourc context control type bool int string resourc sourc srcname action actnam type context context ctxname type ctxtinteract ctxtinteract requir getdata provid srcname ctxname getdata publishspec getdata srcname ctxname publishspec publish control control ctrname contrinteract contrinteract provid ctxname actnam figur declar grammar keyword bold termin ital rule normal font restrict develop versatil implemen tation case studi diasuit model prototyp declar driven framework dedic sens comput control architectur style describ taylor pat tern ideal fit applic interact extern environ scc applic typic domain build autom robot avion automot applic model fit mobil comput sens comput control model depict fig architectur pattern consist three type compon entiti correspond man resourc hardwar virtual suppli data context compon process filter aggreg inter pret data control compon control environ trigger action entiti compon reactiv decompo sition applic process block data flow data reachabl explicit isol natur well suit domain mobil comput user entrust sensit data applic dubious trustworthi declar languag minim declar languag associ diasuit present fig adapt keep essenti construct applic specif list declar resourc camera gps defin implement platform inher resourc arbitrari part applic contrast basic system call queri current applic domain context control declara tion includ interact contract prescrib interact context activ compon request requir publi cation compon provid compon activ context compon allow pull data denot option note context pull requir contract final context requir publish trigger defin publishspec note requir context publish specif activ pull return valu direct compon poll activ control compon send order actuat interfac compon access actnam exampl print text screen send ing email diasuit compil declar written extern dsl set java abstract class declar compon execut environ class extend abstract class method header deriv interact con tract constrain input output implement compon addit access resourc pass argument method develop resourc capabl pass method framework approach allow advantag static check java compil applic conform dec larat declar direct sensit resourc compon access giv ing applic develop concis api work exampl compon access network api deal camera scope contrast android system api call increas amount develop mind disad vantag extern dsl requir separ compil maintain impli versatil invent wheel symbol barrier argu fowler exampl applic run exampl prototyp mobil applica tion pretend distribut free support advertis allow user captur pictur view colour filter fig advertis will download internet prevent develop leak pictur privat intent malici advertis provid fact threat frequent includ third parti advertis librari exfiltr privat data access specif impo sibl pictur leak web bitmap process compon separ advertis compon implement exampl process pictur makead camera compos display screen pictur pictur pictur string string figur simplifi schemat exampl applica design pictur leak note pull request curv arrow parameteris return valu expand defin context procpic languag implement procpic lambda provid modul implement lang exp declar macro expans develop code lang exp figur architectur provid declar transform tailor langu age implement implement macro case declar compon inspir diasuit approach framework generat specif step plement provid embed dsl write specif includ construct defin con text control grammar illustr fig specif evalu ate turn form languag extens implement applic program viron creat develop tailor construct applic built includ api precis match compon prototyp consid advert develop applic develop expect advertis librari provid form snippet code will includ rest implement code advertis code special analys subject constraint code provid velop access entiti declar exampl specif specif render racket exampl applic fig syntax close match diasuit declar languag introduc reflect graphic represent applic specif file lang exp defin context makead string requir defin context processpictur pictur provid camera always_publish defin context composedisplay pictur provid processpictur makead maybe_publish defin control display provid composedisplay screen figur complet declar exampl plicat racket prototyp fig semant declar explain semant term point view applic develop keyword defin context defin control applic evalua tion will result macro implement bind plement compon identifi develop conveni pro vide implement term framework take care inter compon communic dec larat point view framework pro vide control implement execut static check determin term provid applic develop conform specif declar componentc add case implement macro develop form implement bind lambda function implement provid argument implement subject racket function contract conflict interact contract compon diasuit function con tract racket thing function contract racket flexibl annot definit modul export perform arbitrari test time input output function exampl function annot contract ensur map integ integ function receiv produc integ contract will trigger error contract deriv interact contract fig activ condit defin argument function provid argument type posedisplay contract start bitmap activ processpictur publish bitmap imag requir argument context acti vate pull realiti bitmap shorthand bitmap contract builder check object type bitmap implement file lang exp implement composedisplay lambda pic getadtxt publish nopublish canva bitmap pic adtxt getadtxt cond string adtxt nopublish magic overlay adtxt pic publish canva remain implement term figur implement composedisplay context data sourc action determin option argument function closur provid proxi surround time guard access resourc conveni devel oper queri resourc allow framework enforc permiss action control provid mechan contract closur output type note paramet return compon request exfiltr data full contract contract closur void input type full contract void void final void reflect control return valu public requir determin argu ment function contract context correspond output type context publish handl continu flexibl number return statement provid always_publish continu function correspond public final contract void expect return type maybe_publish continu publish publish contract void output type second continu simpli return control framework develop choos publish second publish continu contract void void contract accept valu time error develop provid continu implement applic fig implement context composedisplay compos modi fie imag advertis text essenti velop implement bind implement identifi introduc specif fig implement lambda term obey contract specif exampl composedisplay context contract bitmap lang implement implement modul modul defin impl provid impl modul modul defin impl provid impl evalu figur separ compon modul code left expand form access lexic scope modul webcamimpl modul composedisplay modul racket gui defin contract composedisplay impl bitmap string bitmap void void lambda pic getadtxt publish nopublish canva bitmap pic adtxt getadtxt cond string adtxt nopublish magic overlay adtxt pic publish canva provid composedisplay impl figur code snippet tran form submodul result evalu fig shade code simpli term velop provid fig string bitmap void void activ processpictur publish imag access makead compon turn string option publish imag account maybe_publish specif gument correspond publish bitmap void publish void continu lambda func tion provid develop fig conform contract advertis compon turn empti string develop decid publish string overlaid pictur develop publish composit imag prevent implement compon commu nicat condon pathway implement macro wrap submodul illustr fig lexic scope access surround term export implement top level modul result wrap fig code grey precis term provid fig isol implemen tation compon prevent develop access constitut leak note alongsid snippet rest implemen tation declar compon provid modul modul implement languag aris speci ficat written implement modul check time exact implement term declar focus singl context implement illustr transforma modul webcamspec defin composedisplay context composedisplay interactioncontract processpictur makead maybepublish pic provid composedisplay modul contract defin composedisplay contract bitmap string bitmap void void provid composedisplay contract defin struct contract composedisplay struct spec context control implem contract provid composedisplay struct implement composedisplay defin syntax implement composedisplay stx syntax case stx implement composedisplay modul composedisplay submodul racket gui requir submod contract provid composedisplay impl defin contract composedisplay impl composedisplay contract requir submod composedisplay submodul set impl composedisplay add hashmap composedisplay struct composedisplay composedisplay impl provid renam modul inner modul defin syntax modul inner figur simplifi expans specifi cation concentr composedisplay fig code correspond blue box fig tion code develop provid implement declar compon conveni function export modul specif illustr macro function framework time user interfac applic develop deal framework elucid framework implement broken number main part oper defin context defin control macro pansion implement macro time support librari tie implement provid coher system mechan explain global implement detail elid tabli need identifi introduc transform phase modul scope complic invit reader experi prototyp code function modul time librari modul declar step develop declar compon applic defin context defin control keyword specif provid file start lang exp stanza entir syntax tree specif pass function export modul function pattern match specif pass occurr defin keyword handler comput store associ contract instanti struct will store implement introduc identifi store list syntax transform environ persist effect system present compil time storag will check implement modul compon impl ment identifi implement declar specif illustr fig expans composedi play declar fig simplif modul import breviti element specif decla ration term elid helper macro transform implement term implement correspond generat macro function check declar compon correspond implement term final omit generat syntax modul inner specifica tion instruct note definit allow implement modul specif modul languag lang exp direct mark start implement modul call webcamspec refer languag specif written fig leav code composedisplay context bind introduc develop chose compon represent declar deriv contract submodul append racket contract implement expect adher modul keyword add term name submodul creat submodul defin tailor struct will hold implement composedisplay field tag correspond contract interest implement keyword wrap implement indepen dent submodul explain submodul will access surround scope contract submodul import form shorthand syntax sim ilar quot produc syntax object decor lexic sourc locat attach argument expans time crucial substitut pattern variabl bound syntax case pattern match result case implement term left scope submodul requir submodul bring composedisplay impl scope add hash map hash map associ name compon implement note defin struct forc implement term adher contract side develop manag evalu implement modul pile error impli valid specif implement allow develop execut frame work implement framework time librari mundan discuss code racket simpli load file load evalu repl evalu discuss applic develop present reason polish coher system implement applic stage allow platform user insight mischief applic assum specif distribut applic present user option format fig softwar compil local server user trust ensur implement conform specif observ racket function pro gram languag languag build platform shine mix match creat languag best fit nich glue modul gether common time librari provid racket allow great flexibl control lang mechan precis dictat syntax semant languag aspect fore racket lot potenti emerg domain declar driven framework limit issu solv propos approach feasibl real trickiest part ensur commu nicat compon consequ allow develop extern modul code develop requir modul execut arbitrari code communic channel modul muta ble state prototyp chose allow import modul realist applic accept imagin ing librari pars json process imag number benign task decis platform provid librari safe white list potenti leak eval form develop easili obfusc behaviour desir fact arbitrari import call inspect implement thing eval reject syntact bind hidden renam approach robust highlight racket melpa version greg hen wonder racket mode emac drracket allow compon function pure solv vulner type racket will offer solut futur puriti analysi project list finicki implement macro describ conceptu simpl turn pretti difficult practic identifi syntax transform phase macro debugg drracket power leav lot desir exampl fail complet expand implement modul present fig code work hand finer control macro unfold benefici result pessimist spite short come difficulti prototyp demonstr power languag racket pro grammer capabl easili modifi syntax provid custom interpret prototyp demonstr clean separ concern enforc structur final implement futur work number clear avenu improv work first note chosen platform model exampl easi build activ specif dsls domain modular proach flexibl choos racket extens implement languag develop frtime type racket librari decid provid languag modul chang minor exampl type racket support puriti analysi futur attract option allow confid unwant communic compon state approach introduc wild safe modul import mechan devis aspect dealt practic integr approach applic store user download applic local plat form stand develop submit specif implement modul sourc code applic store compil ensur contract modul tamper applic store user trust distribut compil ver sion applic compat time librari local user devic clear desir situat commerci applic develop submit compil version soft ware case allow modifi contract render applic unsaf conclus conclus address problem sourc access control protect privaci user sensi type racket plan https plt racket wiki type racket plan hope tive data inspir diasuit approach demonstr embed dsl applica tion unfold program environ place restrict applic develop prototyp perfect solut problem demonstr novel approach resourc control versatil natur entir compos bed dsls offer user insight sensit resourc compar current wide spread mobil platform futur interest explor racket librari type racket hope achiev reliabl restrict current avenu pursu respons vulner current prototyp aris evalu dynam construct expr sion allow modul import acknowledg special ludov court camill man ano andrea eng hamish ivey law proofread earli draft work provid invalu comment construct critic provid anonym review equal appreci refer cassou balland consel lawal leverag softwar architectur guid verifi develop sens comput control applic proceed intern confer softwar engin ics york usa acm cassou bruneau consel balland tool base develop methodolog pervas comput applic ieee tran softwar eng chrome develop develop chrome extens declar permiss https extens declare_permiss access dave mark iphon develop explor iphon sdk apress dimoula findler flanagan felleisen correct blame contract scapego acm sigplan notic volum acm elish yao ryder jiang static assur analysi android applic virginia polytechn institut state univers tech rep enck gilbert chun cox jung mcdaniel sheth taintdroid flow track system real time privaci monitor smartphon communic acm feiler facebook applic mcgraw hill york usa edit findler clement flanagan flatt krishnamurthi steckler felleisen drscheme program environ scheme funct program flatt submodul racket proceed intern confer generat program concept experi gpce york usa acm flatt culpepp darai findler macro work journal function program fowler domain specif languag pearson educ gibler crussel erickson chen androidleak detect privaci leak android applic technic report tech rep davi horspool tillmann touchdevelop program voic apress edit https doc book mann starostin framework static detect privaci leak android applic proceed annual acm symposium appli comput acm roger lombardo medniek meik android applic develop program googl sdk beij snoyman develop web applic haskel yesod safeti driven web develop steven gibler crussel erickson chen investig user privaci android librari taylor medvidov dashofi softwar architectur foundat theori practic wiley publish tobin hochstadt flatt advanc macrolog implement type scheme proc workshop scheme function program acm press tobin hochstadt amour culpepp flatt felleisen languag librari acm sigplan notic volum acm wei gomez neamtiu faloutso permiss evolut android ecosystem proceed annual comput secur applic confer acm xiao tillmann hndrich halleux moskal user awar privaci control extend static flow analysi goedick menzi saeki editor ase acm 