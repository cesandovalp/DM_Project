pac learn base verif model synthesi fang chen academia sinica chiao hsieh academia sinica nation taiwan univers leng√°l academia sinica brno univers technolog tsung lii academia sinica nation taiwan univers ming hsien tsai academia sinica bow yaw wang academia sinica farn wang nation taiwan univers abstract introduc novel techniqu verif model synthesi sequenti program techniqu base learn regular model set feasibl path program test model correct behavior exact learn algorithm requir check ing equival model program difficult problem general undecid learn procedur base framework correct pac learn sampl correct guarante express term error probabl confid ver ific result procedur output model correct guarante preliminari periment encourag case perform matur softwar verifi introduct formal verif softwar aim prove softwar properti rigor mathemat reason con sider exampl statement assert spec ifi variabl posit assert formal verifi violat execut runtim formal verifica tion techniqu comput expen sive sophist heurist develop improv scalabl techniqu formal verifi real softwar consid impract common techniqu ensur qualiti industri soft ware test error softwar detect explor ing softwar behavior inject test vector test guarante softwar free error consid assert assert system behavior explor test vector unsound conclud posi tive techniqu propos improv coverag inher featur softwar test establish program properti conclus paper propos novel learn base approach aim balanc scalabl coverag exist soft ware engin techniqu order scalabl softwar test techniqu explor subset program behavior appli machin learn ing general observ program behavior better mantic coverag techniqu allow softwar engin combin scalabl test high coverag formal anal yses improv qualiti assur process hope work reduc dichotomi formal practic softwar engin techniqu technic set assum program notat program assert program assert boolean express intend true time encount program execut program assert task check assert evalu true execut principl problem solv examin program execut prohibit inspect execut exhaus tive infinit simplifi analysi group set program exe cution path control flow graph control flow graph cfg deriv syntact structur program sourc code execut pro gram correspond path control flow graph measur complet softwar test cfgs coverag instanc ratio plore edg cfg test program branch coverag ratio explor branch cfg note syntact measur code coverag approxim program execut rough execut dif fer number iter simpl program loop branch coverag compu tation drastic full syntact code coverag execut explor softwar test observ program execut travers path cfg perform sequenc oper valu consid path correspond program execut cfg path char acter sequenc decis execut travers condit statement cfg call sequenc decis decis vector cision vector feasibl repres infinit program execut infeas rep resent sequenc branch choic occur execut program check asser tion evalu true execut suffic examin feasibl decis vector check repres assert violat program execut feasi biliti decis vector determin shelf satisfi modulo theori smt solver set feasibl decis vector general difficult pute exact appli algorithm learn framework correct learn construct regular approxim set framework correct pac learn queri learn algorithm queri target concept construct hypothes con struct hypothes valid sampl pothesi invalid wit counterexampl learn algorithm refin invalid hypothesi wit queri hand hypoth sis conform sampl pac learn algorithm return infer hypothesi statist guarante approach adopt pac learn algorithm queri infer regular languag approxim set fea sibl decis vector program grasp statist guarante provid pac learn ing consid task check defect larg shipment uniform sampl size shipment impract check item confid defect probabl select deter mine random chosen item chosen item good method report defect probabl argu simpl method err proba biliti suppos random chosen item test defect defect probabl fact thesi probabl random item good lower method incorrect probabl lower simpl method report incorrect probabl equiva lentli result method pac correct argument pac learn algorithm return regular set approxim set feasibl decis vector program error probabl confid choic infer set decis vector repres assert violat program execut techniqu conclud verif statist guarante correct learn base approach find balanc mal analysi test explor program behavior exhaust techniqu infer approxima tion set feasibl decis vector queri sampl set feasibl decis vector general comput pac learn queri return regular set approxim quantifi guarante approxim model statist guar ante program verif proxim model pac correct prove free assert violat conclud pro gram pac correct statist guarante syntact code coverag softwar test ing recal applic pac learn work decis vector decis vector turn repres program execut techniqu find assert violat statist guarante softwar engin semant coverag program execut convent syntact coverag help softwar engin estim qualiti softwar implement prototyp name pac man pac learn base model synthes analyz pro cedur base program verifi cpacheck cbmc concol tester crest evalu proto type benchmark recurs categori comp encourag find error crest provid quantifi guarante accompani faith approxim model exampl challeng program verifi concol tester approxim model reus verifi program set program assert contribut summar pac learn algorithm appli synthes faith approxim model set feasibl decis vector program model aspect program veri ficat detail hard adopt approach handl type system black box system proxim model level abstract function call graph develop verif procedur base proxim model pac learn procedur integr advantag test verif test techniqu col lect sampl catch bug pac learn gorithm general sampl approxi mate model analyz verif techniqu statist guarante preliminari set program variabl set function predic symbol set set transit formula consist well form order logic formula transit formula denot formula replac free variabl repres program singl procedur control flow graph extend notion pro gram multipl procedur procedur call con trol flow graph cfg graph xfp finit set node consist disjoint set branch node sequenti node initi node return node set error node xfp set formal paramet finit set edg condit hold branch node exact node transit formula return sequenti node exact node return node successor assum successor branch ing node order intuit correspond branch correspond branch call successor successor spectiv call transit transit formula note definit cfg allow describ nondeterminist choic common model environ specif nondeterminist choic branch node repres defin transit transit formula path cfg sequenc path feasibl path formula satisfi error path task analysi check feasibl error path sequenc call word length word length empti word denot symbol denot concaten languag set introduc function decis map path sequenc decis branch node travers formal decis function path defin recurs decis decis decis decis decis transit formula transit formula path decis decis vector lift decis set path defin decis vector decis decis finit automaton move tupl consist finit alphabet finit set state initi state transit rela tion set accept state transit call transit word accept state symbol transit languag defin accept languag regular finit automaton finit automaton terminist transit relat function finit automaton exist determin istic finit automaton dfa pushdown automaton pda tupl finit input alphabet finit set state finit stack alphabet initi state set final state transi tion relat denot transit simplifi defin configur pair word accept exist quenc configur sequenc symbol hold languag defin accept overview overview verif pro cedur cfg program goal check pac automata learn algorithm mechan teacher resolv mem bership queri resolv equiv alenc queri sampl feasibl error decis vector system pac correct mem equ counterexampl figur compon verif procedur feasibl error path concret consid set feasibl path set error path call languag decis decis alphabet feasibl decis vec tor error decis vector program correct intersect decis decis empti feasibl error path represent languag decis feasibl decis vector easi general lan guag regular comput pro cedur construct candid finit automaton approxim decis set feasibl decis vec tor infer correct pac onlin automata learn algorithm pac learn statist guarante correct claim pac correct confid deviat decis proper explan term hand straightforward convert finit automaton accept set error decis vector decis intuit state correspond node initi state correspond initi node accept state correspond error node edg sequenti node translat transit branch node edg successor translat transit symbol high level overview learn procedur figur procedur structur consist main compon learn algorithm ask teacher kind question mem bership decis vector feasibl equiv alenc candid finit automaton pac correct queri teacher resolv queri time observ test decis vec tor correspond feasibl error path pose queri learn algorithm iter construct pac correct approxim decis pro cedur find feasibl error decis vector onlin learn base techniqu devis mechan teacher answer queri learn algorithm check membership queri membership set decis feasibl decis vec tor easi exampl decis vec tor correspond path unfold cfg shelf solver decid feasibl automata learn algorithm infer candid finit automaton check proxim decis pac correct compar decis direct employ sampl base approxim equival tech niqu pac learn general unsound tech niqu statist guarante correct ness infer model detail pac automata learn explain pac automata learn algorithm find approxim decis clas sical pac automata learn algorithm rect purpos program verif modifi handl case program error classic pac automata learn algorithm modifi requir exact automata learn algorithm modif rout describ classi cal exact automata learn algorithm regular languag describ modifi verif explain relax requir exact automata learn algorithm infer approxim decis exact learn regular languag suppos target regular languag scription direct access automaton learn gorithm infer automat finit automa ton recogn set onlin learn algorithm assum teacher access answer type queri membership queri mem word member equival queri equ languag finit automaton equal counterexampl equal word symmetr differ learn algorithm will construct finit automa ton interact teacher algorithm work iter erat perform membership queri teacher queri proceed construct candid automaton final equival queri equ algorithm termin finit tomaton teacher return word dis tinguish target languag learn algorithm modifi conjectur erat mention learn algorithm guarante find finit automaton recogn number queri polynomi number state mini mal dfa recogn rest paper denot onlin automata learn simpli automata learn learn program verif context program verif case decis case pro cedur return feasibl error path program set learn base verifica tion learn algorithm modifi turn counterexampl case system error modifi learn algorithm specif classic learn algorithm pose equival queri equ check exist decis vector test decis case test identifi decis vector decis differ decis valid counterexampl classic learn algorithm refin conjectur automaton case test identifi decis vector decis feasibl error decis vector report user case modifi learn algorithm pose equival queri equ teacher teacher answer membership equival queri decis modifi automata learn algorithm properti lemma assum decis regular set modifi automata learn algorithm eventu find counterexampl decis decis eventu find finit automaton rec ogniz decis decis observ program ror behavior modifi learn algorithm identi cal classic exact automata learn algorithm explain relax quirement exact automata learn algorithm tain pac automata learn algorithm suitabl program verif correct learn techniqu learn automata discuss previous assum teacher abil answer equival queri assumpt invalid procedur check decis undecid angluin substitut equival queri sampl stati tical claim differ infer set target set assum probabl distribut element univers hypothesi form probw hypothesi term probw denot probabl formula invalid chosen random distribut call error paramet term confid denot probabl hypothesi correct pac valid probw confid set automata learn consid uni vers target regular languag task equival queri equ chang check exact equival express check ing note symmetr differ oper check proxim equival check formula pac valid check probw con fidenc fix candid pac correct pac valid teacher check pac correct pick ing sampl test equival queri learn ing algorithm number sampl need establish pac correct angluin infer set guarante pac correct approach term cor rect pac learn resolv equival queri sampl current discuss design mechan teacher equival queri provid pac correct guarante defin probabl distribut set feasibl decis vector decis formal definit qualiti candid automaton measur probabl decis vector chosen random decis accord ing distribut contain sampl mechan offer distribut satisfi condit decis vector decis sampl sampl independ ident dis tribut iid distribut fix probabl sampl element depend pick sampl paragraph introduc random input sampl mechan treat nondeterminist choic mal paramet program input variabl sume input variabl finit domain set initi valu input variabl yield path cfg program base observ random sampl work pick uniform random set initi valu input variabl program obtain correspond decis vector travers cfg program pick valu sam pling mechan form distribut proba biliti decis vector chosen proport number program path correspond issu random input sampl suffer well fact coverag input valu good approxim program path coverag pend size input domain program vari abl path neglig probabil iti select instanc bit integ probabl true branch test equal situat wors input variabl unbound domain extrem high coverag rate input variabl val path explor explor repeat order sampl mechan better distribut program path develop techniqu random explor path concol tester effici explor decis vector correspond rare path describ techniqu prove properti rest concol test concol test test approach explor path cfg program search bug algorithm decis vector generat dom pick input valu find decis vector flip decis chosen path obtain input valu lead program execu tion path mechan rare path greater chanc explor select decis flip depend search strategi tester procedur concept batch sampl batch sampl defin set decis vector size paramet con colic tester explor path search strategi denot distribut element tain procedur restart concol tester batch sampl previous point guarante probabl batch sampl remain execut procedur assum concol tester state format restart distribut iid meet condit defin princip function concol tester guarante con dition met general stochast equival sampl mechan batch sampl properti requir pac correct guarante learn algorithm recal set feasibl decis vector pro gram decis candid automaton infer learn algorithm distribut teacher answer equival queri equ guarante confid probw decis sampl techniqu batch sampl univers distribut ement distribut chang provid guarante modif learn algo rithm algorithm answer guarante prob decis confid term pac correct denot form guarante teacher receiv equival queri equ concol tester batch sampl batch sampl teacher check exist decis vector definit decis teacher answer teacher check error decis vector report feasibl error decis vector return learn algorithm refin conjectur lemma number batch sampl test equival modifi pac correct guarante lemma error confid param eter target languag decis vector batch sampl hold pac correct base fact properti modifi learn algorithm lemma corollari corollari error confid paramet target languag decis vector batch sampl hold program pac correct resolv membership queri describ membership queri mem algorithm figur discharg teacher set feasibl path cfg learn algorithm ask membership queri mem teacher check decis vector set feasibl decis vector decis answer queri teacher construct path exact occurr branch node prefix branch node hold decis branch node recal feasibl path satisfi teacher simpli construct formula path check satisfi shelf constraint solver altern teacher check feasibl tran late path sequenc program statement condit remov substitut assert val condit symbol executor soft ware model checker final construct program reachabl altern option easier plement suffer perform penalti error decis vector set error path cfg construct finit automaton accept set error decis vector decis cfg automaton will intersect automaton repres set feasibl path determin cfg feasibl error path definit xfp cfg defin error trace automaton finit automaton defin successor successor inform state node transi tion edg read symbol state cor respond branch node perform transit state correspond sequenti node error node read remain symbol accept input word straightforward accept exact set decis vector correspond error path lemma xfp cfg set error path error trace automaton hold decis describ extens procedur program procedur call repres set error decis vector finit automaton set imprecis discuss extens repres set error path program procedur call pushdown automata main procedur summar procedur cfg verifi program size batch sampl error paramet confid paramet goal procedur find fea sibl error decis vector pac correct case accompani answer pac correct regular represent set feasibl decis vector set feasibl path distribut defin sampl mechan set error cision vector detail flow chart procedur figur bottom figur describ learn algorithm extend onlin automata learn algorithm addit test verif scribe automata learn algorithm output candid send teacher equival queri equ test feasibl error decis vector case report error case feasibl return learn algorithm refin conjectur top figur describ design chanic teacher task teacher answer queri learn algorithm membership queri form mem answer construct path correspond decis vector associ path formula solv constraint solver equival queri hand discharg concol tester check decis vector set batch sampl belong languag decis vector exist conclud program pac correct test hold report feasi ble error decis vector case hold feasibl decis vector decis languag current conjectur return automata learn algorithm refin conjectur continu iter learn loop general procedur guarante termin procedur termin report error teacher learn algorithm feasibl error pac automata learn algorithm build check path formula mechan teacher sampl set decis vector build refin model learn algorithm counterexampl counterexampl system pac correct feasibl error decis vector decis feasibl error decis vector mem equ equ start figur detail flow chart verif procedur decis vector program report incorrect teacher approv approxim finit tomaton procedur report approxim model decis pac correct guar ante turn impli program pac correct lemma theorem theorem error confid ramet set feasibl path cfg procedur termin approx imat finit automaton program pac correct corollari corollari suppos procedur report program pac correct concol tester search strategi batch size procedur confid concol tester will find error probabl properti modifi automata learn ing algorithm decis regular set gorithm guarante termin return counterexampl decis find proxim model decis disjoint handl procedur call extend formal cfgs han dle program multipl procedur pda repres error decis vector set issu finit automata repres error decis vector set return procedur call finit automaton rememb unbound num ber return point case recurs procedur overapproxim nondetermini tic jump return point overapproxim imprecis yield numer spurious error contrast pdas repres set error decis vector precis hand finit automaton repr approxim set feasibl decis vector decis consequ pda oper oper handl proce dure call membership queri compon remain unchang set multipl procedur extend cfgs procedur call assum set procedur name cfg call cfgc defin graph xfp xfp defin cfg extend set edg apart local cfg edg procedur call edg gin gout gin gout sequenti node gin gout compon correspond mula pass actual valu formal paramet formula gin pass return caller procedur formula gout extens defin program set cfgcs prog biject map cfgcprog prog assign procedur name cfgcs abus notat prog denot cfgcprog prog denot cfgc procedur program prog assum cfgcs prog pairwis disjoint set node assum entri point main paragraph inform descript extend definit path program consist singl cfg program consist set cfgcs dedic entri point procedur call edg cfgc call inlin cfgc substitut cfgc call procedur jprogk denot set cfgs prog main perform recurs call sequenc inlin remov left procedur call edg output cfgcs path prog sequenc exist cfg jprogk hold encod error decis vector pushdown automata describ construct pda encod set error trace consid extens general idea finit automata describ main differ add jump cfgcs correspond pro cedur call edg stack rememb state pda return procedur call ter minat cfgc xfp xfp denot correspond ing compon denot set sequenti branch node consid program prog construct error path automaton pda prog main defin successor successor gin gout prog lemma prog program set error path prog error path pda prog hold decis implement creat prototyp tool pac man implement verif procedur describ paper tool third parti librari tool cil intermedi languag convert verifi program set cfgcs construct error trace pushdown automaton libamor librari perform oper automata test membership empti comput intersect learn automata implement vari ous learn algorithm libalf librari mem bership queri discharg concol tester men tion altern option decis vector tool cfg program generat path correspond decis vector path pass form sequenc program statement softwar model checker cpacheck check feasibl switch model checker checker cbmc deal equival queri modifi concol tester crest generat batch decis vector describ crest fail generat decis vector program execut execut termin abnorm modifi crest finit prefix execut case issu crest encount process condit compos boolean connect expand condi tion cascad statement correspond boolean express make program longer harder learn address modifi crest process condit boolean connect insid expand increas perform precis analysi implement three optim improv perform prototyp intersect bad automaton recal modifi learn algorithm describ check intersect lan guag conjectur bad languag empti check empti pda difficult finit automaton speed procedur build finit automaton approxim error languag check empti test finit automata check case previous test fail counterexampl learn algorithm equival queri return counterexampl automata learn algorithm guarante valid counterexampl conjectur tomaton preliminari experi mechan teacher return counterexampl consecut iter decid check valid counterexampl membership queri learn algorithm proceed empti test case valid will return learn ing algorithm refin conjectur handl membership queri main bottleneck approach time spent membership queri implement soft ware model checker cpacheck check path feasibl membership queri invok cpacheck system call java virtual machin will creat compon cpacheck load time consum mem bership queri effici modifi cpacheck server mode check singl path invok experi present experiment justifi claim paper evalu perfor manc prototyp recurs categori comp benchmark recurs categori consist trivial exampl ackermann carthi euclidean algorithm par ticip tool solv exampl correct exampl error perform experi error param eter confid size batch sampl prototyp exampl three time experi provid statist data calcu late base averag three run explicit state set timeout match rule comp comparison learn algorithm evalu approach automata learn ing algorithm implement libalf librari activ onlin automata learn algorithm implement libalf column kearn vazirani rivest schapir search strategi provid crest chose random branch strategi experiment tabl tabl comparison learn algorithm algorithm col verifi bug bad crest fals posit fals negat timeout mem queri equ queri total time mem queri time tabl comparison search strategi crest search strategi rbs cds verifi bug fals posit fals negat timeout mem queri equ queri total time time sampl algorithm best perform solv exampl tech niqu solv particip recurs cat egori comp winner main reason perform differ tree base data structur store queri compar learn algorithm tabl base structur quir number membership queri maintain consist tree base structur learn ing algorithm number error path empti test intersect conjectur bad automaton crest experi time spent membership queri perform bottleneck tabl membership queri total execut time algorithm comparison search strategi evalu perform algorithm crest search strategi effici random branch strategi rbs short control flow direct strategi cds short test perform prototyp strategi select learn algo rithm experi tabl tabl averag time sampl cds rbs total time main reason cds explor untouch branch point aggress rbs requir overhead experi conform evalu crest restart justifi modif pac correct guarante experi run crest batch decreas bug hunt capabl compar perform tabl evalu crest restart exampl number batch number erat find bug worst scenario best sce nario set exampl batch size restart batch iter batch iter timeout timeout ballrajamani batch iter batch iter batch iter timeout timeout batch iter tabl comparison crest search strategi term qualiti learn automata total number test batch equ queri strategi rbs cds evalu accept rbs ratio evalu accept cds ratio crest scenario restart decis vector restart perform periment buggi exampl recurs categori calcul exampl crest bug timeout period tabl chose rbs search strategi experi cfg strategi result list worst result scenario best result scenario receiv three run worst run scenario find overhead bug best run scenario evalu qualiti learn automata perform term run time compar qualiti learn automata produc prototyp strategi success fulli verifi bug free exampl evalu qualiti learn automata exampl crest search strategi batch sampl test accept learn automaton averag valu run tabl evalu strategi strategi generat test batch sampl tabl qualiti automata learn strategi observ guarante procedur sampl coverag higher experiment qualiti tomata produc procedur match theoret expect final test generat crest cover automata learn algo rithm rbs crest rbs scenario restart decis vector restart learn automaton scenario generat decis vector check accept automa ton total scenario observ accept batch size total test vector yield correct scenario serv accept vector correct notic matter strategi learn automaton accept decis vector pro duce crest discuss advantag program model statist guarante instanc model reus verifi set properti pro gram assum properti verifi scribe error path automaton learn automaton verifi program properti pac correct guarante case exist decis vector test feasibl report feasibl error decis vector continu learn algorithm counterexampl refin conjectur paper focus check valid program assert verif step handl make intersect conjectur automaton error path automaton test empti proce dure general sophist safeti prop erti replac test test exampl check properti program consecut decis path statist guarante correct receiv answer extend alphabet program label check tempor properti late label label reach decis label reach extens work learn sequenc feasibl function call decis vector lead compact model contrast current proach case alphabet model learn will function name program larger size alphabet work set harder answer membership queri program path compos function call perform complex travers loop branch call make problem check ing feasibl program path undecid benefit approach principl extend black box system verif model syn thesi observ behavior environ find pattern statist distribut input base design sampl mechan assumpt behavior environ remain unchang verifi synthes model system sampl distribut work exact automata learn algorithm propos angluin improv peopl concept correct pac learn ing propos valiant semin work idea turn exact learn algorithm pac learn algorithm appli pac learn test consid fore work consid program manipul graph check output graph program properti bipartit color work consid assert check general special properti work con sider theoret aspect problem author estim maxim number queri requir infer model black box machin context differ ent work discuss sampl distribut effici produc desir guar ante bound path coverag paper algorithm infer model error trace program decis vector author learn sequenc function call lead error teacher implement bound model checker guarante correct bound author pac learn techniqu work approach statist model check provid statist guarante mention troduct statist model check assum model techniqu generat model program sta tistic guarante model analyz var ious techniqu reus verifi properti appendix inlin cfgc consid procedur call edg gin gout vij vrj vej xfp assum prog vik vrk vek xfpk inlin prog pro gram prog vij vrj vej xfp set fresh node disjoint set node cfgc prog exist biject vek set edg defin gin gout inln prog smallest infinit set prog close inlin main inln prog program prog procedur call edg cfgc prog main inlin ing prog abus notat uniform denot program prog inln prog map node cfgcs prog origin node prog node prog assum restrict ident relat denot jprogk set cfgs procedur call edg start set inln prog collect cfgcs main function inlin prog set prog main prog inln prog final transform cfgcs cfgs jprogk stitut procedur call edg edg extend definit path path prog sequenc exist cfg jprogk cfg path refer softwar verif competit http dana angluin learn regular set queri counterexampl comput dana angluin queri concept learn machin learn dirk beyer erkan keremoglu cpacheck tool configur softwar verif proc cav springer benedikt bollig peter habermehl carsten kern martin leucker angluin style learn nfa proc ijcai ijcai benedikt bollig joost pieter katoen carsten kern martin leucker daniel neider david piegdon libalf automata learn framework proc cav volum lncs springer jacob burnim koushik sen heurist scalabl dynam test generat proc ase ieee comput societi martin chapman hana chockler pascal kess daniel kroen ofer strichman michael tautschnig learn languag error proc atva lncs springer appear fang chen azadeh farzan edmund clark yih kuen tsay bow yaw wang learn minim separ composit verif proc taca edmund clark daniel kroen flavio lerda tool check ansi program proc taca volum lncs springer jamieson cobleigh dimitra giannakopoulou corina pasareanu learn assumpt composit verif proc taca patric godefroid nil klarlund koushik sen dart direct autom random test proc pldi ode goldreich shari goldwass dana ron properti test connect learn approxim journal acm juli michael kearn umesh virkumar vazirani introduct comput learn theori mit press axel legay delahay saddek bensalem statist model check overview proc volum lncs springer oliv matz axel miller andrea potthoff wolfgang thoma erich valkema report program amor georg necula scott mcpeak shree prakash rahul westley weimer cil intermedi languag tool analysi transform program proc ronald rivest robert schapir infer finit automata home sequenc comput koushik sen darko marinov gul agha cute concol unit test engin proc fse koushik sen mahesh viswanathan gul agha statist model check black box probabilist system proc cav volum lncs springer lesli valiant theori learnabl communic acm neil walkinshaw assess test adequaci black box system specif proc ictss volum lncs springer paolo zuliani andr platzer edmund clark bayesian statist model check applic stateflow simulink verif formal method system design 