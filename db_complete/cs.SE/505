pdfauthor survey linguist structur applic level fault toler vincenzo florio chris blondia univers antwerp depart mathemat comput scienc perform analysi telecommun system group middelheimlaan antwerp belgium interdisciplinari institut broadband technolog gaston crommenlaan ghent ledeberg belgium structur express fault toler provis applic softwar central topic paper structur techniqu answer question incorpor fault toler applic layer comput program manag fault toler code provid control complex relev factor introduct design fault fact increas complex distribut softwar justifi simpl coher effect structur express fault toler applic softwar text defin base structur attribut applic level fault toler structur qualit assess compar respect mention result provid elabor survey state art applic level fault toler structur categori subject descriptor softwar engin softwar architectur languag domain specif architectur program languag languag clas sific special applic languag perform system fault toler manag comput system softwar manag softwar develop softwar mainten softwar engin design tool techniqu softwar librari softwar engin distribut mainten enhanc portabl general term design languag reliabl addit key phrase languag support softwar implement fault toler separ design concern softwar fault toler reconfigur error recoveri introduct fault toler focus decad hardwar fault toler devis number effect ingeni hardwar solut cope physic fault year approach consid effect solut reach requir avail data integr demand complex comput servic true hardwar fault toler requir tackl problem consid adequ toler fault fulfil depend design goal complex softwar system includ avoid remov toler fault oper level includ applic layer effect solut hardwar pradhan oper system den middlewar omg layer acm journal month vincenzo florio chris blondia problem effect system structur express fault toler provis applic layer comput program open best knowledg detail critic survey solut exist paper author attempt fill gap target topic linguist structur applic level fault toler tackl approach oper applic level fault toler model base transpar task replic guerraoui schiper corba omg likewis text includ approach ebnenasir kulkarni focus autom transform fault intoler program fault toler program reason choic exponenti complex method current effect state space target program limit kulkarni arora goal text pinpoint consequ ineffici solut aforement problem well increas awar optim solut current lack simpl coher system structur softwar fault toler engin provid design effect support fulfil goal maintain usabl servic portabl fault toler softwar manifest true bottleneck system develop structur paper sect explain reason system level fault toler provid set key desir attribut hypothet perfect linguist structur applic level fault toler alft detail survey modern solut qualit assess respect set attribut person consider conjectur miss way achiev final summar conclus comparison review approach rational earli day modern comput extent accept outag wrong occur main role comput basic fast solver numer problem today critic associ task depend comput requir strong guarante properti avail data integr consequ growth complex critic techniqu assess enhanc justifi relianc servic provid comput system techniqu lessen risk associ comput failur bound extent consequ excerpt report eniac activ weik idea depend comput power fluctuat power failur continu oper direct transform main imposs time long error free run period short consider improv troubl free oper time remain hour week year avail acm journal month linguist structur applic level fault toler fig fault classif scheme paper focus fault toler ensur servic fulfil function presenc fault aviz ieni aviz ieni fault defect imperfect lack hardwar softwar compon generic defin adjudg hypothesis error fault origin system boundari intern fault environ extern fault intern fault activ produc error dormant latent dormant fault activ fault activ process environ fault latenc defin length time occurr fault appear correspond error length time occurr fault remov fault classifi call viewpoint lapri lapri lapri phenomenolog natur phase creation occur renc situat respect system boundari persist combina tion rise fault class process defin fault class sum maris fig class partit three group combin fault class physic fault perman intern physic fault class concern fault origin hardwar compon continu activ typic acm journal month vincenzo florio chris blondia exampl fault correspond worn compon temporari intern physic fault intermitt fault bon daval typic intern physic defect activ depend pointwis condit perman extern physic fault fault induc system physic environ temporari extern physic fault transient fault bondav fault induc environment phenomena emi design fault intent malici perman temporari design fault basic trade off introduc applic layer design time typic exampl insuffici dimens underestim size field communic accident perman design fault call systemat fault bohrbug flaw algorithm systemat turn error presenc input condit initi state instanc uncheck divisor result divis error accident temporari design fault heisenbug bug heisen berg elus charact systemat fault evid determinist behaviour bug depend subtl combin sys tem state environ interact fault temporari extern oper human accident fault includ oper fault oper correct perform role system oper temporari extern oper human malici fault neglect interact incorrect problem sibley exampl includ chosen password bad system paramet set temporari extern oper human malici fault class clude call malici replic fault fault occur repli cate system inconsist process suppos provid ident longer softwar fault toler fault toler concentr year hardwar fault toler devis number effect ingeni hardwar structur cope fault johnson time approach consid need order reach requir avail data integr mand modern complex comput servic research realiz true randel randel question hardwar fault toler approach pursu cite paper state noteworthi exampl bad dimens address rais acm journal month linguist structur applic level fault toler hardwar compon failur sourc unreli comput system decreas signific compon reliabl improv softwar fault increas preval steadili increas size complex softwar system complex suppli modern comput servic lie softwar hardwar layer lyu lyu huang kintala wiener randel state thing reach exploit power conceptu tool manag complex flexibl effect devis hierarchi sophist abstract chine tanenbaum translat implement softwar high level comput languag lie top softwar strata devic driver layer basic servic kernel oper system time support involv program languag partit complex stack softwar layer allow implementor focus exclus high level aspect problem allow manag greater greater degre complex transpar complex system develop number complex algorithm execut hardwar time simultan progress system state hypothesi involv abstract machin actual hardwar fault real life fault occur correspond deviat jeopardis function propag layer appropri avoid place remov toler fault fault occur applic layer abstract machin top softwar fault origin design time oper interact environ extent consequ fault origin hardwar oper system well exampl case arian flight inquiri board report consequ fault applic ultim brought system crash general observ higher level abstract higher complex algorithm play consequ error prone involv real abstract machin conclus full toler fault complet fulfil depend design goal complex softwar applic includ avoid remov toler fault work level includ applic layer paper focus time detect recoveri fault mechan resid cooper applic layer softwar fault toler applic layer softwar fault toler provis locat applic layer support studi major failur experienc modern comput system softwar fault includ locat applic layer intend program execut context complet contain program perform specif function direct user express run acm journal month vincenzo florio chris blondia applic layer lyu lyu aviz ieni aviz ieni instanc nrc report total number outag switch system softwar fault nrc mod ern applic softwar system increas network distribut system client server applic characteris loos coupl architectur global structur general prone complex tempor natur interleav messag comput distribut softwar system amount verif valid test elimin fault applic complet confid availabil iti data consist applic kind huang kintala assumpt altern effect increas softwar reliabl incorpor applic softwar provis softwar fault toler randel argument justifi addit softwar fault toler applic layer widespread adopt reusabl softwar ponent approach object orient compon base middlewar servic orient provid design effect tool compos sys tem cot object librari third parti compon web servic instanc object orient applic built reusabl ponent sourc unknown applic develop mention approach foster capabl deal higher level plexiti softwar time eas encourag softwar reus big posit impact develop cost turn applic sort collect reus pre exist block third parti reliabl compon impact reliabl user applic unknown point green defin art creat reliabl applic shelf softwar compo nent green case arian flight well exampl improp reus softwar sever inquiri board report convinc argument exclud applic layer fault toler strategi call argument sys tem design principl introduc saltzer reed clark principl state function reliabl file transfer complet correct implement knowledg help applic stand endpoint under system instanc communica tion network applic level fault toler strategi under hardwar oper system strong impact perform extraordinarili lesli lamport efficaci synthesis quotat distribut system machin heard arian programm reus long test softwar arian softwar thorough test compliant arian specif specif arian dormant design fault unravel simpli oper condit arian arian failur entail loss euro lann acm journal month linguist structur applic level fault toler reliabl communic system guarante packet lost duplic corrupt deliv wrong addresse reduc burden applic program ensur reliabl instanc reliabl file transfer applic program perform transfer suppli file transfer specif reliabl guarante conclud pure hardwar base oper system base solut fault tole ranc characteris higher degre transpar fulli capabl provid complet toler fault user applic reli sole hardwar oper system develop partial satisfi solut requir larg amount extra resourc cost char acteris poor servic portabl saltzer siewiorek swarz strategi problem key properti conclus justifi strong alft consequ approach alft devis three decad chapter survey long period hint plexiti design problem under alft engin includ incorpor fault toler applic layer comput pro gram fault toler provis support manag fault toler code problem problem system structur softwar fault toler propos randel state appropri structur techniqu incorpor set fault toler provis applic softwar perform simpl coher well structur poor solut problem result huge degre code intrus case applic code address function requir applic code address fault toler requir mix larg complex applic softwar great complic task develop requir expertis applic domain fault toler negat repercuss develop time cost expect mainten code function fault toler provis complex cost error prone complex softwar product increas detriment resili fault conclud respect problem ideal system structur guarante adequ separ function acm journal month vincenzo florio chris blondia fault toler concern design choic fault toler provis support condit adequaci syntact structur host provis well quotat whorf efficaci captur concept languag shape determin explain sect optim answer problem requir high degre redund rapid consum larg amount redund time increas cost reduc reliabl conclud devis syntact structur offer straightforward support larg set fault toler provis aspect ideal sys tem structur alft properti will call syntact adequaci final observ aspect alft architec ture fault toler code manag compil time well time evid statement observ number choic pertain adopt fault toler provis paramet tempor redund strategi consequ anal ysis environ applic deploy depend target environ set extern pairment affect applic vari consider principl straightforward port exist code comput system port servic suppli code requir proper adjust ment mention choic paramet adopt provi sion florio blondia effect support manag parametris fault toler code general mainten guarante fault toler softwar reus dynam manag fault toler provis paramet requir satisfactori solut problem motiv sect ideal fault toler code adapt current environ satisfactori manag approach over increas complex applic detriment depend call properti adapt refer collect properti structur attribut alft approach alft survey provid system structur solv mention problem three structur attribut order provid qualit assess respect instanc applic move domest environ characteris higher electro magnet interfer emi reason assum number replica protect resourc increas acm journal month linguist structur applic level fault toler applic requir structur attribut constitut sens base perform assess major conclus survey survey approach capabl provid best combin valu three structur attribut applic domain specif domain object orient distribut applic satisfactori solut devis partial solut exist instanc deal class distribut parallel applic base object model matter fact efficaci captur lyu call situat softwar bottleneck system develop lyu evid urgent systemat approach assur softwar reliabl system lyu effect address problem cite paper lyu remark develop requir techniqu softwar reliabl engin major challeng comput engin softwar engin engin disciplin fault toler redund complex well result shannon tell unreli channel set reliabl channel increas degre redund trade reliabl redund channel author observ fault toler system fault toler general result strategi effect exploit form redund time hardwar redund johnson redund cost penalti attach address weak failur semant span failur behaviour effect translat higher reliabl requir larg amount extra resourc impli high cost penalti consum larg amount extra resourc translat rapid exhaust extra resourc instanc lamport set minimum level redund requir toler byzantin failur greater requir toler failur simplest algorithm describ cite paper modular redund system withstand singl byzantin failur system exploit redund withstand three crash fault kind fault powel occurr crash fault system strict byzan tine failur semant exhaust redund pendabl redund system suppli servic crash failur semant system surviv occurr crash fault hand system subject byzantin fault fail redund conclud level redund trade complex failur mode number type fault toler acm journal month vincenzo florio chris blondia capabl effect fault toler structur dynam adapt dif ferent environment provid satisfactori answer addit complex burden jeopardis plicat ideal complex custom architectur applic contrari embed applic complex failur semant cover failur mode implicit promot complex requir implement recoveri mechan complex iti detriment depend system sourc design fault isol complex user applic allow cost effect verif valid test process unfeas applic level author conjectur satisfactori solut design problem manag fault toler code present sect translat optim manag failur semant respect involv penalti conjectur linguist structur characteris high adapt better suit cope mention problem current approach applic level fault toler conclus drawn sect system fault toler includ provis fault toler applic layer comput program context problem system structur alft propos critic survey state art embed fault toler applic layer literatur class method approach embed fault toler provis applic layer comput program describ approach point posit negat aspect respect structur attribut defin sect applic domain exhaust list system project implement approach conclus drawn sect effect approach recognis mention approach deriv well establish softwar fault toler lyu refer singl version multipl version softwar fault toler dealt sect third approach describ sect base metaobject protocol rive domain object orient design embed servic fault toler fourth approach translat develop custom high level distribut program languag hanc pre exist languag kind describ sect aspect orient program fault toler structur techniqu discuss sect final sect describ approach base special recoveri task monitor execut user task quot horn captur well relev role environ respect achiev requir qualiti servic overlook risk softwar engin environ will design anticip acm journal month linguist structur applic level fault toler singl multipl version softwar fault toler key requir develop fault toler system avail replic resourc hardwar softwar fundament method ploy attain fault toler multipl comput fold replic three domain time repetit comput space adopt multipl hardwar channel call lane adopt multipl version softwar aviz ieni characteris proach fault toler notat resembl classifi queue system model kleinrock mean execut hardwar channel program fault toler system call simplex cite paper singl version softwar fault toler singl version softwar fault leranc basic embed user applic simplex system error detect recoveri featur atom action jalot campbel checkpoint rollback elnozahi except handl cris tian adopt applic layer requir design concentr physic locat sourc code applic specif order perform user comput strategi fault toler occur result size problem address increas fortiori translat increas size user applic induc loss transpar maintain portabl increas develop time cost partial solut loss portabl higher cost develop librari framework creat strict softwar engin process exampl approach present efto librari swift system efto librari efto florio emb ded fault toler supercomput esprit project aim project investig approach add fault toler emb ded high perform applic flexibl cost effect efto librari implement parsytec system parsytec distribut memori mimd supercomput consist process node base powerpc microprocessor dedic high speed link modul router adopt efto librari target embed parallel plicat plug hierarch layer system structur basic compon depict fig base level distribut net server main task mimick miss respect posix standard oper system func tional remot thread creation acm journal month vincenzo florio chris blondia level upward detect tool layer set parameteris function manag ing error detect refer dtool basic compon plug embed applic depend efto suppli number dtool watchdog timer thread trap handl mechan api incorpor user defin efto compliant tool third level control layer distribut applic call dir net stand detect isol recoveri network coher combin dtool ensur consist fault toler strategi system play role backbon handl fault toler element florio florio dir net regard fault toler network crash failur detector connect peripher error detector node dir net guard aliv thread requir local compon send period heartbeat sign life special compon call rint manag error recoveri interpret custom languag call florio deconinck florio fourth level applic layer dtool compon dir net combin depend mechan method guarante fault toler communic efthivoulidi tool implement virtual stabl memori florio distribut vote mechan call vote farm florio florio florio highest level present layer hypermedia distribut appli cation monitor structur state user applic flo rio applic base special cgi script kim call dir daemon continu take input dir net tran late html remot control netscap browser zawinski render html data swift system swift huang stand softwar implement fault toler includ set reusabl softwar compon watchd general purpos unix daemon watchdog timer libft librari fault toler method includ singl version implement recoveri block version program sect libckp user transpar checkpoint rollback librari file replic mechan call repl addr juv special reactiv featur watchd huang allow soft ware swift prove effici econom increas level fault toler softwar sys tem residu fault toler cost full elimin lyu small overhead introduc case huang kintala rejuven huang bao offer tool period grace termin applic restart erron intern state transient fault wipe turn failur acm journal month linguist structur applic level fault toler fig structur efto librari light gray oper system user applic dark gray layer pertain efto fig fault toler program system conclus figur synthes main characterist proach function fault toler code intertwin develop deal concern time help librari fault toler provis requir applic develop expert fault toler well integr applic number fault toler provis set readi basic tool respons coher ent effect effici observ sect code mixtur function code custom error manag code acm journal month vincenzo florio chris blondia offer accept degre portabl maintain function function design concern apart conclud qualit exhibit poor separ concern general bad impact design mainten cost syntact adequaci observ fault toler provis offer user interfac base general purpos languag consequ limit achiev system structur alft support provid configur fault toler provis consequ regard adapt approach insuffici hand tool librari system user abil deal fault toler atom worri actual implement good ratio cost improv depend abil attribut introduc small overhead toolset design exist long test sophist piec softwar time invent wheel final remark principl pose restrict class applic tackl multipl version softwar fault toler describ multipl version softwar fault toler approach requir depend design version softwar system system servic function suppli piec code design develop independ softwar aim approach reduc effect design fault human mis take commit design time configur sequenti applic altern program hardwar channel base parallel execut altern program divers hardwar channel major approach exist recoveri block randel randel dealt sect second proach call version program aviz ieni aviz ieni describ sect recoveri block techniqu recoveri block implement system techniqu address residu softwar design fault aim provid fault toler function compon nest sequenti program version approach implement system suit parallel distribut program scott randel recoveri block techniqu hardwar fault toler approach stand spare describ johnson requir well explain randel fault toler base provis redund error detect error recoveri softwar redund requir simpl replic program redund design footnot report consequ well case redund design acm journal month linguist structur applic level fault toler fig recoveri block model altern execut environ charg manag recoveri cach execut support function restor state applic accept test pass user respons suppli altern accept test approach summaris fig entri recoveri block current state system checkpoint primari altern execut end accept test check primari altern accomplish object backward recoveri step revert system state origin secondari altern take task primari altern secondari altern end accept test execut strategi altern fulfil task altern execut success case error routin execut recoveri block nest case error routin invok recoveri enclos block randel except trigger altern manag fail accept test syntax recoveri block ensur accept test primari altern altern altern error note syntax explicit recoveri step carri transpar time execut effect recoveri block rest great extent coverag error detect mechan adopt crucial compon accept test failur accept test failur recoveri block strategi reason accept test simpl introduc huge time overhead retain data local regard ultim detect error exclus assert time check support under acm journal month vincenzo florio chris blondia layer buttress strategi reduc probabl accept test failur failur condit recoveri block approach altern fail termin detect time mechan recoveri block addit increas complex swift librari describ sect implement recoveri block languag includ ensur accept test primari altern elsebi altern elsebi altern ensur approach cover mention requir ment enhanc error detect coverag accept test clear requir time execut strategi solu tion base enhanc grammar pre exist program languag pascal shrivastava coral anderson impact portabl case code intrus avoid translat difficulti modifi maintain applic program terfer recoveri structur vice versa modifi maintain recoveri structur interf applic program conclud recoveri block characteris unsat isfactori valu structur attribut system structur alft base exclus recoveri block satisfi attribut final attribut observ recoveri block rigid strategi allow configur fortiori code adapt hand recoveri block adopt year applic field valid number statist experi mathemat model randel adopt sole fault toler develop complex applic case anderson failur coverag accept overhead memori space cpu time negat aspect system develop mainten cost grow monoton function system state increas complex modern comput urgent richer form structur error recoveri design diver siti randel acm journal month linguist structur applic level fault toler fig version softwar model execut environ charg manag decis algorithm execut support function user respons suppli version note decis algorithm box take care multiplex output three hardwar channel call lane version program version program nvp system built generic architectur base redund consensus system belong class class nvp defin author aviz ieni independ generat function equival program initi specif program call version develop execut parallel system constitut fault toler softwar unit depend generic decis algorithm deter mine consensus major result individu output version unit strategi depict fig develop fundament conjectur independ design translat random compon failur statist independ result guarante correl fail ure translat exhaust redund happen copi version replic softwar replic dormant softwar fault sourc version accid therac linear acceler leveson ari ane flight inquiri board report aviz ieni independ generat version reduc probabl correl fail ure number experi eckhardt theoret studi eckhardt lee assumpt correct main differ recoveri block nvp recoveri block origin form sequenti strategi nvp allow concurr execut recoveri block requir user provid fault free applic specif fectiv accept test nvp adopt generic consensus major vote acm journal month vincenzo florio chris blondia algorithm provid execut environ recoveri block allow correct output altern general purpos charact consensus algorithm nvp call singl correct model collaps accept test recoveri block nvp accept test consensus basi output altern conclus recoveri block nvp adopt year applic field includ safeti critic air born spaceborn applic generic nvp architectur base redun danci consensus address parallel distribut applic written program paradigm generic parameteris architectur real time sys tem support nvp strategi straightforward guard powel noteworthi remark version execut complex compon manag number basic function instanc execut decis algorithm assur input consist version inter version communic version synchronis enforc time constraint aviz ieni hand complex applic softwar version awar fault toler strategi excel degre transpar reach guarante good attribut mention sect cost time requir thorough verif valid test architectur complex accept charg applic compon cost effect option attribut consider provid describ coveri block hold nvp case singl fault toler strategi reason assess nvp unsatisfactori attribut adapt bad environ reach increas requir develop version cost activ time cost architectur allow dynam manag fault toler provis conclud attribut address nvp portabl restrict portabl version maintain action problemat replic valid time well perform nvp paradigm weak nvp narrow solv adopt approach call vote farm florio florio florio generic vote tool design author paper framework particip project efto sect tool work opaqu object compar user defin function function return integ repres distanc object vote user choos set predefin distanc function develop applic specif distanc function distanc endow abil assess bitwis object semant equival cours user respons suppli bug free distanc function assist simpler task number templat function suppli tool acm journal month linguist structur applic level fault toler impact negat statist independ failur clear consider appli recoveri block well adopt multipl version softwar fault toler provis impli penalti maintain portabl limit nvp support develop convent program lan guag instanc libft sect implement nvp includ nvp version block sendvot v_pointer v_size version block sendvot v_pointer v_size endvers timeout v_size agreeon v_pointer error_handl endnvp note implement extinguish potenti transpar general characteris nvp requir function code includ translat unsatisfactori attribut note execut block case carri sequenti remark adopt nvp system structur alft requir substanti increas develop mainten cost system cost function grow quadrat author nvp strategi remark cost paid gain trustworthi true deal system subject catastroph failur recal case arian flight inquiri board report risk chanc rapid exhaust redund burst correl failur caus singl design fault justifi call adopt fault toler provis nvp unit order deal case fail nvp unit figur synthes main characterist approach repli cas portion function code produc manag control compon recoveri block compon code side side function code nvp custom hardwar box hybrid case data divers special hybrid case data divers ammann knight data divers system concis describ nvp system equal replica version replica receiv acm journal month vincenzo florio chris blondia fig fault toler program system minor perturb input data hypothesi function comput replica chaotic produc output valu fed input data divers cost effect fault toler clear case vote mechan simpl major vote vote fusion algorithm lorczak typic applic data divers real time control program sensor sampl minor perturb sampl sensor prevent failur nvp system data divers reach valu structur attribut greatest advantag techniqu drastic decreas design mainten cost design divers avoid metaobject protocol reflect negat aspect point describ singl multipl ver sion softwar approach case weaken solv generic structur techniqu allow reach case adequ degre flexibl transpar separ design concern adopt metaobject protocol mop kiczal idea open implement time execut object orient languag java develop adopt program custom mantic adjust languag user requir environ mop programm modifi behaviour fundament featur method invoc object creation destruct member access transpar manag spatial tempor redun danci taylor case mop adequ instanc mop programm easili creat tripl redund memori cell protect variabl transient fault depict fig key concept mop comput reflect causal connect system meta level descript repres structur comput aspect system mae mop offer metalevel programm represent system set metaobject object repres reflect properti real object object constitut function user applic metaobject instanc repres acm journal month linguist structur applic level fault toler fig mop realiz tripl redund memori fulli transpar structur class object interact code oper map process call reific robben causal relat mop extend allow dynam reorganis structur oper system perform reconfigur error recoveri basic object orient featur inherit enhanc reusabl mechan develop approach project friend architectur support approach develop framework project friend fabr rennou fabr rennou friend stand flexibl reusabl impl mentat environ depend system project aim implement number fault toler provis replic group base communic synchronis vote van achteren meta level friend distribut applic set object interact proxi model proxi local intermediari object pos sibli replic object friend metaobject protocol provid open preprocessor control instanc creation delet state access invoc method alft architectur exploit concept metaobject protocol custom program languag report sect conclus mop promis system structur bed function concern applic level comput program mop work languag level provid modifi seman tic basic object orient languag build block object creation delet call termin class method appear match perfect proper subset fault toler provis esp cialli transpar object redund straightforward manag metaobject approach deal fault toler provis mop provid perfect separ design concern opti mal techniqu describ acm journal month vincenzo florio chris blondia fig fault toler program mop system coars grain distribut recoveri block kim welch appear suit effici implement mop techniqu work distribut macroscop level figur synthes main characterist mop approach fault toler programm defin number metaobject protocol associ method invoc grammar case time function program enter grammar case correspond protocol transpar execut protocol access represent system metaobject perform action correspond real object mop appear constitut promis techniqu transpar coher effect adopt exist mechan techniqu number studi confirm mop reach effici case kiczal masuhara experiment analyt evid allow estim practic general approach reflect capabl need form fault toler extent capabl provid convent program languag alli structur techniqu recoveri block nvp remain determin randel open question mop repres practic solut effect integr exist fault toler mechan user applic situat remind author quest novel comput paradigm parallel process capa ble deal effect widest class problem von neumann paradigm sequenti process highest degre effi cienci amount chang origin sequenti user code context concept comput grain techniqu inher problem coars grain glass macro acm journal month linguist structur applic level fault toler scopic level consid problem exclus microscop level conclud mop offer eleg system structur emb set function servic includ fault toler provis object orient program unclear set general host efficaci form fault toler remark instanc randel lippert videira lope difficult establish qualit assess attribut mop time manag librari mop reach satisfactori valu attribut best author knowledg featur languag support mop evid target applic domain object orient applica tion written languag extend mop open final remark observ cost mop compliant fault toler softwar design includ acquisit extra comp tenc experi mop design tool reific custom program languag enhanc develop fault toler languag approach work languag level enhanc pre exist program languag develop hoc distribut program languag host specif fault toler provis section cover topic enhanc pre exist program languag enhanc pre exist program languag augment grammar wide spread languag pascal direct support featur enhanc depend program recoveri block shrivastava class system base approach present arjuna sina linda constitut provis develop distribut fault toler system arjuna distribut program system arjuna object ori ent system portabl distribut program parrington shri vastava consid clever blend widespread tool techniqu idea good exampl evolutionari approach applic level softwar fault toler exploit remot pro cedur call birrel nelson unix daemon node system object server connect client object object suppli servic object server take care spawn object run case refer passiv object arjuna exploit nam ing servic client object request servic transpar effect support object migrat replic system arjuna stub generat mote procedur call remot manipul object nice featur system stub deriv automat header file applic avoid custom interfac descript languag arjuna offer programm deal atom action phase commit protocol persist object core class hierarchi acm journal month vincenzo florio chris blondia arjuna appear programm parrington statemanag lockmanag user defin class lock user defin lock class atomicact abstractrecord recoveryrecord lockrecord manag record type requir programm explicit deal tool save restor state manag lock declar applic instanc class manag atom action author state respect arjuna ask programm awar prejudici transpar separ design concern hand good design choic result effect portabl environ sina extens sina aksit object orient lan guag implement call composit filter object model modular exten sion object model sina object equip set filter messag object trap filter object filter manipul messag pass object sina languag compos filter author refer composit filter languag support meta level program reific messag concept composit filter allow implement behaviour correspond function concern sina design attach exist languag implement sina smalltalk implement glandrup extend languag call preprocessor translat sourc standard code fault toler linda system linda carriero gelernt carriero gelernt approach adopt special model communic generat communic gelernt model communic carri messag messag addresse eventu read contrari messag includ distribut virtual share memori call tupl space linda process equal read write access right tupl space sort share relat databas store withdraw special data ject call tupl linda process tupl basic list object identifi content cardin type tupl match number object object pairwis equal concern type memori cell associ object bitwis equal linda process insert read withdraw tupl block block primit read perform suppli templat tupl prototyp tupl consist constant field field assum process access miss tupl block primit enter wait state continu tupl match templat tupl tupl space allow process synchronis tupl match tem arjuna stub generat attempt compens problem auto matic case assist programm requir exampl heterogen handl convert primit type standard format understood caller receiv acm journal month linguist structur applic level fault toler plate choic actual tupl address determinist concurr execut process support concept live data structur tupl requir execut function evalu processor sens activ aliv evalu finish activ passiv output tupl enter tupl space parallel implicit linda explicit notion network number locat system processor linda employ hardwar architectur applic domain power program tool achiev excel speedup portabl issu model cover possibil iti failur instanc semant primit well defin case processor crash fault toler model origin form linda offer singl atom bakken schlicht atom execut singl tupl space oper singl atom solv problem aris mon linda program paradigm fault occur distribut vari replic worker paradigm fail bakken schlicht consequ number improv investig support fault toler parallel program linda apart design choic develop issu implement stabil tupl space replic state machin schneider consist order atom mul ticast birman bakken schlicht liskov patterson aim combin multipl tupl space opera tion atom transact bakken schlicht anderson shasha cannon dunn techniqu ple space checkpoint rollback kambhatla author propos augment linda model solv inconsist failur occur replic worker environ algorithm implement resili replic worker strategi messag pass farmer worker applic gorithm mask failur proper subset set worker florio linda describ extens exist pro gram languag greater extens requir preproc sor translat extens host languag case linda bakken schlicht pvmlinda florio linda berndt mom anderson shasha counterexampl posybl system schoina implement linda primit remot procedur call requir user suppli ancillari informa tion distinguish tupl schlicht thoma basic attempt augment andrew olsson distribut program languag mechan facilit fault toler base concept fail modul fsm fsm defin abstract unit encapsul consist number thread export number oper fsms execut oper atom fsm compos rise acm journal month vincenzo florio chris blondia fig fault toler program enhanc languag approach note case translat decompos program system complex fsms instanc replic modul time set complex fsm surviv failur failur exhaust redund fsm simpl complex fsm failur notif automat number fsms trigger proper recoveri action featur explain fsm fail processor system correct notif system stop function comput model guarante extent absenc explicit failur notif command assum process correct great simplifi program develop mask occurr fault offer guarante erron produc encourag design complex dynam failur semant sect base failur notif cours strategi fulli effect hypothesi perfect failur detect coverag assumpt fals conclus figur synthes main characterist hanc languag approach compil pictur translat produc fault toler program case pictur translat program belong class sect note clear identifi exten sion translat larger section fault toler code characterist system fault toler code indistinguish function code applic conclud state approach design fault toler hancement pre exist program languag impli explicit code intrus extens design explicit purpos host number fault toler provis singl sourc code observ explicit code intrus fault toler code gen eral easi locat distinguish function code applic attribut posit assess system belong cat egori reason observ fig conclud design mainten cost approach general characteris contrari problem host adequ structur alft complic syntax constraint host languag prevent acm journal month linguist structur applic level fault toler incorpor wide set fault toler provis syntact structur conclud case attribut reach satisfac tori valu exampl consid enhanc pre exist languag evolutionari approach portabl problem weaken extend grammar tran late plain grammar preprocessor characteris good execut effici anderson schlicht thoma approach general applic applic written rewritten enhanc languag adapt attribut general unsatisfactori time fault toler code indistinguish function code final observ remark case dealt sect stem domain distribut concurr program link fault toler issu distribut comput develop novel fault toler program languag adopt custom languag conceiv write fault toler distribut softwar discuss rest subsect argus argus liskov distribut object orient program ming languag oper system argus design support applic program bank system captur object orient natur program special kind object call guardian perform user defin action respons remot request solv problem concurr failur argus allow comput atom transact argus target applic domain transact process correl languag correl object orient languag robben adopt concept activ object defin object control synchronis incom request object object activ sens process request decid delay request accept precondit guard met instanc mailbox object refus messag buffer entri precondit function state object invoc paramet impli interact object side effect request serv precondit save buffer servic object destroy condit overflow request buffer dealt robben singl request servic object choic determinist correl commu nicat model call pattern base group communic communic advertis object object declar interest advertis subject model generat communic introduc sect object correl autonom sens react extern stimuli rise autonom oper ation motiv intern goal invok method programm choos block method fulli execut call synchron interact execut background asynchron interact cor acm journal month vincenzo florio chris blondia relat support mop effect offer transpar support transact replic checkpoint rollback implement correl consist translat plain java execut environ written java fault toler attribut grammar system model applic level softwar fault toler encount basi imper languag approach base function languag choic translat program structur allow straightforward inclus fault toler high degre transpar flexibl function model appear interest system structur soft ware fault toler base concept attribut grammar paakki paragraph introduc model ftag fault toler attribut grammar suzuki offer design larg set fault toler mechan noteworthi aspect ftag author plicit address problem provid syntact model widest set fault toler provis paradigm develop coher abstract mechan maintain linguist integr adopt nota tion optimis attribut design goal ftag ftag comput collect pure mathemat function modul modul set input valu call inherit tribut output variabl call synthesis attribut modul refer modul modul refer modul perform modul call primit modul hand primit modul requir modul perform con sequenc ftag program execut decompos root modul basic submodul appli decomposit process recurs submodul process primit modul encoun tere execut execut graph clear tree call comput tree approach present benefit order modul compos exclus determin attribut depend submodul comput tree turn straightforward parallel process linguist structur ftag allow integr number fault toler featur address rang fault design physic interact fault featur call redo redo replac portion comput tree comput instanc elimin effect portion comput tree generat incorrect result executor crash implement easili retri block recoveri block ancillari modul test origin modul behav consist specif rise redo recurs call origin modul relev featur ftag support replic concept ftag translat decomposit modul ident submodul implement function replic approach replic composit involv submodul call replica replica execut usual rule decomposit generat acm journal month linguist structur applic level fault toler fig fault toler program ftag system output origin modul depend chosen fault toler strategi output valid output output demultiplex function voter worth remark syntact chang need subtl extens interpret allow involv submodul set inherit attribut generat collat set synthesis attribut ftag store attribut stabl object base primari memori depend ing critic critic attribut transpar retriev stabl object base failur object version concept facilit develop checkpoint rollback strategi ftag unifi linguist structur effect support velop fault toler softwar conscious support widest set fault toler author report cite investig inclus fault toler featur synthesis express syntact structur ftag improv attribut widespread adopt valuabl tool condit limit accept spread function program paradigm academia conclus synthes singl meaning pictur main char acterist approach custom fault toler languag difficult design freedom translat entiti point common figur instanc synthes characterist ftag hoc develop fault toler program languag allow timal valu attribut reach case explicit control intrus fault toler code explicit encourag adopt high level fault toler provis requir depend awar design process tran late posit assess attribut contrari reason sect attribut general assess case ftag design time interpret dynam decid acm journal month vincenzo florio chris blondia target applic domain approach restrict charact istic host languag program model requir applic written host languag acqui sition novel design paradigm languag impact develop cost aspect orient program languag aspect orient program aop kiczal program method olog structur techniqu explicit address system wide level problem best code structur express conflict design goal high perform optim memori usag depend code function servic applic instanc system wide error handl protocol procedur object orient program languag requir decompos origin goal case degre depend multipl fragment scatter number procedur object program ming languag provid abstract composit mechan clean support function concern specif function goal high perform easili captur singl unit function iti offer procedur object orient languag fragment intrud unit function serv code intrus detriment maintain portabl function function servic call aspect aop term aspect tend crosscut class modul structur stay well localis unit function class increas complex system main idea aop convent languag procedur object orient function program languag code basic function program call compon program basic function unit call compon call aspect orient languag implement aspect defin specif interconnect aspect program aop lingo compo nent order address system concern aspect weaver take input aspect compon program produc weav output program tangl code address specif aspect weaver generat data flow graph compon program graph node repres compon edg repres data flow compon execut aspect program program edit graph specif goal collaps node adjust correspond code final code generat take graph previous step input translat actual softwar packag best valu paramet fault toler provis execut best refer current environment condit acm journal month linguist structur applic level fault toler written procedur languag packag meant compil produc ultim execut code fulfil specif aspect higher depend sens aop systemat automatis support process adapt exist code fulfil specif aspect aop defin softwar engin methodolog support adapt destroy origin design increas complex origin idea aop clever blend generalis idea basi instanc optimis compil program transform system mop liter program knuth aspectj aspectj exampl aspect orient languag kiczal lippert videira lope develop xerox parc project aspectj defin aspect orient extens java program languag aspectj user concept join point relev point dynam call graph join point mark code region manipul aspect weaver aspectj point method execut constructor call constructor execut field access except handler extens java support design contract method olog meyer contract hoar defin set pre condit post condit invari determin expect comput entiti studi carri capabl aspectj aop languag support except detect handl lippert videira lope aspectj develop call plug play except handler librari except handler plug applic translat better support manag configur compil time address aspect attribut defin sect aspectwerkz stream activ devot dynam aop interest exampl trend aspectwerkz bone vasseur vasseur defin author dynam lightweight high perform aop framework java bone aspectwerkz util bytecod modif weav class project build time class load time runtim capabl actual semant aspectwerkz code vari dynam time respons environment chang translat good support aspectj aspectwerkz project agre work team produc singl aspect orient program platform build complementari strength expertis acm journal month vincenzo florio chris blondia fig fault toler program aop system aspectc project aspectc spinczyk pectcpp propos aspect orient implement appear achiev posit properti java base approach add effici good perform conclus figur synthes main characterist aop allow decompos select assembl compon design goal repres draw compon piec jigsaw puzzl creat aspect program assembl weaver tual sourc code aop address explicit code engin principl allow reduc consider mainten cost aop approach softwar develop aop princi ple address applic domain procedur function object orient program languag compon languag isol code aspect requir extra work expertis well pay capabl address aspect keep singl unmodifi general design remark research question adequaci aop effect paradigm handl failur domain transact process kienzl guerraou time aop will spread program paradigm academia industri object orient program eighti qualiti aop current quantit assess theoret studi practic perienc encourag evid increas interest aop larg number paper confer devot interest subject point view depend aspect observ aop exhibit optim construct sens kiczal mezini attribut principl reach good valu make time weav vasseur realiz dynam acm journal month linguist structur applic level fault toler bytecod manipul work ostermann interest survey subject adequaci fulfil attribut debat fault toler aspect languag interest domain recoveri meta program recoveri meta program rmp ancona mechan ternat execut cooper process context concept architectur captur idea debugg monitor schedul applic stop breakpoint execut program written specif languag final return control applic context break point encount breakpoint outlin portion code relev specif fault toler strategi instanc breakpoint altern block accept test recoveri block sect program implement strategi recoveri block version program main benefit rmp fact breakpoint requir minim intervent function concern programm rmp script design implement intervent awar develop rmp guarante good separ design concern exampl fig recoveri block implement rmp system encount breakpoint correspond entranc recoveri block control flow rmp save applic program environ start altern execut altern mark breakpoint return control rmp time order execut accept test test succeed recoveri block exit control second altern note fault toler develop cost basic ing altern accept test remain complex charg rmp architectur entir rmp languag express meta program communic sequenti process languag hoar csp instanc aspectj address except error detect handl remark author studi aspectj support field conclud lippert videira lope properti aspectj document paper lead program fewer implement error chang easier open topic will requir serious usabl studi aop matur acm journal month vincenzo florio chris blondia fig control flow applic program rmp execut fault toler strategi base recoveri block fig fault toler program rmp system conclus figur synthes main characterist rmp fault toler code case logic physic distinct function code code complex cost consider reduc rmp approach technic manag fault toler provis code separ program context languag code provis express function aspect applic conclud rmp characteris optim design choic csp code meta program influenc attribut negat choos pre exist formal clear present practic advantag adopt fix immut syntact structur express fault toler strategi choic pre exist general purpos distribut program languag csp question appear difficult cumbersom express fault toler provis instanc rmp prove effect linguist structur express strategi recoveri block version acm journal month linguist structur applic level fault toler approach poor limit poor recoveri block poor poor poor nvp good poor poor mop optim posit posit posit poor poor posit optim poor aop optim posit good rmp optim limit posit tabl summari qualit assess propos sect differenti ate recoveri block nvp approach sect sect program main compon coars grain process arrang complex fault toler structur choic pre exist languag csp rmp appear best choic repres provis atom action jalot campbel translat limit conjectur coexist separ layer function function aspect better exploit reach best approach widespread program languag express function aspect devis custom languag deal function requir languag design express error recoveri strategi satisfactori valu attribut reach rmp system develop forese dynam manag execut code definit design system recoveri metaprogram chang dynam compens chang environ chang strategi florio blondia set system structur adapt mobil applic chose evalu posit rmp approach rmp appear characteris larg overhead frequent context switch main applic recoveri metaprogram randel time requir jeopardis larg overhead difficult establish time bound extent restrict appear pose rmp target applic domain conclus class system structur alft describ critic view qualit respect structur attribut ble summaris survey provid comparison approach summari singl approach exist today provid optim solut problem cumul refer system structur applic level fault toler current work definit model applic level fault toler reach high valu three attribut prototyp system describ florio blondia acm journal month vincenzo florio chris blondia paper highlight posit negat aspect evolu tionari solut pre exist languag respect revolutionari approach base devis custom hoc languag consequ observ conjectur approach base languag cover function concern cover fault toler concern address efficaci linguist structur widest set fault toler provis provid optim val three structur attribut conjectur current verifica tion florio blondia framework european project arflex adapt robot flexibl manufactur system ibbt project qoe qualiti experi acknowledg express gratitud editor insight remark suggest refer aksit dijkstra tripathi atom deleg object orient transac tion ieee softwar ammann knight data divers approach softwar fault toler ieee tran comput ancona dodero giannuzzi clemati fernandez sys tem architectur fault toler concurr softwar ieee comput octob anderson shasha persist linda linda transact queri process direct high level parallel program languag tayer number lectur note comput scienc springer anderson barrett halliwel mould softwar fault toler anc evalu ieee tran softwar engin andrew olsson program languag concurr practic benjamin cum aspectcpp aspectc retriev august aviz ieni version approach fault toler softwar ieee tran softwar eng aviz ieni methodolog version program softwar fault toler lyu john wiley son york chapter aviz ieni lapri randel depend threat tax onomi proc ifip comput congress kluwer academ publish aviz ieni lapri randel landwehr basic concept taxonomi depend secur comput ieee transact depend secur comput bakken schlicht support fault toler parallel program linda ieee tran parallel distribut system march bao sun trivedi adapt softwar rejuven degrad model rejuven scheme proceed intern confer depend system network dsn ieee comput societi berndt linda refer manual scientif comput associ birman schiper stephenson lightweight causal atom group multicast acm transact comput system august acm journal month linguist structur applic level fault toler birrel nelson implement remot procedur call acm tran comput system bondav chiaradonna giandomenico grandoni dis crimin fault rate persist improv fault treatment proc int symposium fault toler comput ftcs ieee comp soc press munich ger bone aspectwerkz dynam aop java proceed aosd bone vasseur dynam aop soa applic tutori present bea eworld cannon dunn high level model develop fault toler parallel distribut system tech rep depart comput scienc utah state univers august carriero gelernt write parallel program guid perplex acm comp survey carriero gelernt linda context comm acm cristian except handl softwar fault toler lyu wiley florio efto recoveri languag tech rep esat acca univers leuven decemb florio vote farm distribut class softwar vote tech rep esat acca univers leuven june florio dir net distribut system detect isol recoveri tech rep esat acca univers leuven octob florio blondia system structur adapt mobil applic proceed sixth ieee intern symposium wireless mobil multimedia network wowmom taormina giardini naxo itali florio blondia adapt requir softwar engin ing proc ieee wowmom workshop adapt depend mission busi critic mobil system adamus wowmom helsinki finland florio blondia reflect refract variabl model effec tive maintain adapt depend softwar proceed euromicro confer softwar engin advanc applic seea softwar pro cess product improv track sppi ieee comput societi beck germani florio deconinck fault toler linguist structur dis tribut applic proc annual ieee intern confer work shop engin comput base system ecb ieee comp soc press lund sweden florio deconinck lauwerein efto vote farm softwar tool fault mask messag pass parallel environ proc euromicro confer euromicro workshop depend comput system ieee comp soc press ster sweden florio deconinck lauwerein softwar tool combin fault mask user defin recoveri strategi iee proceed softwar decemb special issu depend comput system iee associ british comput societi florio deconinck lauwerein applic level depend techniqu farmer worker parallel program informatica florio deconinck lauwerein algorithm toler crash failur distribut system proc annual ieee intern confer workshop engin comput base system ecb ieee comp soc press edinburgh scotland florio deconinck lauwerein graeber design plement data stabil softwar tool proc euromicro workshop parallel distribut process euro pdp ieee comp soc press mantova itali acm journal month vincenzo florio chris blondia florio deconinck truyen rosseel lauwerein hypermedia distribut applic monitor fault inject embed fault toler parallel program proc euromicro workshop parallel distribut process euro pdp ieee comp soc press madrid spain florio murgolo spinelli pvmlinda integr comput paradigm proc euromicro confer massiv parallel comput system mpcs ieee comp soc press ischia itali den fault toler oper system acm comput surv ebnenasir kulkarni hierarch presynthes compon auto matic addit fault toler case studi proc specif verif compon base system savcb workshop acm sigsoft fse eckhardt caglayan knight lee mcallist vouk kelli experiment evalu softwar redund strategi improv reliabl ieee tran softwar engin juli eckhardt lee theoret basi analysi multivers softwar subject coincid error ieee tran softwar engin decemb efthivoulidi verentzioti melion varvarigou kontiza deconinck florio fault toler communic embed supercomput ieee micro sept oct special issu fault toler elnozahi alvisi wang johnson survey rollback recoveri protocol messag pass system acm comput surv fabr rennou friend flexibl architectur implement fault toler secur applic proc european depend comput confer edcc taormina itali fabr rennou metaobject architectur fault toler distribut system friend approach ieee transact comput januari gelernt generat communic linda acm tran prog languag system januari glandrup extend concept composit filter thesi dept comput scienc univers twent green art creat reliabl softwar base system shelf soft ware compon proc symposium reliabl distribut system srds durham guerraoui schiper softwar base replic fault toler ieee comput april hoar axiomat basi comput program comm acm octob hoar communic sequenti process comm acm horn acm fellow profil jame jay jim horn acm softwar engi neer note juli huang kintala koletti fulton softwar rejuven analysi modul applic proc intern symposium fault toler comput ftcs huang kintala softwar fault toler applic layer softwar fault toler lyu john wiley son york chapter huang kintala bernstein wang compon softwar fault toler rejuven technic journal inquiri board report arian flight failur url http htdoc tidc press jalot campbel atom action concurr system proceed intern confer distribut comput system icdc ieee comput societi press denver colorado isbn acm journal month linguist structur applic level fault toler johnson design analysi fault toler digit system addison wesley york kambhatla replic issu distribut high linda tupl space thesi dept comput scienc oregon graduat institut kiczal aspectjtm aspect orient program javatm technolog proc worldwid java develop confer javaon san francisco california slide url http servlet ajsit channel documenta tion subchannel papersandslid kiczal des rivi res bobrow art metaobject protocol mit press cambridg kiczal lamp mendhekar maeda videira lope loingtier irwin aspect orient program proc european confer object orient program ecoop lectur note comput scienc springer berlin finland kiczal mezini separ concern procedur annot advic pointcut proceed european confer object orient program ecoop springer lncs seri kienzl guerraou aop sens case concurr failur proceed european confer object orient program kim cgi guid kim welch distribut execut recoveri block approach uniform treatment hardwar softwar fault real time applic ieee tran comput kleinrock queue system john wiley son volum knuth liter program comp jour kulkarni arora autom addit fault toler tech rep msu cse depart comput scienc michigan state univers east lans michigan june lamport shostak peas byzantin general problem acm tran program languag system juli lapri depend basic concept terminolog english french ger man italian japanes depend comput fault toler springer verlag wien lapri depend attribut impair predict depend comput system randel lapri kopetz littlewood esprit basic seri springer verlag berlin lapri depend comput system concept limit proc ifip intern workshop depend comput applic johannesburg south africa lann arian flight failur case studi system engin comput system tech rep inria decemb leveson safewar system safeti comput addison wesley lippert videira lope studi except detect handl aspect orient program proc intern confer softwar engin ics limmerick ireland liskov distribut program argus communic acm march lorczak caglayan eckhardt theoret investig general voter redund system proc int symposium fault toler comput ftcs chicago lyu softwar fault toler john wiley son york acm journal month vincenzo florio chris blondia lyu handbook softwar reliabl engin ieee comput societi press mcgraw hill lyu design test evalu techniqu softwar reliabl engi neer proc euromicro conf engin system softwar decad euromicro workshop depend comput system ieee comp soc press ster sweden xxxix xlvi keynot speech lyu reliabl orient softwar engin design test evalu techniqu iee proceed softwar decemb special issu depend comput system mae concept experi comput reflect proc confer enc object orient program system languag applic oopsla orlando masuhara matsuoka watanab yonezawa object orient concurr reflect languag implement effici proc confer object orient program system languag applic oopsla meyer fault toler comput system design prentic hall jersey nrc switch focus team report tech rep nation reliabl council june omg fault toler corba entiti redund tech rep request propos object manag group omg dec ostermann composit taxonomi tech rep siemen paakki attribut grammar paradigm high level methodolog languag impl mentat acm comput survey june parrington reliabl distribut program arjuna approach proceed second usenix confer san francisco parsytec parsytec seri cognit comput parsytec gmbh aachen germani patterson turner hyatt reilli construct fault toler distribut tupl space proc symposium appli comput acm sigapp powel preliminari definit guard architectur tech rep laa cnrs januari powel arlat beus dukic bondav coppola fantechi jenn rabe jac well guard generic upgrad architectur real time depend system ieee tran parallel distribut system june pradhan fault toler comput system design prentic hall upper saddl river randel system structur softwar fault toler ieee tran softwar eng randel evolut recoveri block concept softwar fault toler lyu john wiley son york chapter robben languag technolog metalevel architectur distribut object thesi dept comput scienc univers leuven saltzer reed clark argument system design acm tran comput system schlicht thoma program languag support write fault toler distribut softwar ieee transact comput februari special issu fault toler comput schneider implement fault toler servic state machin approach acm comp survey schoina issu implement posybl free linda implement unix network tech rep depart comput scienc univers crete acm journal month linguist structur applic level fault toler scott gault mcallist consensus recoveri block proc total system reliabl symposium shannon winer sloan claud elwood shannon collect paper amazon shrivastava sequenti pascal recoveri block softwar practic experi shrivastava lesson learn build arjuna distribut pro gram system theori practic distribut system lectur note comput scienc sibley comput secur fault toler softwar assur solut proc workshop comput secur fault toler softwar assur solut york siewiorek swarz reliabl comput system design implemen tation digit press spinczyk lohmann urban aspectc aop extens softwar journal suzuki katayama schlicht ftag function attribut base model write fault toler softwar tech rep depart comput scienc univers arizona tanenbaum structur comput organ prentic hall taylor morgan black redund data structur improv softwar fault toler ieee tran softwar engin novemb van achteren object georienteerd afleid van metaobjecten voor foutbestendigheid friend omgev thesi dept electr engin univ siti leuven flemish vasseur dynam aop runtim weav java aspectwerkz address proceed aosd dynam aop workshop weik eniac stori ordnanc journal american ordnanc associ url http mike comphist eniac wiener digit woe depend softwar addison wesley liskov design fault toler distribut implement linda proc int ieee symposium fault toler comput ftcs ieee zawinski remot control unix netscap tech rep netscap communic corp decemb retriev juli newsref std receiv septemb revis august accept august acm journal month 