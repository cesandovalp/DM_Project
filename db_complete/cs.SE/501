petrenko schlingloff pakulin tenth workshop model base test mbt eptc doi eptc hartmut lackner martin schmidt potenti error test assess softwar product engin hartmut lackner humboldt universita berlin germani lackner martin schmidt humboldt universita berlin germani schmidma softwar product line spl method develop variant rich softwar system compar variabl system test spls extens increas amount possi ble product approach exist test spls assess qualiti test error detect capabl test assess base error inject correct version system test knowledg potenti error spl engin systemat identifi articl present overview exist paradigm softwar product line error occur respect specif process assess test qualiti leverag mutat test techniqu spl engin implement identifi error mutat oper allow exist test defect product purpos test assess draw conclus error prone survey spl design paradigm qualiti spl test improv introduct softwar product spl engin emerg method develop variant rich softwar system base spl specif singl product configur deriv spl engin systemat plan process reus softwar artifact effici includ qualiti assur test test spl test variabl system investig intens challeng test spls select product test design test specif method propos test product qualiti assess test limit mutat individu product spl approach major drawback develop introduc error kind artifact final product specif better understand analyz design paradigm specif product spl error occur respect design process develop mutat oper variabl model domain model mimic fault model second select product subsequ mutat bias test product test will test mutat analysi assess qualiti test product spl contrast defin tation system oper domain engin level enabl assess test qualiti independ test product subsequ test qualiti complet spl assess remaind articl structur summar foundat spl engin test assess defin classifi kind error spl test assess system evalu three exampl eventu work conclud potenti error test assess softwar product engin domain engin applic engin domain analysi featur model domain model uml configur product materi conform map delta model figur process spl engin search eshop catalog credit card ecoinsbank transfer payment secur high standard mandatori requir option excludesaltern figur featur model eshop exampl preliminari foundat work base short introduct model base product engin second mutat analysi third deal potenti error mutat softwar develop model base product engin individu custom expect reus exist asset design drive factor emerg product engin increas number product featur keep system engin cost reason level term softwar engin spl set softwar product share common core softwar asset common distinguish variabl definit realiz common variabl process domain engin ing actual product built applic engin fig product built reus domain artifact exploit product variabl methodolog spl engin support model base abstract featur model featur model offer overcom aforement challeng facilit explicit design global system variat point consequ variat point spread multipl domain model link core variabl descript featur model tree structur featur decompos featur fig exampl featur model will exampl parent featur relat featur mandatori child featur requir option child featur option children featur select altern exact children featur select addit cross tree constraint featur requir select impli select exclud featur select product featur model captur variat point concis form element symbol semant provid map model semant map defin explicit map model map model consist relat featur model element domain model element refer tupl featur model map model domain model spl specif product model code materi spl specif provid configura tion configur assign valuat featur featur model denot presenc hartmut lackner martin schmidt featur featur featur featur featur featur featur featur featur featur featur uenc delta modul figur negat posit variabl base delta model uml state machin excerpt credit card high map true standard featur model excerpt selectcreditcard choos payment method credit card figur spl design negat variabl absenc map element valuat violat constraint impos featur model base setup three paradigm establish spls paradigm will introduc negat variabl case domain model design term call model model element product configur subsum prod uct fig consid combin featur model map model uml model spl specif map map model map singl featur set transit addit map boolean flag indic map model element product featur select true unselect fals figur excerpt eshop specif part featur model depict upper half part state machin payment process lower half find map denot dot edg featur credit card transit label selectcreditcard posit variabl contrast negat variabl design domain model posit variabl start minim core featur common product start point addit featur will design fig delta model design product spl engin posit negat variabl call featur orient contrast paradigm approach refer delta model delta orient program delta model purpos design spls part need core modul compris set featur repres valid product second set delta modul chang will appli core modul chang construct add destruct remov featur fig potenti error test assess softwar product engin mutat analysi mutat analysi mutat test introduc demillo error base test techniqu intend purpos assess qualiti test will appli system process mutat analysi seed error softwar creat modifi version origin softwar creat version error exist test case execut defect version mutant goal distinguish defect kill mutant origin softwar ratio kill mutant generat mutant call mutat score will comput execut test case main goal test design achiev highest mutat score mutat oper appli introduc error chanc mutant offer behavior origin type mutant refer hidden mutant detect hidden mutant undecid problem hidden mutant suppos remov mutat analysi score perform jian harman distinguish multipl kind mutant creat simplest mention order mutant introduc error order mutant kill process mutat test guarante combin mutant will detect test suit combin mutant refer higher order mutant potenti error mutat mutat analysi defect softwar version deriv set potenti error human softwar develop potenti error implement mutat oper appli origin softwar introduc error mutat design valid mutat score cost test amount mutant creat number test execut appli guid principl creat mutat oper mutat categori model potenti error recogn type error fact mutat oper design model error belong correspond error class simpl order mutant generat mutant produc make act syntact chang origin specif restrict justifi coupl hypothesi test set detect simpl mutant will detect complex mutant syntact semant correct mutant generat mutat result illeg express divis mutant generat produc mutant includ practic restrict exampl replac relat connector opposit mutant term negat oper appli mutant semant equival mutat system identifi general categori model base mutat oper model element delet model design forget add model element featur map ping transit hartmut lackner martin schmidt model element insert model design insert superflu model element featur map transit properti chang model design choos wrong properti model element mandatori featur option invers status wrong transit target model element type map transit guard check applic categori implement mutat oper potenti error model base product engin contribut focus error featur map featur map major impact outcom product materi design complex error prone identifi potenti error systemat check model paradigm possibl add superflu omit element chang attribut potenti error discuss effect materi consequ error product assign type potenti error add extend behavior product omit restrict behavior product alter extend restrict behavior product mix extend restrict behavior product depend content negat variabl negat variabl paradigm identifi model element potenti error featur map model map attribut featur map featur set map element error model element effect map map left entireti map element will product restrict featur result product unrel featur will includ superflu behavior product includ map featur behavior enabl superflu map superflu map unmap featur map domain model element includ map map featur invert featur map featur set true remov element product unrel map featur contrari map featur set fals remov element product map featur case behavior product reduc omit map element map model element miss set map element map subsequ map element will product featur product unrel featur result product offer behavior unreach model element potenti error test assess softwar product engin superflu map element element map featur current map result element unavail product includ associ featur behavior reduc swap featur associ featur map mutual exchang subsequ behavior exchang featur product offer behavior expect result exchang map element map invert featur status bit featur attribut flip map element map product time element unavail product exampl featur true switch fals element unavail product associ featur product includ featur cours featur map element consid posit variabl spl model posit variabl map biject featur modul pose domain element potenti error featur map model map map featur map modul identifi potenti error map map miss entireti appear unrealist scenario automat check modul map featur consid case miss map product associ featur miss modul function superflu map superflu map unrealist scenario reason modul map exact model base environ check easili automat superflu map behavior enabl product featur swap modul associ modul map mutual exchang result product featur offer expect behavior contrast product featur behav expect swap featur associ featur map mutual exchang result swap modul delta model paradigm delta model observ contrast posit variabl model delta orient variabl model start actual core product base modul differ product defin delta delta model map multipl featur delta allow delta add element remov element core product time potenti point error delta model identifi delta set map featur set remov element base product set element delta product model miss entir delta definit product featur miss delta lack behavior offer depend delta remov add element base product hartmut lackner martin schmidt superflu delta unnecessari delta result product associ featur will offer addit behavior product lack behavior delta remov element featur featur set map featur miss featur left delta map static verifi set featur product current set map featur miss featur offer behavior case set map featur element collid delta static verifi superflu featur addit featur complet set map featur result delta will product featur mutual exclud map featur delta will applic product static check valid set featur satisfi product product correct set featur superflu error product offer behavior base element set base element miss element consequ element remov core product delta match specif product featur delta offer behavior superflu base element set base element addit element will remov element product delta product offer behavior delta element element set delta element delta miss result product featur offer behavior superflu delta element element set delta element miss cons quenc product featur offer behavior product test assess laid error model base spl engin contrast variabl system engin current test design method coverag criteria prepar deal error valid argument propos mutat system spls design assess test qualiti error detect capabl edc product singl system mutat system spls novel mutat oper reason separ concern spl engin variabl domain engin split phase model mutat oper defin variant system infer mutant includ modul product domain engin expect high qualiti test suit detect error propos mutat oper base potenti error identifi concis consid potenti error negat variabl model implement mutat system spls perform mutat analysi spl test variant system test contrast convent mutat system mutat spl specif execut test potenti error test assess softwar product engin product specif product specif mutant product specif mutant product mutant appli mutat oper materi specif configur test suit select configur test backtrac product mutant product line specif mutant appli configur execut test calcul mutat score spl mutat score figur mutat process spls perform decis set product test decis depend spl test suit test applic subset product figur depict mutat process assess spl test suit address issu independ gain set spl specif mutant appli mutat oper spl specif identifi set configur describ applic prod uct test appli configur mutant return set product specif mutant mutant structur equival origin product specif remov particip score specif mutant easili mate rializ product mutant final test execut mutat score base spl specifc mutant establish bidirect traceabl spl specif mutant associ product mutant product mutant kill test backtrack origin spl specif mutant flag kill final mutat score calcul kill number spl specif mutant spl mutat oper mutat oper featur map model negat variabl enrich mutat system standard state machin oper appli domain level well oper describ identifi notion discuss invalid hidden mutant oper featur map design mutat oper potenti error identifi consid insert superflu map case remain unclear uml element select map assum care craft will lead invalid mutant delet map dmp delet map will perman enabl map element associ featur constrain enabled exampl invalid mutant creat product line heavi mutual exclus xor exclud appli reason compet uml element transit product multipl enabl exclud transit introduc determin unexpect behavior product mutant creat oper behav equival origin product case product includ featur map delet hartmut lackner martin schmidt delet map element dme oper delet map uml element map featur map model resembl case model forgot map uml element map delet map oper oper yield determinist model wise exclud transit concurr enabl product mutant equival origin product model deriv featur associ delet uml refer product insert map element ime oper insert uml element map contrari case oper defin map uml element remov insert addit element difficult delet heurist provid creat addit element decid copi uml element refer subsequ map map map oper applic map featur map model chanc creat invalid mutant uml element refer copi mutual exclud map model invalid determin swap featur swp swap featur exchang map behavior oper ator substitut featur featur vice versa featur swap exchang model determinist behavior invalid model design oper fact mutat oper exchang featur group mutual exclus featur unrestrict featur consequ restrict featur independ unrestrict featur join mutual exclus group concurr enabl transit determinist behavior chang featur cfv oper flip featur map model select wrong boolean properti map oper appli map second map featur featur will map featur featur allow featur map model oper yield invalid mutant appli map exclud featur case exclud uml element time result invalid model default valu assign singl variabl concurr enabl transit uml state machin year mutat oper transit base system defin limit design oper base transit strongest impact behavior sut design oper mimick combin consid exchang element easili mimick remov insert remov element point model identifi target mutat remov entir transit chang target state well mutat iii trigger guard three mutat three defin categori delet add chang contribut categori chang simplic mutant creat present oper chanc materi mutant behav equival origin product case mutat element disabl featur cours hidden mutant detect will exclud score potenti error test assess softwar product engin general will appli class mutat uml state machin logic design state machin diagram class contain variabl diagram delet transit dtr delet transit region uml state machin oper creat invalid uml model transit remain pseudo state fork join junction choic chang transit target ctt chang target transit state target region oper applic region state delet def delet entir transit consid send signal environ compon delet well delet trigger dti delet trigger singl trigger delet time trigger delet insert trigger itg copi addit trigger transit trigger copi transit region lead determinist behavior transit sourc transit trigger mutat transit outgo transit state delet guard dgd delet entir guard transit lead determinist havior state machin transit enabl simultan case transit trigger sourc target state oper lead finit loop state machin mutat transit reason behavior complet semant enabl transit trigger travers chang guard cgd chang term exchang oper substitut boolean liter invers cgd oper support arithmet relat bitwis compound assign logic oper liter null exchang mutant determinist behavior transit concurr enabl manipul guard evalu creat three exampl product line perform mutat analysi design test suit exampl automat appli model base test techniqu product center test design plc spltestbench defin test design spl specif contrast product center test approach test design select product specif plc approach select product test test design phase improv coverag state machin coverag criteria appli spl specif chose transit coverag select test test generat automat design test output xml document test spltestbench select variant test materi mutat spl specif product specif mutant exampl lack implement decid generat code product specif mutant test develop employ code generat transform individu product specif java transform generat execut junit code test gain test generat mutat system collect code artifact execut test product code final report mutat score hartmut lackner martin schmidt test oper individu transform mutat system spltestbench generat code test basi test code feasibl product environ error propag basi code test case test execut code deriv mutat artifact origin exampl exampl repres three kind system commerc shop eshop heavi signal guard ticket machin ticketmach signal contrast guard last alarm system alarmsi signal guard variant rich case studi eshop fiction exampl design compris featur offer variant custom brows catalog item provid search function custom item cart checkout choos three payment option depend configur transact secur standard high secur server constraint ensur credit card payment offer eshop implement high secur server ticketmach exampl adopt cicho function cus tomer select ticket pay receiv ticket collect chang featur model root featur three featur attach option constraint offer variant depend select featur machin offer reduc ticket accept coin bill will dispens chang cicho adopt extend alarmsi exampl current consist featur offer variant alarm set manual automat vibrat detector featur group featur product event alarm siren warn light will indic secur breach vibrat predefin period time system option escal alarm call polic author send photo evid addit alarm function alarmsi spl featur photo oper configur system secur measur assess test qualiti three test suit deriv exampl mutat oper measur amount detect mutant base spl specif addit assess accumul mutat score exampl mutat oper vice versa accumul mutat oper exampl detail featur map oper read tabl uml oper tabl track exampl number origin product select test generat product mutant materi product mutant test wise count test test step stimuli expect reaction test test execut product mutant number fail test test execut eshop exampl spltestbench select product test independ mutat system generat product mutant product mutant map mutat potenti error test assess softwar product engin tabl map oper score tation oper accuml score acc eshop ticketmach alarmsi acc dmp dme ime swp cfv acc tabl uml oper score mutat oper accuml score acc eshop ticketmach alarmsi acc dtr ctt def dti itg dgd cgd acc tabl summar map erat eshop ticketmach alarmsi product test product mutant product mutant test test step test execut fail test tabl mutat state machin oper eshop ticketmach alarmsi product test product mutant product mutant test test step test execut fail test oper state machin mutat oper generat product mutant product mutant test test exampl execut suitabl mutant test execut mutant creat map mutat oper test execut state machin mutat oper ultim test map oper test state machin oper fail kill mutant analog eshop execut test generat product mutant featur map ping oper test execut product mutant test yield lower mutat score eshop case studi case alarmsi execut test product mutant creat map mutat oper test product mutant creat state machin mutat oper eventu test fail kill mutant summar tabl work mutat analysi spls topic knowledg public deal mutat oper model artifact spl specif henard propos mutat oper featur model base proposit formula employ mutat system show effect dissimilar test contrast test calcul dissimilar author provid distanc metric evalu degre similar product contrast mutat analysi behavior system specif finit state machin establish decad fabbri introduc mutat oper finit state machin hartmut lackner martin schmidt addit oper consid state exchang element event guard belli hollmann provid mutat oper multipl formal direct graph event sequenc graph finit state machin basic state chart conclud basic oper oper deriv omiss insert time automata mutat oper stephenson propos mutat test priorit test case test suit spl environ author provid evalu approach conclus contribut lift mutat analysi product level defin investig mutat oper featur model map model uml model oppos product base mutat analysi mutat oper base spl specif allow mimic realist error human model spl knowledg step qualit evalu spl test base specif three exampl expect mutat oper predict mutat oper contribut superflu behavior hard detect conform test mutat dmp dme featur map itg domain model oper gain score expect rang transit coverag dgd ctt mutat test score surpris low investig conclus identifi lack error detect capabl standard test procedur spls simpl error detect transit safeti critic system conform test procedur indic applic survey spl engin paradigm negat positv variabl delta model assum paradigm suffer lack well current procedur negat test detect error enabl spls futur work will proceed enabl negat test procedur spls describ product center product center test design process spls plan employ mutat system assess qualiti test suit generat test design method hope gain general direct favor test design method process error detect capabl test effort effici investig higher order mutat oper combin chang time product purpos adapt part constitut spl featur model map delta model domain model adapt preserv consist part chang exampl adapt delet featur ensur broken featur refer map present prototyp adapt model base scenario domain specif languag develop acknowledg work support grant deutsch forschungsgemeinschaft graduiertenkolleg metrik grk potenti error test assess softwar product engin refer bernhard aichernig florian lorber dejan time mutant model base tation test time automata david hutchison editor test proof lectur note comput scienc springer berlin heidelberg doi fevzi belli christof budnik lee white event base model analysi test user interact approach case studi softwar test verif reliabl doi stvr fevzi belli axel hollmann test generat minim basic statechart edward delp ping wah wong editor acm symposium spie bellingham wash springfield doi fevzi belli axel hollmann sascha padberg model base integr test communic sequenc graph justyna zander editor model base test embed system computa tional analysi synthesi design dynam system crc press boca raton doi paul black vadim okun yesha mutat oper specif ase ieee intern autom softwar engin confer doi ase harald cicho thoma heinz effici reduct model base generat test suit test case pair priorit proceed intern workshop model driven engin verif valid ieee comput societi press los alamito doi harald cicho malt lochau sebastian oster andi schu redukt von testsuiten softwar produktlinien stefan hnichen editor softwar engin fachtagung des fachbereich softwaretechnik februar berlin lni paul clement linda northrop softwar product line practic pattern print edit sei seri softwar engin addison wesley boston mass krzysztof czarnecki michal antkiewicz map featur model templat proach base superimpos variant robert glu editor generat program ponent engin lectur note comput scienc springer berlin doi richard demillo mutat analysi tool softwar qualiti assur compsac emeli engstro runeson softwar product test systemat map studi infor mation softwar technolog doi sandra fabbri delamaro maldonado masiero mutat analysi test finit state machin ieee intern symposium softwar reliabl engin doi issr iri groher markus voelter express featur base variabl structur model work shop manag variabl softwar product line http data workshop han gro nniger holger krahn claa pinkernel bernhard rump model variant automo tive system view thoma hne wolfgang reisig friedrich steimann editor tagungsband zur modellierung berlin adlershof deutschland lni gesellschaft infor matik bonn http christoph henard mike papadaki gill perrouin jacqu klein yves traon assess softwar product test model base mutat applic similar test icstw ieee intern confer softwar test verif valid workshop doi icstw yue jia mark harman higher order mutat test inf softw technol doi hartmut lackner martin schmidt yue jia mark harman analysi survey develop mutat test ieee transact softwar engin doi tse kang cohen hess novak peterson featur orient domain analysi foda feasibl studi http report pdf kim john clark mcdermid class mutat mutat test object orient program fmes hartmut lackner martin thoma florian wartenberg stephan weißled model base test sign product line rais test design product level icst intern confer softwar test verif valid doi icst malt lochau ina schaefer jochen kamischk sascha liti increment model base test delta orient softwar product line david hutchison editor test proof lectur note comput scienc springer berlin heidelberg berlin heidelberg doi object manag group omg uml superstructur specif jeff offutt investig softwar test coupl acm tran softw eng methodol doi jeff offutt shaoy liu aynur abdurazik paul ammann generat test data state base specif journal softwar test verif reliabl doi stvr jeff offutt shaoy liu aynur abdurazik paul ammann generat test data state base specif journal softwar test verif reliabl doi stvr jeff offutt roland untch mutat unit orthogon wong editor tation test centuri springer intern seri advanc databas system springer doi erika mir olimpiew hassan gomaa model base test applic deriv softwar product line acm sigsoft softwar engin note doi sebastian oster ivan zorcic florian markert malt lochau moso polit tool port pairwis model base softwar product test vamo doi klaus pohl nter ckle linden frank van der softwar product engin founda tion principl techniqu springer verlag york secaucus usa doi ina schaefer variabl model model driven develop softwar product line sys tem linz austria januari proceed benavid batori gru nbacher editor fourth intern workshop variabl model softwar intens system linz austria jan uari proceed icb report universita duisburg essen martin schmidt arif wider markus scheidgen joachim fischer sebastian von klinski refactor ing languag develop asymmetr bidirect model transform ferhat khendek maria toero abdelouah gherbi rick reed editor sdl model driven depend engi neer intern sdl forum montreal canada june proceed lectur note comput scienc springer doi zoe stephenson yuan zhan john clark john mcdermid test data generat product line mutat test approach birgit geppert editor split proceed intern workshop softwar product test boston stephan weißled influenc factor model base test uml state machin report industri cooper david hutchison editor model driven engin languag potenti error test assess softwar product engin system lectur note comput scienc springer berlin heidelberg berlin heidelberg doi woodward error algebra specif experiment mutat test tool soft ware engin journal doi sej 