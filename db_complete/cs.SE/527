act jfpc algorithm incr mental dirig par les flot base sur les contraint pour localis moham bekkouch collavizza michel rueher univ nice sophia antipoli cnrs umr sophia antipoli franc bekkouch helen rueher sume dan cet expos nous pre senton notr algorithm ame lior localis partir contr exempl locfault base sur programm par contraint dirig par les flot cet algorithm analys les chemin cfg control flow graph programm erron pour calcul les sous ensembl suspect permett corrig programm effet nous ron syst contraint pour les che min graph flot pour lesquel instruct conditionnell peuvent erron suit nous calculon les mcs minim correct set taill limit sur chacun ces chemin suppr sion ces ensembl contraint donn sous ensembl satisfi maxim term sous ensembl maxim contraint satisfais postcondit pour calcul les mcs nous tendon riqu propos par liffiton sakallah dan traiter des programm avec des instruct nume riqu efficac nous nous resson pre senter incr mental nouvel algorithm qui pas encor pre sent aux jfpc consid ron programm absminus voir fig les entr sont des entier sorti attendu est valeur absolu une erreur introduit sur lign ainsi pour les donn absminus retourn post condit est just result graph flot cfg programm absminus chemin erron sont repr sent dan figur chemin erron correspond aux donn tout locfault col lect sur chemin contraint pui locfault calcul les mcs seulement nous utilison transform form dsa qui sure chaqu variabl est affect une seul foi sur chaqu chemin cfg class absminus renvoi valeur absolu moin ensur result result int absminus int int int result int erreur lieu result result return result figur programm absminus mcs peut trouv dan term nous supposon les instruct conditionnell sont correct seul instruct sus pect sur chemin erron est ensuit locfault commenc processus tion premi viation voir figur che min vert produit encor chemin qui viol post condit donc nous second viation voir figur chemin bleu produit chemin qui satisfait postcondit donc locfault collect les contraint sur parti chemin qui pre condit vie dire pui locfault recherch les mcs dire nous sayon les instruct qui doivent difi afin programm aura chemin satisfai sant post condit pour les donn ainsi pour cett deuxi viation deux instruct sus pect sont identifi conditionnell sur lign sur lign car contraint cor respondant est seul mcs dan figur cfg chemin erron programm minus pui locfault tent vier une second condi tion seul chemin est celui les deux condi tion programm absminus sont vie cepend comm pre fix premier chemin vie nous rejeton figur les chemin avec une viation programm absminus cet exempl montr locfault produit des infor mation pertinent util sur chaqu chemin erron contrair bugassist syst tat fusionn pas tout les instruct sus pect dan seul ensembl qui peut difficil exploit par les entr notr algorithm sont cfg pro gramm contr exempl bcond une born sur nombr condit qui sont vie bmcs une born sur nombr mcss minim correct subset grosso modo notr algorithm explor profondeur cfg utilis pour prendr branch chaqu conditionnel collect les contraint qui correspond aux affecta tion sur chemin induit vie une bcond cision par rapport comport contr exempl fin chemin des contraint qui ont collect est inconsist bmcs mcss sont calcul sur csp pre cise ment locfault proce comm suit propag premi rement sur cfg fin chemin initi erron pui calcul bmcs mcss sur csp courant qui repr sent une premi localis sur chemin contr exempl apr locfault essay vier une condit lorsqu premier conditionnel note cond est atteint locfault prend cision oppos cell induit par continu propag dernier dan cfg csp construit partir chemin vie est consist deux type sus pect premier est condit cond ell effet changer cision pour cond permet satisfair postcondit une autr est une plusieur mauvais affect avant cond qui ont produit une cision erron pui loc fault calcul aussi bmcs mcss sur csp qui contient les contraint collect sur chemin qui arriv cond processus est sur chaqu condi tionnel chemin contr exempl processus similair est ensuit appliqu pour vier pour tout bcond condit pour ame liorer les conditionnel qui cor rigent programm sont marqu avec nombr viation qui ont fait avant atteint pour une tape donn chan gement cision conditionnel cond marqu avec valeur avec cor rige programm cett condit est ignor term nous consid ron seulement premi foi conditionnel corrig programm cet algorithm incr mental base sur les flot est bon moyen pour aider programmeur chass aux bug car localis les erreur autour chemin contr exempl sultat ont confirm les temp cet algorithm sont meilleur par rapport ceux qui correspond nous avon pre sent aux jfpc dan les sous ensembl suspect fourni sont pertin pour dan cadr notr travaux futur nous envisageon confirm sultat sur des pro gramm avec plusieur boucl complex voir pre mier sultat dan nous envisageon compa rer les perform locfault avec des thode statistiqu existant par exempl tarantula ochiai ampl pinpoint nous veloppon une version interact notr outil qui fournit les sous ensembl suspect apr nous voulon tirer profit des connaiss pour lectionn les condit qui doivent vie nous fle chisson sur comment tendr notr thode pour support les instruct nume riqu avec calcul sur les flottant les sultat qui pre sentent les temp calcul des deux version locfault incr mental incr mental pour des programm san boucl sont dispon http bekkouch rsba renc bekkouch moham collavizza michel rueher locfault flow driven constraint base error local proach sac svt track bekkouch moham collavizza michel rueher une approch csp pour localis dixi mes journ francophon programm par contraint jfpc jose manu rupak majumdar clue claus error local maximum sati fiabil acm sigplan notic jose manu rupak majumdar bug assist assist fault local ansi program comput aid verif springer berlin heidelberg barnett mike rustan leino weakest precondit unstructur pro gram acm sigsoft softwar engin note acm bekkouch moham explor sca labil locfault approach error localiza tion loop program arxiv preprint arxiv jone jame mari jean harrold empi rical evalu tarantula automat fault local techniqu proceed ieee acm intern confer auto mate softwar engin acm jone jame mari jean harrold john stasko visual test sist fault local proceed intern confer softwar engin acm abreu rui peter zoeteweij arjan van gemund accuraci spectrum base fault local test academ industri confer practic techniqu mutat taicpart mutat ieee chen mike pinpoint problem deter minat larg dynam internet servic pendabl system network dsn proceed intern confer ieee liffiton mark karem sakallah algo rithm comput minim unsatisfi set constraint journal autom rea sone liffiton mark ammar malik enum rate infeas find multipl muse qui ckli integr techniqu constraint program combinatori timiz problem springer berlin heidelberg 