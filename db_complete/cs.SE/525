synthesis interprocedur bit precis termin proof extend version hong chen cristina david daniel kroen peter schrammel bjo wachter depart comput scienc univers oxford abstract prove program termin key guarante absenc undesir behaviour hang program secur vulner denial servic attack termin check scale larg system interprocedur termin analysi essenti unex plore area termin analysi effort focuss difficult singl procedur problem modular termin analysi program templat base interprocedur summaris analysi combin context sensit approxim forward analysi infer approxim precondit termin bit precis termin argument synthesis lexico graphic linear rank function templat experiment tool outperform state art alter nativ demonstr clear advantag interprocedur reason monolith analysi term effici retain compar precis introduct termin bug compromis safeti critic softwar system make irrespons termin bug exploit denial servic attack termin guarante instrument softwar reliabl termin prover static analysi tool aim construct termin proof input program tremend progress enabl automat proof plex loop requir linear lexicograph linear termin argument complet automat remain major practic chal leng analys real code observ approach literatur specialis linear arithmet unbound mathemat integ unbound arithmet reflect intuit expect program behaviour pro gram execut bound machin integ semant allow unsign integ wrap underflow arithmet bit wide unsign integ perform modulo standard underflow sign integ undefin behaviour practic wrap architec ture accur termin analysi requir bit precis analysi program semant tool configur architectur specif width data type endian exampl illustr termin behaviour machin integ complet mathemat integ exampl code unsign unsign termin mathemat integ ter minat machin integ equal largest unsign integ hand code unsign whi termin mathemat integ termin machin integ unsign machin integ wrap second challeng termin analysi scale larger program year softwar verif competit comp includ divis termin analysi reflect repres pictur state art comp termin benchmark challeng ing termin problem smaller program instruct averag contain function averag loop averag paper techniqu suc cess program magnitud larger instruct larger instanc requir algorithm techniqu scale modular inter procedur analysi monolith analysi pose conceptu practic challeng monolith termin analys exampl prove termin program approach prove procedur program termin univers call context criterion optimist termin individu procedur depend call context procedur termin condit specif call context interprocedur analysi strategi verifi uni versal program termin top manner prove termin procedur relat call context propag upward call context guarante termin procedur difficult determin context precis analys comput precondit termin suffici precondit identifi pre state procedur will definit termin suitabl prove termin contrast precondit identifi pre state procedur termin negat state procedur will termin prove nontermin paper focus comput suffici pre condit precondit enabl reus scalabl frequent avoid repeat anal ysis part code base librari procedur call multipl time undergo modif success analysi run contribut propos algorithm interprocedur termin analysi approach base templat base static analysi sat solv combin context sensit summari base interprocedur analysi infer enc precondit termin base templat abstract focus recurs program cover larg portion softwar written domain embed system provid implement approach static analysi tool program instanti algorithm templat polyhedra lexicograph linear rank function templat analysi bit precis pure reli sat solv techniqu report experiment evalu procedur comp benchmark total line code demonstr scalabl applic approach program thousand line code preliminari introduc basic notion interprocedur termin analysi program model notat assum program term call graph individu procedur term symbol input output transit system formal input output transit system procedur tripl initf transf outf transf transit relat input relat initf defin initi state transit sys tem relat input xin output relat outf connect transit system output xout procedur input procedur paramet global variabl memori object read output return valu potenti side effect global variabl memori object written intern state common valu variabl loop head relat order logic formula logic encod program semant fig encod procedur fig formula input xin output xout consist return denot transit relat encod loop intern state variabl introduc boolean variabl model control flow multipl nest loop encod tran note view formula predic tran paramet substitut tran write tran consid recurs program multipl procedur condit oper return evalu true unsign unsign unsign turn unsign unsign unsign turn fig exampl initf transf outf inith transh outh fig encod exampl write understand vector scalar call procedur call site procedur model placehold predic ini outi occur formula transf placehold pred icat rang intermedi variabl repres actual input output paramet ini outi placehold predic evalu true correspond havock procedur call procedur fig placehold procedur call actual input output paramet full descript program encod appendix basic concept move interprocedur analysi introduc formal notat basic concept definit invari summari call context procedur init tran defin invari predic inv xin init xin inv inv tran inv invari inv summari predic sum xin xout init xin inv xout sum xin xout invari inv call context pro cedur call call site procedur predic callctxhi ini inv tran callctxhi concept role invari abstract behaviour loop summari abstract behaviour call procedur strengthen placehold predic call context abstract behaviour procedur call analys calle call context constrain input output iii will illustr notion program fig reason termin notion rank function precondit termin definit rank function rank function procedur init tran invari inv function set program state well found domain inv tran denot set constraint guarante rank function exist rank function procedur guarante univers termin weakest termin precondit procedur scribe input termin true procedur termin univers fals termin input weakest precondit intract comput uncomput approxim precondit suffici precondit termin guarante program termin xin satisfi definit precondit termin proce dure init tran suffici precondit termina tion predic precond inv xin precond xin init xin inv inv tran inv note fals trivial model precond iii overview approach introduc architectur interpro cedur termin analysi analysi combin trivial synergist infer invari summari call context termin argument precondit concis characteris second order logic definit lowest level approach reli solver backend second order problem describ analysi compon fit pseudo code termin analys algorithm function analyz entri procedur fentri program argument proceed analysi phase phase approxim forward analysi subroutin analyzeforward recurs descend call graph entri point fentri subroutin analyzeforward infer procedur call approxim call context callctx procedur sum mari comput analyz calle analysi check calle analys store summari compat call context callctx final summari calle analysi infer loop invari summari store join oper second phase approxim backward anal ysis subroutin analyzebackward infer termin precondit recurs descend call graph analog forward analysi infer algorithm analyz global sumso invso precondsu function analyzeforward callctxof foreach procedur call callctxoh compcallctx callctxof needtoreanalyzeo callctxoh analyzeforward callctxoh joino sumso invso compinvsumo callctxof function analyzebackward callctxuf termcond callctxuf foreach procedur call callctxuh compcallctx callctxuf needtoreanalyzeu callctxuh analyzebackward callctxuh termcond termcond precondsu joinu precondsu compprecondterm invso termcond function analyz fentri analyzeforward fentri true analyzebackward fentri true return precondsu fentri procedur call approxim call context callctxu approxim summari describ recurs nalli comput approxim precondit termin precondit infer termin condit collect backward call context precondit termin calle termin argument note superscript predic symbol indic underapproxim challeng algorithm approxim novel systemat address challeng problem find meaning precondit precondit definit admit trivial solut fals precond find good candid bootstrap process candid precondit singl xin comput termin argument key observ termin argument typic general termin entri state general precondit comput precondit infer termin argument second challeng comput approxim predic definit approxim abstract domain interv method approxim analysi work method approxim precondi tion properti infer approxim precondit negat result case termin condit termcond exampl illustr algorithm simpl exampl fig encod fig call procedur procedur termin argument procedur termin condit call guard condit guarante univers termin procedur assum unsign integ bit wide interv abstract domain invari summari precondit infer abstract domain element true fals comput call context prove call unreach algorithm proceed phase analyzeforward start entri procedur descend call graph comput approxim call context callctx procedur call context comput call context true recurs analys procedur call comput approxim summari sumoh invari invoh order comput sumof invari invof true entri procedur backward analysi start entri proce dure comput approxim call context callctxuh procedur true descend call graph comput approxim precondit termin preconduh precis approxim summari project input variabl precondit preconduh appli summari call site comput precondit termin preconduf prove univers termin illustr choic abstract domain analysi exampl program assum replac true fals domain interv domain case analyzeforward comput callctx call context comput actual paramet renam formal paramet return callctx constrain ing pre postcondit analysi subsequ analyzebackward comput precondit termin union call context program termin uncondit call context trivial preconduh turn prove univers termin interprocedur termin analysi view alg solv seri formula second order predic logic existenti quantifi predic seek satisfi wit state constraint solv includ side constraint aris interprocedur analysi precis wit predic good approxim weakest strongest predic find bias wit featur synthesi algorithm algorithm analyz univers termin global sumso invso termstatus function analyzeforward callctxof foreach procedur call callctxoh compcallctx callctxof needtoreanalyzeo callctxoh analyzeforward callctxoh joino sumso invso compinvsumo callctxof function analyzebackward termstatus comptermarg foreach procedur call needtoreanalyzeu callctxoh analyzebackward join termstatus termstatus function analyz fentri analyzeforward fentri true analyzebackward fentri return termstatus fentri note formalis exercis precis formula solv synthesi backend describ univers termin didact purpos start simplif algorithm univers termin algorithm variant reduc backward analysi call comptermarg propag qualit result termin termin termin state constraint solv comput outcom function underlin algorithm establish sound compcallctx def compinvsumo def comptermarg lemma definit compcallctx forward call context callctx ohi procedur call context callctx satisfi wit formula callctx ohi inv xout ini callctx xout sumsof assumptionsf initf invof invof transf invof ghi callctx ini sumsof call ghj sumso inj ghj guard condit procedur call captur branch condit condit exampl procedur call fig sumso current summari global variabl alg assumpt correspond assum statement code lemma callctx ohi approxim proof sketch callctx entri point proce dure true summari sumohj initi sume true approxim callctx sumsof approxim callctx ohi approxim sound synthesi thm exampl consid procedur fig entri procedur callctx true interv abstract domain bit integ instanti def procedur comput callctx assum comput summari sumh true rememb placehold evalu true notabl assumpt code mean assumptionsf true callctx inv true true invof invof invof callctx ohi solut invof true callctx definit compinvsumo forward summari sumof invari invof procedur call context callctx satisfi wit formula sumof inv xout callctx xout sumsof assumptionsf initf invof outf xout invof sum xout invof transf invof lemma sumof invof approxim proof sketch lemma callctx approxim summari sumsof initi assum true approxim callctx sumsof approxim sum invof approxim sound synthesi thm exampl consid procedur fig comput callctx actual paramet renam formal wit sum satifi instanti def procedur sum true invoh invoh sumoh invoh invoh solut sum instanc remark def def interdepend comput iter fix point reach order improv precis call context invari summari effici reason perform iter greatest fix point comput lemma comptermarg procedur forward invari invof termin termin argument rrf rrf invof transf sumsof assumptionsf assertionsf rrf assert formula correspond assert statement code assum hold assert violat trace termin approxim forward lead inclus spurious termin trace reason find termin argument procedur termin essenti approxim set termin procedur will fals posit solv algorithm formula refer exampl consid function fig assum invari solv rrh true true rrh linear rank function templat solut exampl rrh trace procedur entri exit prove termin approxim lemma analyz procedur forward call context callctx forward invari invof termin summari sumof fals termin propag acycl call graph join algorithm proposit procedur declar termin termin lemma termin procedur call reach callctx ohi fals declar termi nate termin lemma termin implement effici algorithm avoid comput termin argument calle termin theorem entri procedur program declar termin program termin univers entri procedur program declar termin program termin proof sketch induct acycl call graph prop algorithm compprecondterm input procedur invari inv addit termin condit termcond output precondit precond precond fals true init xin inv true precond xin solv xin unsat return precond model inv compinv xin comptermarg inv true xin termcond precond compnecprecond precond precond precond precondit termin introduc condit termin talk precondit termin procedur termin condit procedur fig comptermarg lemma will find satisfi predic precondit valu exampl procedur termin state problem defin def algo rithm search precond inv interleav manner note fals trivial solut precond aim find good approxim maxim solut weakest precondit precond bootstrap process assum precond fals search valu xin exist comput invari precondit candid xin lemma search correspond termin argument fail find termin argument true block precondit candid restart bootstrap process algorithm return termin argument valid concret xin find weak precond guarante termin pute approxim precondit input guarante termin includ addit termin condit come backward call context precondit procedur call negat precondit approxim input termin final add negat precondit precond start bootstrap process find precon dition candid current precondit precond guarante termin exampl consid function fig time will assum invari bootstrap assum precond fals search valu satisfi true fals possibl comput invari precondit find termin argument case start search valu satisfi fals formula instanc satisfi time invari rank function solv comput approxim precondit templat case turn negat precond final check precondit candid unsat return suffici precondit termin condit termin extend formalis algorithm addit requir comput approxim call context suffici precondit termin procedur compprecondterm alg compprecondterm comput approxim invari invofp entail candid pre condit invofp comput def conjoin candid precondit anteced comput correspond termin argument rrf appli lemma invofp invof termin argument approxim sure termin candid precondit rrf true remark approxim callctxuf sum precond sumsuf call ghj sumuhj precondsuf call ghj precond inj conjoin anteced prop prop order constrain search space sound impair sound prop compprecondterm comput approxim suffici precondit trace satisfi termin argument approxim trace violat left formula correspond function compcallctx def compnecprecond def superscript indic negat approxim definit compprecondterm precondi tion termin preconduf backward call context callctxuf forward invari invof preconduf precond negat satisfi wit precond precond inv sum xout callctxuf xout invof sum sum assumptionsf assertionsf init xin inv xout inv sum xout precond rrf precond inv tran inv sum call ghj sumu inj precond call fghj precondu inj formula def backward call context summari strengthen forward invari invof denot negat wit summari invari sumuf sum invuf inv lemma preconduf sum invuf approxim proof sketch comput approxim nega tion precondit negat approxim termin argument negat fur ther approxim backward call con text precondit procedur call sound synthesi thm approxim termin trace approxim termin precondit suffici pre condit termin term rrf precond characteris termin state invari termin argument satisfi precondit termin calle hold final defin comput appro ximat call context definit compcallctxu backward call context callctxuhi procedur call procedur backward call context callctxuf forward invari invof callctxuhi callctx negat satisfi wit callctx inv ini callctxuf xout invof sum sum assumptionsf assertionsf xout inv inv tran inv callctx lemma callctxuhi approxim proof sketch comput base negat approxim call context negat approxim summari function call thm lead approxim negat call context theorem procedur termin valu xin satisfi preconduf proof sketch induct acycl call graph lemma context sensit summari key idea interprocedur analysi avoid analys procedur call multipl time reason algorithm check comput purpos summari store implic callctx sumo call graph travers call context callctx ohi proce dure collect call site needtoreanalyzeo alg check current call context callctx ohi subsum call context callctx encount sum reus recomput join conjunct infer summari consider appli invari termin argument precondit templat base static analysi overview synthesi engin serv backend approach solv formula definit synthesi engin employ templat base static analysi comput rank function invari summari call ing context implement function compinvsumo compcallctx second order constraint defin effect solv second order problem reduc order restrict space solut express form paramet instanti concret valu program variabl templat blueprint shape formula comput choos templat analog choos abstract domain abstract interpret allow flexibl choic consid templat polyhedra state sound result theorem satisfi wit reduct second order constraint invari def templat xin init xin tran satisfi inv sound approxim invari sound hold true summari call context ultim sound abstract interpret approach describ instanc method consid program mathemat integ rank function requir specialis synthesi techniqu achiev express effici generat linear lexicograph function rank function synthesi approach tan tool extend approach monolith lexicograph rank func tion tan synthesi engin versatil configur produc summari invari refer appendix includ detail descript synthesi engin program encod encod bit precis arithmet tailor second order solv techniqu constraint occur analysi discuss implement implement implement algorithm static analysi tool program built cprover frame work minisat solver sat smt solver increment solv support applic approach enabl singl solver instanc procedur solv seri second order queri requir alg essenti synthesi algo rithm thousand solver call architectur set bitwidth provid command bitvector width extens aforement seman tic allow integ wrap derflow consid exampl find termin argument algorithm void unsign char rank function synthesi comput templat paramet hold transit relat comput invari true detail algorithm refer appendix assum current con straint solv algorithm true short mathemat integ sat unsat sign bit vector overflow flow constraint unsat incorrect conclud rank func tion hold sign bitvector semant extend bitvector width arithmet templat overflow evalu signedk cast bit sign integ wit show valid rank function reason extend bit width bit unsign integ templat bit sign integ retain sound optimis rank function synthesi algorithm search coeffici constraint unsat result enumer valu rang allow type ineffici case rank function implement embed improv algorithm algorithm appendix outer refin loop iter extend rang rank function start extend rang bound explain algorithm bound number lexicograph compon default algorithm termin number lexicograph rank function compon prove termin domain algorithm xin algorithm larg limit number iter default loop algorithm spirit bound model check bound restrict complet exist rank function precondit larger bound bound command vii experi perform experi support claim interprocedur termin analysi ipta faster monolith termin analysi mta precis ipta compar mta outperform exist termin analysi tool analysi bit precis comput usabl precondit termin product benchmark benchmark repositori contrast categori benchmark set program trivial procedur structur benchmark set program line code averag procedur averag loop averag benchark termin univers termin experi xeon ghz run fedora bit binari memori cpu time restrict second benchmark interv templat suffici reason precis modular termin analysi fast compar ipta mta procedur inlin tabl ipta time benchmark mta geometr speed ipta mta benchmark correct solv approach order investig timeout mta random select benchmark time finish finish cloc lti termin termin term time error total time tabl tool comparison text modular termin analysi precis pare ipta mta tabl ipta prove termin benchmark proven mta mta prove termin benchmark includ benchmark ipta time mta time benchmark addit termin outcom ipta outperform exist termin analysi tool compar termin tool program comp termin competit tool limit subset handl unabl analyz benchmark box describ limit succeed generat correct input file intermedi format requir recommend frontend tan kittel koat support bit precis semant ultim mathemat integ reason ensur conform bit vector semant ultim semant decomposit program analysi effici tabl list tool number instanc solv time abort intern error total time analysi time rough halv modular interpro cedur approach ipta ultim comparison monolith approach mta tan ultim spend time benchmark prove termin termin benchmark ultim solv bench mark fail unsupport featur expect perform compar ultim capabl termin program termin input ultim exist poten tialli termin execut comparison fair count benchmark flag termin ultim termin termin categori tabl mark analysi bit precis compar loopus collect benchmark loopus benchmark suit fig exampl loopus benchmark sdl surfac sdl rect pos sdl surfac img imag img imag img img pos ign pos ign sdl upperbl img null pos fig exampl createback debian packag abe short loc main characterist program fact exhibit termin behaviour mathemat integ bit vector illustr fig termin mathemat integ machin integ instanc equal int max sum maris experi benchmark consid machin integ program termin correct identifi loopus rest termin program loopus claim termin correct classifi termin includ fig time comput usabl precondit termin experi perform benchmark extract debian packag linear algebra librari clapack qualiti precondit usabl abil help develop spot problem code difficult quantifi exampl function termin condit abe packag debian function fig increment iter loop constant dynam depend dimens imag data structur infer precondit img img exampl fig benchmark basenam busybox categori svcomp simplifi version debian packag termin function full_writ depend return calle function safe_writ infer call context contract function safe_writ termin full_writ guarante proof safe_writ termin return strict posit argument call conclud full_writ termin univers ign long ign buf unsign long unsign long ign long ign long unsign long buf return return buf char buf fig exampl svcomp busybox temp incx temp return temp fig unit increment clapack program fig code snippet summat procedur sasum version popular lapack linear algebra librari loop procedur termin incx incx incx termin argument increas decreas incx termin precondit viii limit work futur direct approach progress analys real softwar advanc state art termina tion analysi larg program conceptu decompos analysi sequenc well defin second order pred icat logic formula existenti quantifi predic addit consid context sensit analysi approxim backward analysi interact termin analysi explicit notabl seem tedious formula solv generic templat base synthesi algorithm make effici altern predic abstract aspect analysi bit precis oppos synthesi termin argument lin ear program integ ration subclass termin analys cover method base reduct presburg arithmet templat match approach predefin class rank function base reduct sat qbf solv comput intraprocedur termin argument number limit address connect open challeng subject activ orthogon data structur string refin interprocedur analysi framework recurs precondit requir extens discuss work well characterist limit analysi futur direct cost analysi concurr dynam alloc data structur current nore heap alloc data limit lift specif abstract domain illustr consid exampl travers singl link list whi null decid termin program requir knowl edg shape data structur point program termin list acycl requir abstract domain capabl captur properti relat shape data structur length order abstract heap manipul program arithmet option abstract interpret base separ logic formula track depth piec heap string array dynam alloc data structur handl string array requir specif stract domain string abstract reduc null termin string integ indic length size suffi cient practic case scenario termin depend content array harder requir quantifi invari note favor safeti checker termin checker assum assert buffer overflow check hold strengthen invari termin proof easier recurs current downward fix point iter comput call context invari involv summari remark cheap imprecis presenc recurs impair termin analysi handl recurs detect cycl call graph switch upward iter scheme situat adapt generat rank function templat altern approach theoret framework present verifi total correct live properti program recurs templat refin current interv templat heurist select variabl consider suffici practic exploit full power machineri place counterexampl guid abstract refin gar techniqu preval predic abstract attempt abstract interpret rare consid templat base abstract interpret automat synthesis abstract transform amen refin techniqu classic abstract interpret abstract transform implement manual suffici precondit termin current comput suffici precondit approxim pre condit termin comput approxim precondit potenti termin concept work condit termin consid singl procedur leverag perform interprocedur analysi larg benchmark add addit challeng propag approxim entri procedur contrast cook heurist finit oper left unspecifi bootstrap precondit boot strap systemat constraint solv comput precondit comput approxim precondit potenti termin negat result requir method prove exist termin execut well explor topic dynam enumer lasso shape candid path counterexampl static prove feasibl prove nontermin reduct safeti prove order prove termin termin compos program analys termin prover multi path loop termin prover cycl safeti prover cost analysi potenti futur applic work cost resourc analysi instanc type analys worst case execut time wcet analysi well bound amortis complex analysi control flow refin approach instru ment program counter progress invari comput worst case averag case bound concurr current analysi handl singl thread program extend analysi multi thread program reli guarante techniqu propos explor work termin analysi set predic environ assumpt invari summari analysi sequenti program conclus termin prover target small hard program termin analysi larger code base receiv attent algorithm interpro cedur termin analysi recurs program knowledg paper describ full detail entir machineri perform analysi approach reli bit precis static analysi combin smt solv templat polyhedra lexicograph linear rank function templat provid implement approach static analysi tool demonstr applic approach program thousand line code refer http cgi bin cve ben amram genaim linear rank problem integ linear constraint loop principl program lan guag acm leik heizmann rank templat linear loop tool algorithm construct analysi system lectur note comput scienc springer bradley manna sipma termin polynomi program verif model check abstract interpret lectur note comput scienc springer falk kapur sinz termin analysi imper program bitvector arithmet verifi softwar theori tool experi lectur note comput scienc springer beyer status report softwar verif competit summari comp taca lectur note comput scienc springer cook gulwani lev ami rybalchenko sagiv prov ing condit termin comput aid verif lectur note comput scienc springer sankaranarayanan sipma manna scalabl analysi linear system mathemat program verif model check abstract interpret lectur note comput scienc springer cousot cousot abstract interpret unifi lattic model static analysi program construct approxim fixpoint principl program languag gawlitza seidl precis relat invari strategi iter comput scienc logic lectur note comput scienc springer gulwani srivastava venkatesan program analysi con straint solv program languag design implement acm albarghouthi kincaid gurfinkel chechik symbol optim smt solver principl program languag acm bradley manna sipma linear rank reachabl comput aid verif cook zuleg ramsey lexicograph termin prove tool algorithm construct analysi system kroen sharygina tsitovich wintersteig ter minat analysi composit transit invari comput aid verif lectur note comput scienc springer https file view usp sha https softwar benchmark tag product line roussel control solver execut runsolv tool journal satisfi boolean model comput http termin version comp http version comp http version http softwar loopus http project virtualboximag file http urban zip version comp http lori project hiptnt https rybal armc version august experi log https file vie http project version https falk kittel koat revis http project slayer version https mmjb revis heizmann hoenick podelski termin analysi learn termin program comput aid verif lectur note comput scienc springer http clapack cblas grebenshchikov lope popeea rybalchenko synthes softwar verifi proof rule pldi cook podelski rybalchenko termin proof system code program languag design implement acm lee wang termin analysi algorithm learn comput aid verif podelski rybalchenko transit invari logic comput scienc ieee comput societi heizmann hoenick leik podelski linear rank linear lasso program autom technolog verif analysi cook kroen mmer wintersteig rank function synthesi bit vector relat tool algorithm construct analysi system lectur note comput scienc springer david kroen lewi unrestrict termin termin argument bit vector program esop magil tsai lee tsay automat numer abstract heap manipul program popl berdin cook distefano automat termin proof program shape shift heap cav mcmillan quantifi invari generat interpol satur prover tool algorithm construct analysi system intern confer taca held joint european confer theori practic softwar etap budapest hungari march april proceed podelski schaefer wagner summari program recurs european symposium program lectur note comput scienc springer clark grumberg jha veith counterexampl guid abstract refin comput aid verif lectur note comput scienc springer ranzato rossi doria tapparo forward backward abstract refin algorithm verif model check abstract interpret lectur note comput scienc springer bozga iosif konecni decid condit termin tool algorithm construct analysi system lectur note comput scienc springer ganti iosif konecni underapproxim procedur summari integ program tool algorithm construct analysi system lectur note comput scienc springer gupta henzing majumdar rybalchenko prove termin principl program lan guag acm chen cook fuh nimkar prove nontermin safeti taca harri lal nori rajamani altern termin static analysi symposium wilhelm engblom ermedahl holsti these whal ley bernat ferdinand heckmann mitra mueller puaut puschner staschulat stenstro worst case execut time problem overview method survey tool transact embed comput system alia dart feautrier gonnord multi dimension rank program termin complex bound flowchart program static analysi symposium lectur note comput scienc springer brockschmidt emm falk fuh giesl alternat ing runtim size complex analysi integ program tool algorithm construct analysi system lectur note comput scienc springer sinn zuleg veith simpl scalabl static analysi bound analysi amort complex analysi comput aid verif lectur note comput scienc springer gulwani jain koskinen control flow refin progress invari bound analysi program languag design implement chen mukhopadhyay control flow refin symbol comput averag case bound autom technolog verif analysi jone tentat step develop method interf ing program acm tran program lang syst oct cook podelski rybalchenko prove thread termi nation proceed acm sigplan confer program languag design implement pldi york usa acm gupta popeea rybalchenko predic abstract refin verifi multi thread program proceed annual acm sigplan sigact symposium principl program languag popl york usa acm popeea rybalchenko composit termin proof multi thread program tool algorithm construct analysi system flanagan nig lectur note comput scienc springer berlin heidelberg mine octagon abstract domain higher order symbol comput appendix program encod encod program represent akin singl static assign ssa provid review focus model loop procedur call continu program fig exampl ssa assign variabl rise fresh symbol instanc initialis variabl correspond symbol increment rise symbol return valu addit variabl introduc addit control flow join point valu come branch merg singl variabl instanc initi execut loop denot case branch choic control condit branch case loop choic loop entri point execut loop bodi determinist boolean symbol ensur ssa remain acycl loop approxim allow constrain loop invari infer analys addit data flow variabl guard variabl captur branch condit condit loop instanc loop condit condit invoc facilit interprocedur analysi ssa placehold procedur call ensur procedur call initi havock constrain summari comput cours analysi pointer alia analysi perform dur ing translat ssa form case split introduc comput approxim abstract implement algorithm comput invari ant summari call context implement function compinvsumo compcallctx describ invari call context declar true fig ssa form exampl fig express second order logic effect solv second order problem reduc order restrict space solut express form paramet instanti concret valu program variabl templat domain abstract repres set satisfi formula concretis write abstract denot empti set fals abstract denot domain true choos templat analog choos abstract domain abstract interpret allow flexibl choic consid templat polyhedra matrix fix coeffici polynomi tem plate subsum interv zone octagon interv exampl rise constraint variabl call constraint generat rth row matrix rth row templat encod context templat constraint insid loop condit branch guard templat guard templat row form rth row base templat domain templat polyhedra guard uniqu defin guard ssa variabl appear denot guard associ variabl loop head guard associ variabl loop bodi guard templat term variabl loop head form express term variabl loop bodi infer abstract fix templat reduc second order search invari order search templat paramet xin init xin tran substitut symbol paramet concret invari formula unsatisfi xin init xin tran vector repres upper bound express precis solut smallest vector term point wise order solv optimis problem iter call smt solver approach describ instanc method consid program mathemat integ comput overapproxim call context sim ilar comput invari summari differ program variabl appear templat call context invari xin xout summari termin analysi procedur detail algorithm solv formula lemma monolith rank function complet termin proven monolith program termin practic combin linear rank function linear lexicograph function prefer monolith linear rank function express linear theori challeng exist smt solver handl linear case effici lexicograph rank function definit lexicograph rank function lexi cograph rank function transit relat tran tupl express tran bound decreas unaffect notic special case definit par ticular exist bound condit guarante well found relat encod requir lexicograph rank ing function constraint adapt bit vector semant bit vector bound bound condit trivial satisfi bit vector dis crete replac decreas condit formula hold lexicograph rank function compon bit vector lrn assum transit relat tran procedur procedur compos loop loop associ guard express reachabl loop head suppos loop lexicograph rank function prove termin take form rrn synthesis lexicograph rank function rank ing techniqu mathemat integ farka lemma applic bitvector oper synthesi approach tan tool extend monolith lexicograph rank function consid class lexicograph rank function generat templat product row vector templat paramet denot constraint loop lrnii lnii vector constraint rank function procedur vector put reduct rank function synthesi order quantifi elimi nation problem templat inv tran complet lattic rank constraint lrnii add special domain lnii defin lrnii true indic rank function templat write equival class bottom element lrnii evalu fals mean rank function comput exampl bottom element note intuit correspond mean invari infer abstract interpret algorithm comptermarg input procedur invari inv bound number lexicograph compon output rank constraint inv tran true solv unsat return model lrnii lrnii solv lnii unsat return model exampl fig walk algo rithm solv lemma left hand side fig code side transit relat procedur singl loop will omit guard true assum invari inv true latin letter denot variabl greek letter denot valu variabl int nondet tran fig exampl alg simplifi tran iter algorithm check valid current rank function candid valid rank function smt solver return counterexampl transit rank function candid sat isfi observ counterexampl transit comput process bound termin finit state space start bottom element rank function singl compon solv correspond formula true tran fals satisfi model instanc model entail constraint comput valu templat coeffici formula solver report sat model exampl model updat vector templat paramet valu correspond rank function continu loop iter check current rank function formula true tran satisfi model instanc model entail constraint conjoin constraint previous iter solver will unsat find rank function add compon lexicograph rank function templat solv model instanc solver report model satisfi constraint model updat rank function final check wit rank function time solver report formula unsat algorithm termin return rank function 