intrins properti complet test suit adilson luiz bonifacio arnaldo vieira moura abstract complet desir properti test suit rough complet guarante equival implement test will identifi approach propos suffici condit specif model test suit order guarante complet approach impos restrict specif implement requir reduc complet test case requir block complet specif implement model work deal test case block defin notion captur complet character test suit complet scenario establish upper bound number state implement test suit complet classic sens scenario block test case introduct complet test suit studi model base finit state machin fsms test suit call complet fsm specif complet fault coverag work pro pose strategi generat complet test suit check test suit complet specif present condit test suit complet approach suffici condit test suit complet work describ suf ficient condit test suit complet work impos restrict specif implement fault domain consid specif state restrict implement test state approach specif implement requir reduc complet machin test case requir block specif implement model mean test case assum complet model implement treat black box test case assum complet implement work deal general scenario test case block requir test case complet implement partial fsms treat true black box propos notion equival call alik extend classic notion equival block test case rise notion perfect lieu classic notion complet simul relat reduc machin character test suit perfect general scenario issu concern test suit complet maximum size implement test earlier work constrain implement number state specif awar work precis relationship maximum number state implement size test suit order posit verdict comput depart univers londrina londrina brazil collabor comput institut unicamp comput institut univers campina campina brazil implement test establish precis upper bound number state implement test test suit complet classic sens general scenario block test case bound base test suit size number state specif organ paper basic definit notat appear perfect test suit term properti isomorph machin relat well notion complet notion perfect establish upper bound number state candid implement test suit complet defin notion ofm perfect wherem number candid implement state conclus definit notat alphabet length finit sequenc symbol indic empti sequenc will indic set sequenc length denot name set finit sequenc write alphabet set sequenc symmetr differ will indic indic complement respect usual set differ indic remark iff finit state machin test suit write definit finit state machin definit fsm system finit set state initi state finit set input action input event finit set output action output event specif domain transit function output function will denot fsms state write input sequenc output sequenc write sequenc write drop target state write will extend function pair defin extens let reason confus write function will inform denot input action sequenc state posit defin test case test suit iff short definit fsm test suit finit nonempti subset element test suit test case defin test complet classic notion distinguish equival definit fsms distinguish iff denot equival denot distinguish iff equival iff clear context drop mention understand case condit reduc eas notat write equival distinguish state convent notion complet test suit definit fsm test suit complet iff fsm state note run complet complet definit discrep behavior specif implement will detect test provid consid implement state note technic condit will satisfi test implement complet fsm model fsm complet state input symbol notion alik block test case sequenc run complet fsm model block run complet vice versa test suit fsm model equival general sens consid block test case intuit block test case block test case vice versa test case block output ident behavior model case will alik definit fsms alik denot iff denot alik iff write alik clear context drop mention understand remark note simpl observ remark note equival impli aspect alik relat equival relat machin defin singl set note case general distinguish relat lemma fsm equival relat proof state clear reflex set intersect symmetr set differ cours equal commut symmetr transit assum symmetri argument show establish conclud transit remark note lemma argument establish transit alik relat valid defin relat state distinct machin reduc fsms presenc block test case will technic result lemma fsm state proof treat item lead remain determinist remark argument conclud conclud desir item simpl indict result item notion perfect introduc bonifacio moura order cope test case complet specif implement model base notion alik definit fsm test suit perfect iff fsm perfect test suit specif implement test definit limit size implement definit key properti impli requir hold implement predefin number state definit fsm test suit perfect iff fsm state simul perfect simul character test suit perfect definit fsms relat simul iff state iff simul relat simpl fact will fact simul relat transit fsms simul simul simul proof simul relat defin iff first need simul simul desir fact fsms simul uniqu proof easi induct uniqu determinist fact fsms simul simul uniqu proof fact uniqu fact determinist conclud desir lemma relationship simul alik lemma fsms simul simul proof sake contradict assum definit fact determinist case hold definit determinist contradict assum case hold definit determin definit contradict hypothesi case case lead contradict reason entir analog case conclud fact desir result establish suffici condit perfect theorem fsm test suit perfect iff alik fsm similar test exchang isomorph test perfect isomorph character perfect term isomorph fsms simul isomorph fsms isomorph exact model state relabel definit fsms isomorph biject machin isomorph iff isomorph remark fsms consequ isomorph isomorph isomorph simul half character easili lemma isomorph fsms proof remark simul vice versa clear state distinct state alik form isomorph distinct equival state correspond singl state machin illustr figur case point problem cours state exact block input sequenc behavior exact input sequenc block classic sens fsm reduc pair distinct state distinguish treat partial fsm consider block input sequenc order differenti classic notion reduct fsms reduct presenc block sequenc reduct definit definit fsm reduc iff pair distinct state distinguish state figur fsm figur specif fsm definit fsm reduc iff distinct state alik distinct state input sequenc block sequenc block input sequenc block yield behavior start return figur presenc reduc fsm remark reduc fsm reachabl state exist transit reachabl state distinguish reachabl state proceed seri simpl fact reduc isomorph start note similar condit simul relat defin relat iff fact proof observ fact determinist symmetr argument fact biject will establish isomorph reduc function fact lemma conclud reduc definit forc total reduc definit fact reduc definit fact fact lemma reduc biject total function inject state main result theorem reduc fsms isomorph proof ifm isomorph lemma argument establish convers corollari expos strong relationship perfect test suit fsm reduc fsms alik corollari reduc fsm test suit perfect reduc alik fsm isomorph proof assum perfect reduc fsm alik theorem isomorph theorem reduc finit state machin convers corollari hold theorem stipul alik fsms simul specif fsm reduc loos alik properti recal lemma equival relat denot equival class relat classic idea quotient order construct fsm reduc alik defin lemma defin impli lemma defin final note lemma defin construct complet definit fsm fsm preced con struction forego construct satisfi number simpl properti will fact proof assum construct result easi induct fact proof assum construct machin determinist collect result simpl induct lemma fsm fsm definit proof assum fact lemma fact lemma conclud establish argument need finish repeat preced argument definit conclud point establish reduc corollari fsm definit reduc proof construct lemma distinct lemma impli result symbol denot alik relat state state context will clear relat refer lemma fsm fsm definit proof lemma fact convers fact lemma conclud remark desir order lemma fact determin reduct construct preserv alik corollari fsm fsm definit proof lemma construct preserv alik construct yield simul machin lemma fsm fsm definit proof defin relat let iff clear lemma fact conclud simul relat direct defin ralet iff clear hold fact conclud lemma conclud simul relat desir convers corollari establish corollari reduc fsm test suit assum reduc alik fsms isomorph perfect proof view theorem suffic fsm alik alik definit corollari reduc corollari view remark conclud havem lemma remark conclud reduc alik hypothesi isomorph theorem lemma final fact conclud desi collect theorem theorem reduc fsm test suit perfect iff reduc alik fsms isomorph proof corollari complet perfect investig relationship complet perfect test suit complet fsm perfect direct test suit perfect complet start show perfect hold complet hold fsm test suit prove complet perfect will perfect strong condit complet measur length block test case test suit input string defin max maximum length prefix block test suit overload notat defin fact fsm test suit upper bound proof fsm test suit assum complet fsm construct sequenc fsms satisfi tree root order eas notat denot state initi state set input string output string start defin fsm transit clear tree root properti hold conclud prefix properti hold assum construct satisfi properti input string construct write ykx transit transit input defin transit state tree root state properti hold transit properti trivial hold case case transit occur clear hold satisfi properti case transit occur state write tree root path properti hold conclud properti hold desir ykx construct ykx conclud preced discuss construct sequenc fsms satisfi prop erti long input string fact proof fact establish upper limit sequenc test case fact construct fact perfect write properti conclud perfect lead contradict case case input string contradict properti case input string contradict properti contradict fact conclud perfect fact fsm test suit complet perfect proof preced discuss complet case perfect input output alphabet specif state transit test suit argu complet definit case fsm definit andm requir reach contradict argu perfect specif fsm transit clear definit thatm clear definit definit perfect corollari fsm hold test suit perfect complet test suit complet perfect proof preced discuss test suit complet size implement allow larg implement test complet classic sens lost test suit fsm complet number state implement machin constant depend detect fault implement state sequel result establish bound size implement model test presenc block test case test perfect establish notat sequenc symbol alphabet indic substr xixi sequenc symbol alphabet embed sequenc symbol test suit fsm extens null extens point reduc fsmm test suit form smallest extens test case trivial test case exist construc tion seri accompani fact will desir result size implement test complet remark fsm trivial equival fsm trivial equival reduc easili construct state fsm equival case complet assum null transit inm distinguish transit reduc remark call mark transit construct fsm input output alphabet simpl exampl illustr construct present theorem state pair state initi state complet specif list transit distinguish transit ofm transit distinguish transit transit call distinguish transit mark transit transit mark transit transit complet specif easili state fact explicit behavior construct fact mark transit occur proof induct result induct step induct hypothesi item construct clear mark transit occur induct hypothesi mark transit item construct yield conclud desir item construct case desir mark transit occur induct hypothesi clear item conclud proof result convers fact embed iii mark transit occur proof induct result easili induct step induct hypothesi embed item construct case transit item embed desir compos mark transit occur induct hypothesi want item clear iii hold embed conclud embed mark transit occur proceed case need item show iii hold embed embed reason case item proceed exact case mark transit occur statement fact hold vacuous case conclud proof establish sequenc input symbol will machin fact proof recal fact fact result posit equival fact proof contradict assum fact conclud fact write construct conclud mark transit fact embed embed conclud extens contradict choic complet proof opposit direct result equival fact proof fact choic choic item construct item construct compos collect test suit will complet fsm larger bound depend theorem fsm test suit shortest test case extens complet proof construct yield machin equival fact equival fact fact state definit complet simpl exampl illustr construct machin letm specif fsm depict figur set state depict figur note partial fsm test suit notic complet implement fsms state check algorithm describ shortest test case extens appli item construct obtain machin state item creat transit distinguish transit item item transit final complet machin mark transit requir item machin depict figur simpl matter state reachabl remov order reduc fsm depict figur note renam state easili check easi verifi conclud complet complet bound theorem figur candid implement figur reduc candid implement perfect combin theorem corollari test suit perfect specif allow number state implement test grow bound number state constant depend lead notion perfect definit fsm test suit perfect iff fsm state perfect guarante differ behavior specif impl mentat will detect test presenc block test case implement restrict state perfect test suit specif implement test provid state proceed suffici condit perfect show result analog theorem result will consid similar lemma fsms assum proof clear definit induct basi hypothesi proceed induct step assum clear sake contradict assum definit case case contradict situat entir analog case contradict proof complet result guarante exist simul presenc block test case lemma perfect test suit fsm fsm state proof defin relat let assum definit compos perfect definit definit remark impli lemma simul relat argument will simul relat desir convers fsm state alik perfect test suit lemma fsm test suit assum fsm alik state perfect proof proceed contradict assum perfect definit exist fsm mostm state thatm andm sincem theorem simul relat definit case case assum minimum write lemma write simul contradict argument analog case assum minimum lemma write simul determinist conclud contradict proof complet combin previous suffici condit perfect theorem fsm test suit perfect iff alik fsm state proof assum perfect lemma guarante alik assum alik fsm state case lemma guarante perfect conclus work studi notion test suit perfect notion classic test suit complet presenc call block test case test case complet specif implement model accompani notion reduct introduc classic notion reduct fsms fsm reduc maintain perfect properti origin fsm result prove specif model implement test reduc perfect character term isomorph model establish relationship perfect classic notion complet perfect strict stronger relat specif model size test perfect impos limit number state implement model test result consequ bound form impos size implement test classic notion complet constant depend test suit number state specif model character perfect properti establish suffici condit implement model test test suit specif model futur studi mention develop test practic algorithm test perfect case tighter bound size implement model test perfect perfect refer adilson luiz bonifacio arnaldo vieira moura partial fsm model complet block test case technic report institut comput univers campina novemb adilson luiz bonifacio arnaldo vieira moura complet test suit proceed acm symposium appli comput acm sac volum acm march adilson luiz bonifacio arnaldo vieira moura test suit complet partial model giannakopoulou salau editor proceed intern confer softwar engin formal method sefm volum lectur note comput scienc grenobl franc sep springer verlag adilson luiz bonifacio arnaldo vieira moura adenilso silva sima model partit compact test case suit int comput sci rita dorofeeva khale fakih nina yevtushenko improv conform test method fort adenilso silva simao alexandr petrenko nina yevtushenko generat reduc test fsms extra state testcom fate gill introduct theori finit state machin mcgraw hill york robert hieron hasan ural reduc length check sequenc ieee tran comput septemb petrenko bochmann fault coverag test finit state specif comput network isdn system alex petrenko nina yevtushenko test deriv partial specif fort adenilso silva simao petrenko petrenko check complet test finit state machin ieee tran comput adenilso simao alexandr petrenko nina yevtushenko reduc test length fsms extra state softw test verif reliab septemb hasan ural xiaolin fan zhang minim length check sequenc ieee tran comput januari ming yao alexandr petrenko gregor von bochmann fault coverag analysi respect fsm specif infocom 